ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"can.c"
  16              		.section	.text.canInit,"ax",%progbits
  17              		.align	2
  18              		.p2align 4,,15
  19              		.global	canInit
  20              		.thumb
  21              		.thumb_func
  22              		.type	canInit, %function
  23              	canInit:
  24              		@ args = 0, pretend = 0, frame = 0
  25              		@ frame_needed = 0, uses_anonymous_args = 0
  26              		@ link register save eliminated.
  27 0000 FFF7FEBF 		b	can_lld_init
  28              		.size	canInit, .-canInit
  29 0004 AFF30080 		.section	.text.canObjectInit,"ax",%progbits
  29      AFF30080 
  29      AFF30080 
  30              		.align	2
  31              		.p2align 4,,15
  32              		.global	canObjectInit
  33              		.thumb
  34              		.thumb_func
  35              		.type	canObjectInit, %function
  36              	canObjectInit:
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39 0000 38B5     		push	{r3, r4, r5, lr}
  40 0002 0123     		movs	r3, #1
  41 0004 0025     		movs	r5, #0
  42 0006 0446     		mov	r4, r0
  43 0008 0370     		strb	r3, [r0]
  44 000a 4560     		str	r5, [r0, #4]
  45 000c 2946     		mov	r1, r5
  46 000e 0830     		adds	r0, r0, #8
  47 0010 FFF7FEFF 		bl	chSemInit
  48 0014 2946     		mov	r1, r5
  49 0016 04F11400 		add	r0, r4, #20
  50 001a FFF7FEFF 		bl	chSemInit
  51 001e 04F12005 		add	r5, r4, #32
  52 0022 04F12400 		add	r0, r4, #36
  53 0026 04F12801 		add	r1, r4, #40
  54 002a 04F12C02 		add	r2, r4, #44
  55 002e 04F13003 		add	r3, r4, #48
ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 2


  56 0032 2562     		str	r5, [r4, #32]
  57 0034 6062     		str	r0, [r4, #36]
  58 0036 A162     		str	r1, [r4, #40]
  59 0038 E262     		str	r2, [r4, #44]
  60 003a 2363     		str	r3, [r4, #48]
  61 003c 38BD     		pop	{r3, r4, r5, pc}
  62              		.size	canObjectInit, .-canObjectInit
  63 003e 00BF     		.section	.text.canStart,"ax",%progbits
  64              		.align	2
  65              		.p2align 4,,15
  66              		.global	canStart
  67              		.thumb
  68              		.thumb_func
  69              		.type	canStart, %function
  70              	canStart:
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 38B5     		push	{r3, r4, r5, lr}
  74 0002 0446     		mov	r4, r0
  75 0004 0D46     		mov	r5, r1
  76 0006 68B3     		cbz	r0, .L13
  77              	.L4:
  78 0008 2023     		movs	r3, #32
  79              	@ 111 "chibios/os/hal/src/can.c" 1
  80 000a 83F31188 		msr     BASEPRI, r3
  81              	@ 0 "" 2
  82              		.thumb
  83 000e FFF7FEFF 		bl	dbg_check_lock
  84 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  85 0014 5A1E     		subs	r2, r3, #1
  86 0016 D2B2     		uxtb	r2, r2
  87 0018 022A     		cmp	r2, #2
  88 001a 05D9     		bls	.L11
  89 001c 0EE0     		b	.L16
  90              	.L7:
  91 001e 0620     		movs	r0, #6
  92 0020 0121     		movs	r1, #1
  93 0022 FFF7FEFF 		bl	chSchGoSleepTimeoutS
  94 0026 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  95              	.L11:
  96 0028 022B     		cmp	r3, #2
  97 002a F8D0     		beq	.L7
  98 002c 012B     		cmp	r3, #1
  99 002e 0DD0     		beq	.L15
 100 0030 FFF7FEFF 		bl	dbg_check_unlock
 101 0034 0023     		movs	r3, #0
 102              	@ 123 "chibios/os/hal/src/can.c" 1
 103 0036 83F31188 		msr     BASEPRI, r3
 104              	@ 0 "" 2
 105              		.thumb
 106 003a 38BD     		pop	{r3, r4, r5, pc}
 107              	.L16:
 108 003c 40F20000 		movw	r0, #:lower16:.LC2
 109 0040 C0F20000 		movt	r0, #:upper16:.LC2
 110 0044 FFF7FEFF 		bl	chDbgPanic
 111 0048 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 112 004a EDE7     		b	.L11
ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 3


 113              	.L15:
 114 004c 2046     		mov	r0, r4
 115 004e 6560     		str	r5, [r4, #4]
 116 0050 FFF7FEFF 		bl	can_lld_start
 117 0054 0323     		movs	r3, #3
 118 0056 2370     		strb	r3, [r4]
 119 0058 FFF7FEFF 		bl	dbg_check_unlock
 120 005c 0023     		movs	r3, #0
 121              	@ 123 "chibios/os/hal/src/can.c" 1
 122 005e 83F31188 		msr     BASEPRI, r3
 123              	@ 0 "" 2
 124              		.thumb
 125 0062 38BD     		pop	{r3, r4, r5, pc}
 126              	.L13:
 127 0064 40F20000 		movw	r0, #:lower16:.LC0
 128 0068 40F20001 		movw	r1, #:lower16:.LC1
 129 006c C0F20000 		movt	r0, #:upper16:.LC0
 130 0070 C0F20001 		movt	r1, #:upper16:.LC1
 131 0074 6D22     		movs	r2, #109
 132 0076 FFF7FEFF 		bl	chDbgPanic3
 133 007a C5E7     		b	.L4
 134              		.size	canStart, .-canStart
 135 007c AFF30080 		.section	.text.canStop,"ax",%progbits
 136              		.align	2
 137              		.p2align 4,,15
 138              		.global	canStop
 139              		.thumb
 140              		.thumb_func
 141              		.type	canStop, %function
 142              	canStop:
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 10B5     		push	{r4, lr}
 146 0002 0446     		mov	r4, r0
 147 0004 30B3     		cbz	r0, .L23
 148              	.L18:
 149 0006 2023     		movs	r3, #32
 150              	@ 137 "chibios/os/hal/src/can.c" 1
 151 0008 83F31188 		msr     BASEPRI, r3
 152              	@ 0 "" 2
 153              		.thumb
 154 000c FFF7FEFF 		bl	dbg_check_lock
 155 0010 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 156 0012 03F0FD03 		and	r3, r3, #253
 157 0016 012B     		cmp	r3, #1
 158 0018 05D0     		beq	.L19
 159 001a 40F20000 		movw	r0, #:lower16:.LC4
 160 001e C0F20000 		movt	r0, #:upper16:.LC4
 161 0022 FFF7FEFF 		bl	chDbgPanic
 162              	.L19:
 163 0026 2046     		mov	r0, r4
 164 0028 FFF7FEFF 		bl	can_lld_stop
 165 002c 2046     		mov	r0, r4
 166 002e 0123     		movs	r3, #1
 167 0030 00F8143B 		strb	r3, [r0], #20
 168 0034 0021     		movs	r1, #0
 169 0036 FFF7FEFF 		bl	chSemResetI
ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 4


 170 003a 04F10800 		add	r0, r4, #8
 171 003e 0021     		movs	r1, #0
 172 0040 FFF7FEFF 		bl	chSemResetI
 173 0044 FFF7FEFF 		bl	chSchRescheduleS
 174 0048 FFF7FEFF 		bl	dbg_check_unlock
 175 004c 0023     		movs	r3, #0
 176              	@ 145 "chibios/os/hal/src/can.c" 1
 177 004e 83F31188 		msr     BASEPRI, r3
 178              	@ 0 "" 2
 179              		.thumb
 180 0052 10BD     		pop	{r4, pc}
 181              	.L23:
 182 0054 40F20000 		movw	r0, #:lower16:.LC3
 183 0058 40F20001 		movw	r1, #:lower16:.LC1
 184 005c C0F20000 		movt	r0, #:upper16:.LC3
 185 0060 C0F20001 		movt	r1, #:upper16:.LC1
 186 0064 8722     		movs	r2, #135
 187 0066 FFF7FEFF 		bl	chDbgPanic3
 188 006a CCE7     		b	.L18
 189              		.size	canStop, .-canStop
 190 006c AFF30080 		.section	.text.canTransmit,"ax",%progbits
 191              		.align	2
 192              		.p2align 4,,15
 193              		.global	canTransmit
 194              		.thumb
 195              		.thumb_func
 196              		.type	canTransmit, %function
 197              	canTransmit:
 198              		@ args = 0, pretend = 0, frame = 8
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 201 0004 002A     		cmp	r2, #0
 202 0006 18BF     		it	ne
 203 0008 0028     		cmpne	r0, #0
 204 000a 83B0     		sub	sp, sp, #12
 205 000c 0446     		mov	r4, r0
 206 000e 9146     		mov	r9, r2
 207 0010 0E46     		mov	r6, r1
 208 0012 9846     		mov	r8, r3
 209 0014 2DD0     		beq	.L25
 210 0016 0329     		cmp	r1, #3
 211 0018 2BD8     		bhi	.L25
 212              	.L26:
 213 001a 2023     		movs	r3, #32
 214              	@ 177 "chibios/os/hal/src/can.c" 1
 215 001c 83F31188 		msr     BASEPRI, r3
 216              	@ 0 "" 2
 217              		.thumb
 218 0020 FFF7FEFF 		bl	dbg_check_lock
 219 0024 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 220 0026 EB1E     		subs	r3, r5, #3
 221 0028 DBB2     		uxtb	r3, r3
 222 002a 012B     		cmp	r3, #1
 223 002c 06D9     		bls	.L27
 224 002e 40F20000 		movw	r0, #:lower16:.LC6
 225 0032 C0F20000 		movt	r0, #:upper16:.LC6
 226 0036 FFF7FEFF 		bl	chDbgPanic
ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 5


 227 003a 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 228              	.L27:
 229 003c 04F10807 		add	r7, r4, #8
 230 0040 00E0     		b	.L29
 231              	.L40:
 232 0042 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 233              	.L29:
 234 0044 042D     		cmp	r5, #4
 235 0046 3146     		mov	r1, r6
 236 0048 2046     		mov	r0, r4
 237 004a 02D0     		beq	.L31
 238 004c FFF7FEFF 		bl	can_lld_is_tx_empty
 239 0050 D8B9     		cbnz	r0, .L39
 240              	.L31:
 241 0052 3846     		mov	r0, r7
 242 0054 4146     		mov	r1, r8
 243 0056 FFF7FEFF 		bl	chSemWaitTimeoutS
 244 005a 0028     		cmp	r0, #0
 245 005c F1D0     		beq	.L40
 246 005e 0190     		str	r0, [sp, #4]
 247 0060 FFF7FEFF 		bl	dbg_check_unlock
 248 0064 0023     		movs	r3, #0
 249              	@ 183 "chibios/os/hal/src/can.c" 1
 250 0066 83F31188 		msr     BASEPRI, r3
 251              	@ 0 "" 2
 252              		.thumb
 253 006a 0198     		ldr	r0, [sp, #4]
 254 006c 03B0     		add	sp, sp, #12
 255              		@ sp needed
 256 006e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 257              	.L25:
 258 0072 40F20000 		movw	r0, #:lower16:.LC5
 259 0076 40F20001 		movw	r1, #:lower16:.LC1
 260 007a C0F20000 		movt	r0, #:upper16:.LC5
 261 007e C0F20001 		movt	r1, #:upper16:.LC1
 262 0082 AF22     		movs	r2, #175
 263 0084 FFF7FEFF 		bl	chDbgPanic3
 264 0088 C7E7     		b	.L26
 265              	.L39:
 266 008a 2046     		mov	r0, r4
 267 008c 3146     		mov	r1, r6
 268 008e 4A46     		mov	r2, r9
 269 0090 FFF7FEFF 		bl	can_lld_transmit
 270 0094 FFF7FEFF 		bl	dbg_check_unlock
 271 0098 0023     		movs	r3, #0
 272              	@ 188 "chibios/os/hal/src/can.c" 1
 273 009a 83F31188 		msr     BASEPRI, r3
 274              	@ 0 "" 2
 275              		.thumb
 276 009e 0020     		movs	r0, #0
 277 00a0 03B0     		add	sp, sp, #12
 278              		@ sp needed
 279 00a2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 280              		.size	canTransmit, .-canTransmit
 281 00a6 00BFAFF3 		.section	.text.canReceive,"ax",%progbits
 281      0080AFF3 
 281      0080
ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 6


 282              		.align	2
 283              		.p2align 4,,15
 284              		.global	canReceive
 285              		.thumb
 286              		.thumb_func
 287              		.type	canReceive, %function
 288              	canReceive:
 289              		@ args = 0, pretend = 0, frame = 8
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 292 0004 002A     		cmp	r2, #0
 293 0006 18BF     		it	ne
 294 0008 0028     		cmpne	r0, #0
 295 000a 83B0     		sub	sp, sp, #12
 296 000c 0446     		mov	r4, r0
 297 000e 9146     		mov	r9, r2
 298 0010 0E46     		mov	r6, r1
 299 0012 9846     		mov	r8, r3
 300 0014 01D0     		beq	.L42
 301 0016 0129     		cmp	r1, #1
 302 0018 0AD9     		bls	.L43
 303              	.L42:
 304 001a 40F20000 		movw	r0, #:lower16:.LC7
 305 001e 40F20001 		movw	r1, #:lower16:.LC1
 306 0022 C0F20000 		movt	r0, #:upper16:.LC7
 307 0026 C0F20001 		movt	r1, #:upper16:.LC1
 308 002a DC22     		movs	r2, #220
 309 002c FFF7FEFF 		bl	chDbgPanic3
 310              	.L43:
 311 0030 2023     		movs	r3, #32
 312              	@ 222 "chibios/os/hal/src/can.c" 1
 313 0032 83F31188 		msr     BASEPRI, r3
 314              	@ 0 "" 2
 315              		.thumb
 316 0036 FFF7FEFF 		bl	dbg_check_lock
 317 003a 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 318 003c EB1E     		subs	r3, r5, #3
 319 003e DBB2     		uxtb	r3, r3
 320 0040 012B     		cmp	r3, #1
 321 0042 06D9     		bls	.L44
 322 0044 40F20000 		movw	r0, #:lower16:.LC8
 323 0048 C0F20000 		movt	r0, #:upper16:.LC8
 324 004c FFF7FEFF 		bl	chDbgPanic
 325 0050 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 326              	.L44:
 327 0052 04F11407 		add	r7, r4, #20
 328 0056 00E0     		b	.L46
 329              	.L57:
 330 0058 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 331              	.L46:
 332 005a 042D     		cmp	r5, #4
 333 005c 3146     		mov	r1, r6
 334 005e 2046     		mov	r0, r4
 335 0060 02D0     		beq	.L48
 336 0062 FFF7FEFF 		bl	can_lld_is_rx_nonempty
 337 0066 78B9     		cbnz	r0, .L56
 338              	.L48:
ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 7


 339 0068 3846     		mov	r0, r7
 340 006a 4146     		mov	r1, r8
 341 006c FFF7FEFF 		bl	chSemWaitTimeoutS
 342 0070 0028     		cmp	r0, #0
 343 0072 F1D0     		beq	.L57
 344 0074 0190     		str	r0, [sp, #4]
 345 0076 FFF7FEFF 		bl	dbg_check_unlock
 346 007a 0023     		movs	r3, #0
 347              	@ 228 "chibios/os/hal/src/can.c" 1
 348 007c 83F31188 		msr     BASEPRI, r3
 349              	@ 0 "" 2
 350              		.thumb
 351 0080 0198     		ldr	r0, [sp, #4]
 352 0082 03B0     		add	sp, sp, #12
 353              		@ sp needed
 354 0084 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 355              	.L56:
 356 0088 2046     		mov	r0, r4
 357 008a 3146     		mov	r1, r6
 358 008c 4A46     		mov	r2, r9
 359 008e FFF7FEFF 		bl	can_lld_receive
 360 0092 FFF7FEFF 		bl	dbg_check_unlock
 361 0096 0023     		movs	r3, #0
 362              	@ 233 "chibios/os/hal/src/can.c" 1
 363 0098 83F31188 		msr     BASEPRI, r3
 364              	@ 0 "" 2
 365              		.thumb
 366 009c 0020     		movs	r0, #0
 367 009e 03B0     		add	sp, sp, #12
 368              		@ sp needed
 369 00a0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 370              		.size	canReceive, .-canReceive
 371 00a4 AFF30080 		.section	.text.canSleep,"ax",%progbits
 371      AFF30080 
 371      AFF30080 
 372              		.align	2
 373              		.p2align 4,,15
 374              		.global	canSleep
 375              		.thumb
 376              		.thumb_func
 377              		.type	canSleep, %function
 378              	canSleep:
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 10B5     		push	{r4, lr}
 382 0002 0446     		mov	r4, r0
 383 0004 50B3     		cbz	r0, .L63
 384              	.L59:
 385 0006 2023     		movs	r3, #32
 386              	@ 254 "chibios/os/hal/src/can.c" 1
 387 0008 83F31188 		msr     BASEPRI, r3
 388              	@ 0 "" 2
 389              		.thumb
 390 000c FFF7FEFF 		bl	dbg_check_lock
 391 0010 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 392 0012 DA1E     		subs	r2, r3, #3
 393 0014 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 8


 394 0016 012A     		cmp	r2, #1
 395 0018 06D9     		bls	.L60
 396 001a 40F20000 		movw	r0, #:lower16:.LC10
 397 001e C0F20000 		movt	r0, #:upper16:.LC10
 398 0022 FFF7FEFF 		bl	chDbgPanic
 399 0026 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 400              	.L60:
 401 0028 032B     		cmp	r3, #3
 402 002a 05D0     		beq	.L64
 403 002c FFF7FEFF 		bl	dbg_check_unlock
 404 0030 0023     		movs	r3, #0
 405              	@ 263 "chibios/os/hal/src/can.c" 1
 406 0032 83F31188 		msr     BASEPRI, r3
 407              	@ 0 "" 2
 408              		.thumb
 409 0036 10BD     		pop	{r4, pc}
 410              	.L64:
 411 0038 2046     		mov	r0, r4
 412 003a FFF7FEFF 		bl	can_lld_sleep
 413 003e 2046     		mov	r0, r4
 414 0040 0423     		movs	r3, #4
 415 0042 00F82C3B 		strb	r3, [r0], #44
 416 0046 0021     		movs	r1, #0
 417 0048 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 418 004c FFF7FEFF 		bl	chSchRescheduleS
 419 0050 FFF7FEFF 		bl	dbg_check_unlock
 420 0054 0023     		movs	r3, #0
 421              	@ 263 "chibios/os/hal/src/can.c" 1
 422 0056 83F31188 		msr     BASEPRI, r3
 423              	@ 0 "" 2
 424              		.thumb
 425 005a 10BD     		pop	{r4, pc}
 426              	.L63:
 427 005c 40F20000 		movw	r0, #:lower16:.LC9
 428 0060 40F20001 		movw	r1, #:lower16:.LC1
 429 0064 C0F20000 		movt	r0, #:upper16:.LC9
 430 0068 C0F20001 		movt	r1, #:upper16:.LC1
 431 006c FC22     		movs	r2, #252
 432 006e FFF7FEFF 		bl	chDbgPanic3
 433 0072 C8E7     		b	.L59
 434              		.size	canSleep, .-canSleep
 435 0074 AFF30080 		.section	.text.canWakeup,"ax",%progbits
 435      AFF30080 
 435      AFF30080 
 436              		.align	2
 437              		.p2align 4,,15
 438              		.global	canWakeup
 439              		.thumb
 440              		.thumb_func
 441              		.type	canWakeup, %function
 442              	canWakeup:
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 10B5     		push	{r4, lr}
 446 0002 0446     		mov	r4, r0
 447 0004 50B3     		cbz	r0, .L70
 448              	.L66:
ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 9


 449 0006 2023     		movs	r3, #32
 450              	@ 277 "chibios/os/hal/src/can.c" 1
 451 0008 83F31188 		msr     BASEPRI, r3
 452              	@ 0 "" 2
 453              		.thumb
 454 000c FFF7FEFF 		bl	dbg_check_lock
 455 0010 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 456 0012 DA1E     		subs	r2, r3, #3
 457 0014 D2B2     		uxtb	r2, r2
 458 0016 012A     		cmp	r2, #1
 459 0018 06D9     		bls	.L67
 460 001a 40F20000 		movw	r0, #:lower16:.LC12
 461 001e C0F20000 		movt	r0, #:upper16:.LC12
 462 0022 FFF7FEFF 		bl	chDbgPanic
 463 0026 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 464              	.L67:
 465 0028 042B     		cmp	r3, #4
 466 002a 05D0     		beq	.L71
 467 002c FFF7FEFF 		bl	dbg_check_unlock
 468 0030 0023     		movs	r3, #0
 469              	@ 286 "chibios/os/hal/src/can.c" 1
 470 0032 83F31188 		msr     BASEPRI, r3
 471              	@ 0 "" 2
 472              		.thumb
 473 0036 10BD     		pop	{r4, pc}
 474              	.L71:
 475 0038 2046     		mov	r0, r4
 476 003a FFF7FEFF 		bl	can_lld_wakeup
 477 003e 2046     		mov	r0, r4
 478 0040 0323     		movs	r3, #3
 479 0042 00F8303B 		strb	r3, [r0], #48
 480 0046 0021     		movs	r1, #0
 481 0048 FFF7FEFF 		bl	chEvtBroadcastFlagsI
 482 004c FFF7FEFF 		bl	chSchRescheduleS
 483 0050 FFF7FEFF 		bl	dbg_check_unlock
 484 0054 0023     		movs	r3, #0
 485              	@ 286 "chibios/os/hal/src/can.c" 1
 486 0056 83F31188 		msr     BASEPRI, r3
 487              	@ 0 "" 2
 488              		.thumb
 489 005a 10BD     		pop	{r4, pc}
 490              	.L70:
 491 005c 40F20000 		movw	r0, #:lower16:.LC11
 492 0060 40F20001 		movw	r1, #:lower16:.LC1
 493 0064 C0F20000 		movt	r0, #:upper16:.LC11
 494 0068 C0F20001 		movt	r1, #:upper16:.LC1
 495 006c 40F21312 		movw	r2, #275
 496 0070 FFF7FEFF 		bl	chDbgPanic3
 497 0074 C7E7     		b	.L66
 498              		.size	canWakeup, .-canWakeup
 499 0076 00BFAFF3 		.section	.rodata.str1.4,"aMS",%progbits,1
 499      0080AFF3 
 499      0080
 500              		.align	2
 501              	.LC0:
 502 0000 2263616E 		.ascii	"\"canStart\"()\000"
 502      53746172 
ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 10


 502      74222829 
 502      00
 503 000d 000000   		.space	3
 504              	.LC1:
 505 0010 63686962 		.ascii	"chibios/os/hal/src/can.c\000"
 505      696F732F 
 505      6F732F68 
 505      616C2F73 
 505      72632F63 
 506 0029 000000   		.space	3
 507              	.LC2:
 508 002c 63616E53 		.ascii	"canStart(), #1\000"
 508      74617274 
 508      28292C20 
 508      233100
 509 003b 00       		.space	1
 510              	.LC3:
 511 003c 2263616E 		.ascii	"\"canStop\"()\000"
 511      53746F70 
 511      22282900 
 512              	.LC4:
 513 0048 63616E53 		.ascii	"canStop(), #1\000"
 513      746F7028 
 513      292C2023 
 513      3100
 514 0056 0000     		.space	2
 515              	.LC5:
 516 0058 2263616E 		.ascii	"\"canTransmit\"()\000"
 516      5472616E 
 516      736D6974 
 516      22282900 
 517              	.LC6:
 518 0068 63616E54 		.ascii	"canTransmit(), #1\000"
 518      72616E73 
 518      6D697428 
 518      292C2023 
 518      3100
 519 007a 0000     		.space	2
 520              	.LC7:
 521 007c 2263616E 		.ascii	"\"canReceive\"()\000"
 521      52656365 
 521      69766522 
 521      282900
 522 008b 00       		.space	1
 523              	.LC8:
 524 008c 63616E52 		.ascii	"canReceive(), #1\000"
 524      65636569 
 524      76652829 
 524      2C202331 
 524      00
 525 009d 000000   		.space	3
 526              	.LC9:
 527 00a0 2263616E 		.ascii	"\"canSleep\"()\000"
 527      536C6565 
 527      70222829 
 527      00
 528 00ad 000000   		.space	3
ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 11


 529              	.LC10:
 530 00b0 63616E53 		.ascii	"canSleep(), #1\000"
 530      6C656570 
 530      28292C20 
 530      233100
 531 00bf 00       		.space	1
 532              	.LC11:
 533 00c0 2263616E 		.ascii	"\"canWakeup\"()\000"
 533      57616B65 
 533      75702228 
 533      2900
 534 00ce 0000     		.space	2
 535              	.LC12:
 536 00d0 63616E57 		.ascii	"canWakeup(), #1\000"
 536      616B6575 
 536      7028292C 
 536      20233100 
 537              		.ident	"GCC: (Sourcery CodeBench Lite 2013.11-24) 4.8.1"
ARM GAS  C:\Users\pc\AppData\Local\Temp\cctRWmPa.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 can.c
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:17     .text.canInit:00000000 $t
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:23     .text.canInit:00000000 canInit
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:30     .text.canObjectInit:00000000 $t
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:36     .text.canObjectInit:00000000 canObjectInit
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:64     .text.canStart:00000000 $t
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:70     .text.canStart:00000000 canStart
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:507    .rodata.str1.4:0000002c .LC2
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:501    .rodata.str1.4:00000000 .LC0
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:504    .rodata.str1.4:00000010 .LC1
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:136    .text.canStop:00000000 $t
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:142    .text.canStop:00000000 canStop
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:512    .rodata.str1.4:00000048 .LC4
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:510    .rodata.str1.4:0000003c .LC3
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:191    .text.canTransmit:00000000 $t
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:197    .text.canTransmit:00000000 canTransmit
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:517    .rodata.str1.4:00000068 .LC6
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:515    .rodata.str1.4:00000058 .LC5
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:282    .text.canReceive:00000000 $t
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:288    .text.canReceive:00000000 canReceive
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:520    .rodata.str1.4:0000007c .LC7
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:523    .rodata.str1.4:0000008c .LC8
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:372    .text.canSleep:00000000 $t
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:378    .text.canSleep:00000000 canSleep
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:529    .rodata.str1.4:000000b0 .LC10
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:526    .rodata.str1.4:000000a0 .LC9
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:436    .text.canWakeup:00000000 $t
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:442    .text.canWakeup:00000000 canWakeup
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:535    .rodata.str1.4:000000d0 .LC12
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:532    .rodata.str1.4:000000c0 .LC11
C:\Users\pc\AppData\Local\Temp\cctRWmPa.s:500    .rodata.str1.4:00000000 $d

UNDEFINED SYMBOLS
can_lld_init
chSemInit
dbg_check_lock
chSchGoSleepTimeoutS
dbg_check_unlock
chDbgPanic
can_lld_start
chDbgPanic3
can_lld_stop
chSemResetI
chSchRescheduleS
can_lld_is_tx_empty
chSemWaitTimeoutS
can_lld_transmit
can_lld_is_rx_nonempty
can_lld_receive
can_lld_sleep
chEvtBroadcastFlagsI
can_lld_wakeup
