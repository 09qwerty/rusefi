###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:10:02 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\controllers\sett #
#                       ings.cpp                                              #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\controllers\sett #
#                       ings.cpp -lCN F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\Debug\List\ -lA F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\Debug\List\ -o F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\Debug\Obj\ --no_cse --no_unroll --no_inline  #
#                       --no_code_motion --no_tbaa --no_clustering            #
#                       --no_scheduling --debug --endian=little               #
#                       --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config       #
#                       "C:\Program Files (x86)\IAR Systems\Embedded          #
#                       Workbench 6.5\arm\INC\c\DLib_Config_Normal.h"         #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\s #
#                       ettings.lst                                           #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\se #
#                       ttings.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\controllers\settings.cpp
      1          /**
      2           * @file settings.cpp
      3           * @brief This file is about configuring engine via the human-readable protocol
      4           *
      5           * @date Dec 30, 2012
      6           * @author Andrey Belomutskiy, (c) 2012-2015
      7           */
      8          
      9          #include "main.h"
     10          #include "settings.h"
     11          #include "eficonsole.h"
     12          #include "engine_configuration.h"
     13          #include "adc_inputs.h"
     14          #include "engine_controller.h"
     15          #include "thermistors.h"
     16          #include "adc_inputs.h"
     17          #include "interpolation.h"
     18          #include "tps.h"
     19          #include "map.h"
     20          #include "trigger_decoder.h"
     21          #include "console_io.h"
     22          #include "engine.h"
     23          #include "efiGpio.h"
     24          #include "engine_math.h"
     25          #include "alternatorController.h"
     26          
     27          #if EFI_PROD_CODE || defined(__DOXYGEN__)
     28          #include "rtc_helper.h"
     29          #include "rusefi.h"
     30          #include "pin_repository.h"
     31          #include "hardware.h"
     32          #endif /* EFI_PROD_CODE */
     33          
     34          #if EFI_INTERNAL_FLASH || defined(__DOXYGEN__)
     35          #include "flash_main.h"
     36          #endif /* EFI_INTERNAL_FLASH */
     37          
     38          #if EFI_WAVE_CHART || defined(__DOXYGEN__)
     39          #include "wave_chart.h"
     40          extern int waveChartUsedSize;
     41          extern WaveChart waveChart;
     42          #endif /* EFI_WAVE_CHART */
     43          

   \                                 In section .bss, align 4
     44          static char LOGGING_BUFFER[1000];
   \                     LOGGING_BUFFER:
   \   00000000                      DS8 1000

   \                                 In section .text, align 2, keep-with-next
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine:
   \   00000000   0xB580             PUSH     {R7,LR}
     45          static Logging logger("settings control", LOGGING_BUFFER, sizeof(LOGGING_BUFFER));
   \   00000002   0xF44F 0x737A      MOV      R3,#+1000
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable21
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable21_1
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000012   0x.... 0x....      BL       _ZN7LoggingC1EPKcPci
   \   00000016   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     logger:
   \   00000000                      DS8 60
     46          
     47          extern int maxNesting;
     48          extern engine_pins_s enginePins;
     49          
     50          /*
     51           static void printIntArray(int array[], int size) {
     52           for (int j = 0; j < size; j++) {
     53           print("%d ", array[j]);
     54           }
     55           print("\r\n");
     56           }
     57           */
     58          

   \                                 In section .text, align 2, keep-with-next
     59          void printFloatArray(const char *prefix, float array[], int size) {
   \                     _Z15printFloatArrayPKcPfi:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
     60          	appendMsgPrefix(&logger);
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000000C   0x.... 0x....      BL       appendMsgPrefix
     61          	appendPrintf(&logger, prefix);
   \   00000010   0x0021             MOVS     R1,R4
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000016   0x.... 0x....      BL       appendPrintf
     62          	for (int j = 0; j < size; j++) {
   \   0000001A   0x2700             MOVS     R7,#+0
   \                     ??printFloatArray_0:
   \   0000001C   0x42B7             CMP      R7,R6
   \   0000001E   0xDA0C             BGE.N    ??printFloatArray_1
     63          		appendPrintf(&logger, "%f ", array[j]);
   \   00000020   0xF855 0x0027      LDR      R0,[R5, R7, LSL #+2]
   \   00000024   0x.... 0x....      BL       __aeabi_f2d
   \   00000028   0x0002             MOVS     R2,R0
   \   0000002A   0x000B             MOVS     R3,R1
   \   0000002C   0x....             ADR.N    R1,??DataTable3  ;; "%f "
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000032   0x.... 0x....      BL       appendPrintf
     64          	}
   \   00000036   0x1C7F             ADDS     R7,R7,#+1
   \   00000038   0xE7F0             B.N      ??printFloatArray_0
     65          	appendMsgPostfix(&logger);
   \                     ??printFloatArray_1:
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000003E   0x.... 0x....      BL       appendMsgPostfix
     66          	scheduleLogging(&logger);
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000046   0x.... 0x....      BL       scheduleLogging
     67          }
   \   0000004A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
     68          

   \                                 In section .text, align 2, keep-with-next
     69          void printSpiState(Logging *logger, board_configuration_s *boardConfiguration) {
   \                     _Z13printSpiStateP7LoggingP21board_configuration_s:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     70          	scheduleMsg(logger, "spi 1=%s/2=%s/3=%s", boolToString(boardConfiguration->is_enabled_spi_1),
     71          			boolToString(boardConfiguration->is_enabled_spi_2), boolToString(boardConfiguration->is_enabled_spi_3));
   \   00000006   0xF895 0x0180      LDRB     R0,[R5, #+384]
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x0880             LSRS     R0,R0,#+2
   \   0000000E   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000012   0x.... 0x....      BL       _Z12boolToStringb
   \   00000016   0x0006             MOVS     R6,R0
   \   00000018   0xF895 0x0180      LDRB     R0,[R5, #+384]
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x0840             LSRS     R0,R0,#+1
   \   00000020   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000024   0x.... 0x....      BL       _Z12boolToStringb
   \   00000028   0x0007             MOVS     R7,R0
   \   0000002A   0xF895 0x0180      LDRB     R0,[R5, #+384]
   \   0000002E   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000032   0x.... 0x....      BL       _Z12boolToStringb
   \   00000036   0x9600             STR      R6,[SP, #+0]
   \   00000038   0x003B             MOVS     R3,R7
   \   0000003A   0x0002             MOVS     R2,R0
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable37
   \   00000040   0x0020             MOVS     R0,R4
   \   00000042   0x.... 0x....      BL       scheduleMsg
     72          }
   \   00000046   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
     73          
     74          extern board_configuration_s *boardConfiguration;
     75          

   \                                 In section .text, align 2, keep-with-next
     76          static void printOutputs(engine_configuration_s *engineConfiguration) {
   \                     _Z12printOutputsP22engine_configuration_s:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
     77          	// engine_configuration2_s *engineConfiguration2
     78          	scheduleMsg(&logger, "injectionPins: mode %s", getPin_output_mode_e(boardConfiguration->injectionPinMode));
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable32
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x6D00             LDR      R0,[R0, #+80]
   \   0000000E   0x.... 0x....      BL       _Z20getPin_output_mode_e17pin_output_mode_e
   \   00000012   0x0002             MOVS     R2,R0
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable23_1
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000001C   0x.... 0x....      BL       scheduleMsg
     79          	for (int i = 0; i < engineConfiguration->specs.cylindersCount; i++) {
   \   00000020   0x2500             MOVS     R5,#+0
   \                     ??printOutputs_0:
   \   00000022   0xF8D4 0x0194      LDR      R0,[R4, #+404]
   \   00000026   0x4285             CMP      R5,R0
   \   00000028   0xDA12             BGE.N    ??printOutputs_1
     80          		brain_pin_e brainPin = boardConfiguration->injectionPins[i];
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable32
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xEB10 0x0085      ADDS     R0,R0,R5, LSL #+2
   \   00000034   0x6A06             LDR      R6,[R0, #+32]
     81          		scheduleMsg(&logger, "injection #%d @ %s", (1 + i), hwPortname(brainPin));
   \   00000036   0x0030             MOVS     R0,R6
   \   00000038   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000003C   0x0003             MOVS     R3,R0
   \   0000003E   0x1C6A             ADDS     R2,R5,#+1
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable24
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000048   0x.... 0x....      BL       scheduleMsg
     82          	}
   \   0000004C   0x1C6D             ADDS     R5,R5,#+1
   \   0000004E   0xE7E8             B.N      ??printOutputs_0
     83          
     84          	scheduleMsg(&logger, "ignitionPins: mode %s", getPin_output_mode_e(boardConfiguration->ignitionPinMode));
   \                     ??printOutputs_1:
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0xF8D0 0x0084      LDR      R0,[R0, #+132]
   \   0000005A   0x.... 0x....      BL       _Z20getPin_output_mode_e17pin_output_mode_e
   \   0000005E   0x0002             MOVS     R2,R0
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable25
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000068   0x.... 0x....      BL       scheduleMsg
     85          	for (int i = 0; i < engineConfiguration->specs.cylindersCount; i++) {
   \   0000006C   0x2500             MOVS     R5,#+0
   \                     ??printOutputs_2:
   \   0000006E   0xF8D4 0x0194      LDR      R0,[R4, #+404]
   \   00000072   0x4285             CMP      R5,R0
   \   00000074   0xDA12             BGE.N    ??printOutputs_3
     86          		brain_pin_e brainPin = boardConfiguration->ignitionPins[i];
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable32
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0xEB10 0x0085      ADDS     R0,R0,R5, LSL #+2
   \   00000080   0x6D46             LDR      R6,[R0, #+84]
     87          		scheduleMsg(&logger, "ignition #%d @ %s", (1 + i), hwPortname(brainPin));
   \   00000082   0x0030             MOVS     R0,R6
   \   00000084   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000088   0x0003             MOVS     R3,R0
   \   0000008A   0x1C6A             ADDS     R2,R5,#+1
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable27
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000094   0x.... 0x....      BL       scheduleMsg
     88          	}
   \   00000098   0x1C6D             ADDS     R5,R5,#+1
   \   0000009A   0xE7E8             B.N      ??printOutputs_2
     89          
     90          	scheduleMsg(&logger, "idlePin: mode %s @ %s freq=%d", getPin_output_mode_e(boardConfiguration->idle.solenoidPinMode),
     91          			hwPortname(boardConfiguration->idle.solenoidPin), boardConfiguration->idle.solenoidFrequency);
   \                     ??printOutputs_3:
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable32
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   000000A8   0x0005             MOVS     R5,R0
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable32
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x6840             LDR      R0,[R0, #+4]
   \   000000B2   0x.... 0x....      BL       _Z20getPin_output_mode_e17pin_output_mode_e
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable32
   \   000000BA   0x6809             LDR      R1,[R1, #+0]
   \   000000BC   0x6889             LDR      R1,[R1, #+8]
   \   000000BE   0x9100             STR      R1,[SP, #+0]
   \   000000C0   0x002B             MOVS     R3,R5
   \   000000C2   0x0002             MOVS     R2,R0
   \   000000C4   0x.... 0x....      LDR.W    R1,??DataTable28
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable35
   \   000000CC   0x.... 0x....      BL       scheduleMsg
     92          	scheduleMsg(&logger, "malfunctionIndicatorn: %s mode=%s", hwPortname(boardConfiguration->malfunctionIndicatorPin),
     93          			getPin_output_mode_e(boardConfiguration->malfunctionIndicatorPinMode));
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable32
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0xF8D0 0x008C      LDR      R0,[R0, #+140]
   \   000000DA   0x.... 0x....      BL       _Z20getPin_output_mode_e17pin_output_mode_e
   \   000000DE   0x0005             MOVS     R5,R0
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable32
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0xF8D0 0x0088      LDR      R0,[R0, #+136]
   \   000000EA   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   000000EE   0x002B             MOVS     R3,R5
   \   000000F0   0x0002             MOVS     R2,R0
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable29_1
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable35
   \   000000FA   0x.... 0x....      BL       scheduleMsg
     94          
     95          	scheduleMsg(&logger, "fuelPumpPin: mode %s @ %s", getPin_output_mode_e(boardConfiguration->fuelPumpPinMode),
     96          			hwPortname(boardConfiguration->fuelPumpPin));
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000102   0x6800             LDR      R0,[R0, #+0]
   \   00000104   0x6980             LDR      R0,[R0, #+24]
   \   00000106   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000010A   0x0005             MOVS     R5,R0
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0x69C0             LDR      R0,[R0, #+28]
   \   00000114   0x.... 0x....      BL       _Z20getPin_output_mode_e17pin_output_mode_e
   \   00000118   0x002B             MOVS     R3,R5
   \   0000011A   0x0002             MOVS     R2,R0
   \   0000011C   0x.... 0x....      LDR.W    R1,??DataTable30
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000124   0x.... 0x....      BL       scheduleMsg
     97          
     98          	scheduleMsg(&logger, "fanPin: mode %s @ %s", getPin_output_mode_e(boardConfiguration->fanPinMode),
     99          			hwPortname(boardConfiguration->fanPin));
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable32
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0xF8D0 0x0090      LDR      R0,[R0, #+144]
   \   00000132   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000136   0x0005             MOVS     R5,R0
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable32
   \   0000013C   0x6800             LDR      R0,[R0, #+0]
   \   0000013E   0xF8D0 0x0094      LDR      R0,[R0, #+148]
   \   00000142   0x.... 0x....      BL       _Z20getPin_output_mode_e17pin_output_mode_e
   \   00000146   0x002B             MOVS     R3,R5
   \   00000148   0x0002             MOVS     R2,R0
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable31
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000152   0x.... 0x....      BL       scheduleMsg
    100          
    101          	scheduleMsg(&logger, "mainRelay: mode %s @ %s", getPin_output_mode_e(boardConfiguration->mainRelayPinMode),
    102          			hwPortname(boardConfiguration->mainRelayPin));
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable32
   \   0000015A   0x6800             LDR      R0,[R0, #+0]
   \   0000015C   0xF8D0 0x0134      LDR      R0,[R0, #+308]
   \   00000160   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000164   0x0005             MOVS     R5,R0
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable32
   \   0000016A   0x6800             LDR      R0,[R0, #+0]
   \   0000016C   0xF8D0 0x019C      LDR      R0,[R0, #+412]
   \   00000170   0x.... 0x....      BL       _Z20getPin_output_mode_e17pin_output_mode_e
   \   00000174   0x002B             MOVS     R3,R5
   \   00000176   0x0002             MOVS     R2,R0
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable32_1
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000180   0x.... 0x....      BL       scheduleMsg
    103          
    104          	scheduleMsg(&logger, "alternator field: mode %s @ %s",
    105          			getPin_output_mode_e(boardConfiguration->alternatorControlPinMode),
    106          			hwPortname(boardConfiguration->alternatorControlPin));
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000188   0x6800             LDR      R0,[R0, #+0]
   \   0000018A   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   0000018E   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000192   0x0005             MOVS     R5,R0
   \   00000194   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000198   0x6800             LDR      R0,[R0, #+0]
   \   0000019A   0xF8D0 0x00AC      LDR      R0,[R0, #+172]
   \   0000019E   0x.... 0x....      BL       _Z20getPin_output_mode_e17pin_output_mode_e
   \   000001A2   0x002B             MOVS     R3,R5
   \   000001A4   0x0002             MOVS     R2,R0
   \   000001A6   0x.... 0x....      LDR.W    R1,??DataTable33
   \   000001AA   0x.... 0x....      LDR.W    R0,??DataTable35
   \   000001AE   0x.... 0x....      BL       scheduleMsg
    107          }
   \   000001B2   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    108          
    109          EXTERN_ENGINE
    110          ;
    111          
    112          /**
    113           * These should be not very long because these are displayed on the LCD as is
    114           */

   \                                 In section .text, align 2, keep-with-next
    115          const char* getConfigurationName(engine_type_e engineType) {
   \                     _Z20getConfigurationName13engine_type_e:
   \   00000000   0x0001             MOVS     R1,R0
    116          	switch (engineType) {
   \   00000002   0x0008             MOVS     R0,R1
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD03A             BEQ.N    ??getConfigurationName_0
   \   00000008   0x2802             CMP      R0,#+2
   \   0000000A   0xD03B             BEQ.N    ??getConfigurationName_1
   \   0000000C   0x2803             CMP      R0,#+3
   \   0000000E   0xD03F             BEQ.N    ??getConfigurationName_2
   \   00000010   0x2804             CMP      R0,#+4
   \   00000012   0xD040             BEQ.N    ??getConfigurationName_3
   \   00000014   0x2805             CMP      R0,#+5
   \   00000016   0xD041             BEQ.N    ??getConfigurationName_4
   \   00000018   0x2806             CMP      R0,#+6
   \   0000001A   0xD042             BEQ.N    ??getConfigurationName_5
   \   0000001C   0x2807             CMP      R0,#+7
   \   0000001E   0xD049             BEQ.N    ??getConfigurationName_6
   \   00000020   0x2808             CMP      R0,#+8
   \   00000022   0xD04A             BEQ.N    ??getConfigurationName_7
   \   00000024   0x2809             CMP      R0,#+9
   \   00000026   0xD04B             BEQ.N    ??getConfigurationName_8
   \   00000028   0x280A             CMP      R0,#+10
   \   0000002A   0xD05B             BEQ.N    ??getConfigurationName_9
   \   0000002C   0x280B             CMP      R0,#+11
   \   0000002E   0xD04A             BEQ.N    ??getConfigurationName_10
   \   00000030   0x280C             CMP      R0,#+12
   \   00000032   0xD04B             BEQ.N    ??getConfigurationName_11
   \   00000034   0x280D             CMP      R0,#+13
   \   00000036   0xD04C             BEQ.N    ??getConfigurationName_12
   \   00000038   0x280E             CMP      R0,#+14
   \   0000003A   0xD04D             BEQ.N    ??getConfigurationName_13
   \   0000003C   0x280F             CMP      R0,#+15
   \   0000003E   0xD04E             BEQ.N    ??getConfigurationName_14
   \   00000040   0x2810             CMP      R0,#+16
   \   00000042   0xD052             BEQ.N    ??getConfigurationName_15
   \   00000044   0x2811             CMP      R0,#+17
   \   00000046   0xD02F             BEQ.N    ??getConfigurationName_16
   \   00000048   0x2812             CMP      R0,#+18
   \   0000004A   0xD030             BEQ.N    ??getConfigurationName_17
   \   0000004C   0x2813             CMP      R0,#+19
   \   0000004E   0xD04F             BEQ.N    ??getConfigurationName_18
   \   00000050   0x2814             CMP      R0,#+20
   \   00000052   0xD050             BEQ.N    ??getConfigurationName_19
   \   00000054   0x2815             CMP      R0,#+21
   \   00000056   0xD054             BEQ.N    ??getConfigurationName_20
   \   00000058   0x2817             CMP      R0,#+23
   \   0000005A   0xD016             BEQ.N    ??getConfigurationName_21
   \   0000005C   0x2818             CMP      R0,#+24
   \   0000005E   0xD04D             BEQ.N    ??getConfigurationName_22
   \   00000060   0x2819             CMP      R0,#+25
   \   00000062   0xD051             BEQ.N    ??getConfigurationName_23
   \   00000064   0x281A             CMP      R0,#+26
   \   00000066   0xD052             BEQ.N    ??getConfigurationName_24
   \   00000068   0x281C             CMP      R0,#+28
   \   0000006A   0xD05F             BEQ.N    ??getConfigurationName_25
   \   0000006C   0x281D             CMP      R0,#+29
   \   0000006E   0xD054             BEQ.N    ??getConfigurationName_26
   \   00000070   0x281E             CMP      R0,#+30
   \   00000072   0xD055             BEQ.N    ??getConfigurationName_27
   \   00000074   0x281F             CMP      R0,#+31
   \   00000076   0xD056             BEQ.N    ??getConfigurationName_28
   \   00000078   0x2820             CMP      R0,#+32
   \   0000007A   0xD04B             BEQ.N    ??getConfigurationName_29
   \   0000007C   0xE059             B.N      ??getConfigurationName_30
    117          	case CUSTOM_ENGINE:
    118          		return "CUSTOM";
   \                     ??getConfigurationName_0:
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable35_2
   \   00000082   0xE058             B.N      ??getConfigurationName_31
    119          #if EFI_SUPPORT_DODGE_NEON
    120          	case DODGE_NEON_1995:
    121          		return "Neon95";
   \                     ??getConfigurationName_1:
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable35_3
   \   00000088   0xE055             B.N      ??getConfigurationName_31
    122          	case DODGE_NEON_2003:
    123          		return "Neon03";
   \                     ??getConfigurationName_21:
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable35_4
   \   0000008E   0xE052             B.N      ??getConfigurationName_31
    124          #endif /* EFI_SUPPORT_DODGE_NEON */
    125          #if EFI_SUPPORT_FORD_ASPIRE
    126          	case FORD_ASPIRE_1996:
    127          		return "Aspire";
   \                     ??getConfigurationName_2:
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable35_5
   \   00000094   0xE04F             B.N      ??getConfigurationName_31
    128          #endif /* EFI_SUPPORT_FORD_ASPIRE */
    129          #if EFI_SUPPORT_FORD_FIESTA
    130          	case FORD_FIESTA:
    131          		return "Fiesta";
   \                     ??getConfigurationName_3:
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable35_6
   \   0000009A   0xE04C             B.N      ??getConfigurationName_31
    132          #endif /* EFI_SUPPORT_FORD_FIESTA */
    133          #if EFI_SUPPORT_NISSAN_PRIMERA
    134          	case NISSAN_PRIMERA:
    135          		return "Primera";
   \                     ??getConfigurationName_4:
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable36
   \   000000A0   0xE049             B.N      ??getConfigurationName_31
    136          #endif /* EFI_SUPPORT_NISSAN_PRIMERA */
    137          	case HONDA_ACCORD_CD:
    138          		return "Accord3";
   \                     ??getConfigurationName_5:
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable36_1
   \   000000A6   0xE046             B.N      ??getConfigurationName_31
    139          	case HONDA_ACCORD_CD_TWO_WIRES:
    140          		return "Accord2";
   \                     ??getConfigurationName_16:
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable37_1
   \   000000AC   0xE043             B.N      ??getConfigurationName_31
    141          	case HONDA_ACCORD_CD_DIP:
    142          		return "HondaD";
   \                     ??getConfigurationName_17:
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable37_2
   \   000000B2   0xE040             B.N      ??getConfigurationName_31
    143          	case FORD_INLINE_6_1995:
    144          		return "Fordi6";
   \                     ??getConfigurationName_6:
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable37_3
   \   000000B8   0xE03D             B.N      ??getConfigurationName_31
    145          	case GY6_139QMB:
    146          		return "Gy6139";
   \                     ??getConfigurationName_7:
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable37_4
   \   000000BE   0xE03A             B.N      ??getConfigurationName_31
    147          	case MAZDA_MIATA_NB:
    148          		return "MiataNB";
   \                     ??getConfigurationName_8:
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable37_5
   \   000000C4   0xE037             B.N      ??getConfigurationName_31
    149          	case MAZDA_323:
    150          		return "M323";
   \                     ??getConfigurationName_10:
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable37_6
   \   000000CA   0xE034             B.N      ??getConfigurationName_31
    151          	case SATURN_ION_2004:
    152          		return "Saturn Ion";
   \                     ??getConfigurationName_11:
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable37_7
   \   000000D0   0xE031             B.N      ??getConfigurationName_31
    153          	case MINI_COOPER_R50:
    154          		return "CoopR50";
   \                     ??getConfigurationName_12:
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable37_8
   \   000000D6   0xE02E             B.N      ??getConfigurationName_31
    155          	case FORD_ESCORT_GT:
    156          		return "EscrtGT";
   \                     ??getConfigurationName_13:
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable37_9
   \   000000DC   0xE02B             B.N      ??getConfigurationName_31
    157          	case CITROEN_TU3JP:
    158          		return "TU3JP";
   \                     ??getConfigurationName_14:
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable37_10
   \   000000E2   0xE028             B.N      ??getConfigurationName_31
    159          	case ROVER_V8:
    160          		return "Rvrv8";
   \                     ??getConfigurationName_9:
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable37_11
   \   000000E8   0xE025             B.N      ??getConfigurationName_31
    161          	case MITSU_4G93:
    162          		return "Mi4G93";
   \                     ??getConfigurationName_15:
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable37_12
   \   000000EE   0xE022             B.N      ??getConfigurationName_31
    163          	case MIATA_1990:
    164          		return "MX590";
   \                     ??getConfigurationName_18:
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable38
   \   000000F4   0xE01F             B.N      ??getConfigurationName_31
    165          	case MIATA_1994_DEVIATOR:
    166          		return "MX594d";
   \                     ??getConfigurationName_19:
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable38_1
   \   000000FA   0xE01C             B.N      ??getConfigurationName_31
    167          	case MIATA_1994_SPAGS:
    168          		return "MX594s";
   \                     ??getConfigurationName_22:
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable39
   \   00000100   0xE019             B.N      ??getConfigurationName_31
    169          	case MIATA_1996:
    170          		return "MX596";
   \                     ??getConfigurationName_20:
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable39_1
   \   00000106   0xE016             B.N      ??getConfigurationName_31
    171          	case BMW_E34:
    172          		return "BMWe34";
   \                     ??getConfigurationName_23:
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable40
   \   0000010C   0xE013             B.N      ??getConfigurationName_31
    173          	case TEST_ENGINE:
    174          		return "Test";
   \                     ??getConfigurationName_24:
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable40_1
   \   00000112   0xE010             B.N      ??getConfigurationName_31
    175          	case VW_ABA:
    176          		return "VW_ABA";
   \                     ??getConfigurationName_29:
   \   00000114   0x.... 0x....      LDR.W    R0,??DataTable40_2
   \   00000118   0xE00D             B.N      ??getConfigurationName_31
    177          	case SACHS:
    178          		return "SACHS";
   \                     ??getConfigurationName_26:
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable40_3
   \   0000011E   0xE00A             B.N      ??getConfigurationName_31
    179          	case GM_2_2:
    180          	  return "GM_2_2";
   \                     ??getConfigurationName_27:
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable40_4
   \   00000124   0xE007             B.N      ??getConfigurationName_31
    181          	case DODGE_RAM:
    182          		return "DODGE_RAM";
   \                     ??getConfigurationName_28:
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable40_5
   \   0000012A   0xE004             B.N      ??getConfigurationName_31
    183          	case MAZDA_626:
    184          		return "Mazda626";
   \                     ??getConfigurationName_25:
   \   0000012C   0x.... 0x....      LDR.W    R0,??DataTable40_6
   \   00000130   0xE001             B.N      ??getConfigurationName_31
    185          	default:
    186          		return "UnknownType";
   \                     ??getConfigurationName_30:
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable52
   \                     ??getConfigurationName_31:
   \   00000136   0x4770             BX       LR               ;; return
    187          	}
    188          }
    189          
    190          /**
    191           * @brief	Prints current engine configuration to human-readable console.
    192           */

   \                                 In section .text, align 2, keep-with-next
    193          void printConfiguration(engine_configuration_s *engineConfiguration) {
   \                     _Z18printConfigurationP22engine_configuration_s:
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
   \   00000006   0x0004             MOVS     R4,R0
    194          
    195          	scheduleMsg(&logger, "Template %s/%d trigger %s/%s/%d", getConfigurationName(engineConfiguration->engineType),
    196          			engineConfiguration->engineType, getTrigger_type_e(engineConfiguration->trigger.type),
    197          			getEngine_load_mode_e(engineConfiguration->algorithm), engineConfiguration->algorithm);
   \   00000008   0xF8D4 0x01A8      LDR      R0,[R4, #+424]
   \   0000000C   0x.... 0x....      BL       _Z21getEngine_load_mode_e18engine_load_mode_e
   \   00000010   0x0005             MOVS     R5,R0
   \   00000012   0xF8D4 0x0218      LDR      R0,[R4, #+536]
   \   00000016   0x.... 0x....      BL       _Z17getTrigger_type_e14trigger_type_e
   \   0000001A   0x0006             MOVS     R6,R0
   \   0000001C   0x6820             LDR      R0,[R4, #+0]
   \   0000001E   0x.... 0x....      BL       _Z20getConfigurationName13engine_type_e
   \   00000022   0x0002             MOVS     R2,R0
   \   00000024   0xF8D4 0x01A8      LDR      R0,[R4, #+424]
   \   00000028   0x9002             STR      R0,[SP, #+8]
   \   0000002A   0x9501             STR      R5,[SP, #+4]
   \   0000002C   0x9600             STR      R6,[SP, #+0]
   \   0000002E   0x6823             LDR      R3,[R4, #+0]
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable41
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000038   0x.... 0x....      BL       scheduleMsg
    198          
    199          
    200          	scheduleMsg(&logger, "configurationVersion=%d", getGlobalConfigurationVersion());
   \   0000003C   0x.... 0x....      BL       _Z29getGlobalConfigurationVersionv
   \   00000040   0x0002             MOVS     R2,R0
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable41_1
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000004A   0x.... 0x....      BL       scheduleMsg
    201          
    202          	for (int k = 0; k < FUEL_LOAD_COUNT; k++) {
   \   0000004E   0x2000             MOVS     R0,#+0
   \                     ??printConfiguration_0:
   \   00000050   0x2810             CMP      R0,#+16
   \   00000052   0xDA01             BGE.N    ??printConfiguration_1
   \   00000054   0x1C40             ADDS     R0,R0,#+1
   \   00000056   0xE7FB             B.N      ??printConfiguration_0
    203          //		print("line %d (%f): ", k, engineConfiguration->fuelKeyBins[k]);
    204          //		for (int r = 0; r < FUEL_RPM_COUNT; r++) {
    205          //			print("%f ", engineConfiguration->fuelTable[k][r]);
    206          //		}
    207          //		print("\r\n");
    208          	}
    209          
    210          //	printFloatArray("RPM bin: ", config->fuelRpmBins, FUEL_RPM_COUNT);
    211          //
    212          //	printFloatArray("Y bin: ", config->fuelLoadBins, FUEL_LOAD_COUNT);
    213          //
    214          //	printFloatArray("CLT: ", config->cltFuelCorr, CLT_CURVE_SIZE);
    215          //	printFloatArray("CLT bins: ", config->cltFuelCorrBins, CLT_CURVE_SIZE);
    216          //
    217          //	printFloatArray("IAT: ", config->iatFuelCorr, IAT_CURVE_SIZE);
    218          //	printFloatArray("IAT bins: ", config->iatFuelCorrBins, IAT_CURVE_SIZE);
    219          //
    220          //	printFloatArray("vBatt: ", engineConfiguration->injector.battLagCorr, VBAT_INJECTOR_CURVE_SIZE);
    221          //	printFloatArray("vBatt bins: ", engineConfiguration->injector.battLagCorrBins, VBAT_INJECTOR_CURVE_SIZE);
    222          
    223          	scheduleMsg(&logger, "rpmHardLimit: %d/operationMode=%d", engineConfiguration->rpmHardLimit,
    224          			engineConfiguration->operationMode);
   \                     ??printConfiguration_1:
   \   00000058   0xF8D4 0x31F4      LDR      R3,[R4, #+500]
   \   0000005C   0xF8D4 0x21A4      LDR      R2,[R4, #+420]
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable41_2
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000068   0x.... 0x....      BL       scheduleMsg
    225          
    226          	scheduleMsg(&logger, "globalTriggerAngleOffset=%f", engineConfiguration->globalTriggerAngleOffset);
   \   0000006C   0xF8D4 0x01CC      LDR      R0,[R4, #+460]
   \   00000070   0x.... 0x....      BL       __aeabi_f2d
   \   00000074   0x0002             MOVS     R2,R0
   \   00000076   0x000B             MOVS     R3,R1
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable42
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000080   0x.... 0x....      BL       scheduleMsg
    227          
    228          	scheduleMsg(&logger, "=== cranking ===");
   \   00000084   0x.... 0x....      LDR.W    R1,??DataTable42_1
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000008C   0x.... 0x....      BL       scheduleMsg
    229          	scheduleMsg(&logger, "crankingRpm: %d", engineConfiguration->cranking.rpm);
   \   00000090   0xF9B4 0x2060      LDRSH    R2,[R4, #+96]
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable43
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000009C   0x.... 0x....      BL       scheduleMsg
    230          	scheduleMsg(&logger, "cranking injection %s", getInjection_mode_e(engineConfiguration->crankingInjectionMode));
   \   000000A0   0xF8D4 0x01AC      LDR      R0,[R4, #+428]
   \   000000A4   0x.... 0x....      BL       _Z19getInjection_mode_e16injection_mode_e
   \   000000A8   0x0002             MOVS     R2,R0
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable43_1
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable35
   \   000000B2   0x.... 0x....      BL       scheduleMsg
    231          
    232          	if (engineConfiguration->useConstantDwellDuringCranking) {
   \   000000B6   0xF894 0x05D8      LDRB     R0,[R4, #+1496]
   \   000000BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BC   0x0900             LSRS     R0,R0,#+4
   \   000000BE   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   000000C2   0x2800             CMP      R0,#+0
   \   000000C4   0xD00B             BEQ.N    ??printConfiguration_2
    233          		scheduleMsg(&logger, "ignitionDwellForCrankingMs=%f", engineConfiguration->ignitionDwellForCrankingMs);
   \   000000C6   0x6EA0             LDR      R0,[R4, #+104]
   \   000000C8   0x.... 0x....      BL       __aeabi_f2d
   \   000000CC   0x0002             MOVS     R2,R0
   \   000000CE   0x000B             MOVS     R3,R1
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable43_2
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable35
   \   000000D8   0x.... 0x....      BL       scheduleMsg
   \   000000DC   0xE010             B.N      ??printConfiguration_3
    234          	} else {
    235          		scheduleMsg(&logger, "cranking charge charge angle=%f fire at %f", engineConfiguration->crankingChargeAngle,
    236          				engineConfiguration->crankingTimingAngle);
   \                     ??printConfiguration_2:
   \   000000DE   0xF8D4 0x01B8      LDR      R0,[R4, #+440]
   \   000000E2   0x.... 0x....      BL       __aeabi_f2d
   \   000000E6   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000000EA   0x6EE0             LDR      R0,[R4, #+108]
   \   000000EC   0x.... 0x....      BL       __aeabi_f2d
   \   000000F0   0x0002             MOVS     R2,R0
   \   000000F2   0x000B             MOVS     R3,R1
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable43_3
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable35
   \   000000FC   0x.... 0x....      BL       scheduleMsg
    237          	}
    238          
    239          	scheduleMsg(&logger, "=== ignition ===");
   \                     ??printConfiguration_3:
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable44
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000108   0x.... 0x....      BL       scheduleMsg
    240          
    241          	scheduleMsg(&logger, "ignitionMode: %s/enabled=%s", getIgnition_mode_e(engineConfiguration->ignitionMode),
    242          			boolToString(engineConfiguration->isIgnitionEnabled));
   \   0000010C   0xF894 0x05E4      LDRB     R0,[R4, #+1508]
   \   00000110   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000112   0x0840             LSRS     R0,R0,#+1
   \   00000114   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000118   0x.... 0x....      BL       _Z12boolToStringb
   \   0000011C   0x0005             MOVS     R5,R0
   \   0000011E   0xF8D4 0x01BC      LDR      R0,[R4, #+444]
   \   00000122   0x.... 0x....      BL       _Z18getIgnition_mode_e15ignition_mode_e
   \   00000126   0x002B             MOVS     R3,R5
   \   00000128   0x0002             MOVS     R2,R0
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable44_1
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000132   0x.... 0x....      BL       scheduleMsg
    243          	scheduleMsg(&logger, "timingMode: %s", getTiming_mode_e(engineConfiguration->timingMode));
   \   00000136   0xF8D4 0x01C4      LDR      R0,[R4, #+452]
   \   0000013A   0x.... 0x....      BL       _Z16getTiming_mode_e13timing_mode_e
   \   0000013E   0x0002             MOVS     R2,R0
   \   00000140   0x.... 0x....      LDR.W    R1,??DataTable44_2
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000148   0x.... 0x....      BL       scheduleMsg
    244          	if (engineConfiguration->timingMode == TM_FIXED) {
   \   0000014C   0xF8D4 0x01C4      LDR      R0,[R4, #+452]
   \   00000150   0x2801             CMP      R0,#+1
   \   00000152   0xD10B             BNE.N    ??printConfiguration_4
    245          		scheduleMsg(&logger, "fixedModeTiming: %d", (int) engineConfiguration->fixedModeTiming);
   \   00000154   0xED94 0x0A72      VLDR     S0,[R4, #+456]
   \   00000158   0xEEBD 0x0AC0      VCVT.S32.F32 S0,S0
   \   0000015C   0xEE10 0x2A10      VMOV     R2,S0
   \   00000160   0x.... 0x....      LDR.W    R1,??DataTable45
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000168   0x.... 0x....      BL       scheduleMsg
    246          	}
    247          	scheduleMsg(&logger, "ignitionOffset=%f", engineConfiguration->ignitionOffset);
   \                     ??printConfiguration_4:
   \   0000016C   0xF8D4 0x01C0      LDR      R0,[R4, #+448]
   \   00000170   0x.... 0x....      BL       __aeabi_f2d
   \   00000174   0x0002             MOVS     R2,R0
   \   00000176   0x000B             MOVS     R3,R1
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable46_1
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000180   0x.... 0x....      BL       scheduleMsg
    248          
    249          	scheduleMsg(&logger, "=== injection ===");
   \   00000184   0x.... 0x....      LDR.W    R1,??DataTable47_1
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000018C   0x.... 0x....      BL       scheduleMsg
    250          	scheduleMsg(&logger, "injection %s offset=%f/enabled=%s", getInjection_mode_e(engineConfiguration->injectionMode),
    251          			(double) engineConfiguration->injectionOffset, boolToString(engineConfiguration->isInjectionEnabled));
   \   00000190   0xF894 0x05E4      LDRB     R0,[R4, #+1508]
   \   00000194   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000198   0x.... 0x....      BL       _Z12boolToStringb
   \   0000019C   0x0005             MOVS     R5,R0
   \   0000019E   0xF8D4 0x01B0      LDR      R0,[R4, #+432]
   \   000001A2   0x.... 0x....      BL       _Z19getInjection_mode_e16injection_mode_e
   \   000001A6   0x0006             MOVS     R6,R0
   \   000001A8   0x9502             STR      R5,[SP, #+8]
   \   000001AA   0xF8D4 0x01B4      LDR      R0,[R4, #+436]
   \   000001AE   0x.... 0x....      BL       __aeabi_f2d
   \   000001B2   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000001B6   0x0032             MOVS     R2,R6
   \   000001B8   0x.... 0x....      LDR.W    R1,??DataTable47_2
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable35
   \   000001C0   0x.... 0x....      BL       scheduleMsg
    252          
    253          	printOutputs(engineConfiguration);
   \   000001C4   0x0020             MOVS     R0,R4
   \   000001C6   0x.... 0x....      BL       _Z12printOutputsP22engine_configuration_s
    254          
    255          	scheduleMsg(&logger, "map_avg=%s/mil=%s/fp=%s/ts=%s/wa=%s/it=%s/fastAdc=%s",
    256          			boolToString(engineConfiguration->isMapAveragingEnabled), boolToString(engineConfiguration->isMilEnabled),
    257          			boolToString(engineConfiguration->isFuelPumpEnabled),
    258          			boolToString(engineConfiguration->isTunerStudioEnabled),
    259          			boolToString(engineConfiguration->isWaveAnalyzerEnabled),
    260          			boolToString(engineConfiguration->isIdleThreadEnabled), boolToString(boardConfiguration->isFastAdcEnabled));
   \   000001CA   0x.... 0x....      LDR.W    R0,??DataTable32
   \   000001CE   0x6800             LDR      R0,[R0, #+0]
   \   000001D0   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   000001D4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001D6   0x0900             LSRS     R0,R0,#+4
   \   000001D8   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   000001DC   0x.... 0x....      BL       _Z12boolToStringb
   \   000001E0   0x0005             MOVS     R5,R0
   \   000001E2   0xF894 0x05E5      LDRB     R0,[R4, #+1509]
   \   000001E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001E8   0x0880             LSRS     R0,R0,#+2
   \   000001EA   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   000001EE   0x.... 0x....      BL       _Z12boolToStringb
   \   000001F2   0x0006             MOVS     R6,R0
   \   000001F4   0xF894 0x05E5      LDRB     R0,[R4, #+1509]
   \   000001F8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001FA   0x0840             LSRS     R0,R0,#+1
   \   000001FC   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000200   0x.... 0x....      BL       _Z12boolToStringb
   \   00000204   0x0007             MOVS     R7,R0
   \   00000206   0xF894 0x05E5      LDRB     R0,[R4, #+1509]
   \   0000020A   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000020E   0x.... 0x....      BL       _Z12boolToStringb
   \   00000212   0x4680             MOV      R8,R0
   \   00000214   0xF894 0x05E4      LDRB     R0,[R4, #+1508]
   \   00000218   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000021A   0x09C0             LSRS     R0,R0,#+7
   \   0000021C   0x.... 0x....      BL       _Z12boolToStringb
   \   00000220   0x4681             MOV      R9,R0
   \   00000222   0xF894 0x05E4      LDRB     R0,[R4, #+1508]
   \   00000226   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000228   0x0980             LSRS     R0,R0,#+6
   \   0000022A   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000022E   0x.... 0x....      BL       _Z12boolToStringb
   \   00000232   0x4682             MOV      R10,R0
   \   00000234   0xF894 0x05E4      LDRB     R0,[R4, #+1508]
   \   00000238   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000023A   0x0940             LSRS     R0,R0,#+5
   \   0000023C   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000240   0x.... 0x....      BL       _Z12boolToStringb
   \   00000244   0x9504             STR      R5,[SP, #+16]
   \   00000246   0x9603             STR      R6,[SP, #+12]
   \   00000248   0x9702             STR      R7,[SP, #+8]
   \   0000024A   0xF8CD 0x8004      STR      R8,[SP, #+4]
   \   0000024E   0xF8CD 0x9000      STR      R9,[SP, #+0]
   \   00000252   0x4653             MOV      R3,R10
   \   00000254   0x0002             MOVS     R2,R0
   \   00000256   0x.... 0x....      LDR.W    R1,??DataTable48
   \   0000025A   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000025E   0x.... 0x....      BL       scheduleMsg
    261          
    262          	scheduleMsg(&logger, "isManualSpinningMode=%s/isCylinderCleanupEnabled=%s",
    263          			boolToString(engineConfiguration->isManualSpinningMode),
    264          			boolToString(engineConfiguration->isCylinderCleanupEnabled));
   \   00000262   0xF894 0x05E4      LDRB     R0,[R4, #+1508]
   \   00000266   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000268   0x0880             LSRS     R0,R0,#+2
   \   0000026A   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000026E   0x.... 0x....      BL       _Z12boolToStringb
   \   00000272   0x0005             MOVS     R5,R0
   \   00000274   0xF894 0x05E5      LDRB     R0,[R4, #+1509]
   \   00000278   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000027A   0x0900             LSRS     R0,R0,#+4
   \   0000027C   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000280   0x.... 0x....      BL       _Z12boolToStringb
   \   00000284   0x002B             MOVS     R3,R5
   \   00000286   0x0002             MOVS     R2,R0
   \   00000288   0x.... 0x....      LDR.W    R1,??DataTable50
   \   0000028C   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000290   0x.... 0x....      BL       scheduleMsg
    265          
    266          	scheduleMsg(&logger, "clutchUp@%s: %s", hwPortname(boardConfiguration->clutchUpPin),
    267          			boolToString(engine->clutchUpState));
   \   00000294   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000298   0x6800             LDR      R0,[R0, #+0]
   \   0000029A   0xF890 0x0264      LDRB     R0,[R0, #+612]
   \   0000029E   0x.... 0x....      BL       _Z12boolToStringb
   \   000002A2   0x0005             MOVS     R5,R0
   \   000002A4   0x.... 0x....      LDR.W    R0,??DataTable32
   \   000002A8   0x6800             LDR      R0,[R0, #+0]
   \   000002AA   0xF8D0 0x031C      LDR      R0,[R0, #+796]
   \   000002AE   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   000002B2   0x002B             MOVS     R3,R5
   \   000002B4   0x0002             MOVS     R2,R0
   \   000002B6   0x.... 0x....      LDR.W    R1,??DataTable51
   \   000002BA   0x.... 0x....      LDR.W    R0,??DataTable35
   \   000002BE   0x.... 0x....      BL       scheduleMsg
    268          	scheduleMsg(&logger, "clutchDown@%s: %s", hwPortname(boardConfiguration->clutchDownPin),
    269          			boolToString(engine->clutchDownState));
   \   000002C2   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   000002C6   0x6800             LDR      R0,[R0, #+0]
   \   000002C8   0xF890 0x0265      LDRB     R0,[R0, #+613]
   \   000002CC   0x.... 0x....      BL       _Z12boolToStringb
   \   000002D0   0x0005             MOVS     R5,R0
   \   000002D2   0x.... 0x....      LDR.W    R0,??DataTable32
   \   000002D6   0x6800             LDR      R0,[R0, #+0]
   \   000002D8   0xF8D0 0x00A0      LDR      R0,[R0, #+160]
   \   000002DC   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   000002E0   0x002B             MOVS     R3,R5
   \   000002E2   0x0002             MOVS     R2,R0
   \   000002E4   0x.... 0x....      LDR.W    R1,??DataTable52_1
   \   000002E8   0x.... 0x....      LDR.W    R0,??DataTable35
   \   000002EC   0x.... 0x....      BL       scheduleMsg
    270          
    271          	scheduleMsg(&logger, "boardTestModeJumperPin: %s/nesting=%d",
    272          			hwPortname(boardConfiguration->boardTestModeJumperPin), maxNesting);
   \   000002F0   0x.... 0x....      LDR.W    R0,??DataTable32
   \   000002F4   0x6800             LDR      R0,[R0, #+0]
   \   000002F6   0xF8D0 0x0150      LDR      R0,[R0, #+336]
   \   000002FA   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   000002FE   0x.... 0x....      LDR.W    R1,??DataTable53
   \   00000302   0x680B             LDR      R3,[R1, #+0]
   \   00000304   0x0002             MOVS     R2,R0
   \   00000306   0x.... 0x....      LDR.W    R1,??DataTable53_1
   \   0000030A   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000030E   0x.... 0x....      BL       scheduleMsg
    273          
    274          	scheduleMsg(&logger, "digitalPotentiometerSpiDevice %d", boardConfiguration->digitalPotentiometerSpiDevice);
   \   00000312   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000316   0x6800             LDR      R0,[R0, #+0]
   \   00000318   0xF8D0 0x20D4      LDR      R2,[R0, #+212]
   \   0000031C   0x.... 0x....      LDR.W    R1,??DataTable54
   \   00000320   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000324   0x.... 0x....      BL       scheduleMsg
    275          
    276          	for (int i = 0; i < DIGIPOT_COUNT; i++) {
   \   00000328   0x2500             MOVS     R5,#+0
   \                     ??printConfiguration_5:
   \   0000032A   0x2D04             CMP      R5,#+4
   \   0000032C   0xDA12             BGE.N    ??printConfiguration_6
    277          		scheduleMsg(&logger, "digitalPotentiometer CS%d %s", i,
    278          				hwPortname(boardConfiguration->digitalPotentiometerChipSelect[i]));
   \   0000032E   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000332   0x6800             LDR      R0,[R0, #+0]
   \   00000334   0xEB10 0x0085      ADDS     R0,R0,R5, LSL #+2
   \   00000338   0xF8D0 0x00D8      LDR      R0,[R0, #+216]
   \   0000033C   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000340   0x0003             MOVS     R3,R0
   \   00000342   0x002A             MOVS     R2,R5
   \   00000344   0x.... 0x....      LDR.W    R1,??DataTable54_1
   \   00000348   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000034C   0x.... 0x....      BL       scheduleMsg
    279          	}
   \   00000350   0x1C6D             ADDS     R5,R5,#+1
   \   00000352   0xE7EA             B.N      ??printConfiguration_5
    280          #if EFI_PROD_CODE
    281          
    282          	printSpiState(&logger, boardConfiguration);
   \                     ??printConfiguration_6:
   \   00000354   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000358   0x6801             LDR      R1,[R0, #+0]
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000035E   0x.... 0x....      BL       _Z13printSpiStateP7LoggingP21board_configuration_s
    283          
    284          #endif /* EFI_PROD_CODE */
    285          }
   \   00000362   0xB006             ADD      SP,SP,#+24
   \   00000364   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    286          

   \                                 In section .text, align 2, keep-with-next
    287          static void doPrintConfiguration(Engine *engine) {
   \                     _Z20doPrintConfigurationP6Engine:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    288          	printConfiguration(engineConfiguration);
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x.... 0x....      BL       _Z18printConfigurationP22engine_configuration_s
    289          }
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return
    290          

   \                                 In section .text, align 2, keep-with-next
    291          static void setFixedModeTiming(int value) {
   \                     _Z18setFixedModeTimingi:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEE08 0x0A10      VMOV     S16,R0
    292          	engineConfiguration->fixedModeTiming = value;
   \   0000000A   0xEEB8 0x0AC8      VCVT.F32.S32 S0,S16
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xED80 0x0A72      VSTR     S0,[R0, #+456]
    293          	doPrintConfiguration(engine);
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    294          	incrementGlobalConfigurationVersion();
   \   00000022   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    295          }
   \   00000026   0xECBD 0x8B02      VPOP     {D8}
   \   0000002A   0xBD01             POP      {R0,PC}          ;; return
    296          

   \                                 In section .text, align 2, keep-with-next
    297          static void setTimingMode(int value) {
   \                     _Z13setTimingModei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    298          	engineConfiguration->timingMode = (timing_mode_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x41C4      STR      R4,[R0, #+452]
    299          	doPrintConfiguration(engine);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    300          	incrementGlobalConfigurationVersion();
   \   00000018   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    301          }
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    302          

   \                                 In section .text, align 2, keep-with-next
    303          void setEngineType(int value) {
   \                     _Z13setEngineTypei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    304          	engineConfiguration->engineType = (engine_type_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x6004             STR      R4,[R0, #+0]
    305          	resetConfigurationExt(&logger, (engine_type_e) value PASS_ENGINE_PARAMETER);
   \   0000000C   0x0021             MOVS     R1,R4
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000012   0x.... 0x....      BL       _Z21resetConfigurationExtP7Logging13engine_type_e
    306          #if EFI_WAVE_CHART || defined(__DOXYGEN__)
    307          	if (engine->isTestMode)
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF890 0x0280      LDRB     R0,[R0, #+640]
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD003             BEQ.N    ??setEngineType_0
    308          		waveChart.resetWaveChart();
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable56
   \   00000028   0x.... 0x....      BL       _ZN9WaveChart14resetWaveChartEv
    309          #endif
    310          
    311          #if EFI_INTERNAL_FLASH
    312          	writeToFlashNow();
   \                     ??setEngineType_0:
   \   0000002C   0x.... 0x....      BL       _Z15writeToFlashNowv
    313          //	scheduleReset();
    314          #endif /* EFI_PROD_CODE */
    315          	incrementGlobalConfigurationVersion();
   \   00000030   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    316          	doPrintConfiguration(engine);
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    317          }
   \   0000003E   0xBD10             POP      {R4,PC}          ;; return
    318          

   \                                 In section .text, align 2, keep-with-next
    319          static void setIdleSolenoidFrequency(int value) {
    320          	boardConfiguration->idle.solenoidFrequency = value;
   \                     _Z24setIdleSolenoidFrequencyi:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable32
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0x6088             STR      R0,[R1, #+8]
    321          }
   \   00000008   0x4770             BX       LR               ;; return
    322          

   \                                 In section .text, align 2, keep-with-next
    323          static void setInjectionPinMode(int value) {
   \                     _Z19setInjectionPinModei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    324          	boardConfiguration->injectionPinMode = (pin_output_mode_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x6504             STR      R4,[R0, #+80]
    325          	doPrintConfiguration(engine);
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    326          }
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
    327          

   \                                 In section .text, align 2, keep-with-next
    328          static void setIgnitionPinMode(int value) {
   \                     _Z18setIgnitionPinModei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    329          	boardConfiguration->ignitionPinMode = (pin_output_mode_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x4084      STR      R4,[R0, #+132]
    330          	doPrintConfiguration(engine);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    331          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    332          

   \                                 In section .text, align 2, keep-with-next
    333          static void setIdlePinMode(int value) {
   \                     _Z14setIdlePinModei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    334          	boardConfiguration->idle.solenoidPinMode = (pin_output_mode_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x6044             STR      R4,[R0, #+4]
    335          	doPrintConfiguration(engine);
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    336          }
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
    337          

   \                                 In section .text, align 2, keep-with-next
    338          static void setInjectionOffset(float value) {
   \                     _Z18setInjectionOffsetf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    339          	engineConfiguration->injectionOffset = value;
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable55
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xED80 0x8A6D      VSTR     S16,[R0, #+436]
    340          	doPrintConfiguration(engine);
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    341          	incrementGlobalConfigurationVersion();
   \   0000001E   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    342          }
   \   00000022   0xECBD 0x8B02      VPOP     {D8}
   \   00000026   0xBD01             POP      {R0,PC}          ;; return
    343          

   \                                 In section .text, align 2, keep-with-next
    344          static void setIgnitionOffset(float value) {
   \                     _Z17setIgnitionOffsetf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    345          	engineConfiguration->ignitionOffset = value;
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable55
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xED80 0x8A70      VSTR     S16,[R0, #+448]
    346          	doPrintConfiguration(engine);
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    347          	incrementGlobalConfigurationVersion();
   \   0000001E   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    348          }
   \   00000022   0xECBD 0x8B02      VPOP     {D8}
   \   00000026   0xBD01             POP      {R0,PC}          ;; return
    349          

   \                                 In section .text, align 2, keep-with-next
    350          static void setFuelPumpPinMode(int value) {
   \                     _Z18setFuelPumpPinModei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    351          	boardConfiguration->fuelPumpPinMode = (pin_output_mode_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x61C4             STR      R4,[R0, #+28]
    352          	doPrintConfiguration(engine);
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    353          }
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
    354          

   \                                 In section .text, align 2, keep-with-next
    355          static void setMalfunctionIndicatorPinMode(int value) {
   \                     _Z30setMalfunctionIndicatorPinModei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    356          	boardConfiguration->malfunctionIndicatorPinMode = (pin_output_mode_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x408C      STR      R4,[R0, #+140]
    357          	doPrintConfiguration(engine);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    358          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    359          

   \                                 In section .text, align 2, keep-with-next
    360          static void setSensorChartMode(int value) {
   \                     _Z18setSensorChartModei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    361          	boardConfiguration->sensorChartMode = (sensor_chart_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable32
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x4310      STR      R4,[R0, #+784]
    362          	doPrintConfiguration(engine);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    363          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    364          

   \                                 In section .text, align 2, keep-with-next
    365          static void setOM(int value) {
   \                     _Z5setOMi:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    366          	engineConfiguration->operationMode = (operation_mode_e)value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x41F4      STR      R4,[R0, #+500]
    367          	doPrintConfiguration(engine);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    368          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    369          

   \                                 In section .bss, align 4
    370          static char pinNameBuffer[16];
   \                     pinNameBuffer:
   \   00000000                      DS8 16
    371          

   \                                 In section .text, align 4, keep-with-next
    372          static void printThermistor(const char *msg, ThermistorConf *config, ThermistorMath *tm) {
   \                     _Z15printThermistorPKcP14ThermistorConfP14ThermistorMath:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0xED2D 0x8B04      VPUSH    {D8-D9}
   \   00000006   0xB08A             SUB      SP,SP,#+40
   \   00000008   0x0007             MOVS     R7,R0
   \   0000000A   0x000E             MOVS     R6,R1
   \   0000000C   0x0014             MOVS     R4,R2
    373          	thermistor_curve_s * curve = &tm->curve;
    374          	adc_channel_e adcChannel = config->adcChannel;
   \   0000000E   0x69F5             LDR      R5,[R6, #+28]
    375          	float voltage = getVoltageDivided("term", adcChannel);
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable59_1
   \   00000016   0x.... 0x....      BL       _Z19getInternalAdcValuePKc13adc_channel_e
   \   0000001A   0xEE00 0x0A10      VMOV     S0,R0
   \   0000001E   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000022   0xEDDF 0x....      VLDR.W   S1,??DataTable23  ;; 0x3a400c01
   \   00000026   0xEE20 0x0A20      VMUL.F32 S0,S0,S1
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable55
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xEDD0 0x0A74      VLDR     S1,[R0, #+464]
   \   00000034   0xEE20 0x8A20      VMUL.F32 S16,S0,S1
    376          	float r = getResistance(config);
   \   00000038   0x0030             MOVS     R0,R6
   \   0000003A   0x.... 0x....      BL       _Z13getResistanceP14ThermistorConf
   \   0000003E   0xEEF0 0x8A40      VMOV.F32 S17,S0
    377          
    378          	float t = getTemperatureC(config, tm);
   \   00000042   0x0021             MOVS     R1,R4
   \   00000044   0x0030             MOVS     R0,R6
   \   00000046   0x.... 0x....      BL       _Z15getTemperatureCP14ThermistorConfP14ThermistorMath
   \   0000004A   0xEEB0 0x9A40      VMOV.F32 S18,S0
    379          
    380          	thermistor_conf_s *tc = &config->config;
    381          
    382          	scheduleMsg(&logger, "%s volts=%f Celsius=%f sensorR=%f on channel %d", msg, voltage, t, r, adcChannel);
   \   0000004E   0x9506             STR      R5,[SP, #+24]
   \   00000050   0xEE18 0x0A90      VMOV     R0,S17
   \   00000054   0x.... 0x....      BL       __aeabi_f2d
   \   00000058   0xE9CD 0x0104      STRD     R0,R1,[SP, #+16]
   \   0000005C   0xEE19 0x0A10      VMOV     R0,S18
   \   00000060   0x.... 0x....      BL       __aeabi_f2d
   \   00000064   0xE9CD 0x0102      STRD     R0,R1,[SP, #+8]
   \   00000068   0xEE18 0x0A10      VMOV     R0,S16
   \   0000006C   0x.... 0x....      BL       __aeabi_f2d
   \   00000070   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000074   0x003A             MOVS     R2,R7
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable59_2
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   0000007E   0x.... 0x....      BL       scheduleMsg
    383          	scheduleMsg(&logger, "@%s", getPinNameByAdcChannel(adcChannel, pinNameBuffer));
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable59_3
   \   00000086   0x0028             MOVS     R0,R5
   \   00000088   0x.... 0x....      BL       _Z22getPinNameByAdcChannel13adc_channel_ePc
   \   0000008C   0x0002             MOVS     R2,R0
   \   0000008E   0x....             ADR.N    R1,??DataTable26  ;; "@%s"
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   00000094   0x.... 0x....      BL       scheduleMsg
    384          	scheduleMsg(&logger, "C=%f/R=%f C=%f/R=%f C=%f/R=%f",
    385          			tc->tempC_1, tc->resistance_1,
    386          			tc->tempC_2, tc->resistance_2,
    387          			tc->tempC_3, tc->resistance_3);
   \   00000098   0x6970             LDR      R0,[R6, #+20]
   \   0000009A   0x.... 0x....      BL       __aeabi_f2d
   \   0000009E   0xE9CD 0x0108      STRD     R0,R1,[SP, #+32]
   \   000000A2   0x68B0             LDR      R0,[R6, #+8]
   \   000000A4   0x.... 0x....      BL       __aeabi_f2d
   \   000000A8   0xE9CD 0x0106      STRD     R0,R1,[SP, #+24]
   \   000000AC   0x6930             LDR      R0,[R6, #+16]
   \   000000AE   0x.... 0x....      BL       __aeabi_f2d
   \   000000B2   0xE9CD 0x0104      STRD     R0,R1,[SP, #+16]
   \   000000B6   0x6870             LDR      R0,[R6, #+4]
   \   000000B8   0x.... 0x....      BL       __aeabi_f2d
   \   000000BC   0xE9CD 0x0102      STRD     R0,R1,[SP, #+8]
   \   000000C0   0x68F0             LDR      R0,[R6, #+12]
   \   000000C2   0x.... 0x....      BL       __aeabi_f2d
   \   000000C6   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000000CA   0x6830             LDR      R0,[R6, #+0]
   \   000000CC   0x.... 0x....      BL       __aeabi_f2d
   \   000000D0   0x0002             MOVS     R2,R0
   \   000000D2   0x000B             MOVS     R3,R1
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable59_4
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   000000DC   0x.... 0x....      BL       scheduleMsg
    388          
    389          	scheduleMsg(&logger, "bias resistor=%fK A=%..100000f B=%..100000f C=%..100000f", tc->bias_resistor / 1000,
    390          			curve->s_h_a, curve->s_h_b, curve->s_h_c);
   \   000000E0   0x68A0             LDR      R0,[R4, #+8]
   \   000000E2   0x.... 0x....      BL       __aeabi_f2d
   \   000000E6   0xE9CD 0x0104      STRD     R0,R1,[SP, #+16]
   \   000000EA   0x6860             LDR      R0,[R4, #+4]
   \   000000EC   0x.... 0x....      BL       __aeabi_f2d
   \   000000F0   0xE9CD 0x0102      STRD     R0,R1,[SP, #+8]
   \   000000F4   0x6820             LDR      R0,[R4, #+0]
   \   000000F6   0x.... 0x....      BL       __aeabi_f2d
   \   000000FA   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000000FE   0xED96 0x0A06      VLDR     S0,[R6, #+24]
   \   00000102   0xEDDF 0x....      VLDR.W   S1,??DataTable29  ;; 0x447a0000
   \   00000106   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   0000010A   0xEE10 0x0A10      VMOV     R0,S0
   \   0000010E   0x.... 0x....      BL       __aeabi_f2d
   \   00000112   0x0002             MOVS     R2,R0
   \   00000114   0x000B             MOVS     R3,R1
   \   00000116   0x.... 0x....      LDR.W    R1,??DataTable59_5
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   0000011E   0x.... 0x....      BL       scheduleMsg
    391          	scheduleMsg(&logger, "==============================");
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable60
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   0000012A   0x.... 0x....      BL       scheduleMsg
    392          }
   \   0000012E   0xB00A             ADD      SP,SP,#+40
   \   00000130   0xECBD 0x8B04      VPOP     {D8-D9}
   \   00000134   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    393          

   \                                 In section .text, align 2, keep-with-next
    394          static void printTPSInfo(void) {
   \                     _Z12printTPSInfov:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xB084             SUB      SP,SP,#+16
    395          #if (EFI_PROD_CODE && HAL_USE_ADC) || defined(__DOXYGEN__)
    396          	if (!engineConfiguration->hasTpsSensor) {
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable55
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF890 0x05D9      LDRB     R0,[R0, #+1497]
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x09C0             LSRS     R0,R0,#+7
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD106             BNE.N    ??printTPSInfo_0
    397          		scheduleMsg(&logger, "NO TPS SENSOR");
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable60_1
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   00000024   0x.... 0x....      BL       scheduleMsg
    398          		return;
   \   00000028   0xE04B             B.N      ??printTPSInfo_1
    399          	}
    400          
    401          	GPIO_TypeDef* port = getAdcChannelPort(engineConfiguration->tpsAdcChannel);
   \                     ??printTPSInfo_0:
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable55
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF8D0 0x020C      LDR      R0,[R0, #+524]
   \   00000034   0x.... 0x....      BL       _Z17getAdcChannelPort13adc_channel_e
   \   00000038   0x0004             MOVS     R4,R0
    402          	int pin = getAdcChannelPin(engineConfiguration->tpsAdcChannel);
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable55
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF8D0 0x020C      LDR      R0,[R0, #+524]
   \   00000044   0x.... 0x....      BL       _Z16getAdcChannelPin13adc_channel_e
   \   00000048   0x0005             MOVS     R5,R0
    403          
    404          	scheduleMsg(&logger, "tps min %d/max %d v=%f @%s%d", engineConfiguration->tpsMin, engineConfiguration->tpsMax,
    405          			getTPSVoltage(PASS_ENGINE_PARAMETER_F), portname(port), pin);
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0x.... 0x....      BL       _Z8portnameP12GPIO_TypeDef
   \   00000050   0x0006             MOVS     R6,R0
   \   00000052   0x.... 0x....      BL       _Z13getTPSVoltagev
   \   00000056   0x9503             STR      R5,[SP, #+12]
   \   00000058   0x9602             STR      R6,[SP, #+8]
   \   0000005A   0xEE10 0x0A10      VMOV     R0,S0
   \   0000005E   0x.... 0x....      BL       __aeabi_f2d
   \   00000062   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable55
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0xF9B0 0x3054      LDRSH    R3,[R0, #+84]
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0xF9B0 0x2052      LDRSH    R2,[R0, #+82]
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable61
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   00000082   0x.... 0x....      BL       scheduleMsg
    406          #endif
    407          	scheduleMsg(&logger, "current 10bit=%d value=%f rate=%f", getTPS10bitAdc(), getTPS(PASS_ENGINE_PARAMETER_F),
    408          			getTpsRateOfChange());
   \   00000086   0x.... 0x....      BL       _Z18getTpsRateOfChangev
   \   0000008A   0xEEB0 0x8A40      VMOV.F32 S16,S0
   \   0000008E   0x.... 0x....      BL       _Z6getTPSv
   \   00000092   0xEEF0 0x8A40      VMOV.F32 S17,S0
   \   00000096   0x.... 0x....      BL       _Z14getTPS10bitAdcv
   \   0000009A   0x0006             MOVS     R6,R0
   \   0000009C   0xEE18 0x0A10      VMOV     R0,S16
   \   000000A0   0x.... 0x....      BL       __aeabi_f2d
   \   000000A4   0xE9CD 0x0102      STRD     R0,R1,[SP, #+8]
   \   000000A8   0xEE18 0x0A90      VMOV     R0,S17
   \   000000AC   0x.... 0x....      BL       __aeabi_f2d
   \   000000B0   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000000B4   0x0032             MOVS     R2,R6
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable61_1
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   000000BE   0x.... 0x....      BL       scheduleMsg
    409          }
   \                     ??printTPSInfo_1:
   \   000000C2   0xB004             ADD      SP,SP,#+16
   \   000000C4   0xECBD 0x8B02      VPOP     {D8}
   \   000000C8   0xBD70             POP      {R4-R6,PC}       ;; return
    410          

   \                                 In section .text, align 2, keep-with-next
    411          static void printTemperatureInfo(void) {
   \                     _Z20printTemperatureInfov:
   \   00000000   0xB510             PUSH     {R4,LR}
    412          #if EFI_ANALOG_SENSORS || defined(__DOXYGEN__)
    413          	printThermistor("CLT", &engineConfiguration->clt, &engine->engineState.cltCurve);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF500 0x52F0      ADD      R2,R0,#+7680
   \   0000000C   0x3284             ADDS     R2,R2,#+132
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF510 0x7180      ADDS     R1,R0,#+256
   \   00000018   0x....             ADR.N    R0,??DataTable34  ;; "CLT"
   \   0000001A   0x.... 0x....      BL       _Z15printThermistorPKcP14ThermistorConfP14ThermistorMath
    414          	if (!isValidCoolantTemperature(getCoolantTemperature(PASS_ENGINE_PARAMETER_F))) {
   \   0000001E   0x.... 0x....      BL       _Z21getCoolantTemperaturev
   \   00000022   0x.... 0x....      BL       _Z25isValidCoolantTemperaturef
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD105             BNE.N    ??printTemperatureInfo_0
    415          		scheduleMsg(&logger, "CLT sensing error");
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable62
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   00000032   0x.... 0x....      BL       scheduleMsg
    416          	}
    417          	printThermistor("IAT", &engineConfiguration->iat, &engine->engineState.iatCurve);
   \                     ??printTemperatureInfo_0:
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF500 0x52F0      ADD      R2,R0,#+7680
   \   00000040   0x325C             ADDS     R2,R2,#+92
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0xF510 0x7190      ADDS     R1,R0,#+288
   \   0000004C   0x....             ADR.N    R0,??DataTable35_1  ;; "IAT"
   \   0000004E   0x.... 0x....      BL       _Z15printThermistorPKcP14ThermistorConfP14ThermistorMath
    418          	if (!isValidIntakeAirTemperature(getIntakeAirTemperature(PASS_ENGINE_PARAMETER_F))) {
   \   00000052   0x.... 0x....      BL       _Z23getIntakeAirTemperaturev
   \   00000056   0x.... 0x....      BL       _Z27isValidIntakeAirTemperaturef
   \   0000005A   0x2800             CMP      R0,#+0
   \   0000005C   0xD105             BNE.N    ??printTemperatureInfo_1
    419          		scheduleMsg(&logger, "IAT sensing error");
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable62_1
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   00000066   0x.... 0x....      BL       scheduleMsg
    420          	}
    421          
    422          	scheduleMsg(&logger, "fan=%s @ %s", boolToString(enginePins.fanRelay.getLogicValue()),
    423          			hwPortname(boardConfiguration->fanPin));
   \                     ??printTemperatureInfo_1:
   \   0000006A   0x....             LDR.N    R0,??DataTable32
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0xF8D0 0x0090      LDR      R0,[R0, #+144]
   \   00000072   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000076   0x0004             MOVS     R4,R0
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   0000007C   0x.... 0x....      BL       _ZN9OutputPin13getLogicValueEv
   \   00000080   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000082   0x.... 0x....      BL       _Z12boolToStringb
   \   00000086   0x0002             MOVS     R2,R0
   \   00000088   0x0023             MOVS     R3,R4
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable63
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   00000092   0x.... 0x....      BL       scheduleMsg
    424          
    425          	scheduleMsg(&logger, "A/C relay=%s @ %s", boolToString(enginePins.acRelay.getLogicValue()),
    426          			hwPortname(boardConfiguration->acRelayPin));
   \   00000096   0x....             LDR.N    R0,??DataTable32
   \   00000098   0x6800             LDR      R0,[R0, #+0]
   \   0000009A   0xF8D0 0x0260      LDR      R0,[R0, #+608]
   \   0000009E   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   000000A2   0x0004             MOVS     R4,R0
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable63_1
   \   000000A8   0x.... 0x....      BL       _ZN9OutputPin13getLogicValueEv
   \   000000AC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AE   0x.... 0x....      BL       _Z12boolToStringb
   \   000000B2   0x0002             MOVS     R2,R0
   \   000000B4   0x0023             MOVS     R3,R4
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable63_2
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   000000BE   0x.... 0x....      BL       scheduleMsg
    427          
    428          #endif
    429          }
   \   000000C2   0xBD10             POP      {R4,PC}          ;; return
    430          

   \                                 In section .text, align 2, keep-with-next
    431          static void setCrankingRpm(int value) {
   \                     _Z14setCrankingRpmi:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    432          	engineConfiguration->cranking.rpm = value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8A0 0x4060      STRH     R4,[R0, #+96]
    433          	doPrintConfiguration(engine);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    434          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    435          
    436          /**
    437           * this method is used in console - it also prints current configuration
    438           */

   \                                 In section .text, align 2, keep-with-next
    439          static void setAlgorithmInt(int value) {
   \                     _Z15setAlgorithmInti:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    440          	setAlgorithm((engine_load_mode_e) value);
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _Z12setAlgorithm18engine_load_mode_e
    441          	doPrintConfiguration(engine);
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    442          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    443          

   \                                 In section .text, align 2, keep-with-next
    444          static void setFiringOrder(int value) {
   \                     _Z14setFiringOrderi:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    445          	engineConfiguration->specs.firingOrder = (firing_order_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x4198      STR      R4,[R0, #+408]
    446          	doPrintConfiguration(engine);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    447          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    448          

   \                                 In section .text, align 2, keep-with-next
    449          static void setRpmHardLimit(int value) {
   \                     _Z15setRpmHardLimiti:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    450          	engineConfiguration->rpmHardLimit = value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x41A4      STR      R4,[R0, #+420]
    451          	doPrintConfiguration(engine);
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    452          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    453          

   \                                 In section .text, align 2, keep-with-next
    454          static void setCrankingFuel(float timeMs) {
   \                     _Z15setCrankingFuelf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    455          	engineConfiguration->cranking.baseFuel = timeMs;
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable55
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xED80 0x8A17      VSTR     S16,[R0, #+92]
    456          	printTemperatureInfo();
   \   00000014   0x.... 0x....      BL       _Z20printTemperatureInfov
    457          }
   \   00000018   0xECBD 0x8B02      VPOP     {D8}
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return
    458          

   \                                 In section .text, align 2, keep-with-next
    459          static void setGlobalTriggerAngleOffset(float value) {
   \                     _Z27setGlobalTriggerAngleOffsetf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    460          	engineConfiguration->globalTriggerAngleOffset = value;
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable55
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xED80 0x8A73      VSTR     S16,[R0, #+460]
    461          	incrementGlobalConfigurationVersion();
   \   00000014   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    462          	doPrintConfiguration(engine);
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    463          }
   \   00000022   0xECBD 0x8B02      VPOP     {D8}
   \   00000026   0xBD01             POP      {R0,PC}          ;; return
    464          

   \                                 In section .text, align 2, keep-with-next
    465          static void setCrankingTimingAngle(float value) {
   \                     _Z22setCrankingTimingAnglef:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    466          	engineConfiguration->crankingTimingAngle = value;
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable55
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xED80 0x8A6E      VSTR     S16,[R0, #+440]
    467          	incrementGlobalConfigurationVersion();
   \   00000014   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    468          	doPrintConfiguration(engine);
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    469          }
   \   00000022   0xECBD 0x8B02      VPOP     {D8}
   \   00000026   0xBD01             POP      {R0,PC}          ;; return
    470          

   \                                 In section .text, align 2, keep-with-next
    471          static void setCrankingInjectionMode(int value) {
   \                     _Z24setCrankingInjectionModei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    472          	engineConfiguration->crankingInjectionMode = (injection_mode_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x41AC      STR      R4,[R0, #+428]
    473          	incrementGlobalConfigurationVersion();
   \   0000000E   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    474          	doPrintConfiguration(engine);
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    475          }
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    476          

   \                                 In section .text, align 2, keep-with-next
    477          static void setInjectionMode(int value) {
   \                     _Z16setInjectionModei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    478          	engineConfiguration->injectionMode = (injection_mode_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x41B0      STR      R4,[R0, #+432]
    479          	incrementGlobalConfigurationVersion();
   \   0000000E   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    480          	doPrintConfiguration(engine);
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    481          }
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    482          

   \                                 In section .text, align 2, keep-with-next
    483          static void setIgnitionMode(int value) {
   \                     _Z15setIgnitionModei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    484          	engineConfiguration->ignitionMode = (ignition_mode_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x41BC      STR      R4,[R0, #+444]
    485          	incrementGlobalConfigurationVersion();
   \   0000000E   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    486          	doPrintConfiguration(engine);
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    487          }
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    488          

   \                                 In section .text, align 2, keep-with-next
    489          static void setTriggerType(int value) {
   \                     _Z14setTriggerTypei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    490          	engineConfiguration->trigger.type = (trigger_type_e) value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x4218      STR      R4,[R0, #+536]
    491          	incrementGlobalConfigurationVersion();
   \   0000000E   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    492          	doPrintConfiguration(engine);
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    493          }
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    494          

   \                                 In section .text, align 2, keep-with-next
    495          static void setToothedWheel(int total, int skipped) {
   \                     _Z15setToothedWheelii:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    496          	scheduleMsg(&logger, "toothed: total=%d/skipped=%d", total, skipped);
   \   00000006   0x002B             MOVS     R3,R5
   \   00000008   0x0022             MOVS     R2,R4
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable65
   \   0000000E   0x....             LDR.N    R0,??DataTable35
   \   00000010   0x.... 0x....      BL       scheduleMsg
    497          	setToothedWheelConfiguration(&engine->triggerShape, total, skipped, engineConfiguration->operationMode);
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF8D0 0x31F4      LDR      R3,[R0, #+500]
   \   0000001E   0x002A             MOVS     R2,R5
   \   00000020   0x0021             MOVS     R1,R4
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF510 0x7021      ADDS     R0,R0,#+644
   \   0000002C   0x.... 0x....      BL       _Z28setToothedWheelConfigurationP12TriggerShapeii16operation_mode_e
    498          //	initializeTriggerShape(&logger, engineConfiguration, engineConfiguration2);
    499          	incrementGlobalConfigurationVersion();
   \   00000030   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    500          	doPrintConfiguration(engine);
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    501          }
   \   0000003E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    502          

   \                                 In section .text, align 2, keep-with-next
    503          static void setCrankingChargeAngle(float value) {
   \                     _Z22setCrankingChargeAnglef:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    504          	engineConfiguration->crankingChargeAngle = value;
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable55
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xED80 0x8A1B      VSTR     S16,[R0, #+108]
    505          	incrementGlobalConfigurationVersion();
   \   00000014   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    506          	doPrintConfiguration(engine);
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable50_1
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x.... 0x....      BL       _Z20doPrintConfigurationP6Engine
    507          }
   \   00000022   0xECBD 0x8B02      VPOP     {D8}
   \   00000026   0xBD01             POP      {R0,PC}          ;; return
    508          

   \                                 In section .text, align 4, keep-with-next
    509          static void setGlobalFuelCorrection(float value) {
   \                     _Z23setGlobalFuelCorrectionf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    510          	if (value < 0.01 || value > 50)
   \   0000000A   0xED9F 0x....      VLDR.W   S0,??DataTable46  ;; 0x3c23d70b
   \   0000000E   0xEEB4 0x8A40      VCMP.F32 S16,S0
   \   00000012   0xEEF1 0xFA10      FMSTAT   
   \   00000016   0xD406             BMI.N    ??setGlobalFuelCorrection_0
   \   00000018   0xED9F 0x....      VLDR.W   S0,??DataTable47  ;; 0x42480001
   \   0000001C   0xEEB4 0x8A40      VCMP.F32 S16,S0
   \   00000020   0xEEF1 0xFA10      FMSTAT   
   \   00000024   0xDB00             BLT.N    ??setGlobalFuelCorrection_1
    511          		return;
   \                     ??setGlobalFuelCorrection_0:
   \   00000026   0xE010             B.N      ??setGlobalFuelCorrection_2
    512          	scheduleMsg(&logger, "setting fuel mult=%f", value);
   \                     ??setGlobalFuelCorrection_1:
   \   00000028   0xEE18 0x0A10      VMOV     R0,S16
   \   0000002C   0x.... 0x....      BL       __aeabi_f2d
   \   00000030   0x0002             MOVS     R2,R0
   \   00000032   0x000B             MOVS     R3,R1
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable65_1
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   0000003C   0x.... 0x....      BL       scheduleMsg
    513          	engineConfiguration->globalFuelCorrection = value;
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0xED80 0x8A8E      VSTR     S16,[R0, #+568]
    514          }
   \                     ??setGlobalFuelCorrection_2:
   \   0000004A   0xECBD 0x8B02      VPOP     {D8}
   \   0000004E   0xBD01             POP      {R0,PC}          ;; return
    515          

   \                                 In section .text, align 2, keep-with-next
    516          static void setCltBias(float value) {
    517          	engineConfiguration->clt.config.bias_resistor = value;
   \                     _Z10setCltBiasf:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xED80 0x0A46      VSTR     S0,[R0, #+280]
    518          }
   \   0000000A   0x4770             BX       LR               ;; return
    519          

   \                                 In section .text, align 2, keep-with-next
    520          static void setFanSetting(float onTempC, float offTempC) {
   \                     _Z13setFanSettingff:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xB082             SUB      SP,SP,#+8
   \   00000008   0xEEB0 0x8A40      VMOV.F32 S16,S0
   \   0000000C   0xEEF0 0x8A60      VMOV.F32 S17,S1
    521          	if (onTempC <= offTempC) {
   \   00000010   0xEEF4 0x8A48      VCMP.F32 S17,S16
   \   00000014   0xEEF1 0xFA10      FMSTAT   
   \   00000018   0xDB12             BLT.N    ??setFanSetting_0
    522          		scheduleMsg(&logger, "ON temp [%f] should be above OFF temp [%f]", onTempC, offTempC);
   \   0000001A   0xEE18 0x0A90      VMOV     R0,S17
   \   0000001E   0x.... 0x....      BL       __aeabi_f2d
   \   00000022   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000026   0xEE18 0x0A10      VMOV     R0,S16
   \   0000002A   0x.... 0x....      BL       __aeabi_f2d
   \   0000002E   0x0002             MOVS     R2,R0
   \   00000030   0x000B             MOVS     R3,R1
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable65_2
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable55_1
   \   0000003A   0x.... 0x....      BL       scheduleMsg
    523          		return;
   \   0000003E   0xE008             B.N      ??setFanSetting_1
    524          	}
    525          	engineConfiguration->fanOnTemperature = onTempC;
   \                     ??setFanSetting_0:
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable55
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0xED80 0x8A77      VSTR     S16,[R0, #+476]
    526          	engineConfiguration->fanOffTemperature = offTempC;
   \   0000004A   0x....             LDR.N    R0,??DataTable55
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0xEDC0 0x8A78      VSTR     S17,[R0, #+480]
    527          }
   \                     ??setFanSetting_1:
   \   00000052   0xB002             ADD      SP,SP,#+8
   \   00000054   0xECBD 0x8B02      VPOP     {D8}
   \   00000058   0xBD01             POP      {R0,PC}          ;; return
    528          

   \                                 In section .text, align 2, keep-with-next
    529          static void setIatBias(float value) {
    530          	engineConfiguration->iat.config.bias_resistor = value;
   \                     _Z10setIatBiasf:
   \   00000000   0x....             LDR.N    R0,??DataTable55
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xED80 0x0A4E      VSTR     S0,[R0, #+312]
    531          }
   \   00000008   0x4770             BX       LR               ;; return
    532          

   \                                 In section .text, align 2, keep-with-next
    533          static void setVBattDivider(float value) {
    534          	engineConfiguration->vbattDividerCoeff = value;
   \                     _Z15setVBattDividerf:
   \   00000000   0x....             LDR.N    R0,??DataTable55
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xED80 0x0A75      VSTR     S0,[R0, #+468]
    535          }
   \   00000008   0x4770             BX       LR               ;; return
    536          

   \                                 In section .text, align 2, keep-with-next
    537          static void setWholeTimingMap(float value) {
   \                     _Z17setWholeTimingMapf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    538          	// todo: table helper?
    539          	scheduleMsg(&logger, "Setting whole timing map to %f", value);
   \   0000000A   0xEE18 0x0A10      VMOV     R0,S16
   \   0000000E   0x.... 0x....      BL       __aeabi_f2d
   \   00000012   0x0002             MOVS     R2,R0
   \   00000014   0x000B             MOVS     R3,R1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable65_3
   \   0000001A   0x....             LDR.N    R0,??DataTable55_1
   \   0000001C   0x.... 0x....      BL       scheduleMsg
    540          	for (int l = 0; l < IGN_LOAD_COUNT; l++) {
   \   00000020   0x2000             MOVS     R0,#+0
   \                     ??setWholeTimingMap_0:
   \   00000022   0x2810             CMP      R0,#+16
   \   00000024   0xDA13             BGE.N    ??setWholeTimingMap_1
    541          		for (int r = 0; r < IGN_RPM_COUNT; r++) {
   \   00000026   0x2100             MOVS     R1,#+0
   \                     ??setWholeTimingMap_2:
   \   00000028   0x2910             CMP      R1,#+16
   \   0000002A   0xDA0E             BGE.N    ??setWholeTimingMap_3
    542          			config->ignitionTable[l][r] = value;
   \   0000002C   0x2240             MOVS     R2,#+64
   \   0000002E   0x.... 0x....      LDR.W    R3,??DataTable66
   \   00000032   0x681B             LDR      R3,[R3, #+0]
   \   00000034   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000038   0xEB12 0x0281      ADDS     R2,R2,R1, LSL #+2
   \   0000003C   0xF502 0x5238      ADD      R2,R2,#+11776
   \   00000040   0x3238             ADDS     R2,R2,#+56
   \   00000042   0xED82 0x8A00      VSTR     S16,[R2, #0]
    543          		}
   \   00000046   0x1C49             ADDS     R1,R1,#+1
   \   00000048   0xE7EE             B.N      ??setWholeTimingMap_2
    544          	}
   \                     ??setWholeTimingMap_3:
   \   0000004A   0x1C40             ADDS     R0,R0,#+1
   \   0000004C   0xE7E9             B.N      ??setWholeTimingMap_0
    545          }
   \                     ??setWholeTimingMap_1:
   \   0000004E   0xECBD 0x8B02      VPOP     {D8}
   \   00000052   0xBD01             POP      {R0,PC}          ;; return
    546          

   \                                 In section .text, align 2, keep-with-next
    547          static void setWholePhaseMapCmd(float value) {
   \                     _Z19setWholePhaseMapCmdf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    548          	scheduleMsg(&logger, "Setting whole injection phase map to %f", value);
   \   0000000A   0xEE18 0x0A10      VMOV     R0,S16
   \   0000000E   0x.... 0x....      BL       __aeabi_f2d
   \   00000012   0x0002             MOVS     R2,R0
   \   00000014   0x000B             MOVS     R3,R1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable65_4
   \   0000001A   0x....             LDR.N    R0,??DataTable55_1
   \   0000001C   0x.... 0x....      BL       scheduleMsg
    549          	setMap(config->injectionPhase, value);
   \   00000020   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable66
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0xF500 0x5014      ADD      R0,R0,#+9472
   \   0000002E   0x3038             ADDS     R0,R0,#+56
   \   00000030   0x.... 0x....      BL       _Z6setMapPA16_ff
    550          }
   \   00000034   0xECBD 0x8B02      VPOP     {D8}
   \   00000038   0xBD01             POP      {R0,PC}          ;; return
    551          

   \                                 In section .text, align 2, keep-with-next
    552          static void setWholeTimingMapCmd(float value) {
   \                     _Z20setWholeTimingMapCmdf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    553          	scheduleMsg(&logger, "Setting whole timing advance map to %f", value);
   \   0000000A   0xEE18 0x0A10      VMOV     R0,S16
   \   0000000E   0x.... 0x....      BL       __aeabi_f2d
   \   00000012   0x0002             MOVS     R2,R0
   \   00000014   0x000B             MOVS     R3,R1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable65_5
   \   0000001A   0x....             LDR.N    R0,??DataTable55_1
   \   0000001C   0x.... 0x....      BL       scheduleMsg
    554          	setWholeTimingMap(value);
   \   00000020   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   00000024   0x.... 0x....      BL       _Z17setWholeTimingMapf
    555          }
   \   00000028   0xECBD 0x8B02      VPOP     {D8}
   \   0000002C   0xBD01             POP      {R0,PC}          ;; return
    556          

   \                                 In section .text, align 2, keep-with-next
    557          static void setWholeVeCmd(float value) {
   \                     _Z13setWholeVeCmdf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    558          	scheduleMsg(&logger, "Setting whole VE map to %f", value);
   \   0000000A   0xEE18 0x0A10      VMOV     R0,S16
   \   0000000E   0x.... 0x....      BL       __aeabi_f2d
   \   00000012   0x0002             MOVS     R2,R0
   \   00000014   0x000B             MOVS     R3,R1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable65_6
   \   0000001A   0x....             LDR.N    R0,??DataTable55_1
   \   0000001C   0x.... 0x....      BL       scheduleMsg
    559          	if (engineConfiguration->algorithm != LM_SPEED_DENSITY) {
   \   00000020   0x....             LDR.N    R0,??DataTable55
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF8D0 0x01A8      LDR      R0,[R0, #+424]
   \   00000028   0x2803             CMP      R0,#+3
   \   0000002A   0xD004             BEQ.N    ??setWholeVeCmd_0
    560          		scheduleMsg(&logger, "WARNING: setting VE map not in SD mode is pointless");
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable65_7
   \   00000030   0x....             LDR.N    R0,??DataTable55_1
   \   00000032   0x.... 0x....      BL       scheduleMsg
    561          	}
    562          	setMap(config->veTable, value);
   \                     ??setWholeVeCmd_0:
   \   00000036   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable66
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF500 0x5048      ADD      R0,R0,#+12800
   \   00000044   0x30B8             ADDS     R0,R0,#+184
   \   00000046   0x.... 0x....      BL       _Z6setMapPA16_ff
    563          }
   \   0000004A   0xECBD 0x8B02      VPOP     {D8}
   \   0000004E   0xBD01             POP      {R0,PC}          ;; return
    564          

   \                                 In section .text, align 2, keep-with-next
    565          static void setWholeFuelMapCmd(float value) {
   \                     _Z18setWholeFuelMapCmdf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    566          	scheduleMsg(&logger, "Setting whole fuel map to %f", value);
   \   0000000A   0xEE18 0x0A10      VMOV     R0,S16
   \   0000000E   0x.... 0x....      BL       __aeabi_f2d
   \   00000012   0x0002             MOVS     R2,R0
   \   00000014   0x000B             MOVS     R3,R1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable65_8
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable71
   \   0000001E   0x.... 0x....      BL       scheduleMsg
    567          	if (engineConfiguration->algorithm == LM_SPEED_DENSITY) {
   \   00000022   0x....             LDR.N    R0,??DataTable55
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF8D0 0x01A8      LDR      R0,[R0, #+424]
   \   0000002A   0x2803             CMP      R0,#+3
   \   0000002C   0xD105             BNE.N    ??setWholeFuelMapCmd_0
    568          		scheduleMsg(&logger, "WARNING: setting fuel map in SD mode is pointless");
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable65_9
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable71
   \   00000036   0x.... 0x....      BL       scheduleMsg
    569          	}
    570          	setWholeFuelMap(value PASS_ENGINE_PARAMETER);
   \                     ??setWholeFuelMapCmd_0:
   \   0000003A   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   0000003E   0x.... 0x....      BL       _Z15setWholeFuelMapf
    571          }
   \   00000042   0xECBD 0x8B02      VPOP     {D8}
   \   00000046   0xBD01             POP      {R0,PC}          ;; return
    572          
    573          #if EFI_PROD_CODE
    574          

   \                                 In section .text, align 2, keep-with-next
    575          static void setEgtSpi(int spi) {
    576          	boardConfiguration->max31855spiDevice = (spi_device_e) spi;
   \                     _Z9setEgtSpii:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0xF8C1 0x01C0      STR      R0,[R1, #+448]
    577          }
   \   0000000A   0x4770             BX       LR               ;; return
    578          

   \                                 In section .text, align 2, keep-with-next
    579          static void setPotSpi(int spi) {
    580          	boardConfiguration->digitalPotentiometerSpiDevice = (spi_device_e) spi;
   \                     _Z9setPotSpii:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0xF8C1 0x00D4      STR      R0,[R1, #+212]
    581          }
   \   0000000A   0x4770             BX       LR               ;; return
    582          

   \                                 In section .text, align 2, keep-with-next
    583          static void setIgnitionPin(const char *indexStr, const char *pinName) {
   \                     _Z14setIgnitionPinPKcS0_:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    584          	int index = atoi(indexStr) - 1; // convert from human index into software index
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       atoi
   \   0000000C   0x1E46             SUBS     R6,R0,#+1
    585          	if (index < 0 || index >= IGNITION_PIN_COUNT)
   \   0000000E   0x2E00             CMP      R6,#+0
   \   00000010   0xD401             BMI.N    ??setIgnitionPin_0
   \   00000012   0x2E0C             CMP      R6,#+12
   \   00000014   0xDB00             BLT.N    ??setIgnitionPin_1
    586          		return;
   \                     ??setIgnitionPin_0:
   \   00000016   0xE01E             B.N      ??setIgnitionPin_2
    587          	brain_pin_e pin = parseBrainPin(pinName);
   \                     ??setIgnitionPin_1:
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       _Z13parseBrainPinPKc
   \   0000001E   0x0007             MOVS     R7,R0
    588          	// todo: extract method - code duplication with other 'set_xxx_pin' methods?
    589          	if (pin == GPIO_INVALID) {
   \   00000020   0x2F51             CMP      R7,#+81
   \   00000022   0xD106             BNE.N    ??setIgnitionPin_3
    590          		scheduleMsg(&logger, "invalid pin name [%s]", pinName);
   \   00000024   0x002A             MOVS     R2,R5
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable65_10
   \   0000002A   0x....             LDR.N    R0,??DataTable55_1
   \   0000002C   0x.... 0x....      BL       scheduleMsg
    591          		return;
   \   00000030   0xE011             B.N      ??setIgnitionPin_2
    592          	}
    593          	scheduleMsg(&logger, "setting ignition pin[%d] to %s please save&restart", index, hwPortname(pin));
   \                     ??setIgnitionPin_3:
   \   00000032   0x0038             MOVS     R0,R7
   \   00000034   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000038   0x0003             MOVS     R3,R0
   \   0000003A   0x0032             MOVS     R2,R6
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable65_11
   \   00000040   0x....             LDR.N    R0,??DataTable55_1
   \   00000042   0x.... 0x....      BL       scheduleMsg
    594          	boardConfiguration->ignitionPins[index] = pin;
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000050   0x6547             STR      R7,[R0, #+84]
    595          	applyNewConfiguration();
   \   00000052   0x.... 0x....      BL       applyNewConfiguration
    596          }
   \                     ??setIgnitionPin_2:
   \   00000056   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    597          

   \                                 In section .text, align 2, keep-with-next
    598          static void setIndividualPin(const char *pinName, brain_pin_e *targetPin, const char *name) {
   \                     _Z16setIndividualPinPKcP11brain_pin_eS0_:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    599          	brain_pin_e pin = parseBrainPin(pinName);
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       _Z13parseBrainPinPKc
   \   0000000E   0x0007             MOVS     R7,R0
    600          	if (pin == GPIO_INVALID) {
   \   00000010   0x2F51             CMP      R7,#+81
   \   00000012   0xD107             BNE.N    ??setIndividualPin_0
    601          		scheduleMsg(&logger, "invalid pin name [%s]", pinName);
   \   00000014   0x0022             MOVS     R2,R4
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable65_10
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable71
   \   0000001E   0x.... 0x....      BL       scheduleMsg
    602          		return;
   \   00000022   0xE00D             B.N      ??setIndividualPin_1
    603          	}
    604          	scheduleMsg(&logger, "setting %s pin to %s please save&restart", name, hwPortname(pin));
   \                     ??setIndividualPin_0:
   \   00000024   0x0038             MOVS     R0,R7
   \   00000026   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000002A   0x0003             MOVS     R3,R0
   \   0000002C   0x0032             MOVS     R2,R6
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable65_12
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable71
   \   00000036   0x.... 0x....      BL       scheduleMsg
    605          	*targetPin = pin;
   \   0000003A   0x602F             STR      R7,[R5, #+0]
    606          	applyNewConfiguration();
   \   0000003C   0x.... 0x....      BL       applyNewConfiguration
    607          }
   \                     ??setIndividualPin_1:
   \   00000040   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    608          
    609          // set_idle_pin none

   \                                 In section .text, align 2, keep-with-next
    610          static void setIdlePin(const char *pinName) {
   \                     _Z10setIdlePinPKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    611          	setIndividualPin(pinName, &boardConfiguration->idle.solenoidPin, "idle");
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable65_13
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   0000000C   0x6801             LDR      R1,[R0, #+0]
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       _Z16setIndividualPinPKcP11brain_pin_eS0_
    612          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    613          

   \                                 In section .text, align 2, keep-with-next
    614          static void setMainRelayPin(const char *pinName) {
   \                     _Z15setMainRelayPinPKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    615          	setIndividualPin(pinName, &boardConfiguration->mainRelayPin, "main relay");
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable65_14
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF510 0x719A      ADDS     R1,R0,#+308
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x.... 0x....      BL       _Z16setIndividualPinPKcP11brain_pin_eS0_
    616          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    617          

   \                                 In section .text, align 2, keep-with-next
    618          static void setAlternatorPin(const char *pinName) {
   \                     _Z16setAlternatorPinPKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    619          	setIndividualPin(pinName, &boardConfiguration->alternatorControlPin, "alternator");
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable66_2
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF110 0x01A8      ADDS     R1,R0,#+168
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x.... 0x....      BL       _Z16setIndividualPinPKcP11brain_pin_eS0_
    620          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    621          

   \                                 In section .text, align 2, keep-with-next
    622          static void setACPin(const char *pinName) {
   \                     _Z8setACPinPKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    623          	setIndividualPin(pinName, &boardConfiguration->acRelayPin, "A/C");
   \   00000004   0x....             ADR.N    R2,??DataTable59  ;; "A/C"
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF510 0x7118      ADDS     R1,R0,#+608
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0x.... 0x....      BL       _Z16setIndividualPinPKcP11brain_pin_eS0_
    624          }
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
    625          

   \                                 In section .text, align 2, keep-with-next
    626          static void setFuelPumpPin(const char *pinName) {
   \                     _Z14setFuelPumpPinPKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    627          	setIndividualPin(pinName, &boardConfiguration->fuelPumpPin, "fuelPump");
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable66_3
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF110 0x0118      ADDS     R1,R0,#+24
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x.... 0x....      BL       _Z16setIndividualPinPKcP11brain_pin_eS0_
    628          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    629          

   \                                 In section .text, align 2, keep-with-next
    630          static void setInjectionPin(const char *indexStr, const char *pinName) {
   \                     _Z15setInjectionPinPKcS0_:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    631          	int index = atoi(indexStr) - 1; // convert from human index into software index
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       atoi
   \   0000000C   0x1E46             SUBS     R6,R0,#+1
    632          	if (index < 0 || index >= INJECTION_PIN_COUNT)
   \   0000000E   0x2E00             CMP      R6,#+0
   \   00000010   0xD401             BMI.N    ??setInjectionPin_0
   \   00000012   0x2E0C             CMP      R6,#+12
   \   00000014   0xDB00             BLT.N    ??setInjectionPin_1
    633          		return;
   \                     ??setInjectionPin_0:
   \   00000016   0xE01E             B.N      ??setInjectionPin_2
    634          	brain_pin_e pin = parseBrainPin(pinName);
   \                     ??setInjectionPin_1:
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       _Z13parseBrainPinPKc
   \   0000001E   0x0007             MOVS     R7,R0
    635          	// todo: extract method - code duplication with other 'set_xxx_pin' methods?
    636          	if (pin == GPIO_INVALID) {
   \   00000020   0x2F51             CMP      R7,#+81
   \   00000022   0xD106             BNE.N    ??setInjectionPin_3
    637          		scheduleMsg(&logger, "invalid pin name [%s]", pinName);
   \   00000024   0x002A             MOVS     R2,R5
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable65_10
   \   0000002A   0x....             LDR.N    R0,??DataTable55_1
   \   0000002C   0x.... 0x....      BL       scheduleMsg
    638          		return;
   \   00000030   0xE011             B.N      ??setInjectionPin_2
    639          	}
    640          	scheduleMsg(&logger, "setting injection pin[%d] to %s please save&restart", index, hwPortname(pin));
   \                     ??setInjectionPin_3:
   \   00000032   0x0038             MOVS     R0,R7
   \   00000034   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000038   0x0003             MOVS     R3,R0
   \   0000003A   0x0032             MOVS     R2,R6
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable68
   \   00000040   0x....             LDR.N    R0,??DataTable55_1
   \   00000042   0x.... 0x....      BL       scheduleMsg
    641          	boardConfiguration->injectionPins[index] = pin;
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable75
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000050   0x6207             STR      R7,[R0, #+32]
    642          	applyNewConfiguration();
   \   00000052   0x.... 0x....      BL       applyNewConfiguration
    643          }
   \                     ??setInjectionPin_2:
   \   00000056   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    644          

   \                                 In section .text, align 2, keep-with-next
    645          static void setTriggerInputPin(const char *indexStr, const char *pinName) {
   \                     _Z18setTriggerInputPinPKcS0_:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    646          	int index = atoi(indexStr);
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       atoi
   \   0000000C   0x0006             MOVS     R6,R0
    647          	if (index < 0 || index > 2)
   \   0000000E   0x2E00             CMP      R6,#+0
   \   00000010   0xD401             BMI.N    ??setTriggerInputPin_0
   \   00000012   0x2E03             CMP      R6,#+3
   \   00000014   0xDB00             BLT.N    ??setTriggerInputPin_1
    648          		return;
   \                     ??setTriggerInputPin_0:
   \   00000016   0xE021             B.N      ??setTriggerInputPin_2
    649          	brain_pin_e pin = parseBrainPin(pinName);
   \                     ??setTriggerInputPin_1:
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       _Z13parseBrainPinPKc
   \   0000001E   0x0007             MOVS     R7,R0
    650          	// todo: extract method - code duplication with other 'set_xxx_pin' methods?
    651          	if (pin == GPIO_INVALID) {
   \   00000020   0x2F51             CMP      R7,#+81
   \   00000022   0xD107             BNE.N    ??setTriggerInputPin_3
    652          		scheduleMsg(&logger, "invalid pin name [%s]", pinName);
   \   00000024   0x002A             MOVS     R2,R5
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable65_10
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable71
   \   0000002E   0x.... 0x....      BL       scheduleMsg
    653          		return;
   \   00000032   0xE013             B.N      ??setTriggerInputPin_2
    654          	}
    655          	scheduleMsg(&logger, "setting trigger pin[%d] to %s please save&restart", index, hwPortname(pin));
   \                     ??setTriggerInputPin_3:
   \   00000034   0x0038             MOVS     R0,R7
   \   00000036   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000003A   0x0003             MOVS     R3,R0
   \   0000003C   0x0032             MOVS     R2,R6
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable71_3
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable71
   \   00000046   0x.... 0x....      BL       scheduleMsg
    656          	boardConfiguration->triggerInputPins[index] = pin;
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable75
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000054   0xF8C0 0x7128      STR      R7,[R0, #+296]
    657          	applyNewConfiguration();
   \   00000058   0x.... 0x....      BL       applyNewConfiguration
    658          }
   \                     ??setTriggerInputPin_2:
   \   0000005C   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    659          

   \                                 In section .text, align 2, keep-with-next
    660          static void setTriggerSimulatorMode(const char *indexStr, const char *modeCode) {
   \                     _Z23setTriggerSimulatorModePKcS0_:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    661          	int index = atoi(indexStr);
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       atoi
   \   0000000C   0x0006             MOVS     R6,R0
    662          	if (index < 0 || index >= TRIGGER_SIMULATOR_PIN_COUNT || absI(index) == ERROR_CODE) {
   \   0000000E   0x2E00             CMP      R6,#+0
   \   00000010   0xD408             BMI.N    ??setTriggerSimulatorMode_0
   \   00000012   0x2E03             CMP      R6,#+3
   \   00000014   0xDA06             BGE.N    ??setTriggerSimulatorMode_0
   \   00000016   0x0030             MOVS     R0,R6
   \   00000018   0x.... 0x....      BL       absI
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable71_4  ;; 0x128ce430
   \   00000020   0x4288             CMP      R0,R1
   \   00000022   0xD100             BNE.N    ??setTriggerSimulatorMode_1
    663          		return;
   \                     ??setTriggerSimulatorMode_0:
   \   00000024   0xE011             B.N      ??setTriggerSimulatorMode_2
    664          	}
    665          	int mode = atoi(modeCode);
   \                     ??setTriggerSimulatorMode_1:
   \   00000026   0x0028             MOVS     R0,R5
   \   00000028   0x.... 0x....      BL       atoi
   \   0000002C   0x0007             MOVS     R7,R0
    666          	if (absI(mode) == ERROR_CODE) {
   \   0000002E   0x0038             MOVS     R0,R7
   \   00000030   0x.... 0x....      BL       absI
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable71_4  ;; 0x128ce430
   \   00000038   0x4288             CMP      R0,R1
   \   0000003A   0xD006             BEQ.N    ??setTriggerSimulatorMode_2
    667          		return;
    668          	}
    669          	boardConfiguration->triggerSimulatorPinModes[index] = (pin_output_mode_e) mode;
   \                     ??setTriggerSimulatorMode_3:
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable75
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000046   0xF8C0 0x716C      STR      R7,[R0, #+364]
    670          }
   \                     ??setTriggerSimulatorMode_2:
   \   0000004A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    671          

   \                                 In section .text, align 2, keep-with-next
    672          static void setEgtCSPin(const char *indexStr, const char *pinName, board_configuration_s * board_configuration_s) {
   \                     _Z11setEgtCSPinPKcS0_P21board_configuration_s:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    673          	int index = atoi(indexStr);
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x.... 0x....      BL       atoi
   \   00000010   0x0007             MOVS     R7,R0
    674          	if (index < 0 || index >= EGT_CHANNEL_COUNT || absI(index) == ERROR_CODE)
   \   00000012   0x2F00             CMP      R7,#+0
   \   00000014   0xD408             BMI.N    ??setEgtCSPin_0
   \   00000016   0x2F08             CMP      R7,#+8
   \   00000018   0xDA06             BGE.N    ??setEgtCSPin_0
   \   0000001A   0x0038             MOVS     R0,R7
   \   0000001C   0x.... 0x....      BL       absI
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable71_4  ;; 0x128ce430
   \   00000024   0x4288             CMP      R0,R1
   \   00000026   0xD100             BNE.N    ??setEgtCSPin_1
    675          		return;
   \                     ??setEgtCSPin_0:
   \   00000028   0xE022             B.N      ??setEgtCSPin_2
    676          	brain_pin_e pin = parseBrainPin(pinName);
   \                     ??setEgtCSPin_1:
   \   0000002A   0x0028             MOVS     R0,R5
   \   0000002C   0x.... 0x....      BL       _Z13parseBrainPinPKc
   \   00000030   0x4680             MOV      R8,R0
    677          	if (pin == GPIO_INVALID) {
   \   00000032   0xF1B8 0x0F51      CMP      R8,#+81
   \   00000036   0xD107             BNE.N    ??setEgtCSPin_3
    678          		scheduleMsg(&logger, "invalid pin name [%s]", pinName);
   \   00000038   0x002A             MOVS     R2,R5
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable65_10
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable71
   \   00000042   0x.... 0x....      BL       scheduleMsg
    679          		return;
   \   00000046   0xE013             B.N      ??setEgtCSPin_2
    680          	}
    681          	scheduleMsg(&logger, "setting EGT CS pin[%d] to %s please save&restart", index, hwPortname(pin));
   \                     ??setEgtCSPin_3:
   \   00000048   0x4640             MOV      R0,R8
   \   0000004A   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000004E   0x0003             MOVS     R3,R0
   \   00000050   0x003A             MOVS     R2,R7
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable74
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable71
   \   0000005A   0x.... 0x....      BL       scheduleMsg
    682          	boardConfiguration->max31855_cs[index] = pin;
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable75
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0xEB10 0x0087      ADDS     R0,R0,R7, LSL #+2
   \   00000068   0xF8C0 0x81A0      STR      R8,[R0, #+416]
    683          	applyNewConfiguration();
   \   0000006C   0x.... 0x....      BL       applyNewConfiguration
    684          }
   \                     ??setEgtCSPin_2:
   \   00000070   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    685          

   \                                 In section .text, align 2, keep-with-next
    686          static void setTriggerSimulatorPin(const char *indexStr, const char *pinName) {
   \                     _Z22setTriggerSimulatorPinPKcS0_:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    687          	int index = atoi(indexStr);
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       atoi
   \   0000000C   0x0006             MOVS     R6,R0
    688          	if (index < 0 || index >= TRIGGER_SIMULATOR_PIN_COUNT || absI(index) == ERROR_CODE)
   \   0000000E   0x2E00             CMP      R6,#+0
   \   00000010   0xD408             BMI.N    ??setTriggerSimulatorPin_0
   \   00000012   0x2E03             CMP      R6,#+3
   \   00000014   0xDA06             BGE.N    ??setTriggerSimulatorPin_0
   \   00000016   0x0030             MOVS     R0,R6
   \   00000018   0x.... 0x....      BL       absI
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable71_4  ;; 0x128ce430
   \   00000020   0x4288             CMP      R0,R1
   \   00000022   0xD100             BNE.N    ??setTriggerSimulatorPin_1
    689          		return;
   \                     ??setTriggerSimulatorPin_0:
   \   00000024   0xE021             B.N      ??setTriggerSimulatorPin_2
    690          	brain_pin_e pin = parseBrainPin(pinName);
   \                     ??setTriggerSimulatorPin_1:
   \   00000026   0x0028             MOVS     R0,R5
   \   00000028   0x.... 0x....      BL       _Z13parseBrainPinPKc
   \   0000002C   0x0007             MOVS     R7,R0
    691          	if (pin == GPIO_INVALID) {
   \   0000002E   0x2F51             CMP      R7,#+81
   \   00000030   0xD107             BNE.N    ??setTriggerSimulatorPin_3
    692          		scheduleMsg(&logger, "invalid pin name [%s]", pinName);
   \   00000032   0x002A             MOVS     R2,R5
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable65_10
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable71
   \   0000003C   0x.... 0x....      BL       scheduleMsg
    693          		return;
   \   00000040   0xE013             B.N      ??setTriggerSimulatorPin_2
    694          	}
    695          	scheduleMsg(&logger, "setting trigger simulator pin[%d] to %s please save&restart", index, hwPortname(pin));
   \                     ??setTriggerSimulatorPin_3:
   \   00000042   0x0038             MOVS     R0,R7
   \   00000044   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000048   0x0003             MOVS     R3,R0
   \   0000004A   0x0032             MOVS     R2,R6
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable74_1
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable71
   \   00000054   0x.... 0x....      BL       scheduleMsg
    696          	boardConfiguration->triggerSimulatorPins[index] = pin;
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable75
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000062   0xF8C0 0x7160      STR      R7,[R0, #+352]
    697          	applyNewConfiguration();
   \   00000066   0x.... 0x....      BL       applyNewConfiguration
    698          }
   \                     ??setTriggerSimulatorPin_2:
   \   0000006A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    699          
    700          #if HAL_USE_ADC || defined(__DOXYGEN__)

   \                                 In section .text, align 2, keep-with-next
    701          static void setAnalogInputPin(const char *sensorStr, const char *pinName) {
   \                     _Z17setAnalogInputPinPKcS0_:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    702          	brain_pin_e pin = parseBrainPin(pinName);
   \   00000006   0x0028             MOVS     R0,R5
   \   00000008   0x.... 0x....      BL       _Z13parseBrainPinPKc
   \   0000000C   0x0006             MOVS     R6,R0
    703          	if (pin == GPIO_INVALID) {
   \   0000000E   0x2E51             CMP      R6,#+81
   \   00000010   0xD107             BNE.N    ??setAnalogInputPin_0
    704          		scheduleMsg(&logger, "invalid pin name [%s]", pinName);
   \   00000012   0x002A             MOVS     R2,R5
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable65_10
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable71
   \   0000001C   0x.... 0x....      BL       scheduleMsg
    705          		return;
   \   00000020   0xE060             B.N      ??setAnalogInputPin_1
    706          	}
    707          	adc_channel_e channel = getAdcChannel(pin);
   \                     ??setAnalogInputPin_0:
   \   00000022   0x0030             MOVS     R0,R6
   \   00000024   0x.... 0x....      BL       _Z13getAdcChannel11brain_pin_e
   \   00000028   0x0007             MOVS     R7,R0
    708          	if (channel == EFI_ADC_ERROR) {
   \   0000002A   0xF240 0x30E7      MOVW     R0,#+999
   \   0000002E   0x4287             CMP      R7,R0
   \   00000030   0xD107             BNE.N    ??setAnalogInputPin_2
    709          		scheduleMsg(&logger, "Error with [%s]", pinName);
   \   00000032   0x002A             MOVS     R2,R5
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable74_2
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable71
   \   0000003C   0x.... 0x....      BL       scheduleMsg
    710          		return;
   \   00000040   0xE050             B.N      ??setAnalogInputPin_1
    711          	}
    712          	if (strEqual("map", sensorStr)) {
   \                     ??setAnalogInputPin_2:
   \   00000042   0x0021             MOVS     R1,R4
   \   00000044   0x....             ADR.N    R0,??DataTable64  ;; "map"
   \   00000046   0x.... 0x....      BL       strEqual
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD00D             BEQ.N    ??setAnalogInputPin_3
    713          		engineConfiguration->map.sensor.hwChannel = channel;
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0xF8C0 0x70FC      STR      R7,[R0, #+252]
    714          		scheduleMsg(&logger, "setting MAP to %s/%d", pinName, channel);
   \   00000058   0x003B             MOVS     R3,R7
   \   0000005A   0x002A             MOVS     R2,R5
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable75_2
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable71
   \   00000064   0x.... 0x....      BL       scheduleMsg
   \   00000068   0xE03A             B.N      ??setAnalogInputPin_4
    715          	} else if (strEqual("clt", sensorStr)) {
   \                     ??setAnalogInputPin_3:
   \   0000006A   0x0021             MOVS     R1,R4
   \   0000006C   0x....             ADR.N    R0,??DataTable64_1  ;; "clt"
   \   0000006E   0x.... 0x....      BL       strEqual
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD00D             BEQ.N    ??setAnalogInputPin_5
    716          		engineConfiguration->clt.adcChannel = channel;
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0xF8C0 0x711C      STR      R7,[R0, #+284]
    717          		scheduleMsg(&logger, "setting CLT to %s/%d", pinName, channel);
   \   00000080   0x003B             MOVS     R3,R7
   \   00000082   0x002A             MOVS     R2,R5
   \   00000084   0x.... 0x....      LDR.W    R1,??DataTable75_3
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable71
   \   0000008C   0x.... 0x....      BL       scheduleMsg
   \   00000090   0xE026             B.N      ??setAnalogInputPin_4
    718          	} else if (strEqual("iat", sensorStr)) {
   \                     ??setAnalogInputPin_5:
   \   00000092   0x0021             MOVS     R1,R4
   \   00000094   0x....             ADR.N    R0,??DataTable64_2  ;; "iat"
   \   00000096   0x.... 0x....      BL       strEqual
   \   0000009A   0x2800             CMP      R0,#+0
   \   0000009C   0xD00D             BEQ.N    ??setAnalogInputPin_6
    719          		engineConfiguration->iat.adcChannel = channel;
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0xF8C0 0x713C      STR      R7,[R0, #+316]
    720          		scheduleMsg(&logger, "setting IAT to %s/%d", pinName, channel);
   \   000000A8   0x003B             MOVS     R3,R7
   \   000000AA   0x002A             MOVS     R2,R5
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable75_4
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable71
   \   000000B4   0x.... 0x....      BL       scheduleMsg
   \   000000B8   0xE012             B.N      ??setAnalogInputPin_4
    721          	} else if (strEqual("tps", sensorStr)) {
   \                     ??setAnalogInputPin_6:
   \   000000BA   0x0021             MOVS     R1,R4
   \   000000BC   0x....             ADR.N    R0,??DataTable64_3  ;; "tps"
   \   000000BE   0x.... 0x....      BL       strEqual
   \   000000C2   0x2800             CMP      R0,#+0
   \   000000C4   0xD00C             BEQ.N    ??setAnalogInputPin_4
    722          		engineConfiguration->tpsAdcChannel = channel;
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0xF8C0 0x720C      STR      R7,[R0, #+524]
    723          		scheduleMsg(&logger, "setting TPS to %s/%d", pinName, channel);
   \   000000D0   0x003B             MOVS     R3,R7
   \   000000D2   0x002A             MOVS     R2,R5
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable75_5
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable71
   \   000000DC   0x.... 0x....      BL       scheduleMsg
    724          	}
    725          	applyNewConfiguration();
   \                     ??setAnalogInputPin_4:
   \   000000E0   0x.... 0x....      BL       applyNewConfiguration
    726          }
   \                     ??setAnalogInputPin_1:
   \   000000E4   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    727          #endif
    728          

   \                                 In section .text, align 2, keep-with-next
    729          static void setLogicInputPin(const char *indexStr, const char *pinName) {
   \                     _Z16setLogicInputPinPKcS0_:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    730          	int index = atoi(indexStr);
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       atoi
   \   0000000C   0x0006             MOVS     R6,R0
    731          	if (index < 0 || index > 2) {
   \   0000000E   0x2E00             CMP      R6,#+0
   \   00000010   0xD401             BMI.N    ??setLogicInputPin_0
   \   00000012   0x2E03             CMP      R6,#+3
   \   00000014   0xDB00             BLT.N    ??setLogicInputPin_1
    732          		return;
   \                     ??setLogicInputPin_0:
   \   00000016   0xE01E             B.N      ??setLogicInputPin_2
    733          	}
    734          	brain_pin_e pin = parseBrainPin(pinName);
   \                     ??setLogicInputPin_1:
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       _Z13parseBrainPinPKc
   \   0000001E   0x0007             MOVS     R7,R0
    735          	if (pin == GPIO_INVALID) {
   \   00000020   0x2F51             CMP      R7,#+81
   \   00000022   0xD106             BNE.N    ??setLogicInputPin_3
    736          		scheduleMsg(&logger, "invalid pin name [%s]", pinName);
   \   00000024   0x002A             MOVS     R2,R5
   \   00000026   0x....             LDR.N    R1,??DataTable65_10
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable71
   \   0000002C   0x.... 0x....      BL       scheduleMsg
    737          		return;
   \   00000030   0xE011             B.N      ??setLogicInputPin_2
    738          	}
    739          	scheduleMsg(&logger, "setting logic input pin[%d] to %s please save&restart", index, hwPortname(pin));
   \                     ??setLogicInputPin_3:
   \   00000032   0x0038             MOVS     R0,R7
   \   00000034   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000038   0x0003             MOVS     R3,R0
   \   0000003A   0x0032             MOVS     R2,R6
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable75_6
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable71
   \   00000044   0x.... 0x....      BL       scheduleMsg
    740          	boardConfiguration->logicAnalyzerPins[index] = pin;
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable75
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000052   0xF8C0 0x7184      STR      R7,[R0, #+388]
    741          }
   \                     ??setLogicInputPin_2:
   \   00000056   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    742          

   \                                 In section .text, align 2, keep-with-next
    743          static void showPinFunction(const char *pinName) {
   \                     _Z15showPinFunctionPKc:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    744          	brain_pin_e pin = parseBrainPin(pinName);
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _Z13parseBrainPinPKc
   \   0000000A   0x0005             MOVS     R5,R0
    745          	if (pin == GPIO_INVALID) {
   \   0000000C   0x2D51             CMP      R5,#+81
   \   0000000E   0xD106             BNE.N    ??showPinFunction_0
    746          		scheduleMsg(&logger, "invalid pin name [%s]", pinName);
   \   00000010   0x0022             MOVS     R2,R4
   \   00000012   0x....             LDR.N    R1,??DataTable65_10
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable71
   \   00000018   0x.... 0x....      BL       scheduleMsg
    747          		return;
   \   0000001C   0xE00A             B.N      ??showPinFunction_1
    748          	}
    749          	scheduleMsg(&logger, "Pin %s: [%s]", pinName, getPinFunction(pin));
   \                     ??showPinFunction_0:
   \   0000001E   0x0028             MOVS     R0,R5
   \   00000020   0x.... 0x....      BL       _Z14getPinFunction11brain_pin_e
   \   00000024   0x0003             MOVS     R3,R0
   \   00000026   0x0022             MOVS     R2,R4
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable75_7
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable71
   \   00000030   0x.... 0x....      BL       scheduleMsg
    750          }
   \                     ??showPinFunction_1:
   \   00000034   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    751          
    752          #endif /* EFI_PROD_CODE */
    753          

   \                                 In section .text, align 2, keep-with-next
    754          static void setTimingMap(const char * rpmStr, const char *loadStr, const char *valueStr) {
   \                     _Z12setTimingMapPKcS0_S0_:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xED2D 0x8B04      VPUSH    {D8-D9}
   \   00000008   0xB082             SUB      SP,SP,#+8
   \   0000000A   0x0004             MOVS     R4,R0
   \   0000000C   0x000D             MOVS     R5,R1
   \   0000000E   0x0016             MOVS     R6,R2
    755          	float rpm = atoff(rpmStr);
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0x.... 0x....      BL       atoff
   \   00000016   0xEEB0 0x8A40      VMOV.F32 S16,S0
    756          	float engineLoad = atoff(loadStr);
   \   0000001A   0x0028             MOVS     R0,R5
   \   0000001C   0x.... 0x....      BL       atoff
   \   00000020   0xEEF0 0x8A40      VMOV.F32 S17,S0
    757          	float value = atoff(valueStr);
   \   00000024   0x0030             MOVS     R0,R6
   \   00000026   0x.... 0x....      BL       atoff
   \   0000002A   0xEEB0 0x9A40      VMOV.F32 S18,S0
    758          
    759          	int rpmIndex = findIndex(config->ignitionRpmBins, IGN_RPM_COUNT, rpm);
   \   0000002E   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   00000032   0x2110             MOVS     R1,#+16
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable66
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF500 0x5048      ADD      R0,R0,#+12800
   \   0000003E   0x3078             ADDS     R0,R0,#+120
   \   00000040   0x.... 0x....      BL       _Z9findIndexPKfif
   \   00000044   0x0007             MOVS     R7,R0
    760          	rpmIndex = rpmIndex < 0 ? 0 : rpmIndex;
   \   00000046   0x2F00             CMP      R7,#+0
   \   00000048   0xD501             BPL.N    ??setTimingMap_0
   \   0000004A   0x2700             MOVS     R7,#+0
   \   0000004C   0xE7FF             B.N      ??setTimingMap_1
    761          	int loadIndex = findIndex(config->ignitionLoadBins, IGN_LOAD_COUNT, engineLoad);
   \                     ??setTimingMap_0:
   \                     ??setTimingMap_1:
   \   0000004E   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   00000052   0x2110             MOVS     R1,#+16
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable66
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0xF500 0x5048      ADD      R0,R0,#+12800
   \   0000005E   0x3038             ADDS     R0,R0,#+56
   \   00000060   0x.... 0x....      BL       _Z9findIndexPKfif
   \   00000064   0x4680             MOV      R8,R0
    762          	loadIndex = loadIndex < 0 ? 0 : loadIndex;
   \   00000066   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000006A   0xD502             BPL.N    ??setTimingMap_2
   \   0000006C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000070   0xE7FF             B.N      ??setTimingMap_3
    763          
    764          	config->ignitionTable[loadIndex][rpmIndex] = value;
   \                     ??setTimingMap_2:
   \                     ??setTimingMap_3:
   \   00000072   0x2040             MOVS     R0,#+64
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable66
   \   00000078   0x6809             LDR      R1,[R1, #+0]
   \   0000007A   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   0000007E   0xEB10 0x0087      ADDS     R0,R0,R7, LSL #+2
   \   00000082   0xF500 0x5038      ADD      R0,R0,#+11776
   \   00000086   0x3038             ADDS     R0,R0,#+56
   \   00000088   0xED80 0x9A00      VSTR     S18,[R0, #0]
    765          	scheduleMsg(&logger, "Setting timing map entry %d:%d to %f", rpmIndex, loadIndex, value);
   \   0000008C   0xEE19 0x0A10      VMOV     R0,S18
   \   00000090   0x.... 0x....      BL       __aeabi_f2d
   \   00000094   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000098   0x4643             MOV      R3,R8
   \   0000009A   0x003A             MOVS     R2,R7
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable75_8
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable76
   \   000000A4   0x.... 0x....      BL       scheduleMsg
    766          }
   \   000000A8   0xB002             ADD      SP,SP,#+8
   \   000000AA   0xECBD 0x8B04      VPOP     {D8-D9}
   \   000000AE   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    767          

   \                                 In section .text, align 2, keep-with-next
    768          static void setFuelMap(const char * rpmStr, const char *loadStr, const char *valueStr) {
   \                     _Z10setFuelMapPKcS0_S0_:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xED2D 0x8B04      VPUSH    {D8-D9}
   \   00000008   0xB082             SUB      SP,SP,#+8
   \   0000000A   0x0004             MOVS     R4,R0
   \   0000000C   0x000D             MOVS     R5,R1
   \   0000000E   0x0016             MOVS     R6,R2
    769          	float rpm = atoff(rpmStr);
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0x.... 0x....      BL       atoff
   \   00000016   0xEEB0 0x8A40      VMOV.F32 S16,S0
    770          	float engineLoad = atoff(loadStr);
   \   0000001A   0x0028             MOVS     R0,R5
   \   0000001C   0x.... 0x....      BL       atoff
   \   00000020   0xEEF0 0x8A40      VMOV.F32 S17,S0
    771          	float value = atoff(valueStr);
   \   00000024   0x0030             MOVS     R0,R6
   \   00000026   0x.... 0x....      BL       atoff
   \   0000002A   0xEEB0 0x9A40      VMOV.F32 S18,S0
    772          
    773          	int rpmIndex = findIndex(config->fuelRpmBins, FUEL_RPM_COUNT, rpm);
   \   0000002E   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   00000032   0x2110             MOVS     R1,#+16
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable66
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF500 0x5034      ADD      R0,R0,#+11520
   \   0000003E   0x30F8             ADDS     R0,R0,#+248
   \   00000040   0x.... 0x....      BL       _Z9findIndexPKfif
   \   00000044   0x0007             MOVS     R7,R0
    774          	rpmIndex = rpmIndex < 0 ? 0 : rpmIndex;
   \   00000046   0x2F00             CMP      R7,#+0
   \   00000048   0xD501             BPL.N    ??setFuelMap_0
   \   0000004A   0x2700             MOVS     R7,#+0
   \   0000004C   0xE7FF             B.N      ??setFuelMap_1
    775          	int loadIndex = findIndex(config->fuelLoadBins, FUEL_LOAD_COUNT, engineLoad);
   \                     ??setFuelMap_0:
   \                     ??setFuelMap_1:
   \   0000004E   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   00000052   0x2110             MOVS     R1,#+16
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable66
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0xF500 0x5034      ADD      R0,R0,#+11520
   \   0000005E   0x30B8             ADDS     R0,R0,#+184
   \   00000060   0x.... 0x....      BL       _Z9findIndexPKfif
   \   00000064   0x4680             MOV      R8,R0
    776          	loadIndex = loadIndex < 0 ? 0 : loadIndex;
   \   00000066   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000006A   0xD502             BPL.N    ??setFuelMap_2
   \   0000006C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000070   0xE7FF             B.N      ??setFuelMap_3
    777          
    778          	config->fuelTable[loadIndex][rpmIndex] = value;
   \                     ??setFuelMap_2:
   \                     ??setFuelMap_3:
   \   00000072   0x2040             MOVS     R0,#+64
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable66
   \   00000078   0x6809             LDR      R1,[R1, #+0]
   \   0000007A   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   0000007E   0xEB10 0x0087      ADDS     R0,R0,R7, LSL #+2
   \   00000082   0xF500 0x5024      ADD      R0,R0,#+10496
   \   00000086   0x30B8             ADDS     R0,R0,#+184
   \   00000088   0xED80 0x9A00      VSTR     S18,[R0, #0]
    779          	scheduleMsg(&logger, "Setting fuel map entry %d:%d to %f", rpmIndex, loadIndex, value);
   \   0000008C   0xEE19 0x0A10      VMOV     R0,S18
   \   00000090   0x.... 0x....      BL       __aeabi_f2d
   \   00000094   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000098   0x4643             MOV      R3,R8
   \   0000009A   0x003A             MOVS     R2,R7
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable75_9
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable76
   \   000000A4   0x.... 0x....      BL       scheduleMsg
    780          }
   \   000000A8   0xB002             ADD      SP,SP,#+8
   \   000000AA   0xECBD 0x8B04      VPOP     {D8-D9}
   \   000000AE   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    781          

   \                                 In section .text, align 2, keep-with-next
    782          static void setSpiMode(int index, bool mode) {
   \                     _Z10setSpiModeib:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    783          	switch (index) {
   \   00000006   0x2C01             CMP      R4,#+1
   \   00000008   0xD004             BEQ.N    ??setSpiMode_0
   \   0000000A   0xD32A             BCC.N    ??setSpiMode_1
   \   0000000C   0x2C03             CMP      R4,#+3
   \   0000000E   0xD01B             BEQ.N    ??setSpiMode_2
   \   00000010   0xD30D             BCC.N    ??setSpiMode_3
   \   00000012   0xE026             B.N      ??setSpiMode_1
    784          	case 1:
    785          		boardConfiguration->is_enabled_spi_1 = mode;
   \                     ??setSpiMode_0:
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   0000001E   0xF365 0x0000      BFI      R0,R5,#+0,#+1
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   00000026   0x6809             LDR      R1,[R1, #+0]
   \   00000028   0xF881 0x0180      STRB     R0,[R1, #+384]
    786          		break;
   \   0000002C   0xE021             B.N      ??setSpiMode_4
    787          	case 2:
    788          		boardConfiguration->is_enabled_spi_2 = mode;
   \                     ??setSpiMode_3:
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   00000038   0xF365 0x0041      BFI      R0,R5,#+1,#+1
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   00000040   0x6809             LDR      R1,[R1, #+0]
   \   00000042   0xF881 0x0180      STRB     R0,[R1, #+384]
    789          		break;
   \   00000046   0xE014             B.N      ??setSpiMode_4
    790          	case 3:
    791          		boardConfiguration->is_enabled_spi_3 = mode;
   \                     ??setSpiMode_2:
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   00000052   0xF365 0x0082      BFI      R0,R5,#+2,#+1
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   0000005A   0x6809             LDR      R1,[R1, #+0]
   \   0000005C   0xF881 0x0180      STRB     R0,[R1, #+384]
    792          		break;
   \   00000060   0xE007             B.N      ??setSpiMode_4
    793          	default:
    794          		scheduleMsg(&logger, "invalid spi index %d", index);
   \                     ??setSpiMode_1:
   \   00000062   0x0022             MOVS     R2,R4
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable75_10
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable76
   \   0000006C   0x.... 0x....      BL       scheduleMsg
    795          		return;
   \   00000070   0xE006             B.N      ??setSpiMode_5
    796          	}
    797          	printSpiState(&logger, boardConfiguration);
   \                     ??setSpiMode_4:
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   00000076   0x6801             LDR      R1,[R0, #+0]
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable76
   \   0000007C   0x.... 0x....      BL       _Z13printSpiStateP7LoggingP21board_configuration_s
    798          }
   \                     ??setSpiMode_5:
   \   00000080   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    799          

   \                                 In section .text, align 2, keep-with-next
    800          static void enableOrDisable(const char *param, bool isEnabled) {
   \                     _Z15enableOrDisablePKcb:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    801          	if (strEqualCaseInsensitive(param, "fastadc")) {
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable75_11
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD00C             BEQ.N    ??enableOrDisable_0
    802          		boardConfiguration->isFastAdcEnabled = isEnabled;
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   0000001E   0xF365 0x1004      BFI      R0,R5,#+4,#+1
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   00000026   0x6809             LDR      R1,[R1, #+0]
   \   00000028   0xF881 0x0180      STRB     R0,[R1, #+384]
   \   0000002C   0xE239             B.N      ??enableOrDisable_1
    803          	} else if (strEqualCaseInsensitive(param, "step1limimter")) {
   \                     ??enableOrDisable_0:
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable75_12
   \   00000032   0x0020             MOVS     R0,R4
   \   00000034   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD00C             BEQ.N    ??enableOrDisable_2
    804          		boardConfiguration->enabledStep1Limiter = isEnabled;
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xF890 0x0181      LDRB     R0,[R0, #+385]
   \   00000046   0xF365 0x0082      BFI      R0,R5,#+2,#+1
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   0000004E   0x6809             LDR      R1,[R1, #+0]
   \   00000050   0xF881 0x0181      STRB     R0,[R1, #+385]
   \   00000054   0xE225             B.N      ??enableOrDisable_1
    805          	} else if (strEqualCaseInsensitive(param, "serial")) {
   \                     ??enableOrDisable_2:
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable75_13
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000060   0x2800             CMP      R0,#+0
   \   00000062   0xD00C             BEQ.N    ??enableOrDisable_3
    806          		boardConfiguration->useSerialPort = isEnabled;
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0xF890 0x0181      LDRB     R0,[R0, #+385]
   \   0000006E   0xF365 0x0000      BFI      R0,R5,#+0,#+1
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   00000076   0x6809             LDR      R1,[R1, #+0]
   \   00000078   0xF881 0x0181      STRB     R0,[R1, #+385]
   \   0000007C   0xE211             B.N      ??enableOrDisable_1
    807          	} else if (strEqualCaseInsensitive(param, "stepperidle")) {
   \                     ??enableOrDisable_3:
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable75_14
   \   00000082   0x0020             MOVS     R0,R4
   \   00000084   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000088   0x2800             CMP      R0,#+0
   \   0000008A   0xD00C             BEQ.N    ??enableOrDisable_4
    808          		boardConfiguration->useStepperIdle = isEnabled;
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0xF890 0x0181      LDRB     R0,[R0, #+385]
   \   00000096   0xF365 0x0041      BFI      R0,R5,#+1,#+1
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   0000009E   0x6809             LDR      R1,[R1, #+0]
   \   000000A0   0xF881 0x0181      STRB     R0,[R1, #+385]
   \   000000A4   0xE1FD             B.N      ??enableOrDisable_1
    809          	} else if (strEqualCaseInsensitive(param, "trigger_only_front")) {
   \                     ??enableOrDisable_4:
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable75_15
   \   000000AA   0x0020             MOVS     R0,R4
   \   000000AC   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000000B0   0x2800             CMP      R0,#+0
   \   000000B2   0xD00E             BEQ.N    ??enableOrDisable_5
    810          		engineConfiguration->useOnlyFrontForTrigger = isEnabled;
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0xF890 0x05E5      LDRB     R0,[R0, #+1509]
   \   000000BE   0xF365 0x1086      BFI      R0,R5,#+6,#+1
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   000000C6   0x6809             LDR      R1,[R1, #+0]
   \   000000C8   0xF881 0x05E5      STRB     R0,[R1, #+1509]
    811          		incrementGlobalConfigurationVersion();
   \   000000CC   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
   \   000000D0   0xE1E7             B.N      ??enableOrDisable_1
    812          	} else if (strEqualCaseInsensitive(param, "two_wire_batch")) {
   \                     ??enableOrDisable_5:
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable75_16
   \   000000D6   0x0020             MOVS     R0,R4
   \   000000D8   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000000DC   0x2800             CMP      R0,#+0
   \   000000DE   0xD00E             BEQ.N    ??enableOrDisable_6
    813          		engineConfiguration->twoWireBatch = isEnabled;
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0xF890 0x05E5      LDRB     R0,[R0, #+1509]
   \   000000EA   0xF365 0x1045      BFI      R0,R5,#+5,#+1
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   000000F2   0x6809             LDR      R1,[R1, #+0]
   \   000000F4   0xF881 0x05E5      STRB     R0,[R1, #+1509]
    814          		incrementGlobalConfigurationVersion();
   \   000000F8   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
   \   000000FC   0xE1D1             B.N      ??enableOrDisable_1
    815          	} else if (strEqualCaseInsensitive(param, "joystick")) {
   \                     ??enableOrDisable_6:
   \   000000FE   0x.... 0x....      LDR.W    R1,??DataTable75_17
   \   00000102   0x0020             MOVS     R0,R4
   \   00000104   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000108   0x2800             CMP      R0,#+0
   \   0000010A   0xD00C             BEQ.N    ??enableOrDisable_7
    816          		engineConfiguration->isJoystickEnabled = isEnabled;
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0xF890 0x05D9      LDRB     R0,[R0, #+1497]
   \   00000116   0xF365 0x00C3      BFI      R0,R5,#+3,#+1
   \   0000011A   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   0000011E   0x6809             LDR      R1,[R1, #+0]
   \   00000120   0xF881 0x05D9      STRB     R0,[R1, #+1497]
   \   00000124   0xE1BD             B.N      ??enableOrDisable_1
    817          	} else if (strEqualCaseInsensitive(param, "HIP9011")) {
   \                     ??enableOrDisable_7:
   \   00000126   0x.... 0x....      LDR.W    R1,??DataTable75_18
   \   0000012A   0x0020             MOVS     R0,R4
   \   0000012C   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000130   0x2800             CMP      R0,#+0
   \   00000132   0xD00C             BEQ.N    ??enableOrDisable_8
    818          		boardConfiguration->isHip9011Enabled = isEnabled;
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   00000138   0x6800             LDR      R0,[R0, #+0]
   \   0000013A   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   0000013E   0xF365 0x1086      BFI      R0,R5,#+6,#+1
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   00000146   0x6809             LDR      R1,[R1, #+0]
   \   00000148   0xF881 0x0180      STRB     R0,[R1, #+384]
   \   0000014C   0xE1A9             B.N      ??enableOrDisable_1
    819          	} else if (strEqualCaseInsensitive(param, "altdebug")) {
   \                     ??enableOrDisable_8:
   \   0000014E   0x.... 0x....      LDR.W    R1,??DataTable75_19
   \   00000152   0x0020             MOVS     R0,R4
   \   00000154   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000158   0x2800             CMP      R0,#+0
   \   0000015A   0xD00E             BEQ.N    ??enableOrDisable_9
    820          		boardConfiguration->isVerboseAlternator = isEnabled;
   \   0000015C   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   00000160   0x6800             LDR      R0,[R0, #+0]
   \   00000162   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   00000166   0xF010 0x007F      ANDS     R0,R0,#0x7F
   \   0000016A   0xEA50 0x10C5      ORRS     R0,R0,R5, LSL #+7
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   00000172   0x6809             LDR      R1,[R1, #+0]
   \   00000174   0xF881 0x0180      STRB     R0,[R1, #+384]
   \   00000178   0xE193             B.N      ??enableOrDisable_1
    821          	} else if (strEqualCaseInsensitive(param, "tpic_advanced_mode")) {
   \                     ??enableOrDisable_9:
   \   0000017A   0x.... 0x....      LDR.W    R1,??DataTable75_20
   \   0000017E   0x0020             MOVS     R0,R4
   \   00000180   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000184   0x2800             CMP      R0,#+0
   \   00000186   0xD00C             BEQ.N    ??enableOrDisable_10
    822          		boardConfiguration->useTpicAdvancedMode = isEnabled;
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   0000018C   0x6800             LDR      R0,[R0, #+0]
   \   0000018E   0xF890 0x0181      LDRB     R0,[R0, #+385]
   \   00000192   0xF365 0x00C3      BFI      R0,R5,#+3,#+1
   \   00000196   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   0000019A   0x6809             LDR      R1,[R1, #+0]
   \   0000019C   0xF881 0x0181      STRB     R0,[R1, #+385]
   \   000001A0   0xE17F             B.N      ??enableOrDisable_1
    823          	} else if (strEqualCaseInsensitive(param, "knockdebug")) {
   \                     ??enableOrDisable_10:
   \   000001A2   0x.... 0x....      LDR.W    R1,??DataTable75_21
   \   000001A6   0x0020             MOVS     R0,R4
   \   000001A8   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000001AC   0x2800             CMP      R0,#+0
   \   000001AE   0xD005             BEQ.N    ??enableOrDisable_11
    824          		engine->knockDebug = isEnabled;
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable75_22
   \   000001B4   0x6800             LDR      R0,[R0, #+0]
   \   000001B6   0xF880 0x5270      STRB     R5,[R0, #+624]
   \   000001BA   0xE172             B.N      ??enableOrDisable_1
    825          	} else if (strEqualCaseInsensitive(param, "altcontrol")) {
   \                     ??enableOrDisable_11:
   \   000001BC   0x.... 0x....      LDR.W    R1,??DataTable75_23
   \   000001C0   0x0020             MOVS     R0,R4
   \   000001C2   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000001C6   0x2800             CMP      R0,#+0
   \   000001C8   0xD00C             BEQ.N    ??enableOrDisable_12
    826          		engineConfiguration->isAlternatorControlEnabled = isEnabled;
   \   000001CA   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   000001CE   0x6800             LDR      R0,[R0, #+0]
   \   000001D0   0xF890 0x05D9      LDRB     R0,[R0, #+1497]
   \   000001D4   0xF365 0x1045      BFI      R0,R5,#+5,#+1
   \   000001D8   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   000001DC   0x6809             LDR      R1,[R1, #+0]
   \   000001DE   0xF881 0x05D9      STRB     R0,[R1, #+1497]
   \   000001E2   0xE15E             B.N      ??enableOrDisable_1
    827          	} else if (strEqualCaseInsensitive(param, "sd")) {
   \                     ??enableOrDisable_12:
   \   000001E4   0x....             ADR.N    R1,??DataTable66_1  ;; 0x73, 0x64, 0x00, 0x00
   \   000001E6   0x0020             MOVS     R0,R4
   \   000001E8   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000001EC   0x2800             CMP      R0,#+0
   \   000001EE   0xD00C             BEQ.N    ??enableOrDisable_13
    828          		boardConfiguration->isSdCardEnabled = isEnabled;
   \   000001F0   0x.... 0x....      LDR.W    R0,??DataTable71_1
   \   000001F4   0x6800             LDR      R0,[R0, #+0]
   \   000001F6   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   000001FA   0xF365 0x00C3      BFI      R0,R5,#+3,#+1
   \   000001FE   0x.... 0x....      LDR.W    R1,??DataTable71_1
   \   00000202   0x6809             LDR      R1,[R1, #+0]
   \   00000204   0xF881 0x0180      STRB     R0,[R1, #+384]
   \   00000208   0xE14B             B.N      ??enableOrDisable_1
    829          	} else if (strEqualCaseInsensitive(param, "can")) {
   \                     ??enableOrDisable_13:
   \   0000020A   0x....             ADR.N    R1,??DataTable67  ;; "can"
   \   0000020C   0x0020             MOVS     R0,R4
   \   0000020E   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000212   0x2800             CMP      R0,#+0
   \   00000214   0xD00C             BEQ.N    ??enableOrDisable_14
    830          		engineConfiguration->isCanEnabled = isEnabled;
   \   00000216   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   0000021A   0x6800             LDR      R0,[R0, #+0]
   \   0000021C   0xF890 0x05D8      LDRB     R0,[R0, #+1496]
   \   00000220   0xF365 0x1086      BFI      R0,R5,#+6,#+1
   \   00000224   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   00000228   0x6809             LDR      R1,[R1, #+0]
   \   0000022A   0xF881 0x05D8      STRB     R0,[R1, #+1496]
   \   0000022E   0xE138             B.N      ??enableOrDisable_1
    831          	} else if (strEqualCaseInsensitive(param, "test_mode")) {
   \                     ??enableOrDisable_14:
   \   00000230   0x.... 0x....      LDR.W    R1,??DataTable75_24
   \   00000234   0x0020             MOVS     R0,R4
   \   00000236   0x.... 0x....      BL       strEqualCaseInsensitive
   \   0000023A   0x2800             CMP      R0,#+0
   \   0000023C   0xD005             BEQ.N    ??enableOrDisable_15
    832          		engine->isTestMode = isEnabled;
   \   0000023E   0x.... 0x....      LDR.W    R0,??DataTable75_22
   \   00000242   0x6800             LDR      R0,[R0, #+0]
   \   00000244   0xF880 0x5280      STRB     R5,[R0, #+640]
   \   00000248   0xE12B             B.N      ??enableOrDisable_1
    833          	} else if (strEqualCaseInsensitive(param, "can_read")) {
   \                     ??enableOrDisable_15:
   \   0000024A   0x.... 0x....      LDR.W    R1,??DataTable75_25
   \   0000024E   0x0020             MOVS     R0,R4
   \   00000250   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000254   0x2800             CMP      R0,#+0
   \   00000256   0xD00C             BEQ.N    ??enableOrDisable_16
    834          		engineConfiguration->canReadEnabled = isEnabled;
   \   00000258   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   0000025C   0x6800             LDR      R0,[R0, #+0]
   \   0000025E   0xF890 0x05D9      LDRB     R0,[R0, #+1497]
   \   00000262   0xF365 0x0000      BFI      R0,R5,#+0,#+1
   \   00000266   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   0000026A   0x6809             LDR      R1,[R1, #+0]
   \   0000026C   0xF881 0x05D9      STRB     R0,[R1, #+1497]
   \   00000270   0xE117             B.N      ??enableOrDisable_1
    835          	} else if (strEqualCaseInsensitive(param, "can_write")) {
   \                     ??enableOrDisable_16:
   \   00000272   0x.... 0x....      LDR.W    R1,??DataTable75_26
   \   00000276   0x0020             MOVS     R0,R4
   \   00000278   0x.... 0x....      BL       strEqualCaseInsensitive
   \   0000027C   0x2800             CMP      R0,#+0
   \   0000027E   0xD00C             BEQ.N    ??enableOrDisable_17
    836          		engineConfiguration->canWriteEnabled = isEnabled;
   \   00000280   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   00000284   0x6800             LDR      R0,[R0, #+0]
   \   00000286   0xF890 0x05D9      LDRB     R0,[R0, #+1497]
   \   0000028A   0xF365 0x0041      BFI      R0,R5,#+1,#+1
   \   0000028E   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   00000292   0x6809             LDR      R1,[R1, #+0]
   \   00000294   0xF881 0x05D9      STRB     R0,[R1, #+1497]
   \   00000298   0xE103             B.N      ??enableOrDisable_1
    837          	} else if (strEqualCaseInsensitive(param, "injection")) {
   \                     ??enableOrDisable_17:
   \   0000029A   0x.... 0x....      LDR.W    R1,??DataTable75_27
   \   0000029E   0x0020             MOVS     R0,R4
   \   000002A0   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000002A4   0x2800             CMP      R0,#+0
   \   000002A6   0xD00C             BEQ.N    ??enableOrDisable_18
    838          		engineConfiguration->isInjectionEnabled = isEnabled;
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   000002AC   0x6800             LDR      R0,[R0, #+0]
   \   000002AE   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   000002B2   0xF365 0x0000      BFI      R0,R5,#+0,#+1
   \   000002B6   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   000002BA   0x6809             LDR      R1,[R1, #+0]
   \   000002BC   0xF881 0x05E4      STRB     R0,[R1, #+1508]
   \   000002C0   0xE0EF             B.N      ??enableOrDisable_1
    839          	} else if (strEqualCaseInsensitive(param, "trigger_details")) {
   \                     ??enableOrDisable_18:
   \   000002C2   0x.... 0x....      LDR.W    R1,??DataTable75_28
   \   000002C6   0x0020             MOVS     R0,R4
   \   000002C8   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000002CC   0x2800             CMP      R0,#+0
   \   000002CE   0xD00C             BEQ.N    ??enableOrDisable_19
    840          		engineConfiguration->isPrintTriggerSynchDetails = isEnabled;
   \   000002D0   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   000002D4   0x6800             LDR      R0,[R0, #+0]
   \   000002D6   0xF890 0x05E5      LDRB     R0,[R0, #+1509]
   \   000002DA   0xF365 0x00C3      BFI      R0,R5,#+3,#+1
   \   000002DE   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   000002E2   0x6809             LDR      R1,[R1, #+0]
   \   000002E4   0xF881 0x05E5      STRB     R0,[R1, #+1509]
   \   000002E8   0xE0DB             B.N      ??enableOrDisable_1
    841          	} else if (strEqualCaseInsensitive(param, "ignition")) {
   \                     ??enableOrDisable_19:
   \   000002EA   0x.... 0x....      LDR.W    R1,??DataTable75_29
   \   000002EE   0x0020             MOVS     R0,R4
   \   000002F0   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000002F4   0x2800             CMP      R0,#+0
   \   000002F6   0xD00C             BEQ.N    ??enableOrDisable_20
    842          		engineConfiguration->isIgnitionEnabled = isEnabled;
   \   000002F8   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   000002FC   0x6800             LDR      R0,[R0, #+0]
   \   000002FE   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   00000302   0xF365 0x0041      BFI      R0,R5,#+1,#+1
   \   00000306   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   0000030A   0x6809             LDR      R1,[R1, #+0]
   \   0000030C   0xF881 0x05E4      STRB     R0,[R1, #+1508]
   \   00000310   0xE0C7             B.N      ??enableOrDisable_1
    843          	} else if (strEqualCaseInsensitive(param, "self_stimulation")) {
   \                     ??enableOrDisable_20:
   \   00000312   0x.... 0x....      LDR.W    R1,??DataTable75_30
   \   00000316   0x0020             MOVS     R0,R4
   \   00000318   0x.... 0x....      BL       strEqualCaseInsensitive
   \   0000031C   0x2800             CMP      R0,#+0
   \   0000031E   0xD00C             BEQ.N    ??enableOrDisable_21
    844          		engineConfiguration->directSelfStimulation = isEnabled;
   \   00000320   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   00000324   0x6800             LDR      R0,[R0, #+0]
   \   00000326   0xF890 0x0050      LDRB     R0,[R0, #+80]
   \   0000032A   0xF365 0x0000      BFI      R0,R5,#+0,#+1
   \   0000032E   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   00000332   0x6809             LDR      R1,[R1, #+0]
   \   00000334   0xF881 0x0050      STRB     R0,[R1, #+80]
   \   00000338   0xE0B3             B.N      ??enableOrDisable_1
    845          	} else if (strEqualCaseInsensitive(param, "engine_control")) {
   \                     ??enableOrDisable_21:
   \   0000033A   0x.... 0x....      LDR.W    R1,??DataTable75_31
   \   0000033E   0x0020             MOVS     R0,R4
   \   00000340   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000344   0x2800             CMP      R0,#+0
   \   00000346   0xD00A             BEQ.N    ??enableOrDisable_22
    846          		boardConfiguration->isEngineControlEnabled = isEnabled;
   \   00000348   0x....             LDR.N    R0,??DataTable71_1
   \   0000034A   0x6800             LDR      R0,[R0, #+0]
   \   0000034C   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   00000350   0xF365 0x1045      BFI      R0,R5,#+5,#+1
   \   00000354   0x....             LDR.N    R1,??DataTable71_1
   \   00000356   0x6809             LDR      R1,[R1, #+0]
   \   00000358   0xF881 0x0180      STRB     R0,[R1, #+384]
   \   0000035C   0xE0A1             B.N      ??enableOrDisable_1
    847          	} else if (strEqualCaseInsensitive(param, "map_avg")) {
   \                     ??enableOrDisable_22:
   \   0000035E   0x.... 0x....      LDR.W    R1,??DataTable75_32
   \   00000362   0x0020             MOVS     R0,R4
   \   00000364   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000368   0x2800             CMP      R0,#+0
   \   0000036A   0xD00C             BEQ.N    ??enableOrDisable_23
    848          		engineConfiguration->isMapAveragingEnabled = isEnabled;
   \   0000036C   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   00000370   0x6800             LDR      R0,[R0, #+0]
   \   00000372   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   00000376   0xF365 0x1045      BFI      R0,R5,#+5,#+1
   \   0000037A   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   0000037E   0x6809             LDR      R1,[R1, #+0]
   \   00000380   0xF881 0x05E4      STRB     R0,[R1, #+1508]
   \   00000384   0xE08D             B.N      ??enableOrDisable_1
    849          	} else if (strEqualCaseInsensitive(param, "mil")) {
   \                     ??enableOrDisable_23:
   \   00000386   0x....             ADR.N    R1,??DataTable71_2  ;; "mil"
   \   00000388   0x0020             MOVS     R0,R4
   \   0000038A   0x.... 0x....      BL       strEqualCaseInsensitive
   \   0000038E   0x2800             CMP      R0,#+0
   \   00000390   0xD00C             BEQ.N    ??enableOrDisable_24
    850          		engineConfiguration->isMilEnabled = isEnabled;
   \   00000392   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   00000396   0x6800             LDR      R0,[R0, #+0]
   \   00000398   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   0000039C   0xF365 0x1086      BFI      R0,R5,#+6,#+1
   \   000003A0   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   000003A4   0x6809             LDR      R1,[R1, #+0]
   \   000003A6   0xF881 0x05E4      STRB     R0,[R1, #+1508]
   \   000003AA   0xE07A             B.N      ??enableOrDisable_1
    851          	} else if (strEqualCaseInsensitive(param, "fuel_pump")) {
   \                     ??enableOrDisable_24:
   \   000003AC   0x.... 0x....      LDR.W    R1,??DataTable76_3
   \   000003B0   0x0020             MOVS     R0,R4
   \   000003B2   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000003B6   0x2800             CMP      R0,#+0
   \   000003B8   0xD00E             BEQ.N    ??enableOrDisable_25
    852          		engineConfiguration->isFuelPumpEnabled = isEnabled;
   \   000003BA   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   000003BE   0x6800             LDR      R0,[R0, #+0]
   \   000003C0   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   000003C4   0xF010 0x007F      ANDS     R0,R0,#0x7F
   \   000003C8   0xEA50 0x10C5      ORRS     R0,R0,R5, LSL #+7
   \   000003CC   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   000003D0   0x6809             LDR      R1,[R1, #+0]
   \   000003D2   0xF881 0x05E4      STRB     R0,[R1, #+1508]
   \   000003D6   0xE064             B.N      ??enableOrDisable_1
    853          	} else if (strEqualCaseInsensitive(param, "tunerstudio")) {
   \                     ??enableOrDisable_25:
   \   000003D8   0x.... 0x....      LDR.W    R1,??DataTable76_4
   \   000003DC   0x0020             MOVS     R0,R4
   \   000003DE   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000003E2   0x2800             CMP      R0,#+0
   \   000003E4   0xD00C             BEQ.N    ??enableOrDisable_26
    854          		engineConfiguration->isTunerStudioEnabled = isEnabled;
   \   000003E6   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   000003EA   0x6800             LDR      R0,[R0, #+0]
   \   000003EC   0xF890 0x05E5      LDRB     R0,[R0, #+1509]
   \   000003F0   0xF365 0x0000      BFI      R0,R5,#+0,#+1
   \   000003F4   0x.... 0x....      LDR.W    R1,??DataTable75_1
   \   000003F8   0x6809             LDR      R1,[R1, #+0]
   \   000003FA   0xF881 0x05E5      STRB     R0,[R1, #+1509]
   \   000003FE   0xE050             B.N      ??enableOrDisable_1
    855          	} else if (strEqualCaseInsensitive(param, "wave_analyzer")) {
   \                     ??enableOrDisable_26:
   \   00000400   0x.... 0x....      LDR.W    R1,??DataTable76_5
   \   00000404   0x0020             MOVS     R0,R4
   \   00000406   0x.... 0x....      BL       strEqualCaseInsensitive
   \   0000040A   0x2800             CMP      R0,#+0
   \   0000040C   0xD00B             BEQ.N    ??enableOrDisable_27
    856          		engineConfiguration->isWaveAnalyzerEnabled = isEnabled;
   \   0000040E   0x.... 0x....      LDR.W    R0,??DataTable75_1
   \   00000412   0x6800             LDR      R0,[R0, #+0]
   \   00000414   0xF890 0x05E5      LDRB     R0,[R0, #+1509]
   \   00000418   0xF365 0x0041      BFI      R0,R5,#+1,#+1
   \   0000041C   0x....             LDR.N    R1,??DataTable75_1
   \   0000041E   0x6809             LDR      R1,[R1, #+0]
   \   00000420   0xF881 0x05E5      STRB     R0,[R1, #+1509]
   \   00000424   0xE03D             B.N      ??enableOrDisable_1
    857          	} else if (strEqualCaseInsensitive(param, "idle_thread")) {
   \                     ??enableOrDisable_27:
   \   00000426   0x.... 0x....      LDR.W    R1,??DataTable76_6
   \   0000042A   0x0020             MOVS     R0,R4
   \   0000042C   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000430   0x2800             CMP      R0,#+0
   \   00000432   0xD00A             BEQ.N    ??enableOrDisable_28
    858          		engineConfiguration->isIdleThreadEnabled = isEnabled;
   \   00000434   0x....             LDR.N    R0,??DataTable75_1
   \   00000436   0x6800             LDR      R0,[R0, #+0]
   \   00000438   0xF890 0x05E5      LDRB     R0,[R0, #+1509]
   \   0000043C   0xF365 0x0082      BFI      R0,R5,#+2,#+1
   \   00000440   0x....             LDR.N    R1,??DataTable75_1
   \   00000442   0x6809             LDR      R1,[R1, #+0]
   \   00000444   0xF881 0x05E5      STRB     R0,[R1, #+1509]
   \   00000448   0xE02B             B.N      ??enableOrDisable_1
    859          	} else if (strEqualCaseInsensitive(param, "manual_spinning")) {
   \                     ??enableOrDisable_28:
   \   0000044A   0x.... 0x....      LDR.W    R1,??DataTable76_7
   \   0000044E   0x0020             MOVS     R0,R4
   \   00000450   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000454   0x2800             CMP      R0,#+0
   \   00000456   0xD00A             BEQ.N    ??enableOrDisable_29
    860          		engineConfiguration->isManualSpinningMode = isEnabled;
   \   00000458   0x....             LDR.N    R0,??DataTable75_1
   \   0000045A   0x6800             LDR      R0,[R0, #+0]
   \   0000045C   0xF890 0x05E5      LDRB     R0,[R0, #+1509]
   \   00000460   0xF365 0x1004      BFI      R0,R5,#+4,#+1
   \   00000464   0x....             LDR.N    R1,??DataTable75_1
   \   00000466   0x6809             LDR      R1,[R1, #+0]
   \   00000468   0xF881 0x05E5      STRB     R0,[R1, #+1509]
   \   0000046C   0xE019             B.N      ??enableOrDisable_1
    861          	} else if (strEqualCaseInsensitive(param, "cylinder_cleanup")) {
   \                     ??enableOrDisable_29:
   \   0000046E   0x.... 0x....      LDR.W    R1,??DataTable76_8
   \   00000472   0x0020             MOVS     R0,R4
   \   00000474   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000478   0x2800             CMP      R0,#+0
   \   0000047A   0xD00A             BEQ.N    ??enableOrDisable_30
    862          		engineConfiguration->isCylinderCleanupEnabled = isEnabled;
   \   0000047C   0x....             LDR.N    R0,??DataTable75_1
   \   0000047E   0x6800             LDR      R0,[R0, #+0]
   \   00000480   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   00000484   0xF365 0x0082      BFI      R0,R5,#+2,#+1
   \   00000488   0x....             LDR.N    R1,??DataTable75_1
   \   0000048A   0x6809             LDR      R1,[R1, #+0]
   \   0000048C   0xF881 0x05E4      STRB     R0,[R1, #+1508]
   \   00000490   0xE007             B.N      ??enableOrDisable_1
    863          	} else {
    864          		scheduleMsg(&logger, "unexpected [%s]", param);
   \                     ??enableOrDisable_30:
   \   00000492   0x0022             MOVS     R2,R4
   \   00000494   0x.... 0x....      LDR.W    R1,??DataTable76_9
   \   00000498   0x.... 0x....      LDR.W    R0,??DataTable76
   \   0000049C   0x.... 0x....      BL       scheduleMsg
    865          		return; // well, MISRA would not like this 'return' here :(
   \   000004A0   0xE00E             B.N      ??enableOrDisable_31
    866          	}
    867          	scheduleMsg(&logger, "[%s] %s", param, isEnabled ? "enabled" : "disabled");
   \                     ??enableOrDisable_1:
   \   000004A2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000004A4   0x2D00             CMP      R5,#+0
   \   000004A6   0xD002             BEQ.N    ??enableOrDisable_32
   \   000004A8   0x.... 0x....      LDR.W    R3,??DataTable76_10
   \   000004AC   0xE001             B.N      ??enableOrDisable_33
   \                     ??enableOrDisable_32:
   \   000004AE   0x.... 0x....      LDR.W    R3,??DataTable76_11
   \                     ??enableOrDisable_33:
   \   000004B2   0x0022             MOVS     R2,R4
   \   000004B4   0x.... 0x....      LDR.W    R1,??DataTable76_12
   \   000004B8   0x.... 0x....      LDR.W    R0,??DataTable76
   \   000004BC   0x.... 0x....      BL       scheduleMsg
    868          }
   \                     ??enableOrDisable_31:
   \   000004C0   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    869          

   \                                 In section .text, align 2, keep-with-next
    870          static void enable(const char *param) {
   \                     _Z6enablePKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    871          	enableOrDisable(param, true);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       _Z15enableOrDisablePKcb
    872          }
   \   0000000C   0xBD10             POP      {R4,PC}          ;; return
    873          

   \                                 In section .text, align 2, keep-with-next
    874          static void disable(const char *param) {
   \                     _Z7disablePKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    875          	enableOrDisable(param, false);
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       _Z15enableOrDisablePKcb
    876          }
   \   0000000C   0xBD10             POP      {R4,PC}          ;; return
    877          

   \                                 In section .text, align 2, keep-with-next
    878          static void enableSpi(int index) {
   \                     _Z9enableSpii:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    879          	setSpiMode(index, true);
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       _Z10setSpiModeib
    880          }
   \   0000000C   0xBD10             POP      {R4,PC}          ;; return
    881          

   \                                 In section .text, align 2, keep-with-next
    882          static void disableSpi(int index) {
   \                     _Z10disableSpii:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    883          	setSpiMode(index, false);
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       _Z10setSpiModeib
    884          }
   \   0000000C   0xBD10             POP      {R4,PC}          ;; return
    885          

   \                                 In section .text, align 2, keep-with-next
    886          static void enableInjection(void) {
   \                     _Z15enableInjectionv:
   \   00000000   0xB580             PUSH     {R7,LR}
    887          	engineConfiguration->isInjectionEnabled = true;
   \   00000002   0x....             LDR.N    R0,??DataTable75_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   0000000A   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000E   0x....             LDR.N    R1,??DataTable75_1
   \   00000010   0x6809             LDR      R1,[R1, #+0]
   \   00000012   0xF881 0x05E4      STRB     R0,[R1, #+1508]
    888          	scheduleMsg(&logger, "injection enabled");
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable76_13
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable76
   \   0000001E   0x.... 0x....      BL       scheduleMsg
    889          }
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
    890          

   \                                 In section .text, align 2, keep-with-next
    891          static void disableInjection(void) {
   \                     _Z16disableInjectionv:
   \   00000000   0xB580             PUSH     {R7,LR}
    892          	engineConfiguration->isInjectionEnabled = false;
   \   00000002   0x....             LDR.N    R0,??DataTable75_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   0000000A   0xF010 0x00FE      ANDS     R0,R0,#0xFE
   \   0000000E   0x....             LDR.N    R1,??DataTable75_1
   \   00000010   0x6809             LDR      R1,[R1, #+0]
   \   00000012   0xF881 0x05E4      STRB     R0,[R1, #+1508]
    893          	scheduleMsg(&logger, "injection disabled");
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable76_14
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable76
   \   0000001E   0x.... 0x....      BL       scheduleMsg
    894          }
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
    895          

   \                                 In section .text, align 2, keep-with-next
    896          static void enableIgnition(void) {
   \                     _Z14enableIgnitionv:
   \   00000000   0xB580             PUSH     {R7,LR}
    897          	engineConfiguration->isIgnitionEnabled = true;
   \   00000002   0x....             LDR.N    R0,??DataTable75_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   0000000A   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000000E   0x....             LDR.N    R1,??DataTable75_1
   \   00000010   0x6809             LDR      R1,[R1, #+0]
   \   00000012   0xF881 0x05E4      STRB     R0,[R1, #+1508]
    898          	scheduleMsg(&logger, "ignition enabled");
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable76_15
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable76
   \   0000001E   0x.... 0x....      BL       scheduleMsg
    899          }
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
    900          

   \                                 In section .text, align 2, keep-with-next
    901          static void disableIgnition(void) {
   \                     _Z15disableIgnitionv:
   \   00000000   0xB580             PUSH     {R7,LR}
    902          	engineConfiguration->isIgnitionEnabled = false;
   \   00000002   0x....             LDR.N    R0,??DataTable75_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   0000000A   0xF010 0x00FD      ANDS     R0,R0,#0xFD
   \   0000000E   0x....             LDR.N    R1,??DataTable75_1
   \   00000010   0x6809             LDR      R1,[R1, #+0]
   \   00000012   0xF881 0x05E4      STRB     R0,[R1, #+1508]
    903          	scheduleMsg(&logger, "ignition disabled");
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable76_16
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable76
   \   0000001E   0x.... 0x....      BL       scheduleMsg
    904          }
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
    905          

   \                                 In section .text, align 2, keep-with-next
    906          void stopEngine(void) {
   \                     _Z10stopEnginev:
   \   00000000   0xB580             PUSH     {R7,LR}
    907          	engine->stopEngineRequestTimeNt = getTimeNowNt();
   \   00000002   0x.... 0x....      BL       getTimeNowNt
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable76_17
   \   0000000A   0x6812             LDR      R2,[R2, #+0]
   \   0000000C   0xE9C2 0x010C      STRD     R0,R1,[R2, #+48]
    908          }
   \   00000010   0xBD01             POP      {R0,PC}          ;; return
    909          

   \                                 In section .text, align 2, keep-with-next
    910          static void printAllInfo(void) {
   \                     _Z12printAllInfov:
   \   00000000   0xB510             PUSH     {R4,LR}
    911          	printTemperatureInfo();
   \   00000002   0x.... 0x....      BL       _Z20printTemperatureInfov
    912          	printTPSInfo();
   \   00000006   0x.... 0x....      BL       _Z12printTPSInfov
    913          #if EFI_WAVE_CHART
    914          	scheduleMsg(&logger, "waveChartUsedSize=%d", waveChartUsedSize);
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable76_18
   \   0000000E   0x6802             LDR      R2,[R0, #+0]
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable76_19
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable76
   \   00000018   0x.... 0x....      BL       scheduleMsg
    915          #endif
    916          #if EFI_PROD_CODE
    917          	scheduleMsg(&logger, "console mode jumper: %s", boolToString(!GET_CONSOLE_MODE_VALUE()));
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable76_20  ;; 0x40020410
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   00000026   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000002A   0xF090 0x0001      EORS     R0,R0,#0x1
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x.... 0x....      BL       _Z12boolToStringb
   \   00000034   0x0002             MOVS     R2,R0
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable76_21
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable76
   \   0000003E   0x.... 0x....      BL       scheduleMsg
    918          	scheduleMsg(&logger, "board test mode jumper: %s", boolToString(GET_BOARD_TEST_MODE_VALUE()));
   \   00000042   0x....             LDR.N    R0,??DataTable75
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0xF8D0 0x0150      LDR      R0,[R0, #+336]
   \   0000004A   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   0000004E   0x6904             LDR      R4,[R0, #+16]
   \   00000050   0x....             LDR.N    R0,??DataTable75
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0xF8D0 0x0150      LDR      R0,[R0, #+336]
   \   00000058   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   0000005C   0xFA34 0xF000      LSRS     R0,R4,R0
   \   00000060   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000064   0xF090 0x0001      EORS     R0,R0,#0x1
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x.... 0x....      BL       _Z12boolToStringb
   \   0000006E   0x0002             MOVS     R2,R0
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable76_22
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable76
   \   00000078   0x.... 0x....      BL       scheduleMsg
    919          #endif
    920          }
   \   0000007C   0xBD10             POP      {R4,PC}          ;; return
    921          

   \                                 In section .text, align 2, keep-with-next
    922          static void setInjectorLag(float value) {
    923          	engineConfiguration->injector.lag = value;
   \                     _Z14setInjectorLagf:
   \   00000000   0x....             LDR.N    R0,??DataTable75_1
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xED80 0x0A03      VSTR     S0,[R0, #+12]
    924          }
   \   00000008   0x4770             BX       LR               ;; return
    925          

   \                                 In section .text, align 2, keep-with-next
    926          static void getValue(const char *paramStr) {
   \                     _Z8getValuePKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    927          	if (strEqualCaseInsensitive(paramStr, "todo")) {
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable76_23
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       strEqualCaseInsensitive
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD006             BEQ.N    ??getValue_0
    928          		scheduleMsg(&logger, "something");
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable76_24
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable76
   \   0000001A   0x.... 0x....      BL       scheduleMsg
   \   0000001E   0xE008             B.N      ??getValue_1
    929          	}
    930          
    931          #if EFI_RTC || defined(__DOXYGEN__)
    932          	else if (strEqualCaseInsensitive(paramStr, "date")) {
   \                     ??getValue_0:
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable76_25
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0x.... 0x....      BL       strEqualCaseInsensitive
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD001             BEQ.N    ??getValue_1
    933          		printDateTime();
   \   0000002E   0x.... 0x....      BL       _Z13printDateTimev
    934          	}
    935          #endif
    936          }
   \                     ??getValue_1:
   \   00000032   0xBD10             POP      {R4,PC}          ;; return
    937          

   \                                 In section .text, align 2, keep-with-next
    938          static void setValue(const char *paramStr, const char *valueStr) {
   \                     _Z8setValuePKcS0_:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
    939          	float valueF = atoff(valueStr);
   \   0000000A   0x0028             MOVS     R0,R5
   \   0000000C   0x.... 0x....      BL       atoff
   \   00000010   0xEEB0 0x8A40      VMOV.F32 S16,S0
    940          	int valueI = atoi(valueStr);
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0x.... 0x....      BL       atoi
   \   0000001A   0x0006             MOVS     R6,R0
    941          
    942          	if (strEqualCaseInsensitive(paramStr, "vsscoeff")) {
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable76_26
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD004             BEQ.N    ??setValue_0
    943          		engineConfiguration->vehicleSpeedCoef = valueF;
   \   0000002A   0x....             LDR.N    R0,??DataTable75_1
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0xED80 0x8A7A      VSTR     S16,[R0, #+488]
   \   00000032   0xE05D             B.N      ??setValue_1
    944          #if EFI_PROD_CODE || defined(__DOXYGEN__)
    945          	} else if (strEqualCaseInsensitive(paramStr, "alt_t")) {
   \                     ??setValue_0:
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable76_27
   \   00000038   0x0020             MOVS     R0,R4
   \   0000003A   0x.... 0x....      BL       strEqualCaseInsensitive
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD008             BEQ.N    ??setValue_2
    946          		if (valueI > 10) {
   \   00000042   0x2E0B             CMP      R6,#+11
   \   00000044   0xDB03             BLT.N    ??setValue_3
    947          			engineConfiguration->alternatorDT = valueI;
   \   00000046   0x....             LDR.N    R0,??DataTable75_1
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF8C0 0x6874      STR      R6,[R0, #+2164]
    948          		}
    949          		showAltInfo();
   \                     ??setValue_3:
   \   0000004E   0x.... 0x....      BL       _Z11showAltInfov
   \   00000052   0xE04D             B.N      ??setValue_1
    950          	} else if (strEqualCaseInsensitive(paramStr, "alt_offset")) {
   \                     ??setValue_2:
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable76_28
   \   00000058   0x0020             MOVS     R0,R4
   \   0000005A   0x.... 0x....      BL       strEqualCaseInsensitive
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD00A             BEQ.N    ??setValue_4
    951          		engineConfiguration->alternatorOffset = valueI;
   \   00000062   0xEE00 0x6A10      VMOV     S0,R6
   \   00000066   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000006A   0x....             LDR.N    R0,??DataTable75_1
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0xF600 0x0078      ADDW     R0,R0,#+2168
   \   00000072   0xED80 0x0A00      VSTR     S0,[R0, #0]
   \   00000076   0xE03B             B.N      ??setValue_1
    952          	} else if (strEqualCaseInsensitive(paramStr, "alt_p")) {
   \                     ??setValue_4:
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable76_29
   \   0000007C   0x0020             MOVS     R0,R4
   \   0000007E   0x.... 0x....      BL       strEqualCaseInsensitive
   \   00000082   0x2800             CMP      R0,#+0
   \   00000084   0xD004             BEQ.N    ??setValue_5
    953          		setAltPFactor(valueF);
   \   00000086   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   0000008A   0x.... 0x....      BL       _Z13setAltPFactorf
   \   0000008E   0xE02F             B.N      ??setValue_1
    954          #endif
    955          	} else if (strEqualCaseInsensitive(paramStr, "step1rpm")) {
   \                     ??setValue_5:
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable76_30
   \   00000094   0x0020             MOVS     R0,R4
   \   00000096   0x.... 0x....      BL       strEqualCaseInsensitive
   \   0000009A   0x2800             CMP      R0,#+0
   \   0000009C   0xD004             BEQ.N    ??setValue_6
    956          		engineConfiguration->step1rpm = valueI;
   \   0000009E   0x....             LDR.N    R0,??DataTable75_1
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0xF8C0 0x6140      STR      R6,[R0, #+320]
   \   000000A6   0xE023             B.N      ??setValue_1
    957          	} else if (strEqualCaseInsensitive(paramStr, "step1timing")) {
   \                     ??setValue_6:
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable76_31
   \   000000AC   0x0020             MOVS     R0,R4
   \   000000AE   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000000B2   0x2800             CMP      R0,#+0
   \   000000B4   0xD004             BEQ.N    ??setValue_7
    958          		engineConfiguration->step1timing = valueI;
   \   000000B6   0x....             LDR.N    R0,??DataTable75_1
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0xF8C0 0x6144      STR      R6,[R0, #+324]
   \   000000BE   0xE017             B.N      ??setValue_1
    959          	} else if (strEqualCaseInsensitive(paramStr, "targetvbatt")) {
   \                     ??setValue_7:
   \   000000C0   0x.... 0x....      LDR.W    R1,??DataTable76_32
   \   000000C4   0x0020             MOVS     R0,R4
   \   000000C6   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xD006             BEQ.N    ??setValue_8
    960          		engineConfiguration->targetVBatt = valueF;
   \   000000CE   0x....             LDR.N    R0,??DataTable75_1
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0xF600 0x006C      ADDW     R0,R0,#+2156
   \   000000D6   0xED80 0x8A00      VSTR     S16,[R0, #0]
   \   000000DA   0xE009             B.N      ??setValue_1
    961          #if EFI_RTC || defined(__DOXYGEN__)
    962          	} else if (strEqualCaseInsensitive(paramStr, "date")) {
   \                     ??setValue_8:
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable76_25
   \   000000E0   0x0020             MOVS     R0,R4
   \   000000E2   0x.... 0x....      BL       strEqualCaseInsensitive
   \   000000E6   0x2800             CMP      R0,#+0
   \   000000E8   0xD002             BEQ.N    ??setValue_1
    963          		setDateTime(valueStr);
   \   000000EA   0x0028             MOVS     R0,R5
   \   000000EC   0x.... 0x....      BL       _Z11setDateTimePKc
    964          #endif
    965          	}
    966          }
   \                     ??setValue_1:
   \   000000F0   0xECBD 0x8B02      VPOP     {D8}
   \   000000F4   0xBD70             POP      {R4-R6,PC}       ;; return
    967          

   \                                 In section .text, align 2, keep-with-next
    968          void initSettings(engine_configuration_s *engineConfiguration) {
   \                     _Z12initSettingsP22engine_configuration_s:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    969          	addConsoleActionP("showconfig", (VoidPtr) doPrintConfiguration, &engine);
   \   00000004   0x....             LDR.N    R2,??DataTable76_17
   \   00000006   0x....             LDR.N    R1,??DataTable76_33
   \   00000008   0x....             LDR.N    R0,??DataTable76_34
   \   0000000A   0x.... 0x....      BL       addConsoleActionP
    970          	addConsoleAction("tempinfo", printTemperatureInfo);
   \   0000000E   0x....             LDR.N    R1,??DataTable76_35
   \   00000010   0x....             LDR.N    R0,??DataTable76_36
   \   00000012   0x.... 0x....      BL       addConsoleAction
    971          	addConsoleAction("tpsinfo", printTPSInfo);
   \   00000016   0x....             LDR.N    R1,??DataTable76_37
   \   00000018   0x....             LDR.N    R0,??DataTable76_38
   \   0000001A   0x.... 0x....      BL       addConsoleAction
    972          	addConsoleAction("info", printAllInfo);
   \   0000001E   0x....             LDR.N    R1,??DataTable76_39
   \   00000020   0x....             LDR.N    R0,??DataTable76_40
   \   00000022   0x.... 0x....      BL       addConsoleAction
    973          
    974          	addConsoleActionF("set_ignition_offset", setIgnitionOffset);
   \   00000026   0x....             LDR.N    R1,??DataTable76_41
   \   00000028   0x....             LDR.N    R0,??DataTable76_42
   \   0000002A   0x.... 0x....      BL       addConsoleActionF
    975          	addConsoleActionF("set_injection_offset", setInjectionOffset);
   \   0000002E   0x....             LDR.N    R1,??DataTable76_43
   \   00000030   0x....             LDR.N    R0,??DataTable76_44
   \   00000032   0x.... 0x....      BL       addConsoleActionF
    976          	addConsoleActionF("set_global_trigger_offset_angle", setGlobalTriggerAngleOffset);
   \   00000036   0x....             LDR.N    R1,??DataTable76_45
   \   00000038   0x....             LDR.N    R0,??DataTable76_46
   \   0000003A   0x.... 0x....      BL       addConsoleActionF
    977          	addConsoleActionI("set_sensor_chart_mode", setSensorChartMode);
   \   0000003E   0x....             LDR.N    R1,??DataTable76_47
   \   00000040   0x....             LDR.N    R0,??DataTable76_48
   \   00000042   0x.... 0x....      BL       addConsoleActionI
    978          	addConsoleActionI("set_fixed_mode_timing", setFixedModeTiming);
   \   00000046   0x....             LDR.N    R1,??DataTable76_49
   \   00000048   0x....             LDR.N    R0,??DataTable76_50
   \   0000004A   0x.... 0x....      BL       addConsoleActionI
    979          	addConsoleActionI("set_timing_mode", setTimingMode);
   \   0000004E   0x....             LDR.N    R1,??DataTable76_51
   \   00000050   0x....             LDR.N    R0,??DataTable76_52
   \   00000052   0x.... 0x....      BL       addConsoleActionI
    980          	addConsoleActionI("set_engine_type", setEngineType);
   \   00000056   0x....             LDR.N    R1,??DataTable76_53
   \   00000058   0x....             LDR.N    R0,??DataTable76_54
   \   0000005A   0x.... 0x....      BL       addConsoleActionI
    981          
    982          	addConsoleActionI("set_injection_pin_mode", setInjectionPinMode);
   \   0000005E   0x....             LDR.N    R1,??DataTable76_55
   \   00000060   0x....             LDR.N    R0,??DataTable76_56
   \   00000062   0x.... 0x....      BL       addConsoleActionI
    983          	addConsoleActionI("set_ignition_pin_mode", setIgnitionPinMode);
   \   00000066   0x....             LDR.N    R1,??DataTable76_57
   \   00000068   0x....             LDR.N    R0,??DataTable76_58
   \   0000006A   0x.... 0x....      BL       addConsoleActionI
    984          	addConsoleActionI("set_idle_pin_mode", setIdlePinMode);
   \   0000006E   0x....             LDR.N    R1,??DataTable76_59
   \   00000070   0x....             LDR.N    R0,??DataTable76_60
   \   00000072   0x.... 0x....      BL       addConsoleActionI
    985          	addConsoleActionI("set_fuel_pump_pin_mode", setFuelPumpPinMode);
   \   00000076   0x....             LDR.N    R1,??DataTable76_61
   \   00000078   0x....             LDR.N    R0,??DataTable76_62
   \   0000007A   0x.... 0x....      BL       addConsoleActionI
    986          	addConsoleActionI("set_malfunction_indicator_pin_mode", setMalfunctionIndicatorPinMode);
   \   0000007E   0x....             LDR.N    R1,??DataTable76_63
   \   00000080   0x....             LDR.N    R0,??DataTable76_64
   \   00000082   0x.... 0x....      BL       addConsoleActionI
    987          	addConsoleActionI("set_operation_mode", setOM);
   \   00000086   0x....             LDR.N    R1,??DataTable76_65
   \   00000088   0x....             LDR.N    R0,??DataTable76_66
   \   0000008A   0x.... 0x....      BL       addConsoleActionI
    988          	// todo: start saving values into flash right away?
    989          
    990          	addConsoleActionF("set_global_fuel_correction", setGlobalFuelCorrection);
   \   0000008E   0x....             LDR.N    R1,??DataTable76_67
   \   00000090   0x....             LDR.N    R0,??DataTable76_68
   \   00000092   0x.... 0x....      BL       addConsoleActionF
    991          
    992          	addConsoleActionF("set_cranking_fuel", setCrankingFuel);
   \   00000096   0x....             LDR.N    R1,??DataTable76_69
   \   00000098   0x....             LDR.N    R0,??DataTable76_70
   \   0000009A   0x.... 0x....      BL       addConsoleActionF
    993          	addConsoleActionI("set_cranking_rpm", setCrankingRpm);
   \   0000009E   0x....             LDR.N    R1,??DataTable76_71
   \   000000A0   0x....             LDR.N    R0,??DataTable76_72
   \   000000A2   0x.... 0x....      BL       addConsoleActionI
    994          	addConsoleActionF("set_cranking_timing_angle", setCrankingTimingAngle);
   \   000000A6   0x....             LDR.N    R1,??DataTable76_73
   \   000000A8   0x....             LDR.N    R0,??DataTable76_74
   \   000000AA   0x.... 0x....      BL       addConsoleActionF
    995          	addConsoleActionF("set_cranking_charge_angle", setCrankingChargeAngle);
   \   000000AE   0x....             LDR.N    R1,??DataTable76_75
   \   000000B0   0x....             LDR.N    R0,??DataTable76_76
   \   000000B2   0x.... 0x....      BL       addConsoleActionF
    996          	addConsoleActionI("set_ignition_mode", setIgnitionMode);
   \   000000B6   0x....             LDR.N    R1,??DataTable76_77
   \   000000B8   0x....             LDR.N    R0,??DataTable76_78
   \   000000BA   0x.... 0x....      BL       addConsoleActionI
    997          	addConsoleActionI("set_cranking_injection_mode", setCrankingInjectionMode);
   \   000000BE   0x....             LDR.N    R1,??DataTable76_79
   \   000000C0   0x....             LDR.N    R0,??DataTable76_80
   \   000000C2   0x.... 0x....      BL       addConsoleActionI
    998          	addConsoleActionI("set_injection_mode", setInjectionMode);
   \   000000C6   0x....             LDR.N    R1,??DataTable76_81
   \   000000C8   0x....             LDR.N    R0,??DataTable76_82
   \   000000CA   0x.... 0x....      BL       addConsoleActionI
    999          
   1000          	addConsoleActionF("set_whole_phase_map", setWholePhaseMapCmd);
   \   000000CE   0x....             LDR.N    R1,??DataTable76_83
   \   000000D0   0x....             LDR.N    R0,??DataTable76_84
   \   000000D2   0x.... 0x....      BL       addConsoleActionF
   1001          	addConsoleActionF("set_whole_timing_map", setWholeTimingMapCmd);
   \   000000D6   0x....             LDR.N    R1,??DataTable76_85
   \   000000D8   0x....             LDR.N    R0,??DataTable76_86
   \   000000DA   0x.... 0x....      BL       addConsoleActionF
   1002          	addConsoleActionF("set_whole_fuel_map", setWholeFuelMapCmd);
   \   000000DE   0x....             LDR.N    R1,??DataTable76_87
   \   000000E0   0x....             LDR.N    R0,??DataTable76_88
   \   000000E2   0x.... 0x....      BL       addConsoleActionF
   1003          	addConsoleActionF("set_whole_ve_map", setWholeVeCmd);
   \   000000E6   0x....             LDR.N    R1,??DataTable76_89
   \   000000E8   0x....             LDR.N    R0,??DataTable76_90
   \   000000EA   0x.... 0x....      BL       addConsoleActionF
   1004          	addConsoleActionSSS("set_fuel_map", setFuelMap);
   \   000000EE   0x....             LDR.N    R1,??DataTable76_91
   \   000000F0   0x....             LDR.N    R0,??DataTable76_92
   \   000000F2   0x.... 0x....      BL       addConsoleActionSSS
   1005          
   1006          	addConsoleActionF("set_whole_timing_map", setWholeTimingMap);
   \   000000F6   0x....             LDR.N    R1,??DataTable76_93
   \   000000F8   0x....             LDR.N    R0,??DataTable76_86
   \   000000FA   0x.... 0x....      BL       addConsoleActionF
   1007          	addConsoleActionSSS("set_timing_map", setTimingMap);
   \   000000FE   0x....             LDR.N    R1,??DataTable76_94
   \   00000100   0x....             LDR.N    R0,??DataTable76_95
   \   00000102   0x.... 0x....      BL       addConsoleActionSSS
   1008          
   1009          	addConsoleActionI("set_rpm_hard_limit", setRpmHardLimit);
   \   00000106   0x....             LDR.N    R1,??DataTable76_96
   \   00000108   0x....             LDR.N    R0,??DataTable76_97
   \   0000010A   0x.... 0x....      BL       addConsoleActionI
   1010          	addConsoleActionI("set_firing_order", setFiringOrder);
   \   0000010E   0x....             LDR.N    R1,??DataTable76_98
   \   00000110   0x....             LDR.N    R0,??DataTable76_99
   \   00000112   0x.... 0x....      BL       addConsoleActionI
   1011          	addConsoleActionI("set_algorithm", setAlgorithmInt);
   \   00000116   0x....             LDR.N    R1,??DataTable76_100
   \   00000118   0x....             LDR.N    R0,??DataTable76_101
   \   0000011A   0x.... 0x....      BL       addConsoleActionI
   1012          	addConsoleAction("stopengine", (Void) stopEngine);
   \   0000011E   0x....             LDR.N    R1,??DataTable76_102
   \   00000120   0x....             LDR.N    R0,??DataTable76_103
   \   00000122   0x.... 0x....      BL       addConsoleAction
   1013          
   1014          	// todo: refactor this - looks like all boolean flags should be controlled with less code duplication
   1015          	addConsoleAction("enable_injection", enableInjection);
   \   00000126   0x....             LDR.N    R1,??DataTable76_104
   \   00000128   0x....             LDR.N    R0,??DataTable76_105
   \   0000012A   0x.... 0x....      BL       addConsoleAction
   1016          	addConsoleAction("disable_injection", disableInjection);
   \   0000012E   0x....             LDR.N    R1,??DataTable76_106
   \   00000130   0x....             LDR.N    R0,??DataTable76_107
   \   00000132   0x.... 0x....      BL       addConsoleAction
   1017          	addConsoleAction("enable_ignition", enableIgnition);
   \   00000136   0x....             LDR.N    R1,??DataTable76_108
   \   00000138   0x....             LDR.N    R0,??DataTable76_109
   \   0000013A   0x.... 0x....      BL       addConsoleAction
   1018          	addConsoleAction("disable_ignition", disableIgnition);
   \   0000013E   0x....             LDR.N    R1,??DataTable76_110
   \   00000140   0x....             LDR.N    R0,??DataTable76_111
   \   00000142   0x.... 0x....      BL       addConsoleAction
   1019          
   1020          	addConsoleActionI("enable_spi", enableSpi);
   \   00000146   0x....             LDR.N    R1,??DataTable76_112
   \   00000148   0x....             LDR.N    R0,??DataTable76_113
   \   0000014A   0x.... 0x....      BL       addConsoleActionI
   1021          	addConsoleActionI("disable_spi", disableSpi);
   \   0000014E   0x....             LDR.N    R1,??DataTable76_114
   \   00000150   0x....             LDR.N    R0,??DataTable76_115
   \   00000152   0x.... 0x....      BL       addConsoleActionI
   1022          
   1023          	addConsoleActionS("enable", enable);
   \   00000156   0x....             LDR.N    R1,??DataTable76_116
   \   00000158   0x....             LDR.N    R0,??DataTable76_117
   \   0000015A   0x.... 0x....      BL       addConsoleActionS
   1024          	addConsoleActionS("disable", disable);
   \   0000015E   0x....             LDR.N    R1,??DataTable76_118
   \   00000160   0x....             LDR.N    R0,??DataTable76_119
   \   00000162   0x.... 0x....      BL       addConsoleActionS
   1025          
   1026          	addConsoleActionII("set_toothed_wheel", setToothedWheel);
   \   00000166   0x....             LDR.N    R1,??DataTable76_120
   \   00000168   0x....             LDR.N    R0,??DataTable76_121
   \   0000016A   0x.... 0x....      BL       addConsoleActionII
   1027          	addConsoleActionI("set_trigger_type", setTriggerType);
   \   0000016E   0x....             LDR.N    R1,??DataTable76_122
   \   00000170   0x....             LDR.N    R0,??DataTable76_123
   \   00000172   0x.... 0x....      BL       addConsoleActionI
   1028          
   1029          	addConsoleActionF("set_vbatt_divider", setVBattDivider);
   \   00000176   0x....             LDR.N    R1,??DataTable76_124
   \   00000178   0x....             LDR.N    R0,??DataTable76_125
   \   0000017A   0x.... 0x....      BL       addConsoleActionF
   1030          
   1031          	addConsoleActionF("set_injector_lag", setInjectorLag);
   \   0000017E   0x....             LDR.N    R1,??DataTable76_126
   \   00000180   0x....             LDR.N    R0,??DataTable76_127
   \   00000182   0x.... 0x....      BL       addConsoleActionF
   1032          
   1033          	addConsoleActionF("set_clt_bias", setCltBias);
   \   00000186   0x....             LDR.N    R1,??DataTable76_128
   \   00000188   0x....             LDR.N    R0,??DataTable76_129
   \   0000018A   0x.... 0x....      BL       addConsoleActionF
   1034          	addConsoleActionF("set_iat_bias", setIatBias);
   \   0000018E   0x....             LDR.N    R1,??DataTable76_130
   \   00000190   0x....             LDR.N    R0,??DataTable76_131
   \   00000192   0x.... 0x....      BL       addConsoleActionF
   1035          	addConsoleActionI("set_idle_solenoid_freq", setIdleSolenoidFrequency);
   \   00000196   0x....             LDR.N    R1,??DataTable76_132
   \   00000198   0x....             LDR.N    R0,??DataTable76_133
   \   0000019A   0x.... 0x....      BL       addConsoleActionI
   1036          
   1037          	addConsoleActionFF("set_fan", setFanSetting);
   \   0000019E   0x....             LDR.N    R1,??DataTable76_134
   \   000001A0   0x....             LDR.N    R0,??DataTable76_135
   \   000001A2   0x.... 0x....      BL       addConsoleActionFF
   1038          
   1039          #if EFI_PROD_CODE
   1040          	addConsoleActionS("showpin", showPinFunction);
   \   000001A6   0x....             LDR.N    R1,??DataTable76_136
   \   000001A8   0x....             LDR.N    R0,??DataTable76_137
   \   000001AA   0x.... 0x....      BL       addConsoleActionS
   1041          	addConsoleActionSS("set_injection_pin", setInjectionPin);
   \   000001AE   0x....             LDR.N    R1,??DataTable76_138
   \   000001B0   0x....             LDR.N    R0,??DataTable76_139
   \   000001B2   0x.... 0x....      BL       addConsoleActionSS
   1042          	addConsoleActionSS("set_ignition_pin", setIgnitionPin);
   \   000001B6   0x....             LDR.N    R1,??DataTable76_140
   \   000001B8   0x....             LDR.N    R0,??DataTable76_141
   \   000001BA   0x.... 0x....      BL       addConsoleActionSS
   1043          	addConsoleActionSS("set_trigger_input_pin", setTriggerInputPin);
   \   000001BE   0x....             LDR.N    R1,??DataTable76_142
   \   000001C0   0x....             LDR.N    R0,??DataTable76_143
   \   000001C2   0x.... 0x....      BL       addConsoleActionSS
   1044          	addConsoleActionSS("set_trigger_simulator_pin", setTriggerSimulatorPin);
   \   000001C6   0x....             LDR.N    R1,??DataTable76_144
   \   000001C8   0x....             LDR.N    R0,??DataTable76_145
   \   000001CA   0x.... 0x....      BL       addConsoleActionSS
   1045          
   1046          	addConsoleActionSSP("set_egt_cs_pin", (VoidCharPtrCharPtrVoidPtr) setEgtCSPin, boardConfiguration);
   \   000001CE   0x....             LDR.N    R0,??DataTable76_146
   \   000001D0   0x6802             LDR      R2,[R0, #+0]
   \   000001D2   0x....             LDR.N    R1,??DataTable76_147
   \   000001D4   0x....             LDR.N    R0,??DataTable76_148
   \   000001D6   0x.... 0x....      BL       addConsoleActionSSP
   1047          	addConsoleActionI("set_egt_spi", setEgtSpi);
   \   000001DA   0x....             LDR.N    R1,??DataTable76_149
   \   000001DC   0x....             LDR.N    R0,??DataTable76_150
   \   000001DE   0x.... 0x....      BL       addConsoleActionI
   1048          
   1049          	addConsoleActionSS("set_trigger_simulator_mode", setTriggerSimulatorMode);
   \   000001E2   0x....             LDR.N    R1,??DataTable76_151
   \   000001E4   0x....             LDR.N    R0,??DataTable76_152
   \   000001E6   0x.... 0x....      BL       addConsoleActionSS
   1050          	addConsoleActionS("set_fuel_pump_pin", setFuelPumpPin);
   \   000001EA   0x....             LDR.N    R1,??DataTable76_153
   \   000001EC   0x....             LDR.N    R0,??DataTable76_154
   \   000001EE   0x.... 0x....      BL       addConsoleActionS
   1051          	addConsoleActionS("set_ac_pin", setACPin);
   \   000001F2   0x....             LDR.N    R1,??DataTable76_155
   \   000001F4   0x....             LDR.N    R0,??DataTable76_156
   \   000001F6   0x.... 0x....      BL       addConsoleActionS
   1052          	addConsoleActionS("set_alternator_pin", setAlternatorPin);
   \   000001FA   0x....             LDR.N    R1,??DataTable76_157
   \   000001FC   0x....             LDR.N    R0,??DataTable76_158
   \   000001FE   0x.... 0x....      BL       addConsoleActionS
   1053          	addConsoleActionS("set_idle_pin", setIdlePin);
   \   00000202   0x....             LDR.N    R1,??DataTable76_159
   \   00000204   0x....             LDR.N    R0,??DataTable76_160
   \   00000206   0x.... 0x....      BL       addConsoleActionS
   1054          	addConsoleActionS("set_main_relay_pin", setMainRelayPin);
   \   0000020A   0x....             LDR.N    R1,??DataTable76_161
   \   0000020C   0x....             LDR.N    R0,??DataTable76_162
   \   0000020E   0x.... 0x....      BL       addConsoleActionS
   1055          
   1056          	addConsoleActionSS("set", setValue);
   \   00000212   0x....             LDR.N    R1,??DataTable76_163
   \   00000214   0x....             ADR.N    R0,??DataTable76_1  ;; "set"
   \   00000216   0x.... 0x....      BL       addConsoleActionSS
   1057          	addConsoleActionS("get", getValue);
   \   0000021A   0x....             LDR.N    R1,??DataTable76_164
   \   0000021C   0x....             ADR.N    R0,??DataTable76_2  ;; "get"
   \   0000021E   0x.... 0x....      BL       addConsoleActionS
   1058          
   1059          #if HAL_USE_ADC || defined(__DOXYGEN__)
   1060          	addConsoleActionSS("set_analog_input_pin", setAnalogInputPin);
   \   00000222   0x....             LDR.N    R1,??DataTable76_165
   \   00000224   0x....             LDR.N    R0,??DataTable76_166
   \   00000226   0x.... 0x....      BL       addConsoleActionSS
   1061          #endif
   1062          	addConsoleActionSS("set_logic_input_pin", setLogicInputPin);
   \   0000022A   0x....             LDR.N    R1,??DataTable76_167
   \   0000022C   0x....             LDR.N    R0,??DataTable76_168
   \   0000022E   0x.... 0x....      BL       addConsoleActionSS
   1063          	addConsoleActionI("set_pot_spi", setPotSpi);
   \   00000232   0x....             LDR.N    R1,??DataTable76_169
   \   00000234   0x....             LDR.N    R0,??DataTable76_170
   \   00000236   0x.... 0x....      BL       addConsoleActionI
   1064          #endif /* EFI_PROD_CODE */
   1065          }
   \   0000023A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x25 0x66          DC8      "%f "
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x........         DC32     LOGGING_BUFFER

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \   00000000   0x........         DC32     `?<Constant "settings control">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x3A400C01         DC32     0x3a400c01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_1:
   \   00000000   0x........         DC32     `?<Constant "injectionPins: mode %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   0x........         DC32     `?<Constant "injection #%d @ %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   0x........         DC32     `?<Constant "ignitionPins: mode %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   0x40 0x25          DC8      "@%s"
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   0x........         DC32     `?<Constant "ignition #%d @ %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   0x........         DC32     `?<Constant "idlePin: mode %s @ %s...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_1:
   \   00000000   0x........         DC32     `?<Constant "malfunctionIndicatorn...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   0x........         DC32     `?<Constant "fuelPumpPin: mode %s ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   0x........         DC32     `?<Constant "fanPin: mode %s @ %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_1:
   \   00000000   0x........         DC32     `?<Constant "mainRelay: mode %s @ %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   0x........         DC32     `?<Constant "alternator field: mod...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34:
   \   00000000   0x43 0x4C          DC8      "CLT"
   \              0x54 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   0x........         DC32     logger

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_1:
   \   00000000   0x49 0x41          DC8      "IAT"
   \              0x54 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_2:
   \   00000000   0x........         DC32     `?<Constant "CUSTOM">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_3:
   \   00000000   0x........         DC32     `?<Constant "Neon95">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_4:
   \   00000000   0x........         DC32     `?<Constant "Neon03">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_5:
   \   00000000   0x........         DC32     `?<Constant "Aspire">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_6:
   \   00000000   0x........         DC32     `?<Constant "Fiesta">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   0x........         DC32     `?<Constant "Primera">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_1:
   \   00000000   0x........         DC32     `?<Constant "Accord3">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   0x........         DC32     `?<Constant "spi 1=%s/2=%s/3=%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_1:
   \   00000000   0x........         DC32     `?<Constant "Accord2">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_2:
   \   00000000   0x........         DC32     `?<Constant "HondaD">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_3:
   \   00000000   0x........         DC32     `?<Constant "Fordi6">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_4:
   \   00000000   0x........         DC32     `?<Constant "Gy6139">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_5:
   \   00000000   0x........         DC32     `?<Constant "MiataNB">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_6:
   \   00000000   0x........         DC32     `?<Constant "M323">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_7:
   \   00000000   0x........         DC32     `?<Constant "Saturn Ion">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_8:
   \   00000000   0x........         DC32     `?<Constant "CoopR50">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_9:
   \   00000000   0x........         DC32     `?<Constant "EscrtGT">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_10:
   \   00000000   0x........         DC32     `?<Constant "TU3JP">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_11:
   \   00000000   0x........         DC32     `?<Constant "Rvrv8">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable37_12:
   \   00000000   0x........         DC32     `?<Constant "Mi4G93">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38:
   \   00000000   0x........         DC32     `?<Constant "MX590">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable38_1:
   \   00000000   0x........         DC32     `?<Constant "MX594d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39:
   \   00000000   0x........         DC32     `?<Constant "MX594s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_1:
   \   00000000   0x........         DC32     `?<Constant "MX596">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40:
   \   00000000   0x........         DC32     `?<Constant "BMWe34">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_1:
   \   00000000   0x........         DC32     `?<Constant "Test">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_2:
   \   00000000   0x........         DC32     `?<Constant "VW_ABA">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_3:
   \   00000000   0x........         DC32     `?<Constant "SACHS">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_4:
   \   00000000   0x........         DC32     `?<Constant "GM_2_2">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_5:
   \   00000000   0x........         DC32     `?<Constant "DODGE_RAM">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable40_6:
   \   00000000   0x........         DC32     `?<Constant "Mazda626">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   0x........         DC32     `?<Constant "Template %s/%d trigge...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_1:
   \   00000000   0x........         DC32     `?<Constant "configurationVersion=%d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_2:
   \   00000000   0x........         DC32     `?<Constant "rpmHardLimit: %d/oper...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42:
   \   00000000   0x........         DC32     `?<Constant "globalTriggerAngleOff...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_1:
   \   00000000   0x........         DC32     `?<Constant "=== cranking ===">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43:
   \   00000000   0x........         DC32     `?<Constant "crankingRpm: %d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43_1:
   \   00000000   0x........         DC32     `?<Constant "cranking injection %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43_2:
   \   00000000   0x........         DC32     `?<Constant "ignitionDwellForCrank...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43_3:
   \   00000000   0x........         DC32     `?<Constant "cranking charge charg...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44:
   \   00000000   0x........         DC32     `?<Constant "=== ignition ===">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_1:
   \   00000000   0x........         DC32     `?<Constant "ignitionMode: %s/enab...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_2:
   \   00000000   0x........         DC32     `?<Constant "timingMode: %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45:
   \   00000000   0x........         DC32     `?<Constant "fixedModeTiming: %d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46:
   \   00000000   0x3C23D70B         DC32     0x3c23d70b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_1:
   \   00000000   0x........         DC32     `?<Constant "ignitionOffset=%f">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable47:
   \   00000000   0x42480001         DC32     0x42480001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable47_1:
   \   00000000   0x........         DC32     `?<Constant "=== injection ===">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable47_2:
   \   00000000   0x........         DC32     `?<Constant "injection %s offset=%...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable48:
   \   00000000   0x........         DC32     `?<Constant "map_avg=%s/mil=%s/fp=...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable50:
   \   00000000   0x........         DC32     `?<Constant "isManualSpinningMode=...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable50_1:
   \   00000000   0x........         DC32     engine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51:
   \   00000000   0x........         DC32     `?<Constant "clutchUp@%s: %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52:
   \   00000000   0x........         DC32     `?<Constant "UnknownType">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_1:
   \   00000000   0x........         DC32     `?<Constant "clutchDown@%s: %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53:
   \   00000000   0x........         DC32     maxNesting

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_1:
   \   00000000   0x........         DC32     `?<Constant "boardTestModeJumperPi...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54:
   \   00000000   0x........         DC32     `?<Constant "digitalPotentiometerS...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_1:
   \   00000000   0x........         DC32     `?<Constant "digitalPotentiometer ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55:
   \   00000000   0x........         DC32     engineConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55_1:
   \   00000000   0x........         DC32     logger

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56:
   \   00000000   0x........         DC32     waveChart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59:
   \   00000000   0x41 0x2F          DC8      "A/C"
   \              0x43 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_1:
   \   00000000   0x........         DC32     `?<Constant "term">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_2:
   \   00000000   0x........         DC32     `?<Constant "%s volts=%f Celsius=%...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_3:
   \   00000000   0x........         DC32     pinNameBuffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_4:
   \   00000000   0x........         DC32     `?<Constant "C=%f/R=%f C=%f/R=%f C...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59_5:
   \   00000000   0x........         DC32     `?<Constant "bias resistor=%fK A=%...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable60:
   \   00000000   0x........         DC32     `?<Constant "=====================...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable60_1:
   \   00000000   0x........         DC32     `?<Constant "NO TPS SENSOR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61:
   \   00000000   0x........         DC32     `?<Constant "tps min %d/max %d v=%...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_1:
   \   00000000   0x........         DC32     `?<Constant "current 10bit=%d valu...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62:
   \   00000000   0x........         DC32     `?<Constant "CLT sensing error">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_1:
   \   00000000   0x........         DC32     `?<Constant "IAT sensing error">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_2:
   \   00000000   0x........         DC32     enginePins+0x10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable63:
   \   00000000   0x........         DC32     `?<Constant "fan=%s @ %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable63_1:
   \   00000000   0x........         DC32     enginePins+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable63_2:
   \   00000000   0x........         DC32     `?<Constant "A/C relay=%s @ %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable64:
   \   00000000   0x6D 0x61          DC8      "map"
   \              0x70 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable64_1:
   \   00000000   0x63 0x6C          DC8      "clt"
   \              0x74 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable64_2:
   \   00000000   0x69 0x61          DC8      "iat"
   \              0x74 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable64_3:
   \   00000000   0x74 0x70          DC8      "tps"
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65:
   \   00000000   0x........         DC32     `?<Constant "toothed: total=%d/ski...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_1:
   \   00000000   0x........         DC32     `?<Constant "setting fuel mult=%f">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_2:
   \   00000000   0x........         DC32     `?<Constant "ON temp [%f] should b...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_3:
   \   00000000   0x........         DC32     `?<Constant "Setting whole timing ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_4:
   \   00000000   0x........         DC32     `?<Constant "Setting whole injecti...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_5:
   \   00000000   0x........         DC32     `?<Constant "Setting whole timing ...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_6:
   \   00000000   0x........         DC32     `?<Constant "Setting whole VE map ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_7:
   \   00000000   0x........         DC32     `?<Constant "WARNING: setting VE m...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_8:
   \   00000000   0x........         DC32     `?<Constant "Setting whole fuel ma...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_9:
   \   00000000   0x........         DC32     `?<Constant "WARNING: setting fuel...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_10:
   \   00000000   0x........         DC32     `?<Constant "invalid pin name [%s]">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_11:
   \   00000000   0x........         DC32     `?<Constant "setting ignition pin[...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_12:
   \   00000000   0x........         DC32     `?<Constant "setting %s pin to %s ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_13:
   \   00000000   0x........         DC32     `?<Constant "idle">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_14:
   \   00000000   0x........         DC32     `?<Constant "main relay">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable66:
   \   00000000   0x........         DC32     config

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable66_1:
   \   00000000   0x73 0x64          DC8      0x73, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable66_2:
   \   00000000   0x........         DC32     `?<Constant "alternator">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable66_3:
   \   00000000   0x........         DC32     `?<Constant "fuelPump">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable67:
   \   00000000   0x63 0x61          DC8      "can"
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable68:
   \   00000000   0x........         DC32     `?<Constant "setting injection pin...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable71:
   \   00000000   0x........         DC32     logger

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable71_1:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable71_2:
   \   00000000   0x6D 0x69          DC8      "mil"
   \              0x6C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable71_3:
   \   00000000   0x........         DC32     `?<Constant "setting trigger pin[%...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable71_4:
   \   00000000   0x128CE430         DC32     0x128ce430

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable74:
   \   00000000   0x........         DC32     `?<Constant "setting EGT CS pin[%d...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable74_1:
   \   00000000   0x........         DC32     `?<Constant "setting trigger simul...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable74_2:
   \   00000000   0x........         DC32     `?<Constant "Error with [%s]">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_1:
   \   00000000   0x........         DC32     engineConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_2:
   \   00000000   0x........         DC32     `?<Constant "setting MAP to %s/%d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_3:
   \   00000000   0x........         DC32     `?<Constant "setting CLT to %s/%d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_4:
   \   00000000   0x........         DC32     `?<Constant "setting IAT to %s/%d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_5:
   \   00000000   0x........         DC32     `?<Constant "setting TPS to %s/%d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_6:
   \   00000000   0x........         DC32     `?<Constant "setting logic input p...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_7:
   \   00000000   0x........         DC32     `?<Constant "Pin %s: [%s]">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_8:
   \   00000000   0x........         DC32     `?<Constant "Setting timing map en...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_9:
   \   00000000   0x........         DC32     `?<Constant "Setting fuel map entr...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_10:
   \   00000000   0x........         DC32     `?<Constant "invalid spi index %d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_11:
   \   00000000   0x........         DC32     `?<Constant "fastadc">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_12:
   \   00000000   0x........         DC32     `?<Constant "step1limimter">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_13:
   \   00000000   0x........         DC32     `?<Constant "serial">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_14:
   \   00000000   0x........         DC32     `?<Constant "stepperidle">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_15:
   \   00000000   0x........         DC32     `?<Constant "trigger_only_front">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_16:
   \   00000000   0x........         DC32     `?<Constant "two_wire_batch">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_17:
   \   00000000   0x........         DC32     `?<Constant "joystick">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_18:
   \   00000000   0x........         DC32     `?<Constant "HIP9011">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_19:
   \   00000000   0x........         DC32     `?<Constant "altdebug">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_20:
   \   00000000   0x........         DC32     `?<Constant "tpic_advanced_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_21:
   \   00000000   0x........         DC32     `?<Constant "knockdebug">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_22:
   \   00000000   0x........         DC32     engine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_23:
   \   00000000   0x........         DC32     `?<Constant "altcontrol">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_24:
   \   00000000   0x........         DC32     `?<Constant "test_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_25:
   \   00000000   0x........         DC32     `?<Constant "can_read">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_26:
   \   00000000   0x........         DC32     `?<Constant "can_write">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_27:
   \   00000000   0x........         DC32     `?<Constant "injection">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_28:
   \   00000000   0x........         DC32     `?<Constant "trigger_details">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_29:
   \   00000000   0x........         DC32     `?<Constant "ignition">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_30:
   \   00000000   0x........         DC32     `?<Constant "self_stimulation">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_31:
   \   00000000   0x........         DC32     `?<Constant "engine_control">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable75_32:
   \   00000000   0x........         DC32     `?<Constant "map_avg">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76:
   \   00000000   0x........         DC32     logger

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_1:
   \   00000000   0x73 0x65          DC8      "set"
   \              0x74 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_2:
   \   00000000   0x67 0x65          DC8      "get"
   \              0x74 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_3:
   \   00000000   0x........         DC32     `?<Constant "fuel_pump">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_4:
   \   00000000   0x........         DC32     `?<Constant "tunerstudio">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_5:
   \   00000000   0x........         DC32     `?<Constant "wave_analyzer">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_6:
   \   00000000   0x........         DC32     `?<Constant "idle_thread">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_7:
   \   00000000   0x........         DC32     `?<Constant "manual_spinning">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_8:
   \   00000000   0x........         DC32     `?<Constant "cylinder_cleanup">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_9:
   \   00000000   0x........         DC32     `?<Constant "unexpected [%s]">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_10:
   \   00000000   0x........         DC32     `?<Constant "enabled">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_11:
   \   00000000   0x........         DC32     `?<Constant "disabled">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_12:
   \   00000000   0x........         DC32     `?<Constant "[%s] %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_13:
   \   00000000   0x........         DC32     `?<Constant "injection enabled">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_14:
   \   00000000   0x........         DC32     `?<Constant "injection disabled">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_15:
   \   00000000   0x........         DC32     `?<Constant "ignition enabled">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_16:
   \   00000000   0x........         DC32     `?<Constant "ignition disabled">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_17:
   \   00000000   0x........         DC32     engine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_18:
   \   00000000   0x........         DC32     waveChartUsedSize

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_19:
   \   00000000   0x........         DC32     `?<Constant "waveChartUsedSize=%d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_20:
   \   00000000   0x40020410         DC32     0x40020410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_21:
   \   00000000   0x........         DC32     `?<Constant "console mode jumper: %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_22:
   \   00000000   0x........         DC32     `?<Constant "board test mode jumpe...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_23:
   \   00000000   0x........         DC32     `?<Constant "todo">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_24:
   \   00000000   0x........         DC32     `?<Constant "something">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_25:
   \   00000000   0x........         DC32     `?<Constant "date">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_26:
   \   00000000   0x........         DC32     `?<Constant "vsscoeff">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_27:
   \   00000000   0x........         DC32     `?<Constant "alt_t">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_28:
   \   00000000   0x........         DC32     `?<Constant "alt_offset">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_29:
   \   00000000   0x........         DC32     `?<Constant "alt_p">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_30:
   \   00000000   0x........         DC32     `?<Constant "step1rpm">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_31:
   \   00000000   0x........         DC32     `?<Constant "step1timing">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_32:
   \   00000000   0x........         DC32     `?<Constant "targetvbatt">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_33:
   \   00000000   0x........         DC32     _Z20doPrintConfigurationP6Engine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_34:
   \   00000000   0x........         DC32     `?<Constant "showconfig">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_35:
   \   00000000   0x........         DC32     _Z20printTemperatureInfov

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_36:
   \   00000000   0x........         DC32     `?<Constant "tempinfo">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_37:
   \   00000000   0x........         DC32     _Z12printTPSInfov

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_38:
   \   00000000   0x........         DC32     `?<Constant "tpsinfo">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_39:
   \   00000000   0x........         DC32     _Z12printAllInfov

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_40:
   \   00000000   0x........         DC32     `?<Constant "info">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_41:
   \   00000000   0x........         DC32     _Z17setIgnitionOffsetf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_42:
   \   00000000   0x........         DC32     `?<Constant "set_ignition_offset">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_43:
   \   00000000   0x........         DC32     _Z18setInjectionOffsetf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_44:
   \   00000000   0x........         DC32     `?<Constant "set_injection_offset">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_45:
   \   00000000   0x........         DC32     _Z27setGlobalTriggerAngleOffsetf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_46:
   \   00000000   0x........         DC32     `?<Constant "set_global_trigger_of...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_47:
   \   00000000   0x........         DC32     _Z18setSensorChartModei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_48:
   \   00000000   0x........         DC32     `?<Constant "set_sensor_chart_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_49:
   \   00000000   0x........         DC32     _Z18setFixedModeTimingi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_50:
   \   00000000   0x........         DC32     `?<Constant "set_fixed_mode_timing">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_51:
   \   00000000   0x........         DC32     _Z13setTimingModei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_52:
   \   00000000   0x........         DC32     `?<Constant "set_timing_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_53:
   \   00000000   0x........         DC32     _Z13setEngineTypei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_54:
   \   00000000   0x........         DC32     `?<Constant "set_engine_type">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_55:
   \   00000000   0x........         DC32     _Z19setInjectionPinModei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_56:
   \   00000000   0x........         DC32     `?<Constant "set_injection_pin_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_57:
   \   00000000   0x........         DC32     _Z18setIgnitionPinModei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_58:
   \   00000000   0x........         DC32     `?<Constant "set_ignition_pin_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_59:
   \   00000000   0x........         DC32     _Z14setIdlePinModei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_60:
   \   00000000   0x........         DC32     `?<Constant "set_idle_pin_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_61:
   \   00000000   0x........         DC32     _Z18setFuelPumpPinModei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_62:
   \   00000000   0x........         DC32     `?<Constant "set_fuel_pump_pin_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_63:
   \   00000000   0x........         DC32     _Z30setMalfunctionIndicatorPinModei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_64:
   \   00000000   0x........         DC32     `?<Constant "set_malfunction_indic...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_65:
   \   00000000   0x........         DC32     _Z5setOMi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_66:
   \   00000000   0x........         DC32     `?<Constant "set_operation_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_67:
   \   00000000   0x........         DC32     _Z23setGlobalFuelCorrectionf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_68:
   \   00000000   0x........         DC32     `?<Constant "set_global_fuel_corre...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_69:
   \   00000000   0x........         DC32     _Z15setCrankingFuelf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_70:
   \   00000000   0x........         DC32     `?<Constant "set_cranking_fuel">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_71:
   \   00000000   0x........         DC32     _Z14setCrankingRpmi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_72:
   \   00000000   0x........         DC32     `?<Constant "set_cranking_rpm">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_73:
   \   00000000   0x........         DC32     _Z22setCrankingTimingAnglef

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_74:
   \   00000000   0x........         DC32     `?<Constant "set_cranking_timing_a...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_75:
   \   00000000   0x........         DC32     _Z22setCrankingChargeAnglef

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_76:
   \   00000000   0x........         DC32     `?<Constant "set_cranking_charge_a...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_77:
   \   00000000   0x........         DC32     _Z15setIgnitionModei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_78:
   \   00000000   0x........         DC32     `?<Constant "set_ignition_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_79:
   \   00000000   0x........         DC32     _Z24setCrankingInjectionModei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_80:
   \   00000000   0x........         DC32     `?<Constant "set_cranking_injectio...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_81:
   \   00000000   0x........         DC32     _Z16setInjectionModei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_82:
   \   00000000   0x........         DC32     `?<Constant "set_injection_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_83:
   \   00000000   0x........         DC32     _Z19setWholePhaseMapCmdf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_84:
   \   00000000   0x........         DC32     `?<Constant "set_whole_phase_map">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_85:
   \   00000000   0x........         DC32     _Z20setWholeTimingMapCmdf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_86:
   \   00000000   0x........         DC32     `?<Constant "set_whole_timing_map">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_87:
   \   00000000   0x........         DC32     _Z18setWholeFuelMapCmdf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_88:
   \   00000000   0x........         DC32     `?<Constant "set_whole_fuel_map">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_89:
   \   00000000   0x........         DC32     _Z13setWholeVeCmdf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_90:
   \   00000000   0x........         DC32     `?<Constant "set_whole_ve_map">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_91:
   \   00000000   0x........         DC32     _Z10setFuelMapPKcS0_S0_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_92:
   \   00000000   0x........         DC32     `?<Constant "set_fuel_map">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_93:
   \   00000000   0x........         DC32     _Z17setWholeTimingMapf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_94:
   \   00000000   0x........         DC32     _Z12setTimingMapPKcS0_S0_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_95:
   \   00000000   0x........         DC32     `?<Constant "set_timing_map">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_96:
   \   00000000   0x........         DC32     _Z15setRpmHardLimiti

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_97:
   \   00000000   0x........         DC32     `?<Constant "set_rpm_hard_limit">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_98:
   \   00000000   0x........         DC32     _Z14setFiringOrderi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_99:
   \   00000000   0x........         DC32     `?<Constant "set_firing_order">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_100:
   \   00000000   0x........         DC32     _Z15setAlgorithmInti

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_101:
   \   00000000   0x........         DC32     `?<Constant "set_algorithm">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_102:
   \   00000000   0x........         DC32     _Z10stopEnginev

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_103:
   \   00000000   0x........         DC32     `?<Constant "stopengine">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_104:
   \   00000000   0x........         DC32     _Z15enableInjectionv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_105:
   \   00000000   0x........         DC32     `?<Constant "enable_injection">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_106:
   \   00000000   0x........         DC32     _Z16disableInjectionv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_107:
   \   00000000   0x........         DC32     `?<Constant "disable_injection">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_108:
   \   00000000   0x........         DC32     _Z14enableIgnitionv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_109:
   \   00000000   0x........         DC32     `?<Constant "enable_ignition">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_110:
   \   00000000   0x........         DC32     _Z15disableIgnitionv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_111:
   \   00000000   0x........         DC32     `?<Constant "disable_ignition">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_112:
   \   00000000   0x........         DC32     _Z9enableSpii

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_113:
   \   00000000   0x........         DC32     `?<Constant "enable_spi">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_114:
   \   00000000   0x........         DC32     _Z10disableSpii

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_115:
   \   00000000   0x........         DC32     `?<Constant "disable_spi">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_116:
   \   00000000   0x........         DC32     _Z6enablePKc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_117:
   \   00000000   0x........         DC32     `?<Constant "enable">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_118:
   \   00000000   0x........         DC32     _Z7disablePKc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_119:
   \   00000000   0x........         DC32     `?<Constant "disable">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_120:
   \   00000000   0x........         DC32     _Z15setToothedWheelii

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_121:
   \   00000000   0x........         DC32     `?<Constant "set_toothed_wheel">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_122:
   \   00000000   0x........         DC32     _Z14setTriggerTypei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_123:
   \   00000000   0x........         DC32     `?<Constant "set_trigger_type">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_124:
   \   00000000   0x........         DC32     _Z15setVBattDividerf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_125:
   \   00000000   0x........         DC32     `?<Constant "set_vbatt_divider">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_126:
   \   00000000   0x........         DC32     _Z14setInjectorLagf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_127:
   \   00000000   0x........         DC32     `?<Constant "set_injector_lag">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_128:
   \   00000000   0x........         DC32     _Z10setCltBiasf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_129:
   \   00000000   0x........         DC32     `?<Constant "set_clt_bias">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_130:
   \   00000000   0x........         DC32     _Z10setIatBiasf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_131:
   \   00000000   0x........         DC32     `?<Constant "set_iat_bias">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_132:
   \   00000000   0x........         DC32     _Z24setIdleSolenoidFrequencyi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_133:
   \   00000000   0x........         DC32     `?<Constant "set_idle_solenoid_freq">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_134:
   \   00000000   0x........         DC32     _Z13setFanSettingff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_135:
   \   00000000   0x........         DC32     `?<Constant "set_fan">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_136:
   \   00000000   0x........         DC32     _Z15showPinFunctionPKc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_137:
   \   00000000   0x........         DC32     `?<Constant "showpin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_138:
   \   00000000   0x........         DC32     _Z15setInjectionPinPKcS0_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_139:
   \   00000000   0x........         DC32     `?<Constant "set_injection_pin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_140:
   \   00000000   0x........         DC32     _Z14setIgnitionPinPKcS0_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_141:
   \   00000000   0x........         DC32     `?<Constant "set_ignition_pin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_142:
   \   00000000   0x........         DC32     _Z18setTriggerInputPinPKcS0_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_143:
   \   00000000   0x........         DC32     `?<Constant "set_trigger_input_pin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_144:
   \   00000000   0x........         DC32     _Z22setTriggerSimulatorPinPKcS0_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_145:
   \   00000000   0x........         DC32     `?<Constant "set_trigger_simulator...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_146:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_147:
   \   00000000   0x........         DC32     _Z11setEgtCSPinPKcS0_P21board_configuration_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_148:
   \   00000000   0x........         DC32     `?<Constant "set_egt_cs_pin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_149:
   \   00000000   0x........         DC32     _Z9setEgtSpii

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_150:
   \   00000000   0x........         DC32     `?<Constant "set_egt_spi">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_151:
   \   00000000   0x........         DC32     _Z23setTriggerSimulatorModePKcS0_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_152:
   \   00000000   0x........         DC32     `?<Constant "set_trigger_simulator...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_153:
   \   00000000   0x........         DC32     _Z14setFuelPumpPinPKc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_154:
   \   00000000   0x........         DC32     `?<Constant "set_fuel_pump_pin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_155:
   \   00000000   0x........         DC32     _Z8setACPinPKc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_156:
   \   00000000   0x........         DC32     `?<Constant "set_ac_pin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_157:
   \   00000000   0x........         DC32     _Z16setAlternatorPinPKc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_158:
   \   00000000   0x........         DC32     `?<Constant "set_alternator_pin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_159:
   \   00000000   0x........         DC32     _Z10setIdlePinPKc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_160:
   \   00000000   0x........         DC32     `?<Constant "set_idle_pin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_161:
   \   00000000   0x........         DC32     _Z15setMainRelayPinPKc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_162:
   \   00000000   0x........         DC32     `?<Constant "set_main_relay_pin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_163:
   \   00000000   0x........         DC32     _Z8setValuePKcS0_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_164:
   \   00000000   0x........         DC32     _Z8getValuePKc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_165:
   \   00000000   0x........         DC32     _Z17setAnalogInputPinPKcS0_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_166:
   \   00000000   0x........         DC32     `?<Constant "set_analog_input_pin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_167:
   \   00000000   0x........         DC32     _Z16setLogicInputPinPKcS0_

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_168:
   \   00000000   0x........         DC32     `?<Constant "set_logic_input_pin">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_169:
   \   00000000   0x........         DC32     _Z9setPotSpii

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable76_170:
   \   00000000   0x........         DC32     `?<Constant "set_pot_spi">`

   \                                 In section .init_array, align 4, keep-with-next, root
   \   00000000   0x........         DC32    RELOC_ARM_TARGET1 __sti__routine

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x66          DC8 "%f "
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "spi 1=%s/2=%s/3=%s">`:
   \   00000000   0x73 0x70          DC8 "spi 1=%s/2=%s/3=%s"
   \              0x69 0x20    
   \              0x31 0x3D    
   \              0x25 0x73    
   \              0x2F 0x32    
   \              0x3D 0x25    
   \              0x73 0x2F    
   \              0x33 0x3D    
   \              0x25 0x73    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "injectionPins: mode %s">`:
   \   00000000   0x69 0x6E          DC8 "injectionPins: mode %s"
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x50    
   \              0x69 0x6E    
   \              0x73 0x3A    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x25 0x73    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "injection #%d @ %s">`:
   \   00000000   0x69 0x6E          DC8 "injection #%d @ %s"
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x23 0x25    
   \              0x64 0x20    
   \              0x40 0x20    
   \              0x25 0x73    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ignitionPins: mode %s">`:
   \   00000000   0x69 0x67          DC8 "ignitionPins: mode %s"
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x50 0x69    
   \              0x6E 0x73    
   \              0x3A 0x20    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x20 0x25    
   \              0x73 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ignition #%d @ %s">`:
   \   00000000   0x69 0x67          DC8 "ignition #%d @ %s"
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x23    
   \              0x25 0x64    
   \              0x20 0x40    
   \              0x20 0x25    
   \              0x73 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "idlePin: mode %s @ %s...">`:
   \   00000000   0x69 0x64          DC8 "idlePin: mode %s @ %s freq=%d"
   \              0x6C 0x65    
   \              0x50 0x69    
   \              0x6E 0x3A    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x25 0x73    
   \              0x20 0x40    
   \              0x20 0x25    
   \              0x73 0x20    
   \              0x66 0x72    
   \              0x65 0x71    
   \              0x3D 0x25    
   \              0x64 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "malfunctionIndicatorn...">`:
   \   00000000   0x6D 0x61          DC8 "malfunctionIndicatorn: %s mode=%s"
   \              0x6C 0x66    
   \              0x75 0x6E    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x49    
   \              0x6E 0x64    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x6F 0x72    
   \              0x6E 0x3A    
   \              0x20 0x25    
   \              0x73 0x20    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x3D 0x25    
   \              0x73 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "fuelPumpPin: mode %s ...">`:
   \   00000000   0x66 0x75          DC8 "fuelPumpPin: mode %s @ %s"
   \              0x65 0x6C    
   \              0x50 0x75    
   \              0x6D 0x70    
   \              0x50 0x69    
   \              0x6E 0x3A    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x25 0x73    
   \              0x20 0x40    
   \              0x20 0x25    
   \              0x73 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "fanPin: mode %s @ %s">`:
   \   00000000   0x66 0x61          DC8 "fanPin: mode %s @ %s"
   \              0x6E 0x50    
   \              0x69 0x6E    
   \              0x3A 0x20    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x20 0x25    
   \              0x73 0x20    
   \              0x40 0x20    
   \              0x25 0x73    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "mainRelay: mode %s @ %s">`:
   \   00000000   0x6D 0x61          DC8 "mainRelay: mode %s @ %s"
   \              0x69 0x6E    
   \              0x52 0x65    
   \              0x6C 0x61    
   \              0x79 0x3A    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x25 0x73    
   \              0x20 0x40    
   \              0x20 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "alternator field: mod...">`:
   \   00000000   0x61 0x6C          DC8 "alternator field: mode %s @ %s"
   \              0x74 0x65    
   \              0x72 0x6E    
   \              0x61 0x74    
   \              0x6F 0x72    
   \              0x20 0x66    
   \              0x69 0x65    
   \              0x6C 0x64    
   \              0x3A 0x20    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x20 0x25    
   \              0x73 0x20    
   \              0x40 0x20    
   \              0x25 0x73    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "CUSTOM">`:
   \   00000000   0x43 0x55          DC8 "CUSTOM"
   \              0x53 0x54    
   \              0x4F 0x4D    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Neon95">`:
   \   00000000   0x4E 0x65          DC8 "Neon95"
   \              0x6F 0x6E    
   \              0x39 0x35    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Neon03">`:
   \   00000000   0x4E 0x65          DC8 "Neon03"
   \              0x6F 0x6E    
   \              0x30 0x33    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Aspire">`:
   \   00000000   0x41 0x73          DC8 "Aspire"
   \              0x70 0x69    
   \              0x72 0x65    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Fiesta">`:
   \   00000000   0x46 0x69          DC8 "Fiesta"
   \              0x65 0x73    
   \              0x74 0x61    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Primera">`:
   \   00000000   0x50 0x72          DC8 "Primera"
   \              0x69 0x6D    
   \              0x65 0x72    
   \              0x61 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Accord3">`:
   \   00000000   0x41 0x63          DC8 "Accord3"
   \              0x63 0x6F    
   \              0x72 0x64    
   \              0x33 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Accord2">`:
   \   00000000   0x41 0x63          DC8 "Accord2"
   \              0x63 0x6F    
   \              0x72 0x64    
   \              0x32 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "HondaD">`:
   \   00000000   0x48 0x6F          DC8 "HondaD"
   \              0x6E 0x64    
   \              0x61 0x44    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Fordi6">`:
   \   00000000   0x46 0x6F          DC8 "Fordi6"
   \              0x72 0x64    
   \              0x69 0x36    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Gy6139">`:
   \   00000000   0x47 0x79          DC8 "Gy6139"
   \              0x36 0x31    
   \              0x33 0x39    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "MiataNB">`:
   \   00000000   0x4D 0x69          DC8 "MiataNB"
   \              0x61 0x74    
   \              0x61 0x4E    
   \              0x42 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "M323">`:
   \   00000000   0x4D 0x33          DC8 "M323"
   \              0x32 0x33    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Saturn Ion">`:
   \   00000000   0x53 0x61          DC8 "Saturn Ion"
   \              0x74 0x75    
   \              0x72 0x6E    
   \              0x20 0x49    
   \              0x6F 0x6E    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "CoopR50">`:
   \   00000000   0x43 0x6F          DC8 "CoopR50"
   \              0x6F 0x70    
   \              0x52 0x35    
   \              0x30 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "EscrtGT">`:
   \   00000000   0x45 0x73          DC8 "EscrtGT"
   \              0x63 0x72    
   \              0x74 0x47    
   \              0x54 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "TU3JP">`:
   \   00000000   0x54 0x55          DC8 "TU3JP"
   \              0x33 0x4A    
   \              0x50 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Rvrv8">`:
   \   00000000   0x52 0x76          DC8 "Rvrv8"
   \              0x72 0x76    
   \              0x38 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Mi4G93">`:
   \   00000000   0x4D 0x69          DC8 "Mi4G93"
   \              0x34 0x47    
   \              0x39 0x33    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "MX590">`:
   \   00000000   0x4D 0x58          DC8 "MX590"
   \              0x35 0x39    
   \              0x30 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "MX594d">`:
   \   00000000   0x4D 0x58          DC8 "MX594d"
   \              0x35 0x39    
   \              0x34 0x64    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "MX594s">`:
   \   00000000   0x4D 0x58          DC8 "MX594s"
   \              0x35 0x39    
   \              0x34 0x73    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "MX596">`:
   \   00000000   0x4D 0x58          DC8 "MX596"
   \              0x35 0x39    
   \              0x36 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "BMWe34">`:
   \   00000000   0x42 0x4D          DC8 "BMWe34"
   \              0x57 0x65    
   \              0x33 0x34    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Test">`:
   \   00000000   0x54 0x65          DC8 "Test"
   \              0x73 0x74    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "VW_ABA">`:
   \   00000000   0x56 0x57          DC8 "VW_ABA"
   \              0x5F 0x41    
   \              0x42 0x41    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SACHS">`:
   \   00000000   0x53 0x41          DC8 "SACHS"
   \              0x43 0x48    
   \              0x53 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "GM_2_2">`:
   \   00000000   0x47 0x4D          DC8 "GM_2_2"
   \              0x5F 0x32    
   \              0x5F 0x32    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "DODGE_RAM">`:
   \   00000000   0x44 0x4F          DC8 "DODGE_RAM"
   \              0x44 0x47    
   \              0x45 0x5F    
   \              0x52 0x41    
   \              0x4D 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Mazda626">`:
   \   00000000   0x4D 0x61          DC8 "Mazda626"
   \              0x7A 0x64    
   \              0x61 0x36    
   \              0x32 0x36    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "UnknownType">`:
   \   00000000   0x55 0x6E          DC8 "UnknownType"
   \              0x6B 0x6E    
   \              0x6F 0x77    
   \              0x6E 0x54    
   \              0x79 0x70    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Template %s/%d trigge...">`:
   \   00000000   0x54 0x65          DC8 "Template %s/%d trigger %s/%s/%d"
   \              0x6D 0x70    
   \              0x6C 0x61    
   \              0x74 0x65    
   \              0x20 0x25    
   \              0x73 0x2F    
   \              0x25 0x64    
   \              0x20 0x74    
   \              0x72 0x69    
   \              0x67 0x67    
   \              0x65 0x72    
   \              0x20 0x25    
   \              0x73 0x2F    
   \              0x25 0x73    
   \              0x2F 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "configurationVersion=%d">`:
   \   00000000   0x63 0x6F          DC8 "configurationVersion=%d"
   \              0x6E 0x66    
   \              0x69 0x67    
   \              0x75 0x72    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x56    
   \              0x65 0x72    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x3D 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "rpmHardLimit: %d/oper...">`:
   \   00000000   0x72 0x70          DC8 "rpmHardLimit: %d/operationMode=%d"
   \              0x6D 0x48    
   \              0x61 0x72    
   \              0x64 0x4C    
   \              0x69 0x6D    
   \              0x69 0x74    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x2F 0x6F    
   \              0x70 0x65    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x3D 0x25    
   \              0x64 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "globalTriggerAngleOff...">`:
   \   00000000   0x67 0x6C          DC8 "globalTriggerAngleOffset=%f"
   \              0x6F 0x62    
   \              0x61 0x6C    
   \              0x54 0x72    
   \              0x69 0x67    
   \              0x67 0x65    
   \              0x72 0x41    
   \              0x6E 0x67    
   \              0x6C 0x65    
   \              0x4F 0x66    
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x3D 0x25    
   \              0x66 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "=== cranking ===">`:
   \   00000000   0x3D 0x3D          DC8 "=== cranking ==="
   \              0x3D 0x20    
   \              0x63 0x72    
   \              0x61 0x6E    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x20 0x3D    
   \              0x3D 0x3D    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "crankingRpm: %d">`:
   \   00000000   0x63 0x72          DC8 "crankingRpm: %d"
   \              0x61 0x6E    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x52 0x70    
   \              0x6D 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "cranking injection %s">`:
   \   00000000   0x63 0x72          DC8 "cranking injection %s"
   \              0x61 0x6E    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x20 0x69    
   \              0x6E 0x6A    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x25    
   \              0x73 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ignitionDwellForCrank...">`:
   \   00000000   0x69 0x67          DC8 "ignitionDwellForCrankingMs=%f"
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x44 0x77    
   \              0x65 0x6C    
   \              0x6C 0x46    
   \              0x6F 0x72    
   \              0x43 0x72    
   \              0x61 0x6E    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x4D 0x73    
   \              0x3D 0x25    
   \              0x66 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "cranking charge charg...">`:
   \   00000000   0x63 0x72          DC8 "cranking charge charge angle=%f fire at %f"
   \              0x61 0x6E    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x20 0x63    
   \              0x68 0x61    
   \              0x72 0x67    
   \              0x65 0x20    
   \              0x63 0x68    
   \              0x61 0x72    
   \              0x67 0x65    
   \              0x20 0x61    
   \              0x6E 0x67    
   \              0x6C 0x65    
   \              0x3D 0x25    
   \              0x66 0x20    
   \              0x66 0x69    
   \              0x72 0x65    
   \              0x20 0x61    
   \              0x74 0x20    
   \              0x25 0x66    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "=== ignition ===">`:
   \   00000000   0x3D 0x3D          DC8 "=== ignition ==="
   \              0x3D 0x20    
   \              0x69 0x67    
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x3D    
   \              0x3D 0x3D    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ignitionMode: %s/enab...">`:
   \   00000000   0x69 0x67          DC8 "ignitionMode: %s/enabled=%s"
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x3A 0x20    
   \              0x25 0x73    
   \              0x2F 0x65    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x64    
   \              0x3D 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "timingMode: %s">`:
   \   00000000   0x74 0x69          DC8 "timingMode: %s"
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x3A 0x20    
   \              0x25 0x73    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "fixedModeTiming: %d">`:
   \   00000000   0x66 0x69          DC8 "fixedModeTiming: %d"
   \              0x78 0x65    
   \              0x64 0x4D    
   \              0x6F 0x64    
   \              0x65 0x54    
   \              0x69 0x6D    
   \              0x69 0x6E    
   \              0x67 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "ignitionOffset=%f">`:
   \   00000000   0x69 0x67          DC8 "ignitionOffset=%f"
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x4F 0x66    
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x3D 0x25    
   \              0x66 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "=== injection ===">`:
   \   00000000   0x3D 0x3D          DC8 "=== injection ==="
   \              0x3D 0x20    
   \              0x69 0x6E    
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x3D 0x3D    
   \              0x3D 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "injection %s offset=%...">`:
   \   00000000   0x69 0x6E          DC8 "injection %s offset=%f/enabled=%s"
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x25 0x73    
   \              0x20 0x6F    
   \              0x66 0x66    
   \              0x73 0x65    
   \              0x74 0x3D    
   \              0x25 0x66    
   \              0x2F 0x65    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x64    
   \              0x3D 0x25    
   \              0x73 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "map_avg=%s/mil=%s/fp=...">`:
   \   00000000   0x6D 0x61          DC8 6DH, 61H, 70H, 5FH, 61H, 76H, 67H, 3DH
   \              0x70 0x5F    
   \              0x61 0x76    
   \              0x67 0x3D    
   \   00000008   0x25 0x73          DC8 25H, 73H, 2FH, 6DH, 69H, 6CH, 3DH, 25H
   \              0x2F 0x6D    
   \              0x69 0x6C    
   \              0x3D 0x25    
   \   00000010   0x73 0x2F          DC8 73H, 2FH, 66H, 70H, 3DH, 25H, 73H, 2FH
   \              0x66 0x70    
   \              0x3D 0x25    
   \              0x73 0x2F    
   \   00000018   0x74 0x73          DC8 74H, 73H, 3DH, 25H, 73H, 2FH, 77H, 61H
   \              0x3D 0x25    
   \              0x73 0x2F    
   \              0x77 0x61    
   \   00000020   0x3D 0x25          DC8 3DH, 25H, 73H, 2FH, 69H, 74H, 3DH, 25H
   \              0x73 0x2F    
   \              0x69 0x74    
   \              0x3D 0x25    
   \   00000028   0x73 0x2F          DC8 73H, 2FH, 66H, 61H, 73H, 74H, 41H, 64H
   \              0x66 0x61    
   \              0x73 0x74    
   \              0x41 0x64    
   \   00000030   0x63 0x3D          DC8 63H, 3DH, 25H, 73H, 0
   \              0x25 0x73    
   \              0x00         
   \   00000035   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "isManualSpinningMode=...">`:
   \   00000000   0x69 0x73          DC8 69H, 73H, 4DH, 61H, 6EH, 75H, 61H, 6CH
   \              0x4D 0x61    
   \              0x6E 0x75    
   \              0x61 0x6C    
   \   00000008   0x53 0x70          DC8 53H, 70H, 69H, 6EH, 6EH, 69H, 6EH, 67H
   \              0x69 0x6E    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \   00000010   0x4D 0x6F          DC8 4DH, 6FH, 64H, 65H, 3DH, 25H, 73H, 2FH
   \              0x64 0x65    
   \              0x3D 0x25    
   \              0x73 0x2F    
   \   00000018   0x69 0x73          DC8 69H, 73H, 43H, 79H, 6CH, 69H, 6EH, 64H
   \              0x43 0x79    
   \              0x6C 0x69    
   \              0x6E 0x64    
   \   00000020   0x65 0x72          DC8 65H, 72H, 43H, 6CH, 65H, 61H, 6EH, 75H
   \              0x43 0x6C    
   \              0x65 0x61    
   \              0x6E 0x75    
   \   00000028   0x70 0x45          DC8 70H, 45H, 6EH, 61H, 62H, 6CH, 65H, 64H
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x64    
   \   00000030   0x3D 0x25          DC8 3DH, 25H, 73H, 0
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "clutchUp@%s: %s">`:
   \   00000000   0x63 0x6C          DC8 "clutchUp@%s: %s"
   \              0x75 0x74    
   \              0x63 0x68    
   \              0x55 0x70    
   \              0x40 0x25    
   \              0x73 0x3A    
   \              0x20 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "clutchDown@%s: %s">`:
   \   00000000   0x63 0x6C          DC8 "clutchDown@%s: %s"
   \              0x75 0x74    
   \              0x63 0x68    
   \              0x44 0x6F    
   \              0x77 0x6E    
   \              0x40 0x25    
   \              0x73 0x3A    
   \              0x20 0x25    
   \              0x73 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "boardTestModeJumperPi...">`:
   \   00000000   0x62 0x6F          DC8 "boardTestModeJumperPin: %s/nesting=%d"
   \              0x61 0x72    
   \              0x64 0x54    
   \              0x65 0x73    
   \              0x74 0x4D    
   \              0x6F 0x64    
   \              0x65 0x4A    
   \              0x75 0x6D    
   \              0x70 0x65    
   \              0x72 0x50    
   \              0x69 0x6E    
   \              0x3A 0x20    
   \              0x25 0x73    
   \              0x2F 0x6E    
   \              0x65 0x73    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x3D 0x25    
   \              0x64 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "digitalPotentiometerS...">`:
   \   00000000   0x64 0x69          DC8 "digitalPotentiometerSpiDevice %d"
   \              0x67 0x69    
   \              0x74 0x61    
   \              0x6C 0x50    
   \              0x6F 0x74    
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x6F 0x6D    
   \              0x65 0x74    
   \              0x65 0x72    
   \              0x53 0x70    
   \              0x69 0x44    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "digitalPotentiometer ...">`:
   \   00000000   0x64 0x69          DC8 "digitalPotentiometer CS%d %s"
   \              0x67 0x69    
   \              0x74 0x61    
   \              0x6C 0x50    
   \              0x6F 0x74    
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x6F 0x6D    
   \              0x65 0x74    
   \              0x65 0x72    
   \              0x20 0x43    
   \              0x53 0x25    
   \              0x64 0x20    
   \              0x25 0x73    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "term">`:
   \   00000000   0x74 0x65          DC8 "term"
   \              0x72 0x6D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s volts=%f Celsius=%...">`:
   \   00000000   0x25 0x73          DC8 "%s volts=%f Celsius=%f sensorR=%f on channel %d"
   \              0x20 0x76    
   \              0x6F 0x6C    
   \              0x74 0x73    
   \              0x3D 0x25    
   \              0x66 0x20    
   \              0x43 0x65    
   \              0x6C 0x73    
   \              0x69 0x75    
   \              0x73 0x3D    
   \              0x25 0x66    
   \              0x20 0x73    
   \              0x65 0x6E    
   \              0x73 0x6F    
   \              0x72 0x52    
   \              0x3D 0x25    
   \              0x66 0x20    
   \              0x6F 0x6E    
   \              0x20 0x63    
   \              0x68 0x61    
   \              0x6E 0x6E    
   \              0x65 0x6C    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x40 0x25          DC8 "@%s"
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "C=%f/R=%f C=%f/R=%f C...">`:
   \   00000000   0x43 0x3D          DC8 "C=%f/R=%f C=%f/R=%f C=%f/R=%f"
   \              0x25 0x66    
   \              0x2F 0x52    
   \              0x3D 0x25    
   \              0x66 0x20    
   \              0x43 0x3D    
   \              0x25 0x66    
   \              0x2F 0x52    
   \              0x3D 0x25    
   \              0x66 0x20    
   \              0x43 0x3D    
   \              0x25 0x66    
   \              0x2F 0x52    
   \              0x3D 0x25    
   \              0x66 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "bias resistor=%fK A=%...">`:
   \   00000000   0x62 0x69          DC8 62H, 69H, 61H, 73H, 20H, 72H, 65H, 73H
   \              0x61 0x73    
   \              0x20 0x72    
   \              0x65 0x73    
   \   00000008   0x69 0x73          DC8 69H, 73H, 74H, 6FH, 72H, 3DH, 25H, 66H
   \              0x74 0x6F    
   \              0x72 0x3D    
   \              0x25 0x66    
   \   00000010   0x4B 0x20          DC8 4BH, 20H, 41H, 3DH, 25H, 2EH, 2EH, 31H
   \              0x41 0x3D    
   \              0x25 0x2E    
   \              0x2E 0x31    
   \   00000018   0x30 0x30          DC8 30H, 30H, 30H, 30H, 30H, 66H, 20H, 42H
   \              0x30 0x30    
   \              0x30 0x66    
   \              0x20 0x42    
   \   00000020   0x3D 0x25          DC8 3DH, 25H, 2EH, 2EH, 31H, 30H, 30H, 30H
   \              0x2E 0x2E    
   \              0x31 0x30    
   \              0x30 0x30    
   \   00000028   0x30 0x30          DC8 30H, 30H, 66H, 20H, 43H, 3DH, 25H, 2EH
   \              0x66 0x20    
   \              0x43 0x3D    
   \              0x25 0x2E    
   \   00000030   0x2E 0x31          DC8 2EH, 31H, 30H, 30H, 30H, 30H, 30H, 66H
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x66    
   \   00000038   0x00               DC8 0
   \   00000039   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "=====================...">`:
   \   00000000   0x3D 0x3D          DC8 "=============================="
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x3D 0x3D    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "NO TPS SENSOR">`:
   \   00000000   0x4E 0x4F          DC8 "NO TPS SENSOR"
   \              0x20 0x54    
   \              0x50 0x53    
   \              0x20 0x53    
   \              0x45 0x4E    
   \              0x53 0x4F    
   \              0x52 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "tps min %d/max %d v=%...">`:
   \   00000000   0x74 0x70          DC8 "tps min %d/max %d v=%f @%s%d"
   \              0x73 0x20    
   \              0x6D 0x69    
   \              0x6E 0x20    
   \              0x25 0x64    
   \              0x2F 0x6D    
   \              0x61 0x78    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x76 0x3D    
   \              0x25 0x66    
   \              0x20 0x40    
   \              0x25 0x73    
   \              0x25 0x64    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "current 10bit=%d valu...">`:
   \   00000000   0x63 0x75          DC8 "current 10bit=%d value=%f rate=%f"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x31 0x30    
   \              0x62 0x69    
   \              0x74 0x3D    
   \              0x25 0x64    
   \              0x20 0x76    
   \              0x61 0x6C    
   \              0x75 0x65    
   \              0x3D 0x25    
   \              0x66 0x20    
   \              0x72 0x61    
   \              0x74 0x65    
   \              0x3D 0x25    
   \              0x66 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x4C          DC8 "CLT"
   \              0x54 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "CLT sensing error">`:
   \   00000000   0x43 0x4C          DC8 "CLT sensing error"
   \              0x54 0x20    
   \              0x73 0x65    
   \              0x6E 0x73    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x49 0x41          DC8 "IAT"
   \              0x54 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "IAT sensing error">`:
   \   00000000   0x49 0x41          DC8 "IAT sensing error"
   \              0x54 0x20    
   \              0x73 0x65    
   \              0x6E 0x73    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "fan=%s @ %s">`:
   \   00000000   0x66 0x61          DC8 "fan=%s @ %s"
   \              0x6E 0x3D    
   \              0x25 0x73    
   \              0x20 0x40    
   \              0x20 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "A/C relay=%s @ %s">`:
   \   00000000   0x41 0x2F          DC8 "A/C relay=%s @ %s"
   \              0x43 0x20    
   \              0x72 0x65    
   \              0x6C 0x61    
   \              0x79 0x3D    
   \              0x25 0x73    
   \              0x20 0x40    
   \              0x20 0x25    
   \              0x73 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "toothed: total=%d/ski...">`:
   \   00000000   0x74 0x6F          DC8 "toothed: total=%d/skipped=%d"
   \              0x6F 0x74    
   \              0x68 0x65    
   \              0x64 0x3A    
   \              0x20 0x74    
   \              0x6F 0x74    
   \              0x61 0x6C    
   \              0x3D 0x25    
   \              0x64 0x2F    
   \              0x73 0x6B    
   \              0x69 0x70    
   \              0x70 0x65    
   \              0x64 0x3D    
   \              0x25 0x64    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting fuel mult=%f">`:
   \   00000000   0x73 0x65          DC8 "setting fuel mult=%f"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x66 0x75    
   \              0x65 0x6C    
   \              0x20 0x6D    
   \              0x75 0x6C    
   \              0x74 0x3D    
   \              0x25 0x66    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ON temp [%f] should b...">`:
   \   00000000   0x4F 0x4E          DC8 "ON temp [%f] should be above OFF temp [%f]"
   \              0x20 0x74    
   \              0x65 0x6D    
   \              0x70 0x20    
   \              0x5B 0x25    
   \              0x66 0x5D    
   \              0x20 0x73    
   \              0x68 0x6F    
   \              0x75 0x6C    
   \              0x64 0x20    
   \              0x62 0x65    
   \              0x20 0x61    
   \              0x62 0x6F    
   \              0x76 0x65    
   \              0x20 0x4F    
   \              0x46 0x46    
   \              0x20 0x74    
   \              0x65 0x6D    
   \              0x70 0x20    
   \              0x5B 0x25    
   \              0x66 0x5D    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Setting whole timing ...">`:
   \   00000000   0x53 0x65          DC8 "Setting whole timing map to %f"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x77 0x68    
   \              0x6F 0x6C    
   \              0x65 0x20    
   \              0x74 0x69    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x20 0x6D    
   \              0x61 0x70    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x25 0x66    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Setting whole injecti...">`:
   \   00000000   0x53 0x65          DC8 "Setting whole injection phase map to %f"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x77 0x68    
   \              0x6F 0x6C    
   \              0x65 0x20    
   \              0x69 0x6E    
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x70 0x68    
   \              0x61 0x73    
   \              0x65 0x20    
   \              0x6D 0x61    
   \              0x70 0x20    
   \              0x74 0x6F    
   \              0x20 0x25    
   \              0x66 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Setting whole timing ...">_1`:
   \   00000000   0x53 0x65          DC8 "Setting whole timing advance map to %f"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x77 0x68    
   \              0x6F 0x6C    
   \              0x65 0x20    
   \              0x74 0x69    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x20 0x61    
   \              0x64 0x76    
   \              0x61 0x6E    
   \              0x63 0x65    
   \              0x20 0x6D    
   \              0x61 0x70    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x25 0x66    
   \              0x00         
   \   00000027   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Setting whole VE map ...">`:
   \   00000000   0x53 0x65          DC8 "Setting whole VE map to %f"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x77 0x68    
   \              0x6F 0x6C    
   \              0x65 0x20    
   \              0x56 0x45    
   \              0x20 0x6D    
   \              0x61 0x70    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x25 0x66    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "WARNING: setting VE m...">`:
   \   00000000   0x57 0x41          DC8 57H, 41H, 52H, 4EH, 49H, 4EH, 47H, 3AH
   \              0x52 0x4E    
   \              0x49 0x4E    
   \              0x47 0x3A    
   \   00000008   0x20 0x73          DC8 20H, 73H, 65H, 74H, 74H, 69H, 6EH, 67H
   \              0x65 0x74    
   \              0x74 0x69    
   \              0x6E 0x67    
   \   00000010   0x20 0x56          DC8 20H, 56H, 45H, 20H, 6DH, 61H, 70H, 20H
   \              0x45 0x20    
   \              0x6D 0x61    
   \              0x70 0x20    
   \   00000018   0x6E 0x6F          DC8 6EH, 6FH, 74H, 20H, 69H, 6EH, 20H, 53H
   \              0x74 0x20    
   \              0x69 0x6E    
   \              0x20 0x53    
   \   00000020   0x44 0x20          DC8 44H, 20H, 6DH, 6FH, 64H, 65H, 20H, 69H
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x20 0x69    
   \   00000028   0x73 0x20          DC8 73H, 20H, 70H, 6FH, 69H, 6EH, 74H, 6CH
   \              0x70 0x6F    
   \              0x69 0x6E    
   \              0x74 0x6C    
   \   00000030   0x65 0x73          DC8 65H, 73H, 73H, 0
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Setting whole fuel ma...">`:
   \   00000000   0x53 0x65          DC8 "Setting whole fuel map to %f"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x77 0x68    
   \              0x6F 0x6C    
   \              0x65 0x20    
   \              0x66 0x75    
   \              0x65 0x6C    
   \              0x20 0x6D    
   \              0x61 0x70    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x25 0x66    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "WARNING: setting fuel...">`:
   \   00000000   0x57 0x41          DC8 "WARNING: setting fuel map in SD mode is pointless"
   \              0x52 0x4E    
   \              0x49 0x4E    
   \              0x47 0x3A    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x20 0x66    
   \              0x75 0x65    
   \              0x6C 0x20    
   \              0x6D 0x61    
   \              0x70 0x20    
   \              0x69 0x6E    
   \              0x20 0x53    
   \              0x44 0x20    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x70 0x6F    
   \              0x69 0x6E    
   \              0x74 0x6C    
   \              0x65 0x73    
   \              0x73 0x00    
   \   00000032   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "invalid pin name [%s]">`:
   \   00000000   0x69 0x6E          DC8 "invalid pin name [%s]"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x6E 0x61    
   \              0x6D 0x65    
   \              0x20 0x5B    
   \              0x25 0x73    
   \              0x5D 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting ignition pin[...">`:
   \   00000000   0x73 0x65          DC8 73H, 65H, 74H, 74H, 69H, 6EH, 67H, 20H
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \   00000008   0x69 0x67          DC8 69H, 67H, 6EH, 69H, 74H, 69H, 6FH, 6EH
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \   00000010   0x20 0x70          DC8 20H, 70H, 69H, 6EH, 5BH, 25H, 64H, 5DH
   \              0x69 0x6E    
   \              0x5B 0x25    
   \              0x64 0x5D    
   \   00000018   0x20 0x74          DC8 20H, 74H, 6FH, 20H, 25H, 73H, 20H, 70H
   \              0x6F 0x20    
   \              0x25 0x73    
   \              0x20 0x70    
   \   00000020   0x6C 0x65          DC8 6CH, 65H, 61H, 73H, 65H, 20H, 73H, 61H
   \              0x61 0x73    
   \              0x65 0x20    
   \              0x73 0x61    
   \   00000028   0x76 0x65          DC8 76H, 65H, 26H, 72H, 65H, 73H, 74H, 61H
   \              0x26 0x72    
   \              0x65 0x73    
   \              0x74 0x61    
   \   00000030   0x72 0x74          DC8 72H, 74H, 0
   \              0x00         
   \   00000033   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting %s pin to %s ...">`:
   \   00000000   0x73 0x65          DC8 "setting %s pin to %s please save&restart"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x25 0x73    
   \              0x20 0x70    
   \              0x69 0x6E    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x25 0x73    
   \              0x20 0x70    
   \              0x6C 0x65    
   \              0x61 0x73    
   \              0x65 0x20    
   \              0x73 0x61    
   \              0x76 0x65    
   \              0x26 0x72    
   \              0x65 0x73    
   \              0x74 0x61    
   \              0x72 0x74    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "idle">`:
   \   00000000   0x69 0x64          DC8 "idle"
   \              0x6C 0x65    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "main relay">`:
   \   00000000   0x6D 0x61          DC8 "main relay"
   \              0x69 0x6E    
   \              0x20 0x72    
   \              0x65 0x6C    
   \              0x61 0x79    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "alternator">`:
   \   00000000   0x61 0x6C          DC8 "alternator"
   \              0x74 0x65    
   \              0x72 0x6E    
   \              0x61 0x74    
   \              0x6F 0x72    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x41 0x2F          DC8 "A/C"
   \              0x43 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "fuelPump">`:
   \   00000000   0x66 0x75          DC8 "fuelPump"
   \              0x65 0x6C    
   \              0x50 0x75    
   \              0x6D 0x70    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting injection pin...">`:
   \   00000000   0x73 0x65          DC8 73H, 65H, 74H, 74H, 69H, 6EH, 67H, 20H
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \   00000008   0x69 0x6E          DC8 69H, 6EH, 6AH, 65H, 63H, 74H, 69H, 6FH
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \   00000010   0x6E 0x20          DC8 6EH, 20H, 70H, 69H, 6EH, 5BH, 25H, 64H
   \              0x70 0x69    
   \              0x6E 0x5B    
   \              0x25 0x64    
   \   00000018   0x5D 0x20          DC8 5DH, 20H, 74H, 6FH, 20H, 25H, 73H, 20H
   \              0x74 0x6F    
   \              0x20 0x25    
   \              0x73 0x20    
   \   00000020   0x70 0x6C          DC8 70H, 6CH, 65H, 61H, 73H, 65H, 20H, 73H
   \              0x65 0x61    
   \              0x73 0x65    
   \              0x20 0x73    
   \   00000028   0x61 0x76          DC8 61H, 76H, 65H, 26H, 72H, 65H, 73H, 74H
   \              0x65 0x26    
   \              0x72 0x65    
   \              0x73 0x74    
   \   00000030   0x61 0x72          DC8 61H, 72H, 74H, 0
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting trigger pin[%...">`:
   \   00000000   0x73 0x65          DC8 "setting trigger pin[%d] to %s please save&restart"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x74 0x72    
   \              0x69 0x67    
   \              0x67 0x65    
   \              0x72 0x20    
   \              0x70 0x69    
   \              0x6E 0x5B    
   \              0x25 0x64    
   \              0x5D 0x20    
   \              0x74 0x6F    
   \              0x20 0x25    
   \              0x73 0x20    
   \              0x70 0x6C    
   \              0x65 0x61    
   \              0x73 0x65    
   \              0x20 0x73    
   \              0x61 0x76    
   \              0x65 0x26    
   \              0x72 0x65    
   \              0x73 0x74    
   \              0x61 0x72    
   \              0x74 0x00    
   \   00000032   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting EGT CS pin[%d...">`:
   \   00000000   0x73 0x65          DC8 "setting EGT CS pin[%d] to %s please save&restart"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x45 0x47    
   \              0x54 0x20    
   \              0x43 0x53    
   \              0x20 0x70    
   \              0x69 0x6E    
   \              0x5B 0x25    
   \              0x64 0x5D    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x25 0x73    
   \              0x20 0x70    
   \              0x6C 0x65    
   \              0x61 0x73    
   \              0x65 0x20    
   \              0x73 0x61    
   \              0x76 0x65    
   \              0x26 0x72    
   \              0x65 0x73    
   \              0x74 0x61    
   \              0x72 0x74    
   \              0x00         
   \   00000031   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting trigger simul...">`:
   \   00000000   0x73 0x65          DC8 73H, 65H, 74H, 74H, 69H, 6EH, 67H, 20H
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \   00000008   0x74 0x72          DC8 74H, 72H, 69H, 67H, 67H, 65H, 72H, 20H
   \              0x69 0x67    
   \              0x67 0x65    
   \              0x72 0x20    
   \   00000010   0x73 0x69          DC8 73H, 69H, 6DH, 75H, 6CH, 61H, 74H, 6FH
   \              0x6D 0x75    
   \              0x6C 0x61    
   \              0x74 0x6F    
   \   00000018   0x72 0x20          DC8 72H, 20H, 70H, 69H, 6EH, 5BH, 25H, 64H
   \              0x70 0x69    
   \              0x6E 0x5B    
   \              0x25 0x64    
   \   00000020   0x5D 0x20          DC8 5DH, 20H, 74H, 6FH, 20H, 25H, 73H, 20H
   \              0x74 0x6F    
   \              0x20 0x25    
   \              0x73 0x20    
   \   00000028   0x70 0x6C          DC8 70H, 6CH, 65H, 61H, 73H, 65H, 20H, 73H
   \              0x65 0x61    
   \              0x73 0x65    
   \              0x20 0x73    
   \   00000030   0x61 0x76          DC8 61H, 76H, 65H, 26H, 72H, 65H, 73H, 74H
   \              0x65 0x26    
   \              0x72 0x65    
   \              0x73 0x74    
   \   00000038   0x61 0x72          DC8 61H, 72H, 74H, 0
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Error with [%s]">`:
   \   00000000   0x45 0x72          DC8 "Error with [%s]"
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x77 0x69    
   \              0x74 0x68    
   \              0x20 0x5B    
   \              0x25 0x73    
   \              0x5D 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x6D 0x61          DC8 "map"
   \              0x70 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting MAP to %s/%d">`:
   \   00000000   0x73 0x65          DC8 "setting MAP to %s/%d"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x4D 0x41    
   \              0x50 0x20    
   \              0x74 0x6F    
   \              0x20 0x25    
   \              0x73 0x2F    
   \              0x25 0x64    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x63 0x6C          DC8 "clt"
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting CLT to %s/%d">`:
   \   00000000   0x73 0x65          DC8 "setting CLT to %s/%d"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x43 0x4C    
   \              0x54 0x20    
   \              0x74 0x6F    
   \              0x20 0x25    
   \              0x73 0x2F    
   \              0x25 0x64    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x69 0x61          DC8 "iat"
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting IAT to %s/%d">`:
   \   00000000   0x73 0x65          DC8 "setting IAT to %s/%d"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x49 0x41    
   \              0x54 0x20    
   \              0x74 0x6F    
   \              0x20 0x25    
   \              0x73 0x2F    
   \              0x25 0x64    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x74 0x70          DC8 "tps"
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting TPS to %s/%d">`:
   \   00000000   0x73 0x65          DC8 "setting TPS to %s/%d"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x54 0x50    
   \              0x53 0x20    
   \              0x74 0x6F    
   \              0x20 0x25    
   \              0x73 0x2F    
   \              0x25 0x64    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting logic input p...">`:
   \   00000000   0x73 0x65          DC8 73H, 65H, 74H, 74H, 69H, 6EH, 67H, 20H
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \   00000008   0x6C 0x6F          DC8 6CH, 6FH, 67H, 69H, 63H, 20H, 69H, 6EH
   \              0x67 0x69    
   \              0x63 0x20    
   \              0x69 0x6E    
   \   00000010   0x70 0x75          DC8 70H, 75H, 74H, 20H, 70H, 69H, 6EH, 5BH
   \              0x74 0x20    
   \              0x70 0x69    
   \              0x6E 0x5B    
   \   00000018   0x25 0x64          DC8 25H, 64H, 5DH, 20H, 74H, 6FH, 20H, 25H
   \              0x5D 0x20    
   \              0x74 0x6F    
   \              0x20 0x25    
   \   00000020   0x73 0x20          DC8 73H, 20H, 70H, 6CH, 65H, 61H, 73H, 65H
   \              0x70 0x6C    
   \              0x65 0x61    
   \              0x73 0x65    
   \   00000028   0x20 0x73          DC8 20H, 73H, 61H, 76H, 65H, 26H, 72H, 65H
   \              0x61 0x76    
   \              0x65 0x26    
   \              0x72 0x65    
   \   00000030   0x73 0x74          DC8 73H, 74H, 61H, 72H, 74H, 0
   \              0x61 0x72    
   \              0x74 0x00    
   \   00000036   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Pin %s: [%s]">`:
   \   00000000   0x50 0x69          DC8 "Pin %s: [%s]"
   \              0x6E 0x20    
   \              0x25 0x73    
   \              0x3A 0x20    
   \              0x5B 0x25    
   \              0x73 0x5D    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Setting timing map en...">`:
   \   00000000   0x53 0x65          DC8 "Setting timing map entry %d:%d to %f"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x74 0x69    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x20 0x6D    
   \              0x61 0x70    
   \              0x20 0x65    
   \              0x6E 0x74    
   \              0x72 0x79    
   \              0x20 0x25    
   \              0x64 0x3A    
   \              0x25 0x64    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x25 0x66    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Setting fuel map entr...">`:
   \   00000000   0x53 0x65          DC8 "Setting fuel map entry %d:%d to %f"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x66 0x75    
   \              0x65 0x6C    
   \              0x20 0x6D    
   \              0x61 0x70    
   \              0x20 0x65    
   \              0x6E 0x74    
   \              0x72 0x79    
   \              0x20 0x25    
   \              0x64 0x3A    
   \              0x25 0x64    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x25 0x66    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "invalid spi index %d">`:
   \   00000000   0x69 0x6E          DC8 "invalid spi index %d"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x73 0x70    
   \              0x69 0x20    
   \              0x69 0x6E    
   \              0x64 0x65    
   \              0x78 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "fastadc">`:
   \   00000000   0x66 0x61          DC8 "fastadc"
   \              0x73 0x74    
   \              0x61 0x64    
   \              0x63 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "step1limimter">`:
   \   00000000   0x73 0x74          DC8 "step1limimter"
   \              0x65 0x70    
   \              0x31 0x6C    
   \              0x69 0x6D    
   \              0x69 0x6D    
   \              0x74 0x65    
   \              0x72 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "serial">`:
   \   00000000   0x73 0x65          DC8 "serial"
   \              0x72 0x69    
   \              0x61 0x6C    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "stepperidle">`:
   \   00000000   0x73 0x74          DC8 "stepperidle"
   \              0x65 0x70    
   \              0x70 0x65    
   \              0x72 0x69    
   \              0x64 0x6C    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "trigger_only_front">`:
   \   00000000   0x74 0x72          DC8 "trigger_only_front"
   \              0x69 0x67    
   \              0x67 0x65    
   \              0x72 0x5F    
   \              0x6F 0x6E    
   \              0x6C 0x79    
   \              0x5F 0x66    
   \              0x72 0x6F    
   \              0x6E 0x74    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "two_wire_batch">`:
   \   00000000   0x74 0x77          DC8 "two_wire_batch"
   \              0x6F 0x5F    
   \              0x77 0x69    
   \              0x72 0x65    
   \              0x5F 0x62    
   \              0x61 0x74    
   \              0x63 0x68    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "joystick">`:
   \   00000000   0x6A 0x6F          DC8 "joystick"
   \              0x79 0x73    
   \              0x74 0x69    
   \              0x63 0x6B    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "HIP9011">`:
   \   00000000   0x48 0x49          DC8 "HIP9011"
   \              0x50 0x39    
   \              0x30 0x31    
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "altdebug">`:
   \   00000000   0x61 0x6C          DC8 "altdebug"
   \              0x74 0x64    
   \              0x65 0x62    
   \              0x75 0x67    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "tpic_advanced_mode">`:
   \   00000000   0x74 0x70          DC8 "tpic_advanced_mode"
   \              0x69 0x63    
   \              0x5F 0x61    
   \              0x64 0x76    
   \              0x61 0x6E    
   \              0x63 0x65    
   \              0x64 0x5F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "knockdebug">`:
   \   00000000   0x6B 0x6E          DC8 "knockdebug"
   \              0x6F 0x63    
   \              0x6B 0x64    
   \              0x65 0x62    
   \              0x75 0x67    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "altcontrol">`:
   \   00000000   0x61 0x6C          DC8 "altcontrol"
   \              0x74 0x63    
   \              0x6F 0x6E    
   \              0x74 0x72    
   \              0x6F 0x6C    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x73 0x64          DC8 "sd"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x63 0x61          DC8 "can"
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "test_mode">`:
   \   00000000   0x74 0x65          DC8 "test_mode"
   \              0x73 0x74    
   \              0x5F 0x6D    
   \              0x6F 0x64    
   \              0x65 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "can_read">`:
   \   00000000   0x63 0x61          DC8 "can_read"
   \              0x6E 0x5F    
   \              0x72 0x65    
   \              0x61 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "can_write">`:
   \   00000000   0x63 0x61          DC8 "can_write"
   \              0x6E 0x5F    
   \              0x77 0x72    
   \              0x69 0x74    
   \              0x65 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "injection">`:
   \   00000000   0x69 0x6E          DC8 "injection"
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "trigger_details">`:
   \   00000000   0x74 0x72          DC8 "trigger_details"
   \              0x69 0x67    
   \              0x67 0x65    
   \              0x72 0x5F    
   \              0x64 0x65    
   \              0x74 0x61    
   \              0x69 0x6C    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "ignition">`:
   \   00000000   0x69 0x67          DC8 "ignition"
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "self_stimulation">`:
   \   00000000   0x73 0x65          DC8 "self_stimulation"
   \              0x6C 0x66    
   \              0x5F 0x73    
   \              0x74 0x69    
   \              0x6D 0x75    
   \              0x6C 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "engine_control">`:
   \   00000000   0x65 0x6E          DC8 "engine_control"
   \              0x67 0x69    
   \              0x6E 0x65    
   \              0x5F 0x63    
   \              0x6F 0x6E    
   \              0x74 0x72    
   \              0x6F 0x6C    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "map_avg">`:
   \   00000000   0x6D 0x61          DC8 "map_avg"
   \              0x70 0x5F    
   \              0x61 0x76    
   \              0x67 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x6D 0x69          DC8 "mil"
   \              0x6C 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "fuel_pump">`:
   \   00000000   0x66 0x75          DC8 "fuel_pump"
   \              0x65 0x6C    
   \              0x5F 0x70    
   \              0x75 0x6D    
   \              0x70 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "tunerstudio">`:
   \   00000000   0x74 0x75          DC8 "tunerstudio"
   \              0x6E 0x65    
   \              0x72 0x73    
   \              0x74 0x75    
   \              0x64 0x69    
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "wave_analyzer">`:
   \   00000000   0x77 0x61          DC8 "wave_analyzer"
   \              0x76 0x65    
   \              0x5F 0x61    
   \              0x6E 0x61    
   \              0x6C 0x79    
   \              0x7A 0x65    
   \              0x72 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "idle_thread">`:
   \   00000000   0x69 0x64          DC8 "idle_thread"
   \              0x6C 0x65    
   \              0x5F 0x74    
   \              0x68 0x72    
   \              0x65 0x61    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "manual_spinning">`:
   \   00000000   0x6D 0x61          DC8 "manual_spinning"
   \              0x6E 0x75    
   \              0x61 0x6C    
   \              0x5F 0x73    
   \              0x70 0x69    
   \              0x6E 0x6E    
   \              0x69 0x6E    
   \              0x67 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "cylinder_cleanup">`:
   \   00000000   0x63 0x79          DC8 "cylinder_cleanup"
   \              0x6C 0x69    
   \              0x6E 0x64    
   \              0x65 0x72    
   \              0x5F 0x63    
   \              0x6C 0x65    
   \              0x61 0x6E    
   \              0x75 0x70    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "unexpected [%s]">`:
   \   00000000   0x75 0x6E          DC8 "unexpected [%s]"
   \              0x65 0x78    
   \              0x70 0x65    
   \              0x63 0x74    
   \              0x65 0x64    
   \              0x20 0x5B    
   \              0x25 0x73    
   \              0x5D 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "[%s] %s">`:
   \   00000000   0x5B 0x25          DC8 "[%s] %s"
   \              0x73 0x5D    
   \              0x20 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "enabled">`:
   \   00000000   0x65 0x6E          DC8 "enabled"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "disabled">`:
   \   00000000   0x64 0x69          DC8 "disabled"
   \              0x73 0x61    
   \              0x62 0x6C    
   \              0x65 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "injection enabled">`:
   \   00000000   0x69 0x6E          DC8 "injection enabled"
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x65 0x6E    
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x64 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "injection disabled">`:
   \   00000000   0x69 0x6E          DC8 "injection disabled"
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x64 0x69    
   \              0x73 0x61    
   \              0x62 0x6C    
   \              0x65 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ignition enabled">`:
   \   00000000   0x69 0x67          DC8 "ignition enabled"
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x65    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x64    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ignition disabled">`:
   \   00000000   0x69 0x67          DC8 "ignition disabled"
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x64    
   \              0x69 0x73    
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x64 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "waveChartUsedSize=%d">`:
   \   00000000   0x77 0x61          DC8 "waveChartUsedSize=%d"
   \              0x76 0x65    
   \              0x43 0x68    
   \              0x61 0x72    
   \              0x74 0x55    
   \              0x73 0x65    
   \              0x64 0x53    
   \              0x69 0x7A    
   \              0x65 0x3D    
   \              0x25 0x64    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "console mode jumper: %s">`:
   \   00000000   0x63 0x6F          DC8 "console mode jumper: %s"
   \              0x6E 0x73    
   \              0x6F 0x6C    
   \              0x65 0x20    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x20 0x6A    
   \              0x75 0x6D    
   \              0x70 0x65    
   \              0x72 0x3A    
   \              0x20 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "board test mode jumpe...">`:
   \   00000000   0x62 0x6F          DC8 "board test mode jumper: %s"
   \              0x61 0x72    
   \              0x64 0x20    
   \              0x74 0x65    
   \              0x73 0x74    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x6A 0x75    
   \              0x6D 0x70    
   \              0x65 0x72    
   \              0x3A 0x20    
   \              0x25 0x73    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "todo">`:
   \   00000000   0x74 0x6F          DC8 "todo"
   \              0x64 0x6F    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "something">`:
   \   00000000   0x73 0x6F          DC8 "something"
   \              0x6D 0x65    
   \              0x74 0x68    
   \              0x69 0x6E    
   \              0x67 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "date">`:
   \   00000000   0x64 0x61          DC8 "date"
   \              0x74 0x65    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "vsscoeff">`:
   \   00000000   0x76 0x73          DC8 "vsscoeff"
   \              0x73 0x63    
   \              0x6F 0x65    
   \              0x66 0x66    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "alt_t">`:
   \   00000000   0x61 0x6C          DC8 "alt_t"
   \              0x74 0x5F    
   \              0x74 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "alt_offset">`:
   \   00000000   0x61 0x6C          DC8 "alt_offset"
   \              0x74 0x5F    
   \              0x6F 0x66    
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "alt_p">`:
   \   00000000   0x61 0x6C          DC8 "alt_p"
   \              0x74 0x5F    
   \              0x70 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "step1rpm">`:
   \   00000000   0x73 0x74          DC8 "step1rpm"
   \              0x65 0x70    
   \              0x31 0x72    
   \              0x70 0x6D    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "step1timing">`:
   \   00000000   0x73 0x74          DC8 "step1timing"
   \              0x65 0x70    
   \              0x31 0x74    
   \              0x69 0x6D    
   \              0x69 0x6E    
   \              0x67 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "targetvbatt">`:
   \   00000000   0x74 0x61          DC8 "targetvbatt"
   \              0x72 0x67    
   \              0x65 0x74    
   \              0x76 0x62    
   \              0x61 0x74    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "showconfig">`:
   \   00000000   0x73 0x68          DC8 "showconfig"
   \              0x6F 0x77    
   \              0x63 0x6F    
   \              0x6E 0x66    
   \              0x69 0x67    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "tempinfo">`:
   \   00000000   0x74 0x65          DC8 "tempinfo"
   \              0x6D 0x70    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "tpsinfo">`:
   \   00000000   0x74 0x70          DC8 "tpsinfo"
   \              0x73 0x69    
   \              0x6E 0x66    
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "info">`:
   \   00000000   0x69 0x6E          DC8 "info"
   \              0x66 0x6F    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_ignition_offset">`:
   \   00000000   0x73 0x65          DC8 "set_ignition_offset"
   \              0x74 0x5F    
   \              0x69 0x67    
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x5F 0x6F    
   \              0x66 0x66    
   \              0x73 0x65    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_injection_offset">`:
   \   00000000   0x73 0x65          DC8 "set_injection_offset"
   \              0x74 0x5F    
   \              0x69 0x6E    
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \              0x6F 0x66    
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_global_trigger_of...">`:
   \   00000000   0x73 0x65          DC8 "set_global_trigger_offset_angle"
   \              0x74 0x5F    
   \              0x67 0x6C    
   \              0x6F 0x62    
   \              0x61 0x6C    
   \              0x5F 0x74    
   \              0x72 0x69    
   \              0x67 0x67    
   \              0x65 0x72    
   \              0x5F 0x6F    
   \              0x66 0x66    
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x61 0x6E    
   \              0x67 0x6C    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_sensor_chart_mode">`:
   \   00000000   0x73 0x65          DC8 "set_sensor_chart_mode"
   \              0x74 0x5F    
   \              0x73 0x65    
   \              0x6E 0x73    
   \              0x6F 0x72    
   \              0x5F 0x63    
   \              0x68 0x61    
   \              0x72 0x74    
   \              0x5F 0x6D    
   \              0x6F 0x64    
   \              0x65 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_fixed_mode_timing">`:
   \   00000000   0x73 0x65          DC8 "set_fixed_mode_timing"
   \              0x74 0x5F    
   \              0x66 0x69    
   \              0x78 0x65    
   \              0x64 0x5F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x5F 0x74    
   \              0x69 0x6D    
   \              0x69 0x6E    
   \              0x67 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_timing_mode">`:
   \   00000000   0x73 0x65          DC8 "set_timing_mode"
   \              0x74 0x5F    
   \              0x74 0x69    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x5F 0x6D    
   \              0x6F 0x64    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_engine_type">`:
   \   00000000   0x73 0x65          DC8 "set_engine_type"
   \              0x74 0x5F    
   \              0x65 0x6E    
   \              0x67 0x69    
   \              0x6E 0x65    
   \              0x5F 0x74    
   \              0x79 0x70    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_injection_pin_mode">`:
   \   00000000   0x73 0x65          DC8 "set_injection_pin_mode"
   \              0x74 0x5F    
   \              0x69 0x6E    
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \              0x70 0x69    
   \              0x6E 0x5F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_ignition_pin_mode">`:
   \   00000000   0x73 0x65          DC8 "set_ignition_pin_mode"
   \              0x74 0x5F    
   \              0x69 0x67    
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x5F 0x70    
   \              0x69 0x6E    
   \              0x5F 0x6D    
   \              0x6F 0x64    
   \              0x65 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_idle_pin_mode">`:
   \   00000000   0x73 0x65          DC8 "set_idle_pin_mode"
   \              0x74 0x5F    
   \              0x69 0x64    
   \              0x6C 0x65    
   \              0x5F 0x70    
   \              0x69 0x6E    
   \              0x5F 0x6D    
   \              0x6F 0x64    
   \              0x65 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_fuel_pump_pin_mode">`:
   \   00000000   0x73 0x65          DC8 "set_fuel_pump_pin_mode"
   \              0x74 0x5F    
   \              0x66 0x75    
   \              0x65 0x6C    
   \              0x5F 0x70    
   \              0x75 0x6D    
   \              0x70 0x5F    
   \              0x70 0x69    
   \              0x6E 0x5F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_malfunction_indic...">`:
   \   00000000   0x73 0x65          DC8 "set_malfunction_indicator_pin_mode"
   \              0x74 0x5F    
   \              0x6D 0x61    
   \              0x6C 0x66    
   \              0x75 0x6E    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \              0x69 0x6E    
   \              0x64 0x69    
   \              0x63 0x61    
   \              0x74 0x6F    
   \              0x72 0x5F    
   \              0x70 0x69    
   \              0x6E 0x5F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_operation_mode">`:
   \   00000000   0x73 0x65          DC8 "set_operation_mode"
   \              0x74 0x5F    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_global_fuel_corre...">`:
   \   00000000   0x73 0x65          DC8 "set_global_fuel_correction"
   \              0x74 0x5F    
   \              0x67 0x6C    
   \              0x6F 0x62    
   \              0x61 0x6C    
   \              0x5F 0x66    
   \              0x75 0x65    
   \              0x6C 0x5F    
   \              0x63 0x6F    
   \              0x72 0x72    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_cranking_fuel">`:
   \   00000000   0x73 0x65          DC8 "set_cranking_fuel"
   \              0x74 0x5F    
   \              0x63 0x72    
   \              0x61 0x6E    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x5F 0x66    
   \              0x75 0x65    
   \              0x6C 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_cranking_rpm">`:
   \   00000000   0x73 0x65          DC8 "set_cranking_rpm"
   \              0x74 0x5F    
   \              0x63 0x72    
   \              0x61 0x6E    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x5F 0x72    
   \              0x70 0x6D    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_cranking_timing_a...">`:
   \   00000000   0x73 0x65          DC8 "set_cranking_timing_angle"
   \              0x74 0x5F    
   \              0x63 0x72    
   \              0x61 0x6E    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x5F 0x74    
   \              0x69 0x6D    
   \              0x69 0x6E    
   \              0x67 0x5F    
   \              0x61 0x6E    
   \              0x67 0x6C    
   \              0x65 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_cranking_charge_a...">`:
   \   00000000   0x73 0x65          DC8 "set_cranking_charge_angle"
   \              0x74 0x5F    
   \              0x63 0x72    
   \              0x61 0x6E    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x5F 0x63    
   \              0x68 0x61    
   \              0x72 0x67    
   \              0x65 0x5F    
   \              0x61 0x6E    
   \              0x67 0x6C    
   \              0x65 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_ignition_mode">`:
   \   00000000   0x73 0x65          DC8 "set_ignition_mode"
   \              0x74 0x5F    
   \              0x69 0x67    
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x5F 0x6D    
   \              0x6F 0x64    
   \              0x65 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_cranking_injectio...">`:
   \   00000000   0x73 0x65          DC8 "set_cranking_injection_mode"
   \              0x74 0x5F    
   \              0x63 0x72    
   \              0x61 0x6E    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x5F 0x69    
   \              0x6E 0x6A    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x5F 0x6D    
   \              0x6F 0x64    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_injection_mode">`:
   \   00000000   0x73 0x65          DC8 "set_injection_mode"
   \              0x74 0x5F    
   \              0x69 0x6E    
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_whole_phase_map">`:
   \   00000000   0x73 0x65          DC8 "set_whole_phase_map"
   \              0x74 0x5F    
   \              0x77 0x68    
   \              0x6F 0x6C    
   \              0x65 0x5F    
   \              0x70 0x68    
   \              0x61 0x73    
   \              0x65 0x5F    
   \              0x6D 0x61    
   \              0x70 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_whole_timing_map">`:
   \   00000000   0x73 0x65          DC8 "set_whole_timing_map"
   \              0x74 0x5F    
   \              0x77 0x68    
   \              0x6F 0x6C    
   \              0x65 0x5F    
   \              0x74 0x69    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x5F 0x6D    
   \              0x61 0x70    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_whole_fuel_map">`:
   \   00000000   0x73 0x65          DC8 "set_whole_fuel_map"
   \              0x74 0x5F    
   \              0x77 0x68    
   \              0x6F 0x6C    
   \              0x65 0x5F    
   \              0x66 0x75    
   \              0x65 0x6C    
   \              0x5F 0x6D    
   \              0x61 0x70    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_whole_ve_map">`:
   \   00000000   0x73 0x65          DC8 "set_whole_ve_map"
   \              0x74 0x5F    
   \              0x77 0x68    
   \              0x6F 0x6C    
   \              0x65 0x5F    
   \              0x76 0x65    
   \              0x5F 0x6D    
   \              0x61 0x70    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_fuel_map">`:
   \   00000000   0x73 0x65          DC8 "set_fuel_map"
   \              0x74 0x5F    
   \              0x66 0x75    
   \              0x65 0x6C    
   \              0x5F 0x6D    
   \              0x61 0x70    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_timing_map">`:
   \   00000000   0x73 0x65          DC8 "set_timing_map"
   \              0x74 0x5F    
   \              0x74 0x69    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x5F 0x6D    
   \              0x61 0x70    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_rpm_hard_limit">`:
   \   00000000   0x73 0x65          DC8 "set_rpm_hard_limit"
   \              0x74 0x5F    
   \              0x72 0x70    
   \              0x6D 0x5F    
   \              0x68 0x61    
   \              0x72 0x64    
   \              0x5F 0x6C    
   \              0x69 0x6D    
   \              0x69 0x74    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_firing_order">`:
   \   00000000   0x73 0x65          DC8 "set_firing_order"
   \              0x74 0x5F    
   \              0x66 0x69    
   \              0x72 0x69    
   \              0x6E 0x67    
   \              0x5F 0x6F    
   \              0x72 0x64    
   \              0x65 0x72    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_algorithm">`:
   \   00000000   0x73 0x65          DC8 "set_algorithm"
   \              0x74 0x5F    
   \              0x61 0x6C    
   \              0x67 0x6F    
   \              0x72 0x69    
   \              0x74 0x68    
   \              0x6D 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "stopengine">`:
   \   00000000   0x73 0x74          DC8 "stopengine"
   \              0x6F 0x70    
   \              0x65 0x6E    
   \              0x67 0x69    
   \              0x6E 0x65    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "enable_injection">`:
   \   00000000   0x65 0x6E          DC8 "enable_injection"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x5F 0x69    
   \              0x6E 0x6A    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "disable_injection">`:
   \   00000000   0x64 0x69          DC8 "disable_injection"
   \              0x73 0x61    
   \              0x62 0x6C    
   \              0x65 0x5F    
   \              0x69 0x6E    
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "enable_ignition">`:
   \   00000000   0x65 0x6E          DC8 "enable_ignition"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x5F 0x69    
   \              0x67 0x6E    
   \              0x69 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "disable_ignition">`:
   \   00000000   0x64 0x69          DC8 "disable_ignition"
   \              0x73 0x61    
   \              0x62 0x6C    
   \              0x65 0x5F    
   \              0x69 0x67    
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "enable_spi">`:
   \   00000000   0x65 0x6E          DC8 "enable_spi"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x5F 0x73    
   \              0x70 0x69    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "disable_spi">`:
   \   00000000   0x64 0x69          DC8 "disable_spi"
   \              0x73 0x61    
   \              0x62 0x6C    
   \              0x65 0x5F    
   \              0x73 0x70    
   \              0x69 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "enable">`:
   \   00000000   0x65 0x6E          DC8 "enable"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "disable">`:
   \   00000000   0x64 0x69          DC8 "disable"
   \              0x73 0x61    
   \              0x62 0x6C    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_toothed_wheel">`:
   \   00000000   0x73 0x65          DC8 "set_toothed_wheel"
   \              0x74 0x5F    
   \              0x74 0x6F    
   \              0x6F 0x74    
   \              0x68 0x65    
   \              0x64 0x5F    
   \              0x77 0x68    
   \              0x65 0x65    
   \              0x6C 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_trigger_type">`:
   \   00000000   0x73 0x65          DC8 "set_trigger_type"
   \              0x74 0x5F    
   \              0x74 0x72    
   \              0x69 0x67    
   \              0x67 0x65    
   \              0x72 0x5F    
   \              0x74 0x79    
   \              0x70 0x65    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_vbatt_divider">`:
   \   00000000   0x73 0x65          DC8 "set_vbatt_divider"
   \              0x74 0x5F    
   \              0x76 0x62    
   \              0x61 0x74    
   \              0x74 0x5F    
   \              0x64 0x69    
   \              0x76 0x69    
   \              0x64 0x65    
   \              0x72 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_injector_lag">`:
   \   00000000   0x73 0x65          DC8 "set_injector_lag"
   \              0x74 0x5F    
   \              0x69 0x6E    
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x6F 0x72    
   \              0x5F 0x6C    
   \              0x61 0x67    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_clt_bias">`:
   \   00000000   0x73 0x65          DC8 "set_clt_bias"
   \              0x74 0x5F    
   \              0x63 0x6C    
   \              0x74 0x5F    
   \              0x62 0x69    
   \              0x61 0x73    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_iat_bias">`:
   \   00000000   0x73 0x65          DC8 "set_iat_bias"
   \              0x74 0x5F    
   \              0x69 0x61    
   \              0x74 0x5F    
   \              0x62 0x69    
   \              0x61 0x73    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_idle_solenoid_freq">`:
   \   00000000   0x73 0x65          DC8 "set_idle_solenoid_freq"
   \              0x74 0x5F    
   \              0x69 0x64    
   \              0x6C 0x65    
   \              0x5F 0x73    
   \              0x6F 0x6C    
   \              0x65 0x6E    
   \              0x6F 0x69    
   \              0x64 0x5F    
   \              0x66 0x72    
   \              0x65 0x71    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_fan">`:
   \   00000000   0x73 0x65          DC8 "set_fan"
   \              0x74 0x5F    
   \              0x66 0x61    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "showpin">`:
   \   00000000   0x73 0x68          DC8 "showpin"
   \              0x6F 0x77    
   \              0x70 0x69    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_injection_pin">`:
   \   00000000   0x73 0x65          DC8 "set_injection_pin"
   \              0x74 0x5F    
   \              0x69 0x6E    
   \              0x6A 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \              0x70 0x69    
   \              0x6E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_ignition_pin">`:
   \   00000000   0x73 0x65          DC8 "set_ignition_pin"
   \              0x74 0x5F    
   \              0x69 0x67    
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x5F 0x70    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_trigger_input_pin">`:
   \   00000000   0x73 0x65          DC8 "set_trigger_input_pin"
   \              0x74 0x5F    
   \              0x74 0x72    
   \              0x69 0x67    
   \              0x67 0x65    
   \              0x72 0x5F    
   \              0x69 0x6E    
   \              0x70 0x75    
   \              0x74 0x5F    
   \              0x70 0x69    
   \              0x6E 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_trigger_simulator...">`:
   \   00000000   0x73 0x65          DC8 "set_trigger_simulator_pin"
   \              0x74 0x5F    
   \              0x74 0x72    
   \              0x69 0x67    
   \              0x67 0x65    
   \              0x72 0x5F    
   \              0x73 0x69    
   \              0x6D 0x75    
   \              0x6C 0x61    
   \              0x74 0x6F    
   \              0x72 0x5F    
   \              0x70 0x69    
   \              0x6E 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_egt_cs_pin">`:
   \   00000000   0x73 0x65          DC8 "set_egt_cs_pin"
   \              0x74 0x5F    
   \              0x65 0x67    
   \              0x74 0x5F    
   \              0x63 0x73    
   \              0x5F 0x70    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_egt_spi">`:
   \   00000000   0x73 0x65          DC8 "set_egt_spi"
   \              0x74 0x5F    
   \              0x65 0x67    
   \              0x74 0x5F    
   \              0x73 0x70    
   \              0x69 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_trigger_simulator...">_1`:
   \   00000000   0x73 0x65          DC8 "set_trigger_simulator_mode"
   \              0x74 0x5F    
   \              0x74 0x72    
   \              0x69 0x67    
   \              0x67 0x65    
   \              0x72 0x5F    
   \              0x73 0x69    
   \              0x6D 0x75    
   \              0x6C 0x61    
   \              0x74 0x6F    
   \              0x72 0x5F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_fuel_pump_pin">`:
   \   00000000   0x73 0x65          DC8 "set_fuel_pump_pin"
   \              0x74 0x5F    
   \              0x66 0x75    
   \              0x65 0x6C    
   \              0x5F 0x70    
   \              0x75 0x6D    
   \              0x70 0x5F    
   \              0x70 0x69    
   \              0x6E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_ac_pin">`:
   \   00000000   0x73 0x65          DC8 "set_ac_pin"
   \              0x74 0x5F    
   \              0x61 0x63    
   \              0x5F 0x70    
   \              0x69 0x6E    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_alternator_pin">`:
   \   00000000   0x73 0x65          DC8 "set_alternator_pin"
   \              0x74 0x5F    
   \              0x61 0x6C    
   \              0x74 0x65    
   \              0x72 0x6E    
   \              0x61 0x74    
   \              0x6F 0x72    
   \              0x5F 0x70    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_idle_pin">`:
   \   00000000   0x73 0x65          DC8 "set_idle_pin"
   \              0x74 0x5F    
   \              0x69 0x64    
   \              0x6C 0x65    
   \              0x5F 0x70    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_main_relay_pin">`:
   \   00000000   0x73 0x65          DC8 "set_main_relay_pin"
   \              0x74 0x5F    
   \              0x6D 0x61    
   \              0x69 0x6E    
   \              0x5F 0x72    
   \              0x65 0x6C    
   \              0x61 0x79    
   \              0x5F 0x70    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x73 0x65          DC8 "set"
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x67 0x65          DC8 "get"
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_analog_input_pin">`:
   \   00000000   0x73 0x65          DC8 "set_analog_input_pin"
   \              0x74 0x5F    
   \              0x61 0x6E    
   \              0x61 0x6C    
   \              0x6F 0x67    
   \              0x5F 0x69    
   \              0x6E 0x70    
   \              0x75 0x74    
   \              0x5F 0x70    
   \              0x69 0x6E    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_logic_input_pin">`:
   \   00000000   0x73 0x65          DC8 "set_logic_input_pin"
   \              0x74 0x5F    
   \              0x6C 0x6F    
   \              0x67 0x69    
   \              0x63 0x5F    
   \              0x69 0x6E    
   \              0x70 0x75    
   \              0x74 0x5F    
   \              0x70 0x69    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_pot_spi">`:
   \   00000000   0x73 0x65          DC8 "set_pot_spi"
   \              0x74 0x5F    
   \              0x70 0x6F    
   \              0x74 0x5F    
   \              0x73 0x70    
   \              0x69 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "settings control">`:
   \   00000000   0x73 0x65          DC8 "settings control"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x73    
   \              0x20 0x63    
   \              0x6F 0x6E    
   \              0x74 0x72    
   \              0x6F 0x6C    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   1066          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   __sti__routine()
         8   -> Logging::Logging(char const *, char *, int)
       8   disable(char const *)
         8   -> enableOrDisable(char const *, bool)
       8   disableIgnition()
         8   -> scheduleMsg
       8   disableInjection()
         8   -> scheduleMsg
       8   disableSpi(int)
         8   -> setSpiMode(int, bool)
       8   doPrintConfiguration(Engine *)
         8   -> printConfiguration(engine_configuration_s *)
       8   enable(char const *)
         8   -> enableOrDisable(char const *, bool)
       8   enableIgnition()
         8   -> scheduleMsg
       8   enableInjection()
         8   -> scheduleMsg
      16   enableOrDisable(char const *, bool)
        16   -> incrementGlobalConfigurationVersion()
        16   -> scheduleMsg
        16   -> strEqualCaseInsensitive
       8   enableSpi(int)
         8   -> setSpiMode(int, bool)
       0   getConfigurationName(engine_type_e)
       8   getValue(char const *)
         8   -> printDateTime()
         8   -> scheduleMsg
         8   -> strEqualCaseInsensitive
       8   initSettings(engine_configuration_s *)
         8   -> addConsoleAction
         8   -> addConsoleActionF
         8   -> addConsoleActionFF
         8   -> addConsoleActionI
         8   -> addConsoleActionII
         8   -> addConsoleActionP
         8   -> addConsoleActionS
         8   -> addConsoleActionSS
         8   -> addConsoleActionSSP
         8   -> addConsoleActionSSS
       8   printAllInfo()
         8   -> boolToString(bool)
         8   -> getHwPin(brain_pin_e)
         8   -> getHwPort(brain_pin_e)
         8   -> printTPSInfo()
         8   -> printTemperatureInfo()
         8   -> scheduleMsg
      56   printConfiguration(engine_configuration_s *)
        56   -> __aeabi_f2d
        56   -> boolToString(bool)
        56   -> getConfigurationName(engine_type_e)
        56   -> getEngine_load_mode_e(engine_load_mode_e)
        56   -> getGlobalConfigurationVersion()
        56   -> getIgnition_mode_e(ignition_mode_e)
        56   -> getInjection_mode_e(injection_mode_e)
        56   -> getTiming_mode_e(timing_mode_e)
        56   -> getTrigger_type_e(trigger_type_e)
        56   -> hwPortname(brain_pin_e)
        56   -> printOutputs(engine_configuration_s *)
        56   -> printSpiState(Logging *, board_configuration_s *)
        56   -> scheduleMsg
      24   printFloatArray(char const *, float *, int)
        24   -> __aeabi_f2d
        24   -> appendMsgPostfix
        24   -> appendMsgPrefix
        24   -> appendPrintf
        24   -> scheduleLogging
      24   printOutputs(engine_configuration_s *)
        24   -> getPin_output_mode_e(pin_output_mode_e)
        24   -> hwPortname(brain_pin_e)
        24   -> scheduleMsg
      24   printSpiState(Logging *, board_configuration_s *)
        24   -> boolToString(bool)
        24   -> scheduleMsg
      40   printTPSInfo()
        40   -> __aeabi_f2d
        40   -> getAdcChannelPin(adc_channel_e)
        40   -> getAdcChannelPort(adc_channel_e)
        40   -> getTPS()
        40   -> getTPS10bitAdc()
        40   -> getTPSVoltage()
        40   -> getTpsRateOfChange()
        40   -> portname(GPIO_TypeDef *)
        40   -> scheduleMsg
       8   printTemperatureInfo()
         8   -> OutputPin::getLogicValue()
         8   -> boolToString(bool)
         8   -> getCoolantTemperature()
         8   -> getIntakeAirTemperature()
         8   -> hwPortname(brain_pin_e)
         8   -> isValidCoolantTemperature(float)
         8   -> isValidIntakeAirTemperature(float)
         8   -> printThermistor(char const *, ThermistorConf *, ThermistorMath *)
         8   -> scheduleMsg
      80   printThermistor(char const *, ThermistorConf *, ThermistorMath *)
        80   -> __aeabi_f2d
        80   -> getInternalAdcValue(char const *, adc_channel_e)
        80   -> getPinNameByAdcChannel(adc_channel_e, char *)
        80   -> getResistance(ThermistorConf *)
        80   -> getTemperatureC(ThermistorConf *, ThermistorMath *)
        80   -> scheduleMsg
       8   setACPin(char const *)
         8   -> setIndividualPin(char const *, brain_pin_e *, char const *)
       8   setAlgorithmInt(int)
         8   -> doPrintConfiguration(Engine *)
         8   -> setAlgorithm(engine_load_mode_e)
       8   setAlternatorPin(char const *)
         8   -> setIndividualPin(char const *, brain_pin_e *, char const *)
      24   setAnalogInputPin(char const *, char const *)
        24   -> applyNewConfiguration
        24   -> getAdcChannel(brain_pin_e)
        24   -> parseBrainPin(char const *)
        24   -> scheduleMsg
        24   -> strEqual
       0   setCltBias(float)
      16   setCrankingChargeAngle(float)
        16   -> doPrintConfiguration(Engine *)
        16   -> incrementGlobalConfigurationVersion()
      16   setCrankingFuel(float)
        16   -> printTemperatureInfo()
       8   setCrankingInjectionMode(int)
         8   -> doPrintConfiguration(Engine *)
         8   -> incrementGlobalConfigurationVersion()
       8   setCrankingRpm(int)
         8   -> doPrintConfiguration(Engine *)
      16   setCrankingTimingAngle(float)
        16   -> doPrintConfiguration(Engine *)
        16   -> incrementGlobalConfigurationVersion()
      24   setEgtCSPin(char const *, char const *, board_configuration_s *)
        24   -> absI
        24   -> applyNewConfiguration
        24   -> atoi
        24   -> hwPortname(brain_pin_e)
        24   -> parseBrainPin(char const *)
        24   -> scheduleMsg
       0   setEgtSpi(int)
       8   setEngineType(int)
         8   -> WaveChart::resetWaveChart()
         8   -> doPrintConfiguration(Engine *)
         8   -> incrementGlobalConfigurationVersion()
         8   -> resetConfigurationExt(Logging *, engine_type_e)
         8   -> writeToFlashNow()
      24   setFanSetting(float, float)
        24   -> __aeabi_f2d
        24   -> scheduleMsg
       8   setFiringOrder(int)
         8   -> doPrintConfiguration(Engine *)
      16   setFixedModeTiming(int)
        16   -> doPrintConfiguration(Engine *)
        16   -> incrementGlobalConfigurationVersion()
      48   setFuelMap(char const *, char const *, char const *)
        48   -> __aeabi_f2d
        48   -> atoff
        48   -> findIndex(float const *, int, float)
        48   -> scheduleMsg
       8   setFuelPumpPin(char const *)
         8   -> setIndividualPin(char const *, brain_pin_e *, char const *)
       8   setFuelPumpPinMode(int)
         8   -> doPrintConfiguration(Engine *)
      16   setGlobalFuelCorrection(float)
        16   -> __aeabi_f2d
        16   -> scheduleMsg
      16   setGlobalTriggerAngleOffset(float)
        16   -> doPrintConfiguration(Engine *)
        16   -> incrementGlobalConfigurationVersion()
       0   setIatBias(float)
       8   setIdlePin(char const *)
         8   -> setIndividualPin(char const *, brain_pin_e *, char const *)
       8   setIdlePinMode(int)
         8   -> doPrintConfiguration(Engine *)
       0   setIdleSolenoidFrequency(int)
       8   setIgnitionMode(int)
         8   -> doPrintConfiguration(Engine *)
         8   -> incrementGlobalConfigurationVersion()
      16   setIgnitionOffset(float)
        16   -> doPrintConfiguration(Engine *)
        16   -> incrementGlobalConfigurationVersion()
      24   setIgnitionPin(char const *, char const *)
        24   -> applyNewConfiguration
        24   -> atoi
        24   -> hwPortname(brain_pin_e)
        24   -> parseBrainPin(char const *)
        24   -> scheduleMsg
       8   setIgnitionPinMode(int)
         8   -> doPrintConfiguration(Engine *)
      24   setIndividualPin(char const *, brain_pin_e *, char const *)
        24   -> applyNewConfiguration
        24   -> hwPortname(brain_pin_e)
        24   -> parseBrainPin(char const *)
        24   -> scheduleMsg
       8   setInjectionMode(int)
         8   -> doPrintConfiguration(Engine *)
         8   -> incrementGlobalConfigurationVersion()
      16   setInjectionOffset(float)
        16   -> doPrintConfiguration(Engine *)
        16   -> incrementGlobalConfigurationVersion()
      24   setInjectionPin(char const *, char const *)
        24   -> applyNewConfiguration
        24   -> atoi
        24   -> hwPortname(brain_pin_e)
        24   -> parseBrainPin(char const *)
        24   -> scheduleMsg
       8   setInjectionPinMode(int)
         8   -> doPrintConfiguration(Engine *)
       0   setInjectorLag(float)
      24   setLogicInputPin(char const *, char const *)
        24   -> atoi
        24   -> hwPortname(brain_pin_e)
        24   -> parseBrainPin(char const *)
        24   -> scheduleMsg
       8   setMainRelayPin(char const *)
         8   -> setIndividualPin(char const *, brain_pin_e *, char const *)
       8   setMalfunctionIndicatorPinMode(int)
         8   -> doPrintConfiguration(Engine *)
       8   setOM(int)
         8   -> doPrintConfiguration(Engine *)
       0   setPotSpi(int)
       8   setRpmHardLimit(int)
         8   -> doPrintConfiguration(Engine *)
       8   setSensorChartMode(int)
         8   -> doPrintConfiguration(Engine *)
      16   setSpiMode(int, bool)
        16   -> printSpiState(Logging *, board_configuration_s *)
        16   -> scheduleMsg
      48   setTimingMap(char const *, char const *, char const *)
        48   -> __aeabi_f2d
        48   -> atoff
        48   -> findIndex(float const *, int, float)
        48   -> scheduleMsg
       8   setTimingMode(int)
         8   -> doPrintConfiguration(Engine *)
         8   -> incrementGlobalConfigurationVersion()
      16   setToothedWheel(int, int)
        16   -> doPrintConfiguration(Engine *)
        16   -> incrementGlobalConfigurationVersion()
        16   -> scheduleMsg
        16   -> setToothedWheelConfiguration(TriggerShape *, int, int, operation_mode_e)
      24   setTriggerInputPin(char const *, char const *)
        24   -> applyNewConfiguration
        24   -> atoi
        24   -> hwPortname(brain_pin_e)
        24   -> parseBrainPin(char const *)
        24   -> scheduleMsg
      24   setTriggerSimulatorMode(char const *, char const *)
        24   -> absI
        24   -> atoi
      24   setTriggerSimulatorPin(char const *, char const *)
        24   -> absI
        24   -> applyNewConfiguration
        24   -> atoi
        24   -> hwPortname(brain_pin_e)
        24   -> parseBrainPin(char const *)
        24   -> scheduleMsg
       8   setTriggerType(int)
         8   -> doPrintConfiguration(Engine *)
         8   -> incrementGlobalConfigurationVersion()
       0   setVBattDivider(float)
      24   setValue(char const *, char const *)
        24   -> atoff
        24   -> atoi
        24   -> setAltPFactor(float)
        24   -> setDateTime(char const *)
        24   -> showAltInfo()
        24   -> strEqualCaseInsensitive
      16   setWholeFuelMapCmd(float)
        16   -> __aeabi_f2d
        16   -> scheduleMsg
        16   -> setWholeFuelMap(float)
      16   setWholePhaseMapCmd(float)
        16   -> __aeabi_f2d
        16   -> scheduleMsg
        16   -> setMap(float (*)[16], float)
      16   setWholeTimingMap(float)
        16   -> __aeabi_f2d
        16   -> scheduleMsg
      16   setWholeTimingMapCmd(float)
        16   -> __aeabi_f2d
        16   -> scheduleMsg
        16   -> setWholeTimingMap(float)
      16   setWholeVeCmd(float)
        16   -> __aeabi_f2d
        16   -> scheduleMsg
        16   -> setMap(float (*)[16], float)
      16   showPinFunction(char const *)
        16   -> getPinFunction(brain_pin_e)
        16   -> parseBrainPin(char const *)
        16   -> scheduleMsg
       8   stopEngine()
         8   -> getTimeNowNt


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "%f ">
      48  ?<Constant "%s volts=%f Celsius=%...">
      20  ?<Constant "=== cranking ===">
      20  ?<Constant "=== ignition ===">
      20  ?<Constant "=== injection ===">
      32  ?<Constant "=====================...">
       4  ?<Constant "@%s">
      20  ?<Constant "A/C relay=%s @ %s">
       4  ?<Constant "A/C">
       8  ?<Constant "Accord2">
       8  ?<Constant "Accord3">
       8  ?<Constant "Aspire">
       8  ?<Constant "BMWe34">
      32  ?<Constant "C=%f/R=%f C=%f/R=%f C...">
      20  ?<Constant "CLT sensing error">
       4  ?<Constant "CLT">
       8  ?<Constant "CUSTOM">
       8  ?<Constant "CoopR50">
      12  ?<Constant "DODGE_RAM">
      16  ?<Constant "Error with [%s]">
       8  ?<Constant "EscrtGT">
       8  ?<Constant "Fiesta">
       8  ?<Constant "Fordi6">
       8  ?<Constant "GM_2_2">
       8  ?<Constant "Gy6139">
       8  ?<Constant "HIP9011">
       8  ?<Constant "HondaD">
      20  ?<Constant "IAT sensing error">
       4  ?<Constant "IAT">
       8  ?<Constant "M323">
       8  ?<Constant "MX590">
       8  ?<Constant "MX594d">
       8  ?<Constant "MX594s">
       8  ?<Constant "MX596">
      12  ?<Constant "Mazda626">
       8  ?<Constant "Mi4G93">
       8  ?<Constant "MiataNB">
      16  ?<Constant "NO TPS SENSOR">
       8  ?<Constant "Neon03">
       8  ?<Constant "Neon95">
      44  ?<Constant "ON temp [%f] should b...">
      16  ?<Constant "Pin %s: [%s]">
       8  ?<Constant "Primera">
       8  ?<Constant "Rvrv8">
       8  ?<Constant "SACHS">
      12  ?<Constant "Saturn Ion">
      36  ?<Constant "Setting fuel map entr...">
      40  ?<Constant "Setting timing map en...">
      28  ?<Constant "Setting whole VE map ...">
      32  ?<Constant "Setting whole fuel ma...">
      40  ?<Constant "Setting whole injecti...">
      32  ?<Constant "Setting whole timing ...">
      40  ?<Constant "Setting whole timing ...">_1
       8  ?<Constant "TU3JP">
      32  ?<Constant "Template %s/%d trigge...">
       8  ?<Constant "Test">
      12  ?<Constant "UnknownType">
       8  ?<Constant "VW_ABA">
      52  ?<Constant "WARNING: setting VE m...">
      52  ?<Constant "WARNING: setting fuel...">
       8  ?<Constant "[%s] %s">
      12  ?<Constant "alt_offset">
       8  ?<Constant "alt_p">
       8  ?<Constant "alt_t">
      12  ?<Constant "altcontrol">
      12  ?<Constant "altdebug">
      32  ?<Constant "alternator field: mod...">
      12  ?<Constant "alternator">
      60  ?<Constant "bias resistor=%fK A=%...">
      28  ?<Constant "board test mode jumpe...">
      40  ?<Constant "boardTestModeJumperPi...">
       4  ?<Constant "can">
      12  ?<Constant "can_read">
      12  ?<Constant "can_write">
       4  ?<Constant "clt">
      20  ?<Constant "clutchDown@%s: %s">
      16  ?<Constant "clutchUp@%s: %s">
      24  ?<Constant "configurationVersion=%d">
      24  ?<Constant "console mode jumper: %s">
      44  ?<Constant "cranking charge charg...">
      24  ?<Constant "cranking injection %s">
      16  ?<Constant "crankingRpm: %d">
      36  ?<Constant "current 10bit=%d valu...">
      20  ?<Constant "cylinder_cleanup">
       8  ?<Constant "date">
      32  ?<Constant "digitalPotentiometer ...">
      36  ?<Constant "digitalPotentiometerS...">
       8  ?<Constant "disable">
      20  ?<Constant "disable_ignition">
      20  ?<Constant "disable_injection">
      12  ?<Constant "disable_spi">
      12  ?<Constant "disabled">
       8  ?<Constant "enable">
      16  ?<Constant "enable_ignition">
      20  ?<Constant "enable_injection">
      12  ?<Constant "enable_spi">
       8  ?<Constant "enabled">
      16  ?<Constant "engine_control">
      12  ?<Constant "fan=%s @ %s">
      24  ?<Constant "fanPin: mode %s @ %s">
       8  ?<Constant "fastadc">
      20  ?<Constant "fixedModeTiming: %d">
      12  ?<Constant "fuelPump">
      28  ?<Constant "fuelPumpPin: mode %s ...">
      12  ?<Constant "fuel_pump">
       4  ?<Constant "get">
      28  ?<Constant "globalTriggerAngleOff...">
       4  ?<Constant "iat">
       8  ?<Constant "idle">
      32  ?<Constant "idlePin: mode %s @ %s...">
      12  ?<Constant "idle_thread">
      20  ?<Constant "ignition #%d @ %s">
      20  ?<Constant "ignition disabled">
      20  ?<Constant "ignition enabled">
      12  ?<Constant "ignition">
      32  ?<Constant "ignitionDwellForCrank...">
      28  ?<Constant "ignitionMode: %s/enab...">
      20  ?<Constant "ignitionOffset=%f">
      24  ?<Constant "ignitionPins: mode %s">
       8  ?<Constant "info">
      20  ?<Constant "injection #%d @ %s">
      36  ?<Constant "injection %s offset=%...">
      20  ?<Constant "injection disabled">
      20  ?<Constant "injection enabled">
      12  ?<Constant "injection">
      24  ?<Constant "injectionPins: mode %s">
      24  ?<Constant "invalid pin name [%s]">
      24  ?<Constant "invalid spi index %d">
      52  ?<Constant "isManualSpinningMode=...">
      12  ?<Constant "joystick">
      12  ?<Constant "knockdebug">
      12  ?<Constant "main relay">
      24  ?<Constant "mainRelay: mode %s @ %s">
      36  ?<Constant "malfunctionIndicatorn...">
      16  ?<Constant "manual_spinning">
       4  ?<Constant "map">
       8  ?<Constant "map_avg">
      56  ?<Constant "map_avg=%s/mil=%s/fp=...">
       4  ?<Constant "mil">
      36  ?<Constant "rpmHardLimit: %d/oper...">
       4  ?<Constant "sd">
      20  ?<Constant "self_stimulation">
       8  ?<Constant "serial">
       4  ?<Constant "set">
      12  ?<Constant "set_ac_pin">
      16  ?<Constant "set_algorithm">
      20  ?<Constant "set_alternator_pin">
      24  ?<Constant "set_analog_input_pin">
      16  ?<Constant "set_clt_bias">
      28  ?<Constant "set_cranking_charge_a...">
      20  ?<Constant "set_cranking_fuel">
      28  ?<Constant "set_cranking_injectio...">
      20  ?<Constant "set_cranking_rpm">
      28  ?<Constant "set_cranking_timing_a...">
      16  ?<Constant "set_egt_cs_pin">
      12  ?<Constant "set_egt_spi">
      16  ?<Constant "set_engine_type">
       8  ?<Constant "set_fan">
      20  ?<Constant "set_firing_order">
      24  ?<Constant "set_fixed_mode_timing">
      16  ?<Constant "set_fuel_map">
      20  ?<Constant "set_fuel_pump_pin">
      24  ?<Constant "set_fuel_pump_pin_mode">
      28  ?<Constant "set_global_fuel_corre...">
      32  ?<Constant "set_global_trigger_of...">
      16  ?<Constant "set_iat_bias">
      16  ?<Constant "set_idle_pin">
      20  ?<Constant "set_idle_pin_mode">
      24  ?<Constant "set_idle_solenoid_freq">
      20  ?<Constant "set_ignition_mode">
      20  ?<Constant "set_ignition_offset">
      20  ?<Constant "set_ignition_pin">
      24  ?<Constant "set_ignition_pin_mode">
      20  ?<Constant "set_injection_mode">
      24  ?<Constant "set_injection_offset">
      20  ?<Constant "set_injection_pin">
      24  ?<Constant "set_injection_pin_mode">
      20  ?<Constant "set_injector_lag">
      20  ?<Constant "set_logic_input_pin">
      20  ?<Constant "set_main_relay_pin">
      36  ?<Constant "set_malfunction_indic...">
      20  ?<Constant "set_operation_mode">
      12  ?<Constant "set_pot_spi">
      20  ?<Constant "set_rpm_hard_limit">
      24  ?<Constant "set_sensor_chart_mode">
      16  ?<Constant "set_timing_map">
      16  ?<Constant "set_timing_mode">
      20  ?<Constant "set_toothed_wheel">
      24  ?<Constant "set_trigger_input_pin">
      28  ?<Constant "set_trigger_simulator...">
      28  ?<Constant "set_trigger_simulator...">_1
      20  ?<Constant "set_trigger_type">
      20  ?<Constant "set_vbatt_divider">
      20  ?<Constant "set_whole_fuel_map">
      20  ?<Constant "set_whole_phase_map">
      24  ?<Constant "set_whole_timing_map">
      20  ?<Constant "set_whole_ve_map">
      44  ?<Constant "setting %s pin to %s ...">
      24  ?<Constant "setting CLT to %s/%d">
      52  ?<Constant "setting EGT CS pin[%d...">
      24  ?<Constant "setting IAT to %s/%d">
      24  ?<Constant "setting MAP to %s/%d">
      24  ?<Constant "setting TPS to %s/%d">
      24  ?<Constant "setting fuel mult=%f">
      52  ?<Constant "setting ignition pin[...">
      52  ?<Constant "setting injection pin...">
      56  ?<Constant "setting logic input p...">
      52  ?<Constant "setting trigger pin[%...">
      60  ?<Constant "setting trigger simul...">
      20  ?<Constant "settings control">
      12  ?<Constant "showconfig">
       8  ?<Constant "showpin">
      12  ?<Constant "something">
      20  ?<Constant "spi 1=%s/2=%s/3=%s">
      16  ?<Constant "step1limimter">
      12  ?<Constant "step1rpm">
      12  ?<Constant "step1timing">
      12  ?<Constant "stepperidle">
      12  ?<Constant "stopengine">
      12  ?<Constant "targetvbatt">
      12  ?<Constant "tempinfo">
       8  ?<Constant "term">
      12  ?<Constant "test_mode">
      16  ?<Constant "timingMode: %s">
       8  ?<Constant "todo">
      32  ?<Constant "toothed: total=%d/ski...">
      20  ?<Constant "tpic_advanced_mode">
      32  ?<Constant "tps min %d/max %d v=%...">
       4  ?<Constant "tps">
       8  ?<Constant "tpsinfo">
      16  ?<Constant "trigger_details">
      20  ?<Constant "trigger_only_front">
      12  ?<Constant "tunerstudio">
      16  ?<Constant "two_wire_batch">
      16  ?<Constant "unexpected [%s]">
      12  ?<Constant "vsscoeff">
      24  ?<Constant "waveChartUsedSize=%d">
      16  ?<Constant "wave_analyzer">
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable23
       4  ??DataTable23_1
       4  ??DataTable24
       4  ??DataTable25
       4  ??DataTable26
       4  ??DataTable27
       4  ??DataTable28
       4  ??DataTable29
       4  ??DataTable29_1
       4  ??DataTable3
       4  ??DataTable30
       4  ??DataTable31
       4  ??DataTable32
       4  ??DataTable32_1
       4  ??DataTable33
       4  ??DataTable34
       4  ??DataTable35
       4  ??DataTable35_1
       4  ??DataTable35_2
       4  ??DataTable35_3
       4  ??DataTable35_4
       4  ??DataTable35_5
       4  ??DataTable35_6
       4  ??DataTable36
       4  ??DataTable36_1
       4  ??DataTable37
       4  ??DataTable37_1
       4  ??DataTable37_10
       4  ??DataTable37_11
       4  ??DataTable37_12
       4  ??DataTable37_2
       4  ??DataTable37_3
       4  ??DataTable37_4
       4  ??DataTable37_5
       4  ??DataTable37_6
       4  ??DataTable37_7
       4  ??DataTable37_8
       4  ??DataTable37_9
       4  ??DataTable38
       4  ??DataTable38_1
       4  ??DataTable39
       4  ??DataTable39_1
       4  ??DataTable40
       4  ??DataTable40_1
       4  ??DataTable40_2
       4  ??DataTable40_3
       4  ??DataTable40_4
       4  ??DataTable40_5
       4  ??DataTable40_6
       4  ??DataTable41
       4  ??DataTable41_1
       4  ??DataTable41_2
       4  ??DataTable42
       4  ??DataTable42_1
       4  ??DataTable43
       4  ??DataTable43_1
       4  ??DataTable43_2
       4  ??DataTable43_3
       4  ??DataTable44
       4  ??DataTable44_1
       4  ??DataTable44_2
       4  ??DataTable45
       4  ??DataTable46
       4  ??DataTable46_1
       4  ??DataTable47
       4  ??DataTable47_1
       4  ??DataTable47_2
       4  ??DataTable48
       4  ??DataTable50
       4  ??DataTable50_1
       4  ??DataTable51
       4  ??DataTable52
       4  ??DataTable52_1
       4  ??DataTable53
       4  ??DataTable53_1
       4  ??DataTable54
       4  ??DataTable54_1
       4  ??DataTable55
       4  ??DataTable55_1
       4  ??DataTable56
       4  ??DataTable59
       4  ??DataTable59_1
       4  ??DataTable59_2
       4  ??DataTable59_3
       4  ??DataTable59_4
       4  ??DataTable59_5
       4  ??DataTable60
       4  ??DataTable60_1
       4  ??DataTable61
       4  ??DataTable61_1
       4  ??DataTable62
       4  ??DataTable62_1
       4  ??DataTable62_2
       4  ??DataTable63
       4  ??DataTable63_1
       4  ??DataTable63_2
       4  ??DataTable64
       4  ??DataTable64_1
       4  ??DataTable64_2
       4  ??DataTable64_3
       4  ??DataTable65
       4  ??DataTable65_1
       4  ??DataTable65_10
       4  ??DataTable65_11
       4  ??DataTable65_12
       4  ??DataTable65_13
       4  ??DataTable65_14
       4  ??DataTable65_2
       4  ??DataTable65_3
       4  ??DataTable65_4
       4  ??DataTable65_5
       4  ??DataTable65_6
       4  ??DataTable65_7
       4  ??DataTable65_8
       4  ??DataTable65_9
       4  ??DataTable66
       4  ??DataTable66_1
       4  ??DataTable66_2
       4  ??DataTable66_3
       4  ??DataTable67
       4  ??DataTable68
       4  ??DataTable71
       4  ??DataTable71_1
       4  ??DataTable71_2
       4  ??DataTable71_3
       4  ??DataTable71_4
       4  ??DataTable74
       4  ??DataTable74_1
       4  ??DataTable74_2
       4  ??DataTable75
       4  ??DataTable75_1
       4  ??DataTable75_10
       4  ??DataTable75_11
       4  ??DataTable75_12
       4  ??DataTable75_13
       4  ??DataTable75_14
       4  ??DataTable75_15
       4  ??DataTable75_16
       4  ??DataTable75_17
       4  ??DataTable75_18
       4  ??DataTable75_19
       4  ??DataTable75_2
       4  ??DataTable75_20
       4  ??DataTable75_21
       4  ??DataTable75_22
       4  ??DataTable75_23
       4  ??DataTable75_24
       4  ??DataTable75_25
       4  ??DataTable75_26
       4  ??DataTable75_27
       4  ??DataTable75_28
       4  ??DataTable75_29
       4  ??DataTable75_3
       4  ??DataTable75_30
       4  ??DataTable75_31
       4  ??DataTable75_32
       4  ??DataTable75_4
       4  ??DataTable75_5
       4  ??DataTable75_6
       4  ??DataTable75_7
       4  ??DataTable75_8
       4  ??DataTable75_9
       4  ??DataTable76
       4  ??DataTable76_1
       4  ??DataTable76_10
       4  ??DataTable76_100
       4  ??DataTable76_101
       4  ??DataTable76_102
       4  ??DataTable76_103
       4  ??DataTable76_104
       4  ??DataTable76_105
       4  ??DataTable76_106
       4  ??DataTable76_107
       4  ??DataTable76_108
       4  ??DataTable76_109
       4  ??DataTable76_11
       4  ??DataTable76_110
       4  ??DataTable76_111
       4  ??DataTable76_112
       4  ??DataTable76_113
       4  ??DataTable76_114
       4  ??DataTable76_115
       4  ??DataTable76_116
       4  ??DataTable76_117
       4  ??DataTable76_118
       4  ??DataTable76_119
       4  ??DataTable76_12
       4  ??DataTable76_120
       4  ??DataTable76_121
       4  ??DataTable76_122
       4  ??DataTable76_123
       4  ??DataTable76_124
       4  ??DataTable76_125
       4  ??DataTable76_126
       4  ??DataTable76_127
       4  ??DataTable76_128
       4  ??DataTable76_129
       4  ??DataTable76_13
       4  ??DataTable76_130
       4  ??DataTable76_131
       4  ??DataTable76_132
       4  ??DataTable76_133
       4  ??DataTable76_134
       4  ??DataTable76_135
       4  ??DataTable76_136
       4  ??DataTable76_137
       4  ??DataTable76_138
       4  ??DataTable76_139
       4  ??DataTable76_14
       4  ??DataTable76_140
       4  ??DataTable76_141
       4  ??DataTable76_142
       4  ??DataTable76_143
       4  ??DataTable76_144
       4  ??DataTable76_145
       4  ??DataTable76_146
       4  ??DataTable76_147
       4  ??DataTable76_148
       4  ??DataTable76_149
       4  ??DataTable76_15
       4  ??DataTable76_150
       4  ??DataTable76_151
       4  ??DataTable76_152
       4  ??DataTable76_153
       4  ??DataTable76_154
       4  ??DataTable76_155
       4  ??DataTable76_156
       4  ??DataTable76_157
       4  ??DataTable76_158
       4  ??DataTable76_159
       4  ??DataTable76_16
       4  ??DataTable76_160
       4  ??DataTable76_161
       4  ??DataTable76_162
       4  ??DataTable76_163
       4  ??DataTable76_164
       4  ??DataTable76_165
       4  ??DataTable76_166
       4  ??DataTable76_167
       4  ??DataTable76_168
       4  ??DataTable76_169
       4  ??DataTable76_17
       4  ??DataTable76_170
       4  ??DataTable76_18
       4  ??DataTable76_19
       4  ??DataTable76_2
       4  ??DataTable76_20
       4  ??DataTable76_21
       4  ??DataTable76_22
       4  ??DataTable76_23
       4  ??DataTable76_24
       4  ??DataTable76_25
       4  ??DataTable76_26
       4  ??DataTable76_27
       4  ??DataTable76_28
       4  ??DataTable76_29
       4  ??DataTable76_3
       4  ??DataTable76_30
       4  ??DataTable76_31
       4  ??DataTable76_32
       4  ??DataTable76_33
       4  ??DataTable76_34
       4  ??DataTable76_35
       4  ??DataTable76_36
       4  ??DataTable76_37
       4  ??DataTable76_38
       4  ??DataTable76_39
       4  ??DataTable76_4
       4  ??DataTable76_40
       4  ??DataTable76_41
       4  ??DataTable76_42
       4  ??DataTable76_43
       4  ??DataTable76_44
       4  ??DataTable76_45
       4  ??DataTable76_46
       4  ??DataTable76_47
       4  ??DataTable76_48
       4  ??DataTable76_49
       4  ??DataTable76_5
       4  ??DataTable76_50
       4  ??DataTable76_51
       4  ??DataTable76_52
       4  ??DataTable76_53
       4  ??DataTable76_54
       4  ??DataTable76_55
       4  ??DataTable76_56
       4  ??DataTable76_57
       4  ??DataTable76_58
       4  ??DataTable76_59
       4  ??DataTable76_6
       4  ??DataTable76_60
       4  ??DataTable76_61
       4  ??DataTable76_62
       4  ??DataTable76_63
       4  ??DataTable76_64
       4  ??DataTable76_65
       4  ??DataTable76_66
       4  ??DataTable76_67
       4  ??DataTable76_68
       4  ??DataTable76_69
       4  ??DataTable76_7
       4  ??DataTable76_70
       4  ??DataTable76_71
       4  ??DataTable76_72
       4  ??DataTable76_73
       4  ??DataTable76_74
       4  ??DataTable76_75
       4  ??DataTable76_76
       4  ??DataTable76_77
       4  ??DataTable76_78
       4  ??DataTable76_79
       4  ??DataTable76_8
       4  ??DataTable76_80
       4  ??DataTable76_81
       4  ??DataTable76_82
       4  ??DataTable76_83
       4  ??DataTable76_84
       4  ??DataTable76_85
       4  ??DataTable76_86
       4  ??DataTable76_87
       4  ??DataTable76_88
       4  ??DataTable76_89
       4  ??DataTable76_9
       4  ??DataTable76_90
       4  ??DataTable76_91
       4  ??DataTable76_92
       4  ??DataTable76_93
       4  ??DataTable76_94
       4  ??DataTable76_95
       4  ??DataTable76_96
       4  ??DataTable76_97
       4  ??DataTable76_98
       4  ??DataTable76_99
    1000  LOGGING_BUFFER
      24  __sti__routine()
      14  disable(char const *)
      36  disableIgnition()
      36  disableInjection()
      14  disableSpi(int)
      16  doPrintConfiguration(Engine *)
      14  enable(char const *)
      36  enableIgnition()
      36  enableInjection()
    1218  enableOrDisable(char const *, bool)
      14  enableSpi(int)
     312  getConfigurationName(engine_type_e)
      52  getValue(char const *)
     572  initSettings(engine_configuration_s *)
      60  logger
      16  pinNameBuffer
     126  printAllInfo()
     872  printConfiguration(engine_configuration_s *)
      76  printFloatArray(char const *, float *, int)
     436  printOutputs(engine_configuration_s *)
      72  printSpiState(Logging *, board_configuration_s *)
     202  printTPSInfo()
     196  printTemperatureInfo()
     310  printThermistor(char const *, ThermistorConf *, ThermistorMath *)
      24  setACPin(char const *)
      22  setAlgorithmInt(int)
      26  setAlternatorPin(char const *)
     230  setAnalogInputPin(char const *, char const *)
      12  setCltBias(float)
      40  setCrankingChargeAngle(float)
      30  setCrankingFuel(float)
      30  setCrankingInjectionMode(int)
      26  setCrankingRpm(int)
      40  setCrankingTimingAngle(float)
     116  setEgtCSPin(char const *, char const *, board_configuration_s *)
      12  setEgtSpi(int)
      64  setEngineType(int)
      90  setFanSetting(float, float)
      26  setFiringOrder(int)
      44  setFixedModeTiming(int)
     178  setFuelMap(char const *, char const *, char const *)
      26  setFuelPumpPin(char const *)
      24  setFuelPumpPinMode(int)
      80  setGlobalFuelCorrection(float)
      40  setGlobalTriggerAngleOffset(float)
      10  setIatBias(float)
      22  setIdlePin(char const *)
      24  setIdlePinMode(int)
      10  setIdleSolenoidFrequency(int)
      30  setIgnitionMode(int)
      40  setIgnitionOffset(float)
      88  setIgnitionPin(char const *, char const *)
      26  setIgnitionPinMode(int)
      66  setIndividualPin(char const *, brain_pin_e *, char const *)
      30  setInjectionMode(int)
      40  setInjectionOffset(float)
      88  setInjectionPin(char const *, char const *)
      24  setInjectionPinMode(int)
      10  setInjectorLag(float)
      88  setLogicInputPin(char const *, char const *)
      26  setMainRelayPin(char const *)
      26  setMalfunctionIndicatorPinMode(int)
      26  setOM(int)
      12  setPotSpi(int)
      26  setRpmHardLimit(int)
      26  setSensorChartMode(int)
     130  setSpiMode(int, bool)
     178  setTimingMap(char const *, char const *, char const *)
      30  setTimingMode(int)
      64  setToothedWheel(int, int)
      94  setTriggerInputPin(char const *, char const *)
      76  setTriggerSimulatorMode(char const *, char const *)
     108  setTriggerSimulatorPin(char const *, char const *)
      30  setTriggerType(int)
      10  setVBattDivider(float)
     246  setValue(char const *, char const *)
      72  setWholeFuelMapCmd(float)
      58  setWholePhaseMapCmd(float)
      84  setWholeTimingMap(float)
      46  setWholeTimingMapCmd(float)
      80  setWholeVeCmd(float)
      54  showPinFunction(char const *)
      18  stopEngine()
       4  -- Other

 
 1 076 bytes in section .bss
     4 bytes in section .init_array
 4 616 bytes in section .rodata
 9 320 bytes in section .text
 
 9 324 bytes of CODE  memory
 4 616 bytes of CONST memory
 1 076 bytes of DATA  memory

Errors: none
Warnings: 1
