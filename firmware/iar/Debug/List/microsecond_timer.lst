###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:54 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\microse #
#                       cond_timer.cpp                                        #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\microse #
#                       cond_timer.cpp -lCN F:\stuff\rusefi_sourceforge\firmw #
#                       are\iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\f #
#                       irmware\iar\Debug\List\ -o                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\   #
#                       --no_cse --no_unroll --no_inline --no_code_motion     #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\m #
#                       icrosecond_timer.lst                                  #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\mi #
#                       crosecond_timer.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\hw_layer\microsecond_timer.cpp
      1          /**
      2           * @file	microsecond_timer.cpp
      3           *
      4           * Here we have a 1MHz timer dedicated to event scheduling. We are using one of the 32-bit timers here,
      5           * so this timer can schedule events up to 4B/100M ~ 4000 seconds ~ 1 hour from current time.
      6           *
      7           * GPT5 timer clock: 84000000Hz
      8           * If only it was a better multiplier of 2 (84000000 = 328125 * 256)
      9           *
     10           * @date Apr 14, 2014
     11           * @author Andrey Belomutskiy, (c) 2012-2015
     12           */
     13          
     14          #include "main.h"
     15          #include "microsecond_timer.h"
     16          #include "scheduler.h"
     17          #include "rfiutil.h"
     18          
     19          // https://my.st.com/public/STe2ecommunities/mcu/Lists/cortex_mx_stm32/Flat.aspx?RootFolder=https%3a%2f%2fmy.st.com%2fpublic%2fSTe2ecommunities%2fmcu%2fLists%2fcortex_mx_stm32%2fInterrupt%20on%20CEN%20bit%20setting%20in%20TIM7&FolderCTID=0x01200200770978C69A1141439FE559EB459D7580009C4E14902C3CDE46A77F0FFD06506F5B&currentviews=474
     20          
     21          #if (EFI_PROD_CODE && HAL_USE_GPT) || defined(__DOXYGEN__)
     22          
     23          #define GPTDEVICE GPTD5
     24          

   \                                 In section .bss, align 8
     25          static volatile efitick_t lastSetTimerTimeNt;
   \                     lastSetTimerTimeNt:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     26          static int lastSetTimerValue;
   \                     lastSetTimerValue:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     27          static volatile bool isTimerPending = FALSE;
   \                     isTimerPending:
   \   00000000                      DS8 1
     28          

   \                                 In section .bss, align 4
     29          static volatile int timerCallbackCounter = 0;
   \                     timerCallbackCounter:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     30          static volatile int timerRestartCounter = 0;
   \                     timerRestartCounter:
   \   00000000                      DS8 4
     31          

   \                                 In section .bss, align 4
     32          schfunc_t globalTimerCallback;
   \                     globalTimerCallback:
   \   00000000                      DS8 4
     33          

   \                                 In section .bss, align 8
     34          static THD_WORKING_AREA(mwThreadStack, UTILITY_THREAD_STACK_SIZE);
   \                     mwThreadStack:
   \   00000000                      DS8 712
     35          

   \                                 In section .bss, align 4
     36          static const char * msg;
   \                     msg:
   \   00000000                      DS8 4
     37          

   \                                 In section .bss, align 4
     38          static char buff[32];
   \                     buff:
   \   00000000                      DS8 32
     39          
     40          /**
     41           * sets the alarm to the specified number of microseconds from now.
     42           * This function should be invoked under kernel lock which would disable interrupts.
     43           */

   \                                 In section .text, align 2, keep-with-next
     44          void setHardwareUsTimer(int32_t timeUs) {
   \                     setHardwareUsTimer:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     45          	if (timeUs == 1)
   \   00000004   0x2C01             CMP      R4,#+1
   \   00000006   0xD101             BNE.N    ??setHardwareUsTimer_0
     46          		timeUs = 2; // for some reason '1' does not really work
   \   00000008   0x2002             MOVS     R0,#+2
   \   0000000A   0x0004             MOVS     R4,R0
     47          	efiAssertVoid(timeUs > 0, "not positive timeUs");
   \                     ??setHardwareUsTimer_0:
   \   0000000C   0x2C01             CMP      R4,#+1
   \   0000000E   0xDA03             BGE.N    ??setHardwareUsTimer_1
   \   00000010   0x....             LDR.N    R0,??DataTable4
   \   00000012   0x.... 0x....      BL       firmwareError
   \   00000016   0xE020             B.N      ??setHardwareUsTimer_2
     48          	efiAssertVoid(timeUs < 10 * US_PER_SECOND, "setHardwareUsTimer() too large");
   \                     ??setHardwareUsTimer_1:
   \   00000018   0x....             LDR.N    R0,??DataTable4_1  ;; 0x989680
   \   0000001A   0x4284             CMP      R4,R0
   \   0000001C   0xDB03             BLT.N    ??setHardwareUsTimer_3
   \   0000001E   0x....             LDR.N    R0,??DataTable4_2
   \   00000020   0x.... 0x....      BL       firmwareError
   \   00000024   0xE019             B.N      ??setHardwareUsTimer_2
     49          
     50          	if (GPTDEVICE.state == GPT_ONESHOT)
   \                     ??setHardwareUsTimer_3:
   \   00000026   0x....             LDR.N    R0,??DataTable4_3
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x2804             CMP      R0,#+4
   \   0000002C   0xD102             BNE.N    ??setHardwareUsTimer_4
     51          		gptStopTimerI(&GPTDEVICE);
   \   0000002E   0x....             LDR.N    R0,??DataTable4_3
   \   00000030   0x.... 0x....      BL       gptStopTimerI
     52          	gptStartOneShotI(&GPTDEVICE, timeUs);
   \                     ??setHardwareUsTimer_4:
   \   00000034   0x0021             MOVS     R1,R4
   \   00000036   0x....             LDR.N    R0,??DataTable4_3
   \   00000038   0x.... 0x....      BL       gptStartOneShotI
     53          
     54          	lastSetTimerTimeNt = getTimeNowNt();
   \   0000003C   0x.... 0x....      BL       getTimeNowNt
   \   00000040   0x....             LDR.N    R2,??DataTable4_4
   \   00000042   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     55          	lastSetTimerValue = timeUs;
   \   00000046   0x....             LDR.N    R0,??DataTable4_5
   \   00000048   0x6004             STR      R4,[R0, #+0]
     56          	isTimerPending = TRUE;
   \   0000004A   0x....             LDR.N    R0,??DataTable4_6
   \   0000004C   0x2101             MOVS     R1,#+1
   \   0000004E   0x7001             STRB     R1,[R0, #+0]
     57          	timerRestartCounter++;
   \   00000050   0x....             LDR.N    R0,??DataTable4_7
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x1C40             ADDS     R0,R0,#+1
   \   00000056   0x....             LDR.N    R1,??DataTable4_7
   \   00000058   0x6008             STR      R0,[R1, #+0]
     58          }
   \                     ??setHardwareUsTimer_2:
   \   0000005A   0xBD10             POP      {R4,PC}          ;; return
     59          

   \                                 In section .text, align 2, keep-with-next
     60          static void callback(GPTDriver *gptp) {
   \                     _Z8callbackP9GPTDriver:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     61          	(void)gptp;
     62          	timerCallbackCounter++;
   \   00000004   0x....             LDR.N    R0,??DataTable4_8
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x1C40             ADDS     R0,R0,#+1
   \   0000000A   0x....             LDR.N    R1,??DataTable4_8
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     63          	if (globalTimerCallback == NULL) {
   \   0000000E   0x....             LDR.N    R0,??DataTable4_9
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD103             BNE.N    ??callback_0
     64          		firmwareError("NULL globalTimerCallback");
   \   00000016   0x....             LDR.N    R0,??DataTable4_10
   \   00000018   0x.... 0x....      BL       firmwareError
     65          		return;
   \   0000001C   0xE006             B.N      ??callback_1
     66          	}
     67          	isTimerPending = false;
   \                     ??callback_0:
   \   0000001E   0x....             LDR.N    R0,??DataTable4_6
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x7001             STRB     R1,[R0, #+0]
     68          
     69          //	// test code
     70          //	setOutputPinValue(LED_CRANKING, timerCallbackCounter % 2);
     71          //	int mod = timerCallbackCounter % 400;
     72          //	chSysLockFromIsr()
     73          //	;
     74          //	setHardwareUsTimer(400 - mod);
     75          //	chSysUnlockFromIsr()
     76          //	;
     77          
     78          	globalTimerCallback(NULL);
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x....             LDR.N    R1,??DataTable4_9
   \   00000028   0x6809             LDR      R1,[R1, #+0]
   \   0000002A   0x4788             BLX      R1
     79          }
   \                     ??callback_1:
   \   0000002C   0xBD10             POP      {R4,PC}          ;; return
     80          

   \                                 In section .text, align 2, keep-with-next
     81          static void usTimerWatchDog(void) {
   \                     _Z15usTimerWatchDogv:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     82          	if (getTimeNowNt() >= lastSetTimerTimeNt + 2 * CORE_CLOCK) {
   \   00000002   0x.... 0x....      BL       getTimeNowNt
   \   00000006   0x....             LDR.N    R2,??DataTable4_4
   \   00000008   0xE9D2 0x4500      LDRD     R4,R5,[R2, #+0]
   \   0000000C   0x....             LDR.N    R2,??DataTable4_11  ;; 0x1406f400
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0x18A2             ADDS     R2,R4,R2
   \   00000012   0x416B             ADCS     R3,R5,R3
   \   00000014   0x4299             CMP      R1,R3
   \   00000016   0xDB0F             BLT.N    ??usTimerWatchDog_0
   \   00000018   0xDC01             BGT.N    ??usTimerWatchDog_1
   \   0000001A   0x4290             CMP      R0,R2
   \   0000001C   0xD30C             BCC.N    ??usTimerWatchDog_0
     83          		strcpy(buff, "no_event");
   \                     ??usTimerWatchDog_1:
   \   0000001E   0x....             LDR.N    R1,??DataTable4_12
   \   00000020   0x....             LDR.N    R0,??DataTable4_13
   \   00000022   0x.... 0x....      BL       strcpy
     84          		itoa10(&buff[8], lastSetTimerValue);
   \   00000026   0x....             LDR.N    R0,??DataTable4_5
   \   00000028   0x6801             LDR      R1,[R0, #+0]
   \   0000002A   0x....             LDR.N    R0,??DataTable4_14
   \   0000002C   0x.... 0x....      BL       itoa10
     85          		firmwareError(buff);
   \   00000030   0x....             LDR.N    R0,??DataTable4_13
   \   00000032   0x.... 0x....      BL       firmwareError
     86          		return;
   \   00000036   0xE01D             B.N      ??usTimerWatchDog_2
     87          	}
     88          
     89          	msg = isTimerPending ? "No_cb too long" : "Timer not awhile";
   \                     ??usTimerWatchDog_0:
   \   00000038   0x....             LDR.N    R0,??DataTable4_6
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD003             BEQ.N    ??usTimerWatchDog_3
   \   00000040   0x....             LDR.N    R0,??DataTable4_15
   \   00000042   0x....             LDR.N    R1,??DataTable4_16
   \   00000044   0x6001             STR      R1,[R0, #+0]
   \   00000046   0xE002             B.N      ??usTimerWatchDog_4
   \                     ??usTimerWatchDog_3:
   \   00000048   0x....             LDR.N    R0,??DataTable4_15
   \   0000004A   0x....             LDR.N    R1,??DataTable4_17
   \   0000004C   0x6001             STR      R1,[R0, #+0]
     90          	// 2 seconds of inactivity would not look right
     91          	efiAssertVoid(getTimeNowNt() < lastSetTimerTimeNt + 2 * CORE_CLOCK, msg);
   \                     ??usTimerWatchDog_4:
   \   0000004E   0x.... 0x....      BL       getTimeNowNt
   \   00000052   0x....             LDR.N    R2,??DataTable4_4
   \   00000054   0xE9D2 0x4500      LDRD     R4,R5,[R2, #+0]
   \   00000058   0x....             LDR.N    R2,??DataTable4_11  ;; 0x1406f400
   \   0000005A   0x2300             MOVS     R3,#+0
   \   0000005C   0x18A2             ADDS     R2,R4,R2
   \   0000005E   0x416B             ADCS     R3,R5,R3
   \   00000060   0x4299             CMP      R1,R3
   \   00000062   0xDB07             BLT.N    ??usTimerWatchDog_5
   \   00000064   0xDC01             BGT.N    ??usTimerWatchDog_6
   \   00000066   0x4290             CMP      R0,R2
   \   00000068   0xD304             BCC.N    ??usTimerWatchDog_5
   \                     ??usTimerWatchDog_6:
   \   0000006A   0x....             LDR.N    R0,??DataTable4_15
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x.... 0x....      BL       firmwareError
   \   00000072   0xE7FF             B.N      ??usTimerWatchDog_2
     92          
     93          }
   \                     ??usTimerWatchDog_5:
   \                     ??usTimerWatchDog_2:
   \   00000074   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     94          

   \                                 In section .text, align 2, keep-with-next
     95          static msg_t mwThread(int param) {
   \                     _Z8mwThreadi:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     96          	(void)param;
     97          	chRegSetThreadName("timer watchdog");
   \   00000004   0x....             LDR.N    R0,??DataTable4_18
   \   00000006   0x6980             LDR      R0,[R0, #+24]
   \   00000008   0x....             LDR.N    R1,??DataTable4_19
   \   0000000A   0x6181             STR      R1,[R0, #+24]
     98          
     99          	while (true) {
    100          		chThdSleepMilliseconds(1000); // once a second is enough
   \                     ??mwThread_0:
   \   0000000C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000010   0x.... 0x....      BL       chThdSleep
    101          		usTimerWatchDog();
   \   00000014   0x.... 0x....      BL       _Z15usTimerWatchDogv
   \   00000018   0xE7F8             B.N      ??mwThread_0
    102          	}
    103          #if defined __GNUC__
    104          	return -1;
    105          #endif        
    106          }
    107          
    108          //static const GPTConfig gpt5cfg;
    109          

   \                                 In section .rodata, align 4
    110          static const GPTConfig gpt5cfg = { 1000000, /* 1 MHz timer clock.*/
   \                     gpt5cfg:
   \   00000000   0x000F4240         DC32 1000000, _Z8callbackP9GPTDriver, 0
   \              0x........   
   \              0x00000000   
    111          callback, /* Timer callback.*/
    112          0 };
    113          

   \                                 In section .text, align 2, keep-with-next
    114          void initMicrosecondTimer(void) {
   \                     initMicrosecondTimer:
   \   00000000   0xB580             PUSH     {R7,LR}
    115          
    116          	gptStart(&GPTDEVICE, &gpt5cfg);
   \   00000002   0x....             LDR.N    R1,??DataTable4_20
   \   00000004   0x....             LDR.N    R0,??DataTable4_3
   \   00000006   0x.... 0x....      BL       gptStart
    117          
    118          	lastSetTimerTimeNt = getTimeNowNt();
   \   0000000A   0x.... 0x....      BL       getTimeNowNt
   \   0000000E   0x....             LDR.N    R2,??DataTable4_4
   \   00000010   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    119          #if EFI_EMULATE_POSITION_SENSORS
    120          	chThdCreateStatic(mwThreadStack, sizeof(mwThreadStack), NORMALPRIO, (tfunc_t) mwThread, NULL);
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x....             LDR.N    R3,??DataTable4_21
   \   0000001A   0x2240             MOVS     R2,#+64
   \   0000001C   0xF44F 0x7132      MOV      R1,#+712
   \   00000020   0x....             LDR.N    R0,??DataTable4_22
   \   00000022   0x.... 0x....      BL       chThdCreateStatic
    121          #endif /* EFI_ENGINE_EMULATOR */
    122          
    123          //	// test code
    124          //	chSysLock()
    125          //	;
    126          //	setHardwareUsTimer(300);
    127          //	chSysUnlock()
    128          //	;
    129          }
   \   00000026   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     `?<Constant "not positive timeUs">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x00989680         DC32     0x989680

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     `?<Constant "setHardwareUsTimer() ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     GPTD5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     lastSetTimerTimeNt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     lastSetTimerValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     isTimerPending

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     timerRestartCounter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     timerCallbackCounter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     globalTimerCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     `?<Constant "NULL globalTimerCallback">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x1406F400         DC32     0x1406f400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     `?<Constant "no_event">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x........         DC32     buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x........         DC32     buff+0x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     msg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x........         DC32     `?<Constant "No_cb too long">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x........         DC32     `?<Constant "Timer not awhile">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x........         DC32     rlist

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x........         DC32     `?<Constant "timer watchdog">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x........         DC32     gpt5cfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x........         DC32     _Z8mwThreadi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x........         DC32     mwThreadStack

   \                                 In section .rodata, align 4
   \                     `?<Constant "not positive timeUs">`:
   \   00000000   0x6E 0x6F          DC8 "not positive timeUs"
   \              0x74 0x20    
   \              0x70 0x6F    
   \              0x73 0x69    
   \              0x74 0x69    
   \              0x76 0x65    
   \              0x20 0x74    
   \              0x69 0x6D    
   \              0x65 0x55    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "setHardwareUsTimer() ...">`:
   \   00000000   0x73 0x65          DC8 "setHardwareUsTimer() too large"
   \              0x74 0x48    
   \              0x61 0x72    
   \              0x64 0x77    
   \              0x61 0x72    
   \              0x65 0x55    
   \              0x73 0x54    
   \              0x69 0x6D    
   \              0x65 0x72    
   \              0x28 0x29    
   \              0x20 0x74    
   \              0x6F 0x6F    
   \              0x20 0x6C    
   \              0x61 0x72    
   \              0x67 0x65    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "NULL globalTimerCallback">`:
   \   00000000   0x4E 0x55          DC8 "NULL globalTimerCallback"
   \              0x4C 0x4C    
   \              0x20 0x67    
   \              0x6C 0x6F    
   \              0x62 0x61    
   \              0x6C 0x54    
   \              0x69 0x6D    
   \              0x65 0x72    
   \              0x43 0x61    
   \              0x6C 0x6C    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "no_event">`:
   \   00000000   0x6E 0x6F          DC8 "no_event"
   \              0x5F 0x65    
   \              0x76 0x65    
   \              0x6E 0x74    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "No_cb too long">`:
   \   00000000   0x4E 0x6F          DC8 "No_cb too long"
   \              0x5F 0x63    
   \              0x62 0x20    
   \              0x74 0x6F    
   \              0x6F 0x20    
   \              0x6C 0x6F    
   \              0x6E 0x67    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Timer not awhile">`:
   \   00000000   0x54 0x69          DC8 "Timer not awhile"
   \              0x6D 0x65    
   \              0x72 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x61 0x77    
   \              0x68 0x69    
   \              0x6C 0x65    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "timer watchdog">`:
   \   00000000   0x74 0x69          DC8 "timer watchdog"
   \              0x6D 0x65    
   \              0x72 0x20    
   \              0x77 0x61    
   \              0x74 0x63    
   \              0x68 0x64    
   \              0x6F 0x67    
   \              0x00         
   \   0000000F   0x00               DC8 0
    130          
    131          #endif /* EFI_PROD_CODE */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   callback(GPTDriver *)
         8   -- Indirect call
         8   -> firmwareError
       8   initMicrosecondTimer
         8   -> chThdCreateStatic
         8   -> getTimeNowNt
         8   -> gptStart
       8   mwThread(int)
         8   -> chThdSleep
         8   -> usTimerWatchDog()
       8   setHardwareUsTimer
         8   -> firmwareError
         8   -> getTimeNowNt
         8   -> gptStartOneShotI
         8   -> gptStopTimerI
      16   usTimerWatchDog()
        16   -> firmwareError
        16   -> getTimeNowNt
        16   -> itoa10
        16   -> strcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      28  ?<Constant "NULL globalTimerCallback">
      16  ?<Constant "No_cb too long">
      20  ?<Constant "Timer not awhile">
      12  ?<Constant "no_event">
      20  ?<Constant "not positive timeUs">
      32  ?<Constant "setHardwareUsTimer() ...">
      16  ?<Constant "timer watchdog">
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      32  buff
      46  callback(GPTDriver *)
       4  globalTimerCallback
      12  gpt5cfg
      40  initMicrosecondTimer
       1  isTimerPending
       8  lastSetTimerTimeNt
       4  lastSetTimerValue
       4  msg
      26  mwThread(int)
     712  mwThreadStack
      92  setHardwareUsTimer
       4  timerCallbackCounter
       4  timerRestartCounter
     118  usTimerWatchDog()

 
 773 bytes in section .bss
 156 bytes in section .rodata
 414 bytes in section .text
 
 414 bytes of CODE  memory
 156 bytes of CONST memory
 773 bytes of DATA  memory

Errors: none
Warnings: none
