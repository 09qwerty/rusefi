###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:51 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\config\engines\h #
#                       onda_accord.cpp                                       #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\config\engines\h #
#                       onda_accord.cpp -lCN F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\Debug\List\ -o                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\   #
#                       --no_cse --no_unroll --no_inline --no_code_motion     #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\h #
#                       onda_accord.lst                                       #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ho #
#                       nda_accord.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\config\engines\honda_accord.cpp
      1          /**
      2           * @file	honda_accord.cpp
      3           *
      4           * 1993 Honda Prelude 1993
      5           * http://rusefi.com/wiki/index.php?title=Vehicle:Honda_Prelude_1993
      6           * http://rusefi.com/forum/viewtopic.php?f=3&t=887
      7           *
      8           * 1995 Honda Accord EX
      9           * http://rusefi.com/wiki/index.php?title=Vehicle:Honda_Accord_1995
     10           * http://rusefi.com/forum/viewtopic.php?f=3&t=621
     11           *
     12           * set_engine_type 6
     13           * set_engine_type 17
     14           *
     15           * @date Jan 12, 2014
     16           * @author Andrey Belomutskiy, (c) 2012-2015
     17           */
     18          
     19          #include "main.h"
     20          #include "trigger_decoder.h"
     21          #include "thermistors.h"
     22          #include "honda_accord.h"
     23          #include "engine_math.h"
     24          #include "settings.h"
     25          

   \                                 In section .text, align 2, keep-with-next
     26          void setFrankenso_01_LCD(board_configuration_s *boardConfiguration) {
     27          	boardConfiguration->HD44780_rs = GPIOE_7;
   \                     _Z19setFrankenso_01_LCDP21board_configuration_s:
   \   00000000   0x2147             MOVS     R1,#+71
   \   00000002   0xF8C0 0x10B0      STR      R1,[R0, #+176]
     28          	boardConfiguration->HD44780_e = GPIOE_9;
   \   00000006   0x2149             MOVS     R1,#+73
   \   00000008   0xF8C0 0x10B4      STR      R1,[R0, #+180]
     29          	boardConfiguration->HD44780_db4 = GPIOE_11;
   \   0000000C   0x214B             MOVS     R1,#+75
   \   0000000E   0xF8C0 0x10B8      STR      R1,[R0, #+184]
     30          	boardConfiguration->HD44780_db5 = GPIOE_13;
   \   00000012   0x214D             MOVS     R1,#+77
   \   00000014   0xF8C0 0x10BC      STR      R1,[R0, #+188]
     31          	boardConfiguration->HD44780_db6 = GPIOE_15;
   \   00000018   0x214F             MOVS     R1,#+79
   \   0000001A   0xF8C0 0x10C0      STR      R1,[R0, #+192]
     32          	boardConfiguration->HD44780_db7 = GPIOB_10;
   \   0000001E   0x211A             MOVS     R1,#+26
   \   00000020   0xF8C0 0x10C4      STR      R1,[R0, #+196]
     33          }
   \   00000024   0x4770             BX       LR               ;; return
     34          
     35          EXTERN_ENGINE;
     36          

   \                                 In section .text, align 4, keep-with-next
     37          static void setHondaAccordConfigurationCommon(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z33setHondaAccordConfigurationCommonv:
   \   00000000   0xB580             PUSH     {R7,LR}
     38          	engineConfiguration->map.sensor.type = MT_DENSO183;
   \   00000002   0x....             LDR.N    R0,??DataTable4_2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0xF8C0 0x10F8      STR      R1,[R0, #+248]
     39          	boardConfiguration->isFastAdcEnabled = true;
   \   0000000C   0x....             LDR.N    R0,??DataTable4_3
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   00000014   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000018   0x....             LDR.N    R1,??DataTable4_3
   \   0000001A   0x6809             LDR      R1,[R1, #+0]
   \   0000001C   0xF881 0x0180      STRB     R0,[R1, #+384]
     40          
     41          	engineConfiguration->ignitionMode = IM_ONE_COIL;
   \   00000020   0x....             LDR.N    R0,??DataTable4_2
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0xF8C0 0x11BC      STR      R1,[R0, #+444]
     42          	engineConfiguration->injectionMode = IM_BATCH;
   \   0000002A   0x....             LDR.N    R0,??DataTable4_2
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x2102             MOVS     R1,#+2
   \   00000030   0xF8C0 0x11B0      STR      R1,[R0, #+432]
     43          
     44          	engineConfiguration->idleMode = IM_MANUAL;
   \   00000034   0x....             LDR.N    R0,??DataTable4_2
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x2101             MOVS     R1,#+1
   \   0000003A   0xF8C0 0x15E0      STR      R1,[R0, #+1504]
     45          
     46          	engineConfiguration->HD44780height = 4;
   \   0000003E   0x....             LDR.N    R0,??DataTable4_2
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x2104             MOVS     R1,#+4
   \   00000044   0xF8C0 0x1208      STR      R1,[R0, #+520]
     47          
     48          	engineConfiguration->specs.cylindersCount = 4;
   \   00000048   0x....             LDR.N    R0,??DataTable4_2
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x2104             MOVS     R1,#+4
   \   0000004E   0xF8C0 0x1194      STR      R1,[R0, #+404]
     49          	engineConfiguration->specs.displacement = 2.156;
   \   00000052   0x....             LDR.N    R0,??DataTable4_2
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x....             LDR.N    R1,??DataTable4_4  ;; 0x4009fbe7
   \   00000058   0xF8C0 0x1190      STR      R1,[R0, #+400]
     50          
     51          	// Keihin 06164-P0A-A00
     52          	engineConfiguration->injector.flow = 248;
   \   0000005C   0x....             LDR.N    R0,??DataTable4_2
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x....             LDR.N    R1,??DataTable4_5  ;; 0x43780000
   \   00000062   0x6081             STR      R1,[R0, #+8]
     53          
     54          //	engineConfiguration->algorithm = LM_SPEED_DENSITY;
     55          	// I want to start with a simple Alpha-N
     56          	setAlgorithm(LM_ALPHA_N PASS_ENGINE_PARAMETER);
   \   00000064   0x2001             MOVS     R0,#+1
   \   00000066   0x.... 0x....      BL       _Z12setAlgorithm18engine_load_mode_e
     57          	setFuelLoadBin(0, 100 PASS_ENGINE_PARAMETER);
   \   0000006A   0xEDDF 0x....      VLDR.W   S1,??DataTable4  ;; 0x42c80000
   \   0000006E   0xED9F 0x....      VLDR.W   S0,??DataTable4_1  ;; 0x0
   \   00000072   0x.... 0x....      BL       _Z14setFuelLoadBinff
     58          
     59          	/**
     60          	 * 18K Ohm @ -20C
     61          	 * 2.1K Ohm @ 24C
     62          	 * 100 Ohm @ 120C
     63          	 */
     64          	setCommonNTCSensor(&engineConfiguration->clt);
   \   00000076   0x....             LDR.N    R0,??DataTable4_2
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0xF510 0x7080      ADDS     R0,R0,#+256
   \   0000007E   0x.... 0x....      BL       _Z18setCommonNTCSensorP14ThermistorConf
     65          	engineConfiguration->clt.config.bias_resistor = 1500; // same as OEM ECU
   \   00000082   0x....             LDR.N    R0,??DataTable4_2
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0x....             LDR.N    R1,??DataTable4_6  ;; 0x44bb8000
   \   00000088   0xF8C0 0x1118      STR      R1,[R0, #+280]
     66          
     67          	setCommonNTCSensor(&engineConfiguration->iat);
   \   0000008C   0x....             LDR.N    R0,??DataTable4_2
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0xF510 0x7090      ADDS     R0,R0,#+288
   \   00000094   0x.... 0x....      BL       _Z18setCommonNTCSensorP14ThermistorConf
     68          	engineConfiguration->iat.config.bias_resistor = 1500; // same as OEM ECU
   \   00000098   0x....             LDR.N    R0,??DataTable4_2
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x....             LDR.N    R1,??DataTable4_6  ;; 0x44bb8000
   \   0000009E   0xF8C0 0x1138      STR      R1,[R0, #+312]
     69          
     70          	// set_cranking_charge_angle 35
     71          	engineConfiguration->crankingChargeAngle = 70;
   \   000000A2   0x....             LDR.N    R0,??DataTable4_2
   \   000000A4   0x6800             LDR      R0,[R0, #+0]
   \   000000A6   0x....             LDR.N    R1,??DataTable4_7  ;; 0x428c0000
   \   000000A8   0x66C1             STR      R1,[R0, #+108]
     72          	// set_cranking_timing_angle 0
     73          	engineConfiguration->crankingTimingAngle = -45;
   \   000000AA   0x....             LDR.N    R0,??DataTable4_2
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x....             LDR.N    R1,??DataTable4_8  ;; 0xc2340000
   \   000000B0   0xF8C0 0x11B8      STR      R1,[R0, #+440]
     74          
     75          	// set_global_trigger_offset_angle 34
     76          	engineConfiguration->globalTriggerAngleOffset = 34;
   \   000000B4   0x....             LDR.N    R0,??DataTable4_2
   \   000000B6   0x6800             LDR      R0,[R0, #+0]
   \   000000B8   0x....             LDR.N    R1,??DataTable4_9  ;; 0x42080000
   \   000000BA   0xF8C0 0x11CC      STR      R1,[R0, #+460]
     77          
     78          	// set_rpm_hard_limit 4000
     79          	engineConfiguration->rpmHardLimit = 4000; // yes, 4k. let's play it safe for now
   \   000000BE   0x....             LDR.N    R0,??DataTable4_2
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0xF44F 0x617A      MOV      R1,#+4000
   \   000000C6   0xF8C0 0x11A4      STR      R1,[R0, #+420]
     80          	// set_cranking_rpm 2000
     81          	engineConfiguration->cranking.rpm = 500;
   \   000000CA   0x....             LDR.N    R0,??DataTable4_2
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0xF44F 0x71FA      MOV      R1,#+500
   \   000000D2   0xF8A0 0x1060      STRH     R1,[R0, #+96]
     82          
     83          
     84          	// set_ignition_offset 350
     85          //	engineConfiguration->ignitionOffset = 350;
     86          	 // set_injection_offset 510
     87          //	engineConfiguration->injectionOffset = 510;
     88          
     89          
     90          	/**
     91          	 * ADC inputs:
     92          	 *
     93          	 * Inp1/ADC12 PC2: CLT
     94          	 * Inp2/ADC11 PC1: AIT/IAT
     95          	 * Inp3/ADC0 PA0: MAP
     96          	 * Inp4/ADC13 PC3: AFR green wire
     97          	 * Inp6/ADC1 PA1: TPS
     98          	 * Inp12/ADC14 PC4: VBatt
     99          	 */
    100          
    101          	/**
    102          	 * wideband O2 Sensor
    103          	 */
    104          	engineConfiguration->afr.hwChannel = EFI_ADC_13;
   \   000000D6   0x....             LDR.N    R0,??DataTable4_2
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0x210D             MOVS     R1,#+13
   \   000000DC   0xF8C0 0x1248      STR      R1,[R0, #+584]
    105          
    106          	/**
    107          	 * VBatt
    108          	 */
    109          	engineConfiguration->vbattAdcChannel = EFI_ADC_14;
   \   000000E0   0x....             LDR.N    R0,??DataTable4_2
   \   000000E2   0x6800             LDR      R0,[R0, #+0]
   \   000000E4   0x210E             MOVS     R1,#+14
   \   000000E6   0xF8C0 0x11D8      STR      R1,[R0, #+472]
    110          	engineConfiguration->vbattDividerCoeff = ((float) (10 + 39)) / 10 * 2;
   \   000000EA   0x....             LDR.N    R0,??DataTable4_2
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0x....             LDR.N    R1,??DataTable4_10  ;; 0x411ccccd
   \   000000F0   0xF8C0 0x11D4      STR      R1,[R0, #+468]
    111          
    112          	//	todo engineConfiguration->afr.hwChannel = 14;
    113          
    114          
    115          	/**
    116          	 * MAP D17/W5 blue wire
    117          	 */
    118          	engineConfiguration->map.sensor.hwChannel = EFI_ADC_0;
   \   000000F4   0x....             LDR.N    R0,??DataTable4_2
   \   000000F6   0x6800             LDR      R0,[R0, #+0]
   \   000000F8   0x2100             MOVS     R1,#+0
   \   000000FA   0xF8C0 0x10FC      STR      R1,[R0, #+252]
    119          	/**
    120          	 * IAT D15/W7 green wire
    121          	 */
    122          	engineConfiguration->iat.adcChannel = EFI_ADC_11;
   \   000000FE   0x....             LDR.N    R0,??DataTable4_2
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x210B             MOVS     R1,#+11
   \   00000104   0xF8C0 0x113C      STR      R1,[R0, #+316]
    123          	/**
    124          	 * CLT D13/W9 yellow wire
    125          	 */
    126          	engineConfiguration->clt.adcChannel = EFI_ADC_12;
   \   00000108   0x....             LDR.N    R0,??DataTable4_2
   \   0000010A   0x6800             LDR      R0,[R0, #+0]
   \   0000010C   0x210C             MOVS     R1,#+12
   \   0000010E   0xF8C0 0x111C      STR      R1,[R0, #+284]
    127          	/**
    128          	 * TPS D11/W11 blue wire
    129          	 */
    130          	engineConfiguration->tpsAdcChannel = EFI_ADC_1;
   \   00000112   0x....             LDR.N    R0,??DataTable4_2
   \   00000114   0x6800             LDR      R0,[R0, #+0]
   \   00000116   0x2101             MOVS     R1,#+1
   \   00000118   0xF8C0 0x120C      STR      R1,[R0, #+524]
    131          
    132          
    133          	/**
    134          	 * Outputs
    135          	 */
    136          	// Frankenso low out #1: PE6
    137          	// Frankenso low out #2: PE5
    138          	// Frankenso low out #3: PD7
    139          	// Frankenso low out #4: PC13
    140          	// Frankenso low out #5: PE3 Fuel Relay
    141          	// Frankenso low out #6: PE4 radiator fan - blue wire
    142          	// Frankenso low out #7: PD3 idle air valve solenoid - green wire
    143          	// Frankenso low out #8: PE2 MIL - white wire
    144          	// Frankenso low out #9: PB9 Injector #2
    145          	// Frankenso low out #10: PD5 Injector #3
    146          	// Frankenso low out #11: PB8 injector #1
    147          	// Frankenso low out #12: PB7 injector #4
    148          	boardConfiguration->fuelPumpPin = GPIOE_3;
   \   0000011C   0x....             LDR.N    R0,??DataTable4_3
   \   0000011E   0x6800             LDR      R0,[R0, #+0]
   \   00000120   0x2143             MOVS     R1,#+67
   \   00000122   0x6181             STR      R1,[R0, #+24]
    149          	boardConfiguration->fuelPumpPinMode = OM_DEFAULT;
   \   00000124   0x....             LDR.N    R0,??DataTable4_3
   \   00000126   0x6800             LDR      R0,[R0, #+0]
   \   00000128   0x2100             MOVS     R1,#+0
   \   0000012A   0x61C1             STR      R1,[R0, #+28]
    150          	boardConfiguration->malfunctionIndicatorPin = GPIOE_2;
   \   0000012C   0x....             LDR.N    R0,??DataTable4_3
   \   0000012E   0x6800             LDR      R0,[R0, #+0]
   \   00000130   0x2142             MOVS     R1,#+66
   \   00000132   0xF8C0 0x1088      STR      R1,[R0, #+136]
    151          	boardConfiguration->malfunctionIndicatorPinMode = OM_DEFAULT;
   \   00000136   0x....             LDR.N    R0,??DataTable4_3
   \   00000138   0x6800             LDR      R0,[R0, #+0]
   \   0000013A   0x2100             MOVS     R1,#+0
   \   0000013C   0xF8C0 0x108C      STR      R1,[R0, #+140]
    152          	boardConfiguration->fanPin = GPIOE_4; // blue wire
   \   00000140   0x....             LDR.N    R0,??DataTable4_3
   \   00000142   0x6800             LDR      R0,[R0, #+0]
   \   00000144   0x2144             MOVS     R1,#+68
   \   00000146   0xF8C0 0x1090      STR      R1,[R0, #+144]
    153          
    154          	boardConfiguration->idle.solenoidPin = GPIOD_3; // green wire
   \   0000014A   0x....             LDR.N    R0,??DataTable4_3
   \   0000014C   0x6800             LDR      R0,[R0, #+0]
   \   0000014E   0x2133             MOVS     R1,#+51
   \   00000150   0x6001             STR      R1,[R0, #+0]
    155          
    156          	boardConfiguration->injectionPins[0] = GPIOB_8;
   \   00000152   0x....             LDR.N    R0,??DataTable4_3
   \   00000154   0x6800             LDR      R0,[R0, #+0]
   \   00000156   0x2118             MOVS     R1,#+24
   \   00000158   0x6201             STR      R1,[R0, #+32]
    157          	boardConfiguration->injectionPins[1] = GPIOB_9;
   \   0000015A   0x....             LDR.N    R0,??DataTable4_3
   \   0000015C   0x6800             LDR      R0,[R0, #+0]
   \   0000015E   0x2119             MOVS     R1,#+25
   \   00000160   0x6241             STR      R1,[R0, #+36]
    158          	boardConfiguration->injectionPins[2] = GPIOD_5;
   \   00000162   0x....             LDR.N    R0,??DataTable4_3
   \   00000164   0x6800             LDR      R0,[R0, #+0]
   \   00000166   0x2135             MOVS     R1,#+53
   \   00000168   0x6281             STR      R1,[R0, #+40]
    159          	boardConfiguration->injectionPins[3] = GPIOB_7;
   \   0000016A   0x....             LDR.N    R0,??DataTable4_3
   \   0000016C   0x6800             LDR      R0,[R0, #+0]
   \   0000016E   0x2117             MOVS     R1,#+23
   \   00000170   0x62C1             STR      R1,[R0, #+44]
    160          
    161          	boardConfiguration->ignitionPins[0] = GPIOE_12; // white wire
   \   00000172   0x....             LDR.N    R0,??DataTable4_3
   \   00000174   0x6800             LDR      R0,[R0, #+0]
   \   00000176   0x214C             MOVS     R1,#+76
   \   00000178   0x6541             STR      R1,[R0, #+84]
    162          	boardConfiguration->ignitionPins[1] = GPIO_UNASSIGNED;
   \   0000017A   0x....             LDR.N    R0,??DataTable4_3
   \   0000017C   0x6800             LDR      R0,[R0, #+0]
   \   0000017E   0x2150             MOVS     R1,#+80
   \   00000180   0x6581             STR      R1,[R0, #+88]
    163          	boardConfiguration->ignitionPins[2] = GPIO_UNASSIGNED;
   \   00000182   0x....             LDR.N    R0,??DataTable4_3
   \   00000184   0x6800             LDR      R0,[R0, #+0]
   \   00000186   0x2150             MOVS     R1,#+80
   \   00000188   0x65C1             STR      R1,[R0, #+92]
    164          	boardConfiguration->ignitionPins[3] = GPIO_UNASSIGNED;
   \   0000018A   0x....             LDR.N    R0,??DataTable4_3
   \   0000018C   0x6800             LDR      R0,[R0, #+0]
   \   0000018E   0x2150             MOVS     R1,#+80
   \   00000190   0x6601             STR      R1,[R0, #+96]
    165          
    166          
    167          	setFrankenso_01_LCD(boardConfiguration);
   \   00000192   0x....             LDR.N    R0,??DataTable4_3
   \   00000194   0x6800             LDR      R0,[R0, #+0]
   \   00000196   0x.... 0x....      BL       _Z19setFrankenso_01_LCDP21board_configuration_s
    168          	setFrankenso0_1_joystick(engineConfiguration);
   \   0000019A   0x....             LDR.N    R0,??DataTable4_2
   \   0000019C   0x6800             LDR      R0,[R0, #+0]
   \   0000019E   0x.... 0x....      BL       _Z24setFrankenso0_1_joystickP22engine_configuration_s
    169          
    170          	boardConfiguration->idle.solenoidFrequency = 500;
   \   000001A2   0x....             LDR.N    R0,??DataTable4_3
   \   000001A4   0x6800             LDR      R0,[R0, #+0]
   \   000001A6   0xF44F 0x71FA      MOV      R1,#+500
   \   000001AA   0x6081             STR      R1,[R0, #+8]
    171          }
   \   000001AC   0xBD01             POP      {R0,PC}          ;; return
    172          

   \                                 In section .text, align 2, keep-with-next
    173          void setHondaAccordConfigurationTwoWires(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z35setHondaAccordConfigurationTwoWiresv:
   \   00000000   0xB580             PUSH     {R7,LR}
    174          	engineConfiguration->engineType = HONDA_ACCORD_CD_TWO_WIRES;
   \   00000002   0x....             LDR.N    R0,??DataTable4_2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2111             MOVS     R1,#+17
   \   00000008   0x6001             STR      R1,[R0, #+0]
    175          	engineConfiguration->trigger.type = TT_HONDA_ACCORD_CD_TWO_WIRES;
   \   0000000A   0x....             LDR.N    R0,??DataTable4_2
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x210C             MOVS     R1,#+12
   \   00000010   0xF8C0 0x1218      STR      R1,[R0, #+536]
    176          	setHondaAccordConfigurationCommon(PASS_ENGINE_PARAMETER_F);
   \   00000014   0x.... 0x....      BL       _Z33setHondaAccordConfigurationCommonv
    177          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
    178          

   \                                 In section .text, align 2, keep-with-next
    179          void setHondaAccordConfigurationThreeWires(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z37setHondaAccordConfigurationThreeWiresv:
   \   00000000   0xB580             PUSH     {R7,LR}
    180          	engineConfiguration->engineType = HONDA_ACCORD_CD;
   \   00000002   0x....             LDR.N    R0,??DataTable4_2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2106             MOVS     R1,#+6
   \   00000008   0x6001             STR      R1,[R0, #+0]
    181          	engineConfiguration->trigger.type = TT_HONDA_ACCORD_CD;
   \   0000000A   0x....             LDR.N    R0,??DataTable4_2
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x210A             MOVS     R1,#+10
   \   00000010   0xF8C0 0x1218      STR      R1,[R0, #+536]
    182          	setHondaAccordConfigurationCommon(PASS_ENGINE_PARAMETER_F);
   \   00000014   0x.... 0x....      BL       _Z33setHondaAccordConfigurationCommonv
    183          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
    184          

   \                                 In section .text, align 2, keep-with-next
    185          void setHondaAccordConfigurationDip(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z30setHondaAccordConfigurationDipv:
   \   00000000   0xB580             PUSH     {R7,LR}
    186          	engineConfiguration->engineType = HONDA_ACCORD_CD_DIP;
   \   00000002   0x....             LDR.N    R0,??DataTable4_2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2112             MOVS     R1,#+18
   \   00000008   0x6001             STR      R1,[R0, #+0]
    187          	engineConfiguration->trigger.type = TT_HONDA_ACCORD_CD_DIP;
   \   0000000A   0x....             LDR.N    R0,??DataTable4_2
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x210D             MOVS     R1,#+13
   \   00000010   0xF8C0 0x1218      STR      R1,[R0, #+536]
    188          	setHondaAccordConfigurationCommon(PASS_ENGINE_PARAMETER_F);
   \   00000014   0x.... 0x....      BL       _Z33setHondaAccordConfigurationCommonv
    189          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return
    190          

   \                                 In section .text, align 2, keep-with-next
    191          void setHondaAccordConfiguration1_24(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z31setHondaAccordConfiguration1_24v:
   \   00000000   0xB580             PUSH     {R7,LR}
    192          	engineConfiguration->engineType = HONDA_ACCORD_CD_DIP;
   \   00000002   0x....             LDR.N    R0,??DataTable4_2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2112             MOVS     R1,#+18
   \   00000008   0x6001             STR      R1,[R0, #+0]
    193          	engineConfiguration->trigger.type = TT_HONDA_ACCORD_1_24;
   \   0000000A   0x....             LDR.N    R0,??DataTable4_2
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x2115             MOVS     R1,#+21
   \   00000010   0xF8C0 0x1218      STR      R1,[R0, #+536]
    194          	setHondaAccordConfigurationCommon(PASS_ENGINE_PARAMETER_F);
   \   00000014   0x.... 0x....      BL       _Z33setHondaAccordConfigurationCommonv
    195          }
   \   00000018   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x00000000         DC32     0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     engineConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x4009FBE7         DC32     0x4009fbe7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x43780000         DC32     0x43780000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x44BB8000         DC32     0x44bb8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x428C0000         DC32     0x428c0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0xC2340000         DC32     0xc2340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x42080000         DC32     0x42080000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x411CCCCD         DC32     0x411ccccd

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   setFrankenso_01_LCD(board_configuration_s *)
       8   setHondaAccordConfiguration1_24()
         8   -> setHondaAccordConfigurationCommon()
       8   setHondaAccordConfigurationCommon()
         8   -> setAlgorithm(engine_load_mode_e)
         8   -> setCommonNTCSensor(ThermistorConf *)
         8   -> setFrankenso0_1_joystick(engine_configuration_s *)
         8   -> setFrankenso_01_LCD(board_configuration_s *)
         8   -> setFuelLoadBin(float, float)
       8   setHondaAccordConfigurationDip()
         8   -> setHondaAccordConfigurationCommon()
       8   setHondaAccordConfigurationThreeWires()
         8   -> setHondaAccordConfigurationCommon()
       8   setHondaAccordConfigurationTwoWires()
         8   -> setHondaAccordConfigurationCommon()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      38  setFrankenso_01_LCD(board_configuration_s *)
      26  setHondaAccordConfiguration1_24()
     430  setHondaAccordConfigurationCommon()
      26  setHondaAccordConfigurationDip()
      26  setHondaAccordConfigurationThreeWires()
      26  setHondaAccordConfigurationTwoWires()

 
 616 bytes in section .text
 
 616 bytes of CODE memory

Errors: none
Warnings: 1
