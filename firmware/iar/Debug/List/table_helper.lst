###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:08:42 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\controllers\core #
#                       \table_helper.cpp                                     #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\controllers\core #
#                       \table_helper.cpp -lCN F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\Debug\List\ -lA                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\  #
#                       -o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj #
#                       \ --no_cse --no_unroll --no_inline --no_code_motion   #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\t #
#                       able_helper.lst                                       #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ta #
#                       ble_helper.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\controllers\core\table_helper.cpp
      1          /**
      2           * @file	table_helper.cpp
      3           * @brief	Helper methods related to 3D & 2D tables manipulation (maps and curves)
      4           *
      5           * @date Jul 6, 2014
      6           * @author Andrey Belomutskiy, (c) 2012-2015
      7           */
      8          
      9          #include "table_helper.h"
     10          #include "efilib.h"
     11          #include "interpolation.h"
     12          

   \                                 In section .text, align 4, keep-with-next
     13          void setTableBin2(float array[], int size, float l, float r, float precision) {
   \                     _Z12setTableBin2Pfifff:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xED2D 0x8B04      VPUSH    {D8-D9}
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0xEEB0 0x8A40      VMOV.F32 S16,S0
   \   0000000E   0xEEF0 0x8A60      VMOV.F32 S17,S1
   \   00000012   0xEEB0 0x9A41      VMOV.F32 S18,S2
     14          	for (int i = 0; i < size; i++) {
   \   00000016   0x2600             MOVS     R6,#+0
   \                     ??setTableBin2_0:
   \   00000018   0x42AE             CMP      R6,R5
   \   0000001A   0xDA1E             BGE.N    ??setTableBin2_1
     15          		float value = interpolate(0, l, size - 1, r, i);
   \   0000001C   0xEE00 0x6A10      VMOV     S0,R6
   \   00000020   0xEEB8 0x2AC0      VCVT.F32.S32 S4,S0
   \   00000024   0xEEF0 0x1A68      VMOV.F32 S3,S17
   \   00000028   0x1E68             SUBS     R0,R5,#+1
   \   0000002A   0xEE00 0x0A10      VMOV     S0,R0
   \   0000002E   0xEEB8 0x1AC0      VCVT.F32.S32 S2,S0
   \   00000032   0xEEF0 0x0A48      VMOV.F32 S1,S16
   \   00000036   0xED9F 0x....      VLDR.W   S0,??DataTable2  ;; 0x0
   \   0000003A   0x.... 0x....      BL       _Z11interpolatefffff
   \   0000003E   0xEEF0 0x9A40      VMOV.F32 S19,S0
     16          		/**
     17          		 * rounded values look nicer, also we want to avoid precision mismatch with Tuner Studio
     18          		 */
     19          		array[i] = efiRound(value, precision);
   \   00000042   0xEEF0 0x0A49      VMOV.F32 S1,S18
   \   00000046   0xEEB0 0x0A69      VMOV.F32 S0,S19
   \   0000004A   0x.... 0x....      BL       efiRound
   \   0000004E   0xEB14 0x0086      ADDS     R0,R4,R6, LSL #+2
   \   00000052   0xED80 0x0A00      VSTR     S0,[R0, #0]
     20          	}
   \   00000056   0x1C76             ADDS     R6,R6,#+1
   \   00000058   0xE7DE             B.N      ??setTableBin2_0
     21          }
   \                     ??setTableBin2_1:
   \   0000005A   0xECBD 0x8B04      VPOP     {D8-D9}
   \   0000005E   0xBD70             POP      {R4-R6,PC}       ;; return
     22          

   \                                 In section .text, align 4, keep-with-next
     23          void setTableBin(float array[], int size, float from, float to) {
   \                     _Z11setTableBinPfiff:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0xEEB0 0x8A40      VMOV.F32 S16,S0
   \   0000000E   0xEEF0 0x8A60      VMOV.F32 S17,S1
     24          	setTableBin2(array, size, from, to, 0.01);
   \   00000012   0xED9F 0x....      VLDR.W   S2,??DataTable2_1  ;; 0x3c23d70a
   \   00000016   0xEEF0 0x0A68      VMOV.F32 S1,S17
   \   0000001A   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   0000001E   0x0029             MOVS     R1,R5
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x.... 0x....      BL       _Z12setTableBin2Pfifff
     25          }
   \   00000026   0xECBD 0x8B02      VPOP     {D8}
   \   0000002A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     26          

   \                                 In section .text, align 4, keep-with-next
     27          void setRpmTableBin(float array[], int size) {
   \                     _Z14setRpmTableBinPfi:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     28          	setTableBin2(array, size, 800, 7000, 1);
   \   00000006   0xEEB7 0x1A00      VMOV.F32 S2,#1.0
   \   0000000A   0xEDDF 0x....      VLDR.W   S1,??DataTable2_2  ;; 0x45dac000
   \   0000000E   0xED9F 0x....      VLDR.W   S0,??DataTable2_3  ;; 0x44480000
   \   00000012   0x0029             MOVS     R1,R5
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0x.... 0x....      BL       _Z12setTableBin2Pfifff
     29          }
   \   0000001A   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x00000000         DC32     0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x3C23D70A         DC32     0x3c23d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x45DAC000         DC32     0x45dac000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x44480000         DC32     0x44480000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   setRpmTableBin(float *, int)
        16   -> setTableBin2(float *, int, float, float, float)
      24   setTableBin(float *, int, float, float)
        24   -> setTableBin2(float *, int, float, float, float)
      32   setTableBin2(float *, int, float, float, float)
        32   -> efiRound
        32   -> interpolate(float, float, float, float, float)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
      28  setRpmTableBin(float *, int)
      44  setTableBin(float *, int, float, float)
      96  setTableBin2(float *, int, float, float, float)

 
 184 bytes in section .text
 
 184 bytes of CODE memory

Errors: none
Warnings: none
