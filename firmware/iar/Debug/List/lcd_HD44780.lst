###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:28 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\lcd\lcd #
#                       _HD44780.cpp                                          #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\lcd\lcd #
#                       _HD44780.cpp -lCN F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\fir #
#                       mware\iar\Debug\List\ -o F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\Debug\Obj\ --no_cse --no_unroll          #
#                       --no_inline --no_code_motion --no_tbaa                #
#                       --no_clustering --no_scheduling --debug               #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\l #
#                       cd_HD44780.lst                                        #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\lc #
#                       d_HD44780.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\hw_layer\lcd\lcd_HD44780.cpp
      1          /**
      2           * @file lcd_HD44780.cpp
      3           * @brief HD44780 character display driver
      4           *
      5           * see http://en.wikipedia.org/wiki/Hitachi_HD44780_LCD_controller
      6           * @date 13.12.2013
      7           * @author Andrey Belomutskiy, (c) 2012-2015
      8           */
      9          
     10          #include "main.h"
     11          
     12          #if EFI_HD44780_LCD
     13          
     14          #include "lcd_HD44780.h"
     15          #include "pin_repository.h"
     16          #include "string.h"
     17          
     18          #include "engine_configuration.h"
     19          
     20          extern engine_configuration_s *engineConfiguration;
     21          extern board_configuration_s *boardConfiguration;
     22          

   \                                 In section .bss, align 4
     23          static Logging *logger;
   \                     logger:
   \   00000000                      DS8 4
     24          
     25          enum {
     26          	LCD_HD44780_DISPLAY_CLEAR = 0x01,
     27          	LCD_HD44780_SHIFT_CURSOR_RIGHT = 0x06,
     28          	LCD_HD44780_DISPLAY_ON = 0x0C,
     29          	LCD_HD44780_4_BIT_BUS = 0x20,
     30          	LCD_HD44780_RESET = 0x30,
     31          	LCD_HD44780_DDRAM_ADDR = 0x80,
     32          
     33          //	LCD_2X16_8_BIT_BUS = 0x30,
     34          //	LCD_2X16_LINE_ONE = 0x20,
     35          //	LCD_2X16_LINES_TWO = 0x28,
     36          //	LCD_2X16_FONT_5X8 = 0x20,
     37          //	LCD_2X16_FONT_5X10 = 0x24,
     38          //	LCD_2X16_DISPLAY_HOME = 0x02,
     39          //	LCD_2X16_DISPLAY_RIGHT = 0x1C,
     40          //	LCD_2X16_DISPLAY_LEFT = 0x18,
     41          //	LCD_2X16_DISPLAY_SHIFT = 0x05,
     42          //	LCD_2X16_CURSOR_ON = 0x0A,
     43          //	LCD_2X16_CURSOR_BLINK = 0x09,
     44          //	LCD_2X16_CURSOR_RIGHT = 0x14,
     45          //	LCD_2X16_CURSOR_LEFT = 0x10,
     46          //	LCD_2X16_SHIFT_LEFT = 0x04,
     47          //	LCD_2X16_CGRAM_ADDR = 0x40,
     48          //	LCD_2X16_BUSY_FLAG = 0x80,
     49          //	LCD_2X16_COMMAND = 0x01,
     50          //	LCD_2X16_DATA = 0x00,

   \                                 In section .bss, align 1
     51          } lcd_HD44780_command;
   \                     lcd_HD44780_command:
   \   00000000                      DS8 1
     52          
     53          // http://web.alfredstate.edu/weimandn/lcd/lcd_addressing/lcd_addressing_index.html

   \                                 In section .rodata, align 4
     54          static const int lineStart[] = { 0, 0x40, 0x14, 0x54 };
   \                     lineStart:
   \   00000000   0x00000000         DC32 0, 64, 20, 84
   \              0x00000040   
   \              0x00000014   
   \              0x00000054   
     55          

   \                                 In section .bss, align 4
     56          static int BUSY_WAIT_DELAY = FALSE;
   \                     BUSY_WAIT_DELAY:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     57          static int currentRow = 0;
   \                     currentRow:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     58          static int currentColumn = 0;
   \                     currentColumn:
   \   00000000                      DS8 4
     59          

   \                                 In section .text, align 2, keep-with-next
     60          static void lcdSleep(int period) {
   \                     _Z8lcdSleepi:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
     61          	if (BUSY_WAIT_DELAY) {
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable10
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD010             BEQ.N    ??lcdSleep_0
     62          		// this mode is useful for displaying messages to report OS fatal issues
     63          
     64          		int ticks = 168000000 / 1000000 * period;
   \   0000000E   0x20A8             MOVS     R0,#+168
   \   00000010   0xFB00 0xF504      MUL      R5,R0,R4
     65          		int a = 0;
   \   00000014   0x2600             MOVS     R6,#+0
     66          		for (int i = 0; i < ticks; i++)
   \   00000016   0x2000             MOVS     R0,#+0
   \                     ??lcdSleep_1:
   \   00000018   0x42A8             CMP      R0,R5
   \   0000001A   0xDA02             BGE.N    ??lcdSleep_2
     67          			a += i;
   \   0000001C   0x1986             ADDS     R6,R0,R6
   \   0000001E   0x1C40             ADDS     R0,R0,#+1
   \   00000020   0xE7FA             B.N      ??lcdSleep_1
     68          		// the purpose of this code is to fool the compiler so that the loop is not optimized away
     69          		efiAssertVoid(a != 0, "true");
   \                     ??lcdSleep_2:
   \   00000022   0x2E00             CMP      R6,#+0
   \   00000024   0xD110             BNE.N    ??lcdSleep_3
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   0000002A   0x.... 0x....      BL       firmwareError
   \   0000002E   0xE00B             B.N      ??lcdSleep_4
     70          
     71          	} else {
     72          		chThdSleepMicroseconds(period);
   \                     ??lcdSleep_0:
   \   00000030   0xF44F 0x707A      MOV      R0,#+1000
   \   00000034   0xFB00 0xF004      MUL      R0,R0,R4
   \   00000038   0x1E40             SUBS     R0,R0,#+1
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable10_2  ;; 0xf4240
   \   0000003E   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000042   0x1C40             ADDS     R0,R0,#+1
   \   00000044   0x.... 0x....      BL       chThdSleep
     73          	}
     74          }
   \                     ??lcdSleep_3:
   \                     ??lcdSleep_4:
   \   00000048   0xBD70             POP      {R4-R6,PC}       ;; return
     75          
     76          //static char txbuf[1];
     77          #define LCD_PORT_EXP_ADDR 0x20
     78          
     79          //-----------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     80          static void lcd_HD44780_write(uint8_t data) {
   \                     _Z17lcd_HD44780_writeh:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
     81          	if (engineConfiguration->displayMode == DM_HD44780) {
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable10_3
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8D0 0x01F8      LDR      R0,[R0, #+504]
   \   0000000E   0x2801             CMP      R0,#+1
   \   00000010   0xF040 0x80D4      BNE.W    ??lcd_HD44780_write_0
     82          		palWritePad(getHwPort(boardConfiguration->HD44780_db7), getHwPin(boardConfiguration->HD44780_db7),
     83          				data & 0x80 ? 1 : 0);
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF8D0 0x00C4      LDR      R0,[R0, #+196]
   \   0000001E   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000022   0x0005             MOVS     R5,R0
   \   00000024   0xF3C4 0x10C0      UBFX     R0,R4,#+7,#+1
   \   00000028   0xF010 0x0601      ANDS     R6,R0,#0x1
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF8D0 0x00C4      LDR      R0,[R0, #+196]
   \   00000036   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   0000003A   0xF3C4 0x11C0      UBFX     R1,R4,#+7,#+1
   \   0000003E   0xF011 0x0101      ANDS     R1,R1,#0x1
   \   00000042   0x43F2             MVNS     R2,R6
   \   00000044   0xF012 0x0201      ANDS     R2,R2,#0x1
   \   00000048   0x3010             ADDS     R0,R0,#+16
   \   0000004A   0xFA12 0xF600      LSLS     R6,R2,R0
   \   0000004E   0xF011 0x0701      ANDS     R7,R1,#0x1
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF8D0 0x00C4      LDR      R0,[R0, #+196]
   \   0000005C   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000060   0xFA17 0xF000      LSLS     R0,R7,R0
   \   00000064   0x4330             ORRS     R0,R0,R6
   \   00000066   0x61A8             STR      R0,[R5, #+24]
     84          		palWritePad(getHwPort(boardConfiguration->HD44780_db6), getHwPin(boardConfiguration->HD44780_db6),
     85          				data & 0x40 ? 1 : 0);
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0xF8D0 0x00C0      LDR      R0,[R0, #+192]
   \   00000072   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000076   0x0005             MOVS     R5,R0
   \   00000078   0xF3C4 0x1080      UBFX     R0,R4,#+6,#+1
   \   0000007C   0xF010 0x0601      ANDS     R6,R0,#0x1
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0xF8D0 0x00C0      LDR      R0,[R0, #+192]
   \   0000008A   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   0000008E   0xF3C4 0x1180      UBFX     R1,R4,#+6,#+1
   \   00000092   0xF011 0x0101      ANDS     R1,R1,#0x1
   \   00000096   0x43F2             MVNS     R2,R6
   \   00000098   0xF012 0x0201      ANDS     R2,R2,#0x1
   \   0000009C   0x3010             ADDS     R0,R0,#+16
   \   0000009E   0xFA12 0xF600      LSLS     R6,R2,R0
   \   000000A2   0xF011 0x0701      ANDS     R7,R1,#0x1
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0xF8D0 0x00C0      LDR      R0,[R0, #+192]
   \   000000B0   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000000B4   0xFA17 0xF000      LSLS     R0,R7,R0
   \   000000B8   0x4330             ORRS     R0,R0,R6
   \   000000BA   0x61A8             STR      R0,[R5, #+24]
     86          		palWritePad(getHwPort(boardConfiguration->HD44780_db5), getHwPin(boardConfiguration->HD44780_db5),
     87          				data & 0x20 ? 1 : 0);
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0xF8D0 0x00BC      LDR      R0,[R0, #+188]
   \   000000C6   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   000000CA   0x0005             MOVS     R5,R0
   \   000000CC   0xF3C4 0x1040      UBFX     R0,R4,#+5,#+1
   \   000000D0   0xF010 0x0601      ANDS     R6,R0,#0x1
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0xF8D0 0x00BC      LDR      R0,[R0, #+188]
   \   000000DE   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000000E2   0xF3C4 0x1140      UBFX     R1,R4,#+5,#+1
   \   000000E6   0xF011 0x0101      ANDS     R1,R1,#0x1
   \   000000EA   0x43F2             MVNS     R2,R6
   \   000000EC   0xF012 0x0201      ANDS     R2,R2,#0x1
   \   000000F0   0x3010             ADDS     R0,R0,#+16
   \   000000F2   0xFA12 0xF600      LSLS     R6,R2,R0
   \   000000F6   0xF011 0x0701      ANDS     R7,R1,#0x1
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   000000FE   0x6800             LDR      R0,[R0, #+0]
   \   00000100   0xF8D0 0x00BC      LDR      R0,[R0, #+188]
   \   00000104   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000108   0xFA17 0xF000      LSLS     R0,R7,R0
   \   0000010C   0x4330             ORRS     R0,R0,R6
   \   0000010E   0x61A8             STR      R0,[R5, #+24]
     88          		palWritePad(getHwPort(boardConfiguration->HD44780_db4), getHwPin(boardConfiguration->HD44780_db4),
     89          				data & 0x10 ? 1 : 0);
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000114   0x6800             LDR      R0,[R0, #+0]
   \   00000116   0xF8D0 0x00B8      LDR      R0,[R0, #+184]
   \   0000011A   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   0000011E   0x0005             MOVS     R5,R0
   \   00000120   0xF3C4 0x1000      UBFX     R0,R4,#+4,#+1
   \   00000124   0xF010 0x0601      ANDS     R6,R0,#0x1
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0xF8D0 0x00B8      LDR      R0,[R0, #+184]
   \   00000132   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000136   0xF3C4 0x1100      UBFX     R1,R4,#+4,#+1
   \   0000013A   0xF011 0x0101      ANDS     R1,R1,#0x1
   \   0000013E   0x43F2             MVNS     R2,R6
   \   00000140   0xF012 0x0201      ANDS     R2,R2,#0x1
   \   00000144   0x3010             ADDS     R0,R0,#+16
   \   00000146   0xFA12 0xF600      LSLS     R6,R2,R0
   \   0000014A   0xF011 0x0701      ANDS     R7,R1,#0x1
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000152   0x6800             LDR      R0,[R0, #+0]
   \   00000154   0xF8D0 0x00B8      LDR      R0,[R0, #+184]
   \   00000158   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   0000015C   0xFA17 0xF000      LSLS     R0,R7,R0
   \   00000160   0x4330             ORRS     R0,R0,R6
   \   00000162   0x61A8             STR      R0,[R5, #+24]
     90          
     91          		palSetPad(getHwPort(boardConfiguration->HD44780_e), getHwPin(boardConfiguration->HD44780_e)); // En high
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000168   0x6800             LDR      R0,[R0, #+0]
   \   0000016A   0xF8D0 0x00B4      LDR      R0,[R0, #+180]
   \   0000016E   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000172   0x0005             MOVS     R5,R0
   \   00000174   0x2601             MOVS     R6,#+1
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   0000017A   0x6800             LDR      R0,[R0, #+0]
   \   0000017C   0xF8D0 0x00B4      LDR      R0,[R0, #+180]
   \   00000180   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000184   0xFA16 0xF000      LSLS     R0,R6,R0
   \   00000188   0x8328             STRH     R0,[R5, #+24]
     92          		lcdSleep(10); // enable pulse must be >450ns
   \   0000018A   0x200A             MOVS     R0,#+10
   \   0000018C   0x.... 0x....      BL       _Z8lcdSleepi
     93          		palClearPad(getHwPort(boardConfiguration->HD44780_e), getHwPin(boardConfiguration->HD44780_e)); // En low
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000194   0x6800             LDR      R0,[R0, #+0]
   \   00000196   0xF8D0 0x00B4      LDR      R0,[R0, #+180]
   \   0000019A   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   0000019E   0x0005             MOVS     R5,R0
   \   000001A0   0x2601             MOVS     R6,#+1
   \   000001A2   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   000001A6   0x6800             LDR      R0,[R0, #+0]
   \   000001A8   0xF8D0 0x00B4      LDR      R0,[R0, #+180]
   \   000001AC   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000001B0   0xFA16 0xF000      LSLS     R0,R6,R0
   \   000001B4   0x8368             STRH     R0,[R5, #+26]
     94          		lcdSleep(40); // commands need > 37us to settle
   \   000001B6   0x2028             MOVS     R0,#+40
   \   000001B8   0x.... 0x....      BL       _Z8lcdSleepi
     95          	} else {
     96          
     97          		//	LCD D4_pin -> P4
     98          		//	LCD D5_pin -> P5
     99          		//	LCD D6_pin -> P6
    100          		//	LCD D7_pin -> P7
    101          		//	LCD Pin RS -> P0
    102          		//	LCD Pin RW -> P1
    103          		//	LCD Pin E  -> P2
    104          
    105          		// todo: finish all this stuff
    106          //				i2cAcquireBus(&I2CD1);
    107          //
    108          //				txbuf[0] = 4;
    109          //				i2cMasterTransmit(&I2CD1, LCD_PORT_EXP_ADDR, txbuf, 1, NULL, 0);
    110          //				lcdSleep(10); // enable pulse must be >450ns
    111          //
    112          //				txbuf[0] = 0;
    113          //				i2cMasterTransmit(&I2CD1, LCD_PORT_EXP_ADDR, txbuf, 1, NULL, 0);
    114          //
    115          //				i2cReleaseBus(&I2CD1);
    116          
    117          	}
    118          }
   \                     ??lcd_HD44780_write_0:
   \   000001BC   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    119          
    120          //-----------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    121          void lcd_HD44780_write_command(uint8_t data) {
   \                     _Z25lcd_HD44780_write_commandh:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    122          	palClearPad(getHwPort(boardConfiguration->HD44780_rs), getHwPin(boardConfiguration->HD44780_rs));
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8D0 0x00B0      LDR      R0,[R0, #+176]
   \   0000000E   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000012   0x0005             MOVS     R5,R0
   \   00000014   0x2601             MOVS     R6,#+1
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF8D0 0x00B0      LDR      R0,[R0, #+176]
   \   00000020   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000024   0xFA16 0xF000      LSLS     R0,R6,R0
   \   00000028   0x8368             STRH     R0,[R5, #+26]
    123          
    124          	lcd_HD44780_write(data);
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       _Z17lcd_HD44780_writeh
    125          	lcd_HD44780_write(data << 4);
   \   00000032   0x0120             LSLS     R0,R4,#+4
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0x.... 0x....      BL       _Z17lcd_HD44780_writeh
    126          }
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return
    127          
    128          //-----------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    129          void lcd_HD44780_write_data(uint8_t data) {
   \                     _Z22lcd_HD44780_write_datah:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    130          	palSetPad(getHwPort(boardConfiguration->HD44780_rs), getHwPin(boardConfiguration->HD44780_rs));
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8D0 0x00B0      LDR      R0,[R0, #+176]
   \   0000000E   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000012   0x0005             MOVS     R5,R0
   \   00000014   0x2601             MOVS     R6,#+1
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF8D0 0x00B0      LDR      R0,[R0, #+176]
   \   00000020   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000024   0xFA16 0xF000      LSLS     R0,R6,R0
   \   00000028   0x8328             STRH     R0,[R5, #+24]
    131          
    132          	lcd_HD44780_write(data);
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       _Z17lcd_HD44780_writeh
    133          	lcd_HD44780_write(data << 4);
   \   00000032   0x0120             LSLS     R0,R4,#+4
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0x.... 0x....      BL       _Z17lcd_HD44780_writeh
    134          	currentColumn++;
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x1C40             ADDS     R0,R0,#+1
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable10_5
   \   00000046   0x6008             STR      R0,[R1, #+0]
    135          
    136          	palClearPad(getHwPort(boardConfiguration->HD44780_rs), getHwPin(boardConfiguration->HD44780_rs));
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0xF8D0 0x00B0      LDR      R0,[R0, #+176]
   \   00000052   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000056   0x0005             MOVS     R5,R0
   \   00000058   0x2601             MOVS     R6,#+1
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0xF8D0 0x00B0      LDR      R0,[R0, #+176]
   \   00000064   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000068   0xFA16 0xF000      LSLS     R0,R6,R0
   \   0000006C   0x8368             STRH     R0,[R5, #+26]
    137          }
   \   0000006E   0xBD70             POP      {R4-R6,PC}       ;; return
    138          
    139          //-----------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    140          void lcd_HD44780_set_position(uint8_t row, uint8_t column) {
   \                     lcd_HD44780_set_position:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    141          	efiAssertVoid(row <= engineConfiguration->HD44780height, "invalid row");
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable10_3
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF8D0 0x0208      LDR      R0,[R0, #+520]
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0x42A0             CMP      R0,R4
   \   00000014   0xDA04             BGE.N    ??lcd_HD44780_set_position_0
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable10_6
   \   0000001A   0x.... 0x....      BL       firmwareError
   \   0000001E   0xE011             B.N      ??lcd_HD44780_set_position_1
    142          	currentRow = row;
   \                     ??lcd_HD44780_set_position_0:
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable10_7
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x6004             STR      R4,[R0, #+0]
    143          	currentColumn = column;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   0000002C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002E   0x6005             STR      R5,[R0, #+0]
    144          	lcd_HD44780_write_command(LCD_HD44780_DDRAM_ADDR + lineStart[row] + column);
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable10_8
   \   00000036   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000003A   0x1828             ADDS     R0,R5,R0
   \   0000003C   0x3880             SUBS     R0,R0,#+128
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0x.... 0x....      BL       _Z25lcd_HD44780_write_commandh
    145          }
   \                     ??lcd_HD44780_set_position_1:
   \   00000044   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    146          

   \                                 In section .text, align 2, keep-with-next
    147          int getCurrentHD44780row(void) {
    148          	return currentRow;
   \                     getCurrentHD44780row:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable10_7
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x4770             BX       LR               ;; return
    149          }
    150          

   \                                 In section .text, align 2, keep-with-next
    151          int getCurrentHD44780column(void) {
    152          	return currentColumn;
   \                     getCurrentHD44780column:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x4770             BX       LR               ;; return
    153          }
    154          

   \                                 In section .text, align 2, keep-with-next
    155          void lcd_HD44780_print_char(char data) {
   \                     lcd_HD44780_print_char:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    156          	if (data == '\n') {
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C0A             CMP      R4,#+10
   \   00000008   0xD10B             BNE.N    ??lcd_HD44780_print_char_0
    157          		lcd_HD44780_set_position(++currentRow, 0);
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable10_7
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x1C40             ADDS     R0,R0,#+1
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable10_7
   \   00000016   0x6008             STR      R0,[R1, #+0]
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001C   0x.... 0x....      BL       lcd_HD44780_set_position
   \   00000020   0xE003             B.N      ??lcd_HD44780_print_char_1
    158          	} else {
    159          		lcd_HD44780_write_data(data);
   \                     ??lcd_HD44780_print_char_0:
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       _Z22lcd_HD44780_write_datah
    160          	}
    161          }
   \                     ??lcd_HD44780_print_char_1:
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
    162          

   \                                 In section .text, align 2, keep-with-next
    163          void lcd_HD44780_print_string(const char* string) {
   \                     lcd_HD44780_print_string:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    164          	while (*string != 0x00)
   \                     ??lcd_HD44780_print_string_0:
   \   00000004   0x7820             LDRB     R0,[R4, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD004             BEQ.N    ??lcd_HD44780_print_string_1
    165          		lcd_HD44780_print_char(*string++);
   \   0000000A   0x7820             LDRB     R0,[R4, #+0]
   \   0000000C   0x.... 0x....      BL       lcd_HD44780_print_char
   \   00000010   0x1C64             ADDS     R4,R4,#+1
   \   00000012   0xE7F7             B.N      ??lcd_HD44780_print_string_0
    166          }
   \                     ??lcd_HD44780_print_string_1:
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    167          //getHwPin(boardConfiguration->HD44780_db7)

   \                                 In section .text, align 2, keep-with-next
    168          static void lcdInfo(void) {
   \                     _Z7lcdInfov:
   \   00000000   0xB580             PUSH     {R7,LR}
    169          	scheduleMsg(logger, "HD44780 RS=%s", hwPortname(boardConfiguration->HD44780_rs));
   \   00000002   0x....             LDR.N    R0,??DataTable10_4
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF8D0 0x00B0      LDR      R0,[R0, #+176]
   \   0000000A   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000000E   0x0002             MOVS     R2,R0
   \   00000010   0x....             LDR.N    R1,??DataTable10_9
   \   00000012   0x....             LDR.N    R0,??DataTable10_10
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x.... 0x....      BL       scheduleMsg
    170          	scheduleMsg(logger, "HD44780 E=%s", hwPortname(boardConfiguration->HD44780_e));
   \   0000001A   0x....             LDR.N    R0,??DataTable10_4
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF8D0 0x00B4      LDR      R0,[R0, #+180]
   \   00000022   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000026   0x0002             MOVS     R2,R0
   \   00000028   0x....             LDR.N    R1,??DataTable10_11
   \   0000002A   0x....             LDR.N    R0,??DataTable10_10
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x.... 0x....      BL       scheduleMsg
    171          	scheduleMsg(logger, "HD44780 D4=%s", hwPortname(boardConfiguration->HD44780_db4));
   \   00000032   0x....             LDR.N    R0,??DataTable10_4
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0xF8D0 0x00B8      LDR      R0,[R0, #+184]
   \   0000003A   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000003E   0x0002             MOVS     R2,R0
   \   00000040   0x....             LDR.N    R1,??DataTable10_12
   \   00000042   0x....             LDR.N    R0,??DataTable10_10
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0x.... 0x....      BL       scheduleMsg
    172          	scheduleMsg(logger, "HD44780 D5=%s", hwPortname(boardConfiguration->HD44780_db5));
   \   0000004A   0x....             LDR.N    R0,??DataTable10_4
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0xF8D0 0x00BC      LDR      R0,[R0, #+188]
   \   00000052   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000056   0x0002             MOVS     R2,R0
   \   00000058   0x....             LDR.N    R1,??DataTable10_13
   \   0000005A   0x....             LDR.N    R0,??DataTable10_10
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0x.... 0x....      BL       scheduleMsg
    173          	scheduleMsg(logger, "HD44780 D6=%s", hwPortname(boardConfiguration->HD44780_db6));
   \   00000062   0x....             LDR.N    R0,??DataTable10_4
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0xF8D0 0x00C0      LDR      R0,[R0, #+192]
   \   0000006A   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000006E   0x0002             MOVS     R2,R0
   \   00000070   0x....             LDR.N    R1,??DataTable10_14
   \   00000072   0x....             LDR.N    R0,??DataTable10_10
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x.... 0x....      BL       scheduleMsg
    174          	scheduleMsg(logger, "HD44780 D7=%s", hwPortname(boardConfiguration->HD44780_db7));
   \   0000007A   0x....             LDR.N    R0,??DataTable10_4
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0xF8D0 0x00C4      LDR      R0,[R0, #+196]
   \   00000082   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000086   0x0002             MOVS     R2,R0
   \   00000088   0x....             LDR.N    R1,??DataTable10_15
   \   0000008A   0x....             LDR.N    R0,??DataTable10_10
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0x.... 0x....      BL       scheduleMsg
    175          }
   \   00000092   0xBD01             POP      {R0,PC}          ;; return
    176          

   \                                 In section .text, align 2, keep-with-next
    177          void lcd_HD44780_init(Logging *sharedLogger) {
   \                     lcd_HD44780_init:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
    178          	logger = sharedLogger;
   \   00000004   0x....             LDR.N    R0,??DataTable10_10
   \   00000006   0x6004             STR      R4,[R0, #+0]
    179          
    180          	addConsoleAction("lcdinfo", lcdInfo);
   \   00000008   0x....             LDR.N    R1,??DataTable10_16
   \   0000000A   0x....             LDR.N    R0,??DataTable10_17
   \   0000000C   0x.... 0x....      BL       addConsoleAction
    181          
    182          	if (engineConfiguration->displayMode > DM_HD44780_OVER_PCF8574) {
   \   00000010   0x....             LDR.N    R0,??DataTable10_3
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF8D0 0x01F8      LDR      R0,[R0, #+504]
   \   00000018   0x2803             CMP      R0,#+3
   \   0000001A   0xDB07             BLT.N    ??lcd_HD44780_init_0
    183          		firmwareError("Unexpected displayMode %d", engineConfiguration->displayMode);
   \   0000001C   0x....             LDR.N    R0,??DataTable10_3
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF8D0 0x11F8      LDR      R1,[R0, #+504]
   \   00000024   0x....             LDR.N    R0,??DataTable10_18
   \   00000026   0x.... 0x....      BL       firmwareError
    184          		return;
   \   0000002A   0xE123             B.N      ??lcd_HD44780_init_1
    185          	}
    186          
    187          	printMsg(logger, "lcd_HD44780_init %d", engineConfiguration->displayMode);
   \                     ??lcd_HD44780_init_0:
   \   0000002C   0x....             LDR.N    R0,??DataTable10_3
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF8D0 0x21F8      LDR      R2,[R0, #+504]
   \   00000034   0x....             LDR.N    R1,??DataTable10_19
   \   00000036   0x....             LDR.N    R0,??DataTable10_10
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x.... 0x....      BL       printMsg
    188          
    189          	if (engineConfiguration->displayMode == DM_HD44780) {
   \   0000003E   0x....             LDR.N    R0,??DataTable10_3
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xF8D0 0x01F8      LDR      R0,[R0, #+504]
   \   00000046   0x2801             CMP      R0,#+1
   \   00000048   0xF040 0x80D8      BNE.W    ??lcd_HD44780_init_2
    190          		// initialize hardware lines
    191          		mySetPadMode2("lcd RS", boardConfiguration->HD44780_rs, PAL_MODE_OUTPUT_PUSHPULL);
   \   0000004C   0x2201             MOVS     R2,#+1
   \   0000004E   0x....             LDR.N    R0,??DataTable10_4
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0xF8D0 0x10B0      LDR      R1,[R0, #+176]
   \   00000056   0x....             LDR.N    R0,??DataTable10_20
   \   00000058   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    192          		mySetPadMode2("lcd E", boardConfiguration->HD44780_e, PAL_MODE_OUTPUT_PUSHPULL);
   \   0000005C   0x2201             MOVS     R2,#+1
   \   0000005E   0x....             LDR.N    R0,??DataTable10_4
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0xF8D0 0x10B4      LDR      R1,[R0, #+180]
   \   00000066   0x....             LDR.N    R0,??DataTable10_21
   \   00000068   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    193          		mySetPadMode2("lcd DB4", boardConfiguration->HD44780_db4, PAL_MODE_OUTPUT_PUSHPULL);
   \   0000006C   0x2201             MOVS     R2,#+1
   \   0000006E   0x....             LDR.N    R0,??DataTable10_4
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0xF8D0 0x10B8      LDR      R1,[R0, #+184]
   \   00000076   0x....             LDR.N    R0,??DataTable10_22
   \   00000078   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    194          		mySetPadMode2("lcd DB6", boardConfiguration->HD44780_db5, PAL_MODE_OUTPUT_PUSHPULL);
   \   0000007C   0x2201             MOVS     R2,#+1
   \   0000007E   0x....             LDR.N    R0,??DataTable10_4
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0xF8D0 0x10BC      LDR      R1,[R0, #+188]
   \   00000086   0x....             LDR.N    R0,??DataTable10_23
   \   00000088   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    195          		mySetPadMode2("lcd DB7", boardConfiguration->HD44780_db6, PAL_MODE_OUTPUT_PUSHPULL);
   \   0000008C   0x2201             MOVS     R2,#+1
   \   0000008E   0x....             LDR.N    R0,??DataTable10_4
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0xF8D0 0x10C0      LDR      R1,[R0, #+192]
   \   00000096   0x....             LDR.N    R0,??DataTable10_24
   \   00000098   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    196          		mySetPadMode2("lcd DB8", boardConfiguration->HD44780_db7, PAL_MODE_OUTPUT_PUSHPULL);
   \   0000009C   0x2201             MOVS     R2,#+1
   \   0000009E   0x....             LDR.N    R0,??DataTable10_4
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0xF8D0 0x10C4      LDR      R1,[R0, #+196]
   \   000000A6   0x....             LDR.N    R0,??DataTable10_25
   \   000000A8   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    197          		// and zero values
    198          		palWritePad(getHwPort(boardConfiguration->HD44780_rs), getHwPin(boardConfiguration->HD44780_rs), 0);
   \   000000AC   0x....             LDR.N    R0,??DataTable10_4
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0xF8D0 0x00B0      LDR      R0,[R0, #+176]
   \   000000B4   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   000000B8   0x0005             MOVS     R5,R0
   \   000000BA   0x....             LDR.N    R0,??DataTable10_4
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0xF8D0 0x00B0      LDR      R0,[R0, #+176]
   \   000000C2   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000000C6   0x2101             MOVS     R1,#+1
   \   000000C8   0x3010             ADDS     R0,R0,#+16
   \   000000CA   0xFA11 0xF600      LSLS     R6,R1,R0
   \   000000CE   0x2700             MOVS     R7,#+0
   \   000000D0   0x....             LDR.N    R0,??DataTable10_4
   \   000000D2   0x6800             LDR      R0,[R0, #+0]
   \   000000D4   0xF8D0 0x00B0      LDR      R0,[R0, #+176]
   \   000000D8   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000000DC   0xFA17 0xF000      LSLS     R0,R7,R0
   \   000000E0   0x4330             ORRS     R0,R0,R6
   \   000000E2   0x61A8             STR      R0,[R5, #+24]
    199          		palWritePad(getHwPort(boardConfiguration->HD44780_e), getHwPin(boardConfiguration->HD44780_e), 0);
   \   000000E4   0x....             LDR.N    R0,??DataTable10_4
   \   000000E6   0x6800             LDR      R0,[R0, #+0]
   \   000000E8   0xF8D0 0x00B4      LDR      R0,[R0, #+180]
   \   000000EC   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   000000F0   0x0005             MOVS     R5,R0
   \   000000F2   0x....             LDR.N    R0,??DataTable10_4
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0xF8D0 0x00B4      LDR      R0,[R0, #+180]
   \   000000FA   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000000FE   0x2101             MOVS     R1,#+1
   \   00000100   0x3010             ADDS     R0,R0,#+16
   \   00000102   0xFA11 0xF600      LSLS     R6,R1,R0
   \   00000106   0x2700             MOVS     R7,#+0
   \   00000108   0x....             LDR.N    R0,??DataTable10_4
   \   0000010A   0x6800             LDR      R0,[R0, #+0]
   \   0000010C   0xF8D0 0x00B4      LDR      R0,[R0, #+180]
   \   00000110   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000114   0xFA17 0xF000      LSLS     R0,R7,R0
   \   00000118   0x4330             ORRS     R0,R0,R6
   \   0000011A   0x61A8             STR      R0,[R5, #+24]
    200          		palWritePad(getHwPort(boardConfiguration->HD44780_db4), getHwPin(boardConfiguration->HD44780_db4), 0);
   \   0000011C   0x....             LDR.N    R0,??DataTable10_4
   \   0000011E   0x6800             LDR      R0,[R0, #+0]
   \   00000120   0xF8D0 0x00B8      LDR      R0,[R0, #+184]
   \   00000124   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000128   0x0005             MOVS     R5,R0
   \   0000012A   0x....             LDR.N    R0,??DataTable10_4
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0xF8D0 0x00B8      LDR      R0,[R0, #+184]
   \   00000132   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000136   0x2101             MOVS     R1,#+1
   \   00000138   0x3010             ADDS     R0,R0,#+16
   \   0000013A   0xFA11 0xF600      LSLS     R6,R1,R0
   \   0000013E   0x2700             MOVS     R7,#+0
   \   00000140   0x....             LDR.N    R0,??DataTable10_4
   \   00000142   0x6800             LDR      R0,[R0, #+0]
   \   00000144   0xF8D0 0x00B8      LDR      R0,[R0, #+184]
   \   00000148   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   0000014C   0xFA17 0xF000      LSLS     R0,R7,R0
   \   00000150   0x4330             ORRS     R0,R0,R6
   \   00000152   0x61A8             STR      R0,[R5, #+24]
    201          		palWritePad(getHwPort(boardConfiguration->HD44780_db5), getHwPin(boardConfiguration->HD44780_db5), 0);
   \   00000154   0x....             LDR.N    R0,??DataTable10_4
   \   00000156   0x6800             LDR      R0,[R0, #+0]
   \   00000158   0xF8D0 0x00BC      LDR      R0,[R0, #+188]
   \   0000015C   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000160   0x0005             MOVS     R5,R0
   \   00000162   0x....             LDR.N    R0,??DataTable10_4
   \   00000164   0x6800             LDR      R0,[R0, #+0]
   \   00000166   0xF8D0 0x00BC      LDR      R0,[R0, #+188]
   \   0000016A   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   0000016E   0x2101             MOVS     R1,#+1
   \   00000170   0x3010             ADDS     R0,R0,#+16
   \   00000172   0xFA11 0xF600      LSLS     R6,R1,R0
   \   00000176   0x2700             MOVS     R7,#+0
   \   00000178   0x....             LDR.N    R0,??DataTable10_4
   \   0000017A   0x6800             LDR      R0,[R0, #+0]
   \   0000017C   0xF8D0 0x00BC      LDR      R0,[R0, #+188]
   \   00000180   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000184   0xFA17 0xF000      LSLS     R0,R7,R0
   \   00000188   0x4330             ORRS     R0,R0,R6
   \   0000018A   0x61A8             STR      R0,[R5, #+24]
    202          		palWritePad(getHwPort(boardConfiguration->HD44780_db6), getHwPin(boardConfiguration->HD44780_db6), 0);
   \   0000018C   0x....             LDR.N    R0,??DataTable10_4
   \   0000018E   0x6800             LDR      R0,[R0, #+0]
   \   00000190   0xF8D0 0x00C0      LDR      R0,[R0, #+192]
   \   00000194   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000198   0x0005             MOVS     R5,R0
   \   0000019A   0x....             LDR.N    R0,??DataTable10_4
   \   0000019C   0x6800             LDR      R0,[R0, #+0]
   \   0000019E   0xF8D0 0x00C0      LDR      R0,[R0, #+192]
   \   000001A2   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000001A6   0x2101             MOVS     R1,#+1
   \   000001A8   0x3010             ADDS     R0,R0,#+16
   \   000001AA   0xFA11 0xF600      LSLS     R6,R1,R0
   \   000001AE   0x2700             MOVS     R7,#+0
   \   000001B0   0x....             LDR.N    R0,??DataTable10_4
   \   000001B2   0x6800             LDR      R0,[R0, #+0]
   \   000001B4   0xF8D0 0x00C0      LDR      R0,[R0, #+192]
   \   000001B8   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000001BC   0xFA17 0xF000      LSLS     R0,R7,R0
   \   000001C0   0x4330             ORRS     R0,R0,R6
   \   000001C2   0x61A8             STR      R0,[R5, #+24]
    203          		palWritePad(getHwPort(boardConfiguration->HD44780_db7), getHwPin(boardConfiguration->HD44780_db7), 0);
   \   000001C4   0x....             LDR.N    R0,??DataTable10_4
   \   000001C6   0x6800             LDR      R0,[R0, #+0]
   \   000001C8   0xF8D0 0x00C4      LDR      R0,[R0, #+196]
   \   000001CC   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   000001D0   0x0005             MOVS     R5,R0
   \   000001D2   0x....             LDR.N    R0,??DataTable10_4
   \   000001D4   0x6800             LDR      R0,[R0, #+0]
   \   000001D6   0xF8D0 0x00C4      LDR      R0,[R0, #+196]
   \   000001DA   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000001DE   0x2101             MOVS     R1,#+1
   \   000001E0   0x3010             ADDS     R0,R0,#+16
   \   000001E2   0xFA11 0xF600      LSLS     R6,R1,R0
   \   000001E6   0x2700             MOVS     R7,#+0
   \   000001E8   0x....             LDR.N    R0,??DataTable10_4
   \   000001EA   0x6800             LDR      R0,[R0, #+0]
   \   000001EC   0xF8D0 0x00C4      LDR      R0,[R0, #+196]
   \   000001F0   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000001F4   0xFA17 0xF000      LSLS     R0,R7,R0
   \   000001F8   0x4330             ORRS     R0,R0,R6
   \   000001FA   0x61A8             STR      R0,[R5, #+24]
    204          	}
    205          
    206          	chThdSleepMilliseconds(20); // LCD needs some time to wake up
   \                     ??lcd_HD44780_init_2:
   \   000001FC   0x2014             MOVS     R0,#+20
   \   000001FE   0x.... 0x....      BL       chThdSleep
    207          	lcd_HD44780_write(LCD_HD44780_RESET); // reset 1x
   \   00000202   0x2030             MOVS     R0,#+48
   \   00000204   0x.... 0x....      BL       _Z17lcd_HD44780_writeh
    208          	chThdSleepMilliseconds(1);
   \   00000208   0x2001             MOVS     R0,#+1
   \   0000020A   0x.... 0x....      BL       chThdSleep
    209          	lcd_HD44780_write(LCD_HD44780_RESET); // reset 2x
   \   0000020E   0x2030             MOVS     R0,#+48
   \   00000210   0x.... 0x....      BL       _Z17lcd_HD44780_writeh
    210          	lcd_HD44780_write(LCD_HD44780_RESET); // reset 3x
   \   00000214   0x2030             MOVS     R0,#+48
   \   00000216   0x.... 0x....      BL       _Z17lcd_HD44780_writeh
    211          
    212          	lcd_HD44780_write(LCD_HD44780_4_BIT_BUS);	// 4 bit, 2 line
   \   0000021A   0x2020             MOVS     R0,#+32
   \   0000021C   0x.... 0x....      BL       _Z17lcd_HD44780_writeh
    213          	chThdSleepMicroseconds(40);
   \   00000220   0x2001             MOVS     R0,#+1
   \   00000222   0x.... 0x....      BL       chThdSleep
    214          
    215          	lcd_HD44780_write(LCD_HD44780_4_BIT_BUS);	// 4 bit, 2 line
   \   00000226   0x2020             MOVS     R0,#+32
   \   00000228   0x.... 0x....      BL       _Z17lcd_HD44780_writeh
    216          	lcd_HD44780_write(0x80);
   \   0000022C   0x2080             MOVS     R0,#+128
   \   0000022E   0x.... 0x....      BL       _Z17lcd_HD44780_writeh
    217          	chThdSleepMicroseconds(40);
   \   00000232   0x2001             MOVS     R0,#+1
   \   00000234   0x.... 0x....      BL       chThdSleep
    218          
    219          	lcd_HD44780_write_command(0x08);	// display and cursor control
   \   00000238   0x2008             MOVS     R0,#+8
   \   0000023A   0x.... 0x....      BL       _Z25lcd_HD44780_write_commandh
    220          	chThdSleepMicroseconds(40);
   \   0000023E   0x2001             MOVS     R0,#+1
   \   00000240   0x.... 0x....      BL       chThdSleep
    221          
    222          	lcd_HD44780_write_command(LCD_HD44780_DISPLAY_CLEAR);
   \   00000244   0x2001             MOVS     R0,#+1
   \   00000246   0x.... 0x....      BL       _Z25lcd_HD44780_write_commandh
    223          	chThdSleepMilliseconds(2);
   \   0000024A   0x2002             MOVS     R0,#+2
   \   0000024C   0x.... 0x....      BL       chThdSleep
    224          
    225          	lcd_HD44780_write_command(LCD_HD44780_SHIFT_CURSOR_RIGHT);
   \   00000250   0x2006             MOVS     R0,#+6
   \   00000252   0x.... 0x....      BL       _Z25lcd_HD44780_write_commandh
    226          	chThdSleepMilliseconds(2);
   \   00000256   0x2002             MOVS     R0,#+2
   \   00000258   0x.... 0x....      BL       chThdSleep
    227          
    228          	lcd_HD44780_write_command(LCD_HD44780_DISPLAY_ON);
   \   0000025C   0x200C             MOVS     R0,#+12
   \   0000025E   0x.... 0x....      BL       _Z25lcd_HD44780_write_commandh
    229          
    230          	lcd_HD44780_set_position(0, 0);
   \   00000262   0x2100             MOVS     R1,#+0
   \   00000264   0x2000             MOVS     R0,#+0
   \   00000266   0x.... 0x....      BL       lcd_HD44780_set_position
    231          	printMsg(logger, "lcd_HD44780_init() done");
   \   0000026A   0x....             LDR.N    R1,??DataTable10_26
   \   0000026C   0x....             LDR.N    R0,??DataTable10_10
   \   0000026E   0x6800             LDR      R0,[R0, #+0]
   \   00000270   0x.... 0x....      BL       printMsg
    232          }
   \                     ??lcd_HD44780_init_1:
   \   00000274   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    233          

   \                                 In section .text, align 2, keep-with-next
    234          void lcdShowFatalMessage(char *message) {
   \                     lcdShowFatalMessage:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    235          	BUSY_WAIT_DELAY = TRUE;
   \   00000004   0x....             LDR.N    R0,??DataTable10
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x6001             STR      R1,[R0, #+0]
    236          	lcd_HD44780_set_position(0, 0);
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       lcd_HD44780_set_position
    237          	lcd_HD44780_print_string("fatal\n");
   \   00000012   0x....             LDR.N    R0,??DataTable10_27
   \   00000014   0x.... 0x....      BL       lcd_HD44780_print_string
    238          	lcd_HD44780_print_string(message);
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x.... 0x....      BL       lcd_HD44780_print_string
    239          }
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     BUSY_WAIT_DELAY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     `?<Constant "true">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x........         DC32     engineConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \   00000000   0x........         DC32     currentColumn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \   00000000   0x........         DC32     `?<Constant "invalid row">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \   00000000   0x........         DC32     currentRow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \   00000000   0x........         DC32     lineStart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_9:
   \   00000000   0x........         DC32     `?<Constant "HD44780 RS=%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_10:
   \   00000000   0x........         DC32     logger

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_11:
   \   00000000   0x........         DC32     `?<Constant "HD44780 E=%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_12:
   \   00000000   0x........         DC32     `?<Constant "HD44780 D4=%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_13:
   \   00000000   0x........         DC32     `?<Constant "HD44780 D5=%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_14:
   \   00000000   0x........         DC32     `?<Constant "HD44780 D6=%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_15:
   \   00000000   0x........         DC32     `?<Constant "HD44780 D7=%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_16:
   \   00000000   0x........         DC32     _Z7lcdInfov

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_17:
   \   00000000   0x........         DC32     `?<Constant "lcdinfo">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_18:
   \   00000000   0x........         DC32     `?<Constant "Unexpected displayMod...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_19:
   \   00000000   0x........         DC32     `?<Constant "lcd_HD44780_init %d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_20:
   \   00000000   0x........         DC32     `?<Constant "lcd RS">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_21:
   \   00000000   0x........         DC32     `?<Constant "lcd E">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_22:
   \   00000000   0x........         DC32     `?<Constant "lcd DB4">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_23:
   \   00000000   0x........         DC32     `?<Constant "lcd DB6">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_24:
   \   00000000   0x........         DC32     `?<Constant "lcd DB7">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_25:
   \   00000000   0x........         DC32     `?<Constant "lcd DB8">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_26:
   \   00000000   0x........         DC32     `?<Constant "lcd_HD44780_init() done">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_27:
   \   00000000   0x........         DC32     `?<Constant "fatal\\n">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "true">`:
   \   00000000   0x74 0x72          DC8 "true"
   \              0x75 0x65    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "invalid row">`:
   \   00000000   0x69 0x6E          DC8 "invalid row"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x72 0x6F    
   \              0x77 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "HD44780 RS=%s">`:
   \   00000000   0x48 0x44          DC8 "HD44780 RS=%s"
   \              0x34 0x34    
   \              0x37 0x38    
   \              0x30 0x20    
   \              0x52 0x53    
   \              0x3D 0x25    
   \              0x73 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "HD44780 E=%s">`:
   \   00000000   0x48 0x44          DC8 "HD44780 E=%s"
   \              0x34 0x34    
   \              0x37 0x38    
   \              0x30 0x20    
   \              0x45 0x3D    
   \              0x25 0x73    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "HD44780 D4=%s">`:
   \   00000000   0x48 0x44          DC8 "HD44780 D4=%s"
   \              0x34 0x34    
   \              0x37 0x38    
   \              0x30 0x20    
   \              0x44 0x34    
   \              0x3D 0x25    
   \              0x73 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "HD44780 D5=%s">`:
   \   00000000   0x48 0x44          DC8 "HD44780 D5=%s"
   \              0x34 0x34    
   \              0x37 0x38    
   \              0x30 0x20    
   \              0x44 0x35    
   \              0x3D 0x25    
   \              0x73 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "HD44780 D6=%s">`:
   \   00000000   0x48 0x44          DC8 "HD44780 D6=%s"
   \              0x34 0x34    
   \              0x37 0x38    
   \              0x30 0x20    
   \              0x44 0x36    
   \              0x3D 0x25    
   \              0x73 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "HD44780 D7=%s">`:
   \   00000000   0x48 0x44          DC8 "HD44780 D7=%s"
   \              0x34 0x34    
   \              0x37 0x38    
   \              0x30 0x20    
   \              0x44 0x37    
   \              0x3D 0x25    
   \              0x73 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "lcdinfo">`:
   \   00000000   0x6C 0x63          DC8 "lcdinfo"
   \              0x64 0x69    
   \              0x6E 0x66    
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Unexpected displayMod...">`:
   \   00000000   0x55 0x6E          DC8 "Unexpected displayMode %d"
   \              0x65 0x78    
   \              0x70 0x65    
   \              0x63 0x74    
   \              0x65 0x64    
   \              0x20 0x64    
   \              0x69 0x73    
   \              0x70 0x6C    
   \              0x61 0x79    
   \              0x4D 0x6F    
   \              0x64 0x65    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "lcd_HD44780_init %d">`:
   \   00000000   0x6C 0x63          DC8 "lcd_HD44780_init %d"
   \              0x64 0x5F    
   \              0x48 0x44    
   \              0x34 0x34    
   \              0x37 0x38    
   \              0x30 0x5F    
   \              0x69 0x6E    
   \              0x69 0x74    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "lcd RS">`:
   \   00000000   0x6C 0x63          DC8 "lcd RS"
   \              0x64 0x20    
   \              0x52 0x53    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "lcd E">`:
   \   00000000   0x6C 0x63          DC8 "lcd E"
   \              0x64 0x20    
   \              0x45 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "lcd DB4">`:
   \   00000000   0x6C 0x63          DC8 "lcd DB4"
   \              0x64 0x20    
   \              0x44 0x42    
   \              0x34 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "lcd DB6">`:
   \   00000000   0x6C 0x63          DC8 "lcd DB6"
   \              0x64 0x20    
   \              0x44 0x42    
   \              0x36 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "lcd DB7">`:
   \   00000000   0x6C 0x63          DC8 "lcd DB7"
   \              0x64 0x20    
   \              0x44 0x42    
   \              0x37 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "lcd DB8">`:
   \   00000000   0x6C 0x63          DC8 "lcd DB8"
   \              0x64 0x20    
   \              0x44 0x42    
   \              0x38 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "lcd_HD44780_init() done">`:
   \   00000000   0x6C 0x63          DC8 "lcd_HD44780_init() done"
   \              0x64 0x5F    
   \              0x48 0x44    
   \              0x34 0x34    
   \              0x37 0x38    
   \              0x30 0x5F    
   \              0x69 0x6E    
   \              0x69 0x74    
   \              0x28 0x29    
   \              0x20 0x64    
   \              0x6F 0x6E    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "fatal\\n">`:
   \   00000000   0x66 0x61          DC8 "fatal\012"
   \              0x74 0x61    
   \              0x6C 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0
    240          
    241          #endif /* EFI_HD44780_LCD */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   getCurrentHD44780column
       0   getCurrentHD44780row
       8   lcdInfo()
         8   -> hwPortname(brain_pin_e)
         8   -> scheduleMsg
       8   lcdShowFatalMessage
         8   -> lcd_HD44780_print_string
         8   -> lcd_HD44780_set_position
      16   lcdSleep(int)
        16   -> chThdSleep
        16   -> firmwareError
      24   lcd_HD44780_init
        24   -> addConsoleAction
        24   -> chThdSleep
        24   -> firmwareError
        24   -> getHwPin(brain_pin_e)
        24   -> getHwPort(brain_pin_e)
        24   -> lcd_HD44780_set_position
        24   -> lcd_HD44780_write(uint8_t)
        24   -> lcd_HD44780_write_command(uint8_t)
        24   -> mySetPadMode2(char const *, brain_pin_e, iomode_t)
        24   -> printMsg
       8   lcd_HD44780_print_char
         8   -> lcd_HD44780_set_position
         8   -> lcd_HD44780_write_data(uint8_t)
       8   lcd_HD44780_print_string
         8   -> lcd_HD44780_print_char
      16   lcd_HD44780_set_position
        16   -> firmwareError
        16   -> lcd_HD44780_write_command(uint8_t)
      24   lcd_HD44780_write(uint8_t)
        24   -> getHwPin(brain_pin_e)
        24   -> getHwPort(brain_pin_e)
        24   -> lcdSleep(int)
      16   lcd_HD44780_write_command(uint8_t)
        16   -> getHwPin(brain_pin_e)
        16   -> getHwPort(brain_pin_e)
        16   -> lcd_HD44780_write(uint8_t)
      16   lcd_HD44780_write_data(uint8_t)
        16   -> getHwPin(brain_pin_e)
        16   -> getHwPort(brain_pin_e)
        16   -> lcd_HD44780_write(uint8_t)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant "HD44780 D4=%s">
      16  ?<Constant "HD44780 D5=%s">
      16  ?<Constant "HD44780 D6=%s">
      16  ?<Constant "HD44780 D7=%s">
      16  ?<Constant "HD44780 E=%s">
      16  ?<Constant "HD44780 RS=%s">
      28  ?<Constant "Unexpected displayMod...">
       8  ?<Constant "fatal\n">
      12  ?<Constant "invalid row">
       8  ?<Constant "lcd DB4">
       8  ?<Constant "lcd DB6">
       8  ?<Constant "lcd DB7">
       8  ?<Constant "lcd DB8">
       8  ?<Constant "lcd E">
       8  ?<Constant "lcd RS">
      20  ?<Constant "lcd_HD44780_init %d">
      24  ?<Constant "lcd_HD44780_init() done">
       8  ?<Constant "lcdinfo">
       8  ?<Constant "true">
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_10
       4  ??DataTable10_11
       4  ??DataTable10_12
       4  ??DataTable10_13
       4  ??DataTable10_14
       4  ??DataTable10_15
       4  ??DataTable10_16
       4  ??DataTable10_17
       4  ??DataTable10_18
       4  ??DataTable10_19
       4  ??DataTable10_2
       4  ??DataTable10_20
       4  ??DataTable10_21
       4  ??DataTable10_22
       4  ??DataTable10_23
       4  ??DataTable10_24
       4  ??DataTable10_25
       4  ??DataTable10_26
       4  ??DataTable10_27
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable10_5
       4  ??DataTable10_6
       4  ??DataTable10_7
       4  ??DataTable10_8
       4  ??DataTable10_9
       4  BUSY_WAIT_DELAY
       4  currentColumn
       4  currentRow
       8  getCurrentHD44780column
       8  getCurrentHD44780row
     148  lcdInfo()
      32  lcdShowFatalMessage
      74  lcdSleep(int)
       1  lcd_HD44780_command
     630  lcd_HD44780_init
      44  lcd_HD44780_print_char
      22  lcd_HD44780_print_string
      70  lcd_HD44780_set_position
     446  lcd_HD44780_write(uint8_t)
      60  lcd_HD44780_write_command(uint8_t)
     112  lcd_HD44780_write_data(uint8_t)
      16  lineStart
       4  logger

 
    17 bytes in section .bss
   268 bytes in section .rodata
 1 766 bytes in section .text
 
 1 766 bytes of CODE  memory
   268 bytes of CONST memory
    17 bytes of DATA  memory

Errors: none
Warnings: 1
