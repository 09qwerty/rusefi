###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:55 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\neo6m.c #
#                       pp                                                    #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\neo6m.c #
#                       pp -lCN F:\stuff\rusefi_sourceforge\firmware\iar\Debu #
#                       g\List\ -lA F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       Debug\List\ -o F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\Debug\Obj\ --no_cse --no_unroll --no_inline        #
#                       --no_code_motion --no_tbaa --no_clustering            #
#                       --no_scheduling --debug --endian=little               #
#                       --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config       #
#                       "C:\Program Files (x86)\IAR Systems\Embedded          #
#                       Workbench 6.5\arm\INC\c\DLib_Config_Normal.h"         #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\n #
#                       eo6m.lst                                              #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ne #
#                       o6m.o                                                 #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\hw_layer\neo6m.cpp
      1          /**
      2           * @file	neo6m.cpp
      3           * @brief	Ublox 6M hardware UART driver
      4           *
      5           * http://www.u-blox.com/en/gps-modules/pvt-modules/previous-generations/neo-6-family.html
      6           *
      7           * Technically any UART GPS should work with this driver since NMEA protocol is pretty common anyway
      8           *
      9           * @date Dec 28, 2013
     10           * @author Andrey Belomutskiy, (c) 2012-2015
     11           * Kot_dnz 2014
     12           */
     13          
     14          #include <string.h>

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memset(void *, int, size_t)
   \                     memset:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x002A             MOVS     R2,R5
   \   0000000A   0x0031             MOVS     R1,R6
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memset
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return
     15          // todo: MISRA does not like time.h
     16          #include <time.h>
     17          #include "main.h"
     18          
     19          #if EFI_UART_GPS || defined(__DOXYGEN__)
     20          
     21          #include "console_io.h"
     22          #include "eficonsole.h"
     23          #include "pin_repository.h"
     24          #include "nmea.h"
     25          #include "neo6m.h"
     26          #include "rtc_helper.h"
     27          #include "engine_configuration.h"
     28          
     29          extern board_configuration_s *boardConfiguration;
     30          extern engine_configuration_s *engineConfiguration;
     31          

   \                                 In section .text, align 2, keep-with-next
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine:
   \   00000000   0xB580             PUSH     {R7,LR}
     32          static LoggingWithStorage logging("uart gps");
   \   00000002   0x....             LDR.N    R1,??DataTable5
   \   00000004   0x....             LDR.N    R0,??DataTable5_1
   \   00000006   0x.... 0x....      BL       _ZN18LoggingWithStorageC1EPKc
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     logging:
   \   00000000                      DS8 260
     33          

   \                                 In section .data, align 4
     34          static SerialConfig GPSserialConfig = { GPS_SERIAL_SPEED, 0, USART_CR2_STOP1_BITS | USART_CR2_LINEN, 0 };
   \                     GPSserialConfig:
   \   00000000   0x00009600         DC32 38400
   \   00000004   0x0000 0x4000      DC16 0, 16384, 0
   \              0x0000       
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .bss, align 8
     35          static THD_WORKING_AREA(gpsThreadStack, UTILITY_THREAD_STACK_SIZE);
   \                     gpsThreadStack:
   \   00000000                      DS8 712
     36          
     37          // this field holds our current state

   \                                 In section .bss, align 4
     38          static loc_t GPSdata;
   \                     GPSdata:
   \   00000000                      DS8 80
     39          

   \                                 In section .bss, align 4
     40          static int gpsMesagesCount = 0;
   \                     gpsMesagesCount:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     41          static int uartErrors = 0;
   \                     uartErrors:
   \   00000000                      DS8 4
     42          
     43          // todo: some data structure for coordinates location
     44          // todo:

   \                                 In section .text, align 2, keep-with-next
     45          float getCurrentSpeed(void) {
     46          	return GPSdata.speed;
   \                     getCurrentSpeed:
   \   00000000   0x....             LDR.N    R0,??DataTable5_2
   \   00000002   0xED90 0x0A02      VLDR     S0,[R0, #+8]
   \   00000006   0x4770             BX       LR               ;; return
     47          }
     48          

   \                                 In section .text, align 2, keep-with-next
     49          static void printGpsInfo(void) {
   \                     _Z12printGpsInfov:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xB082             SUB      SP,SP,#+8
     50          	scheduleMsg(&logging, "GPS RX %s", hwPortname(boardConfiguration->gps_rx_pin));
   \   00000008   0x....             LDR.N    R0,??DataTable5_3
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF8D0 0x00C8      LDR      R0,[R0, #+200]
   \   00000010   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000014   0x0002             MOVS     R2,R0
   \   00000016   0x....             LDR.N    R1,??DataTable5_4
   \   00000018   0x....             LDR.N    R0,??DataTable5_1
   \   0000001A   0x.... 0x....      BL       scheduleMsg
     51          	scheduleMsg(&logging, "GPS TX %s", hwPortname(boardConfiguration->gps_tx_pin));
   \   0000001E   0x....             LDR.N    R0,??DataTable5_3
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \   00000026   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000002A   0x0002             MOVS     R2,R0
   \   0000002C   0x....             LDR.N    R1,??DataTable5_5
   \   0000002E   0x....             LDR.N    R0,??DataTable5_1
   \   00000030   0x.... 0x....      BL       scheduleMsg
     52          
     53          	scheduleMsg(&logging, "m=%d,e=%d: vehicle speed = %f\r\n", gpsMesagesCount, uartErrors, getCurrentSpeed());
   \   00000034   0x.... 0x....      BL       getCurrentSpeed
   \   00000038   0xEE10 0x0A10      VMOV     R0,S0
   \   0000003C   0x.... 0x....      BL       __aeabi_f2d
   \   00000040   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000044   0x....             LDR.N    R0,??DataTable5_6
   \   00000046   0x6803             LDR      R3,[R0, #+0]
   \   00000048   0x....             LDR.N    R0,??DataTable5_7
   \   0000004A   0x6802             LDR      R2,[R0, #+0]
   \   0000004C   0x....             LDR.N    R1,??DataTable5_8
   \   0000004E   0x....             LDR.N    R0,??DataTable5_1
   \   00000050   0x.... 0x....      BL       scheduleMsg
     54          
     55          	float sec = currentTimeMillis() / 1000.0;
   \   00000054   0x.... 0x....      BL       currentTimeMillis
   \   00000058   0x.... 0x....      BL       __aeabi_ui2d
   \   0000005C   0x2200             MOVS     R2,#+0
   \   0000005E   0x....             LDR.N    R3,??DataTable5_9  ;; 0x408f4000
   \   00000060   0x.... 0x....      BL       __aeabi_ddiv
   \   00000064   0x.... 0x....      BL       __aeabi_d2f
   \   00000068   0xEE08 0x0A10      VMOV     S16,R0
     56          	scheduleMsg(&logging, "communication speed: %f", gpsMesagesCount / sec);
   \   0000006C   0x....             LDR.N    R0,??DataTable5_7
   \   0000006E   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   00000072   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000076   0xEE80 0x0A08      VDIV.F32 S0,S0,S16
   \   0000007A   0xEE10 0x0A10      VMOV     R0,S0
   \   0000007E   0x.... 0x....      BL       __aeabi_f2d
   \   00000082   0x0002             MOVS     R2,R0
   \   00000084   0x000B             MOVS     R3,R1
   \   00000086   0x....             LDR.N    R1,??DataTable5_10
   \   00000088   0x....             LDR.N    R0,??DataTable5_1
   \   0000008A   0x.... 0x....      BL       scheduleMsg
     57          
     58          	print("GPS latitude = %f\r\n", GPSdata.latitude);
   \   0000008E   0x....             LDR.N    R0,??DataTable5_2
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0x.... 0x....      BL       __aeabi_f2d
   \   00000096   0x0002             MOVS     R2,R0
   \   00000098   0x000B             MOVS     R3,R1
   \   0000009A   0x....             LDR.N    R0,??DataTable5_11
   \   0000009C   0x.... 0x....      BL       print
     59          	print("GPS longitude = %f\r\n", GPSdata.longitude);
   \   000000A0   0x....             LDR.N    R0,??DataTable5_2
   \   000000A2   0x6840             LDR      R0,[R0, #+4]
   \   000000A4   0x.... 0x....      BL       __aeabi_f2d
   \   000000A8   0x0002             MOVS     R2,R0
   \   000000AA   0x000B             MOVS     R3,R1
   \   000000AC   0x....             LDR.N    R0,??DataTable5_12
   \   000000AE   0x.... 0x....      BL       print
     60          }
   \   000000B2   0xB002             ADD      SP,SP,#+8
   \   000000B4   0xECBD 0x8B02      VPOP     {D8}
   \   000000B8   0xBD01             POP      {R0,PC}          ;; return
     61          

   \                                 In section .bss, align 4
     62          static struct tm curTm;
   \                     curTm:
   \   00000000                      DS8 44
     63          

   \                                 In section .text, align 2, keep-with-next
     64          static void onGpsMessage(char *buffer) {
   \                     _Z12onGpsMessagePc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     65          
     66          	gps_location(&GPSdata, buffer);
   \   00000004   0x0021             MOVS     R1,R4
   \   00000006   0x....             LDR.N    R0,??DataTable5_2
   \   00000008   0x.... 0x....      BL       gps_location
     67          	date_get_tm(&curTm);
   \   0000000C   0x....             LDR.N    R0,??DataTable5_13
   \   0000000E   0x.... 0x....      BL       _Z11date_get_tmP2tm
     68          
     69          	if (GPSdata.quality == 4 && GPSdata.GPStm.tm_year > 0 && GPSdata.GPStm.tm_sec != curTm.tm_sec) {
   \   00000012   0x....             LDR.N    R0,??DataTable5_2
   \   00000014   0x6C40             LDR      R0,[R0, #+68]
   \   00000016   0x2804             CMP      R0,#+4
   \   00000018   0xD10C             BNE.N    ??onGpsMessage_0
   \   0000001A   0x....             LDR.N    R0,??DataTable5_2
   \   0000001C   0x6A80             LDR      R0,[R0, #+40]
   \   0000001E   0x2801             CMP      R0,#+1
   \   00000020   0xDB08             BLT.N    ??onGpsMessage_0
   \   00000022   0x....             LDR.N    R0,??DataTable5_2
   \   00000024   0x6940             LDR      R0,[R0, #+20]
   \   00000026   0x....             LDR.N    R1,??DataTable5_13
   \   00000028   0x6809             LDR      R1,[R1, #+0]
   \   0000002A   0x4288             CMP      R0,R1
   \   0000002C   0xD002             BEQ.N    ??onGpsMessage_0
     70          		// quality =4 (valis GxRMC), year > 0, and difference more then second
     71          		date_set_tm(&GPSdata.GPStm);					// set GPS time
   \   0000002E   0x....             LDR.N    R0,??DataTable5_14
   \   00000030   0x.... 0x....      BL       _Z11date_set_tmP2tm
     72          		//}
     73          	}
     74          	gpsMesagesCount++;
   \                     ??onGpsMessage_0:
   \   00000034   0x....             LDR.N    R0,??DataTable5_7
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x1C40             ADDS     R0,R0,#+1
   \   0000003A   0x....             LDR.N    R1,??DataTable5_7
   \   0000003C   0x6008             STR      R0,[R1, #+0]
     75          }
   \   0000003E   0xBD10             POP      {R4,PC}          ;; return
     76          
     77          // we do not want this on stack, right?

   \                                 In section .bss, align 4
     78          static char gps_str[GPS_MAX_STRING];
   \                     gps_str:
   \   00000000                      DS8 256
     79          

   \                                 In section .text, align 2, keep-with-next
     80          static msg_t GpsThreadEntryPoint(void *arg) {
   \                     _Z19GpsThreadEntryPointPv:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
     81          	(void) arg;
     82          	chRegSetThreadName("GPS thread");
   \   00000004   0x....             LDR.N    R0,??DataTable5_15
   \   00000006   0x6980             LDR      R0,[R0, #+24]
   \   00000008   0x....             LDR.N    R1,??DataTable5_16
   \   0000000A   0x6181             STR      R1,[R0, #+24]
     83          
     84          	int count = 0;
   \   0000000C   0x2500             MOVS     R5,#+0
     85          
     86          	while (true) {
     87          		msg_t charbuf = chSequentialStreamGet(GPS_SERIAL_DEVICE);
   \                     ??GpsThreadEntryPoint_0:
   \   0000000E   0x....             LDR.N    R0,??DataTable5_17
   \   00000010   0x....             LDR.N    R1,??DataTable5_17
   \   00000012   0x6809             LDR      R1,[R1, #+0]
   \   00000014   0x68C9             LDR      R1,[R1, #+12]
   \   00000016   0x4788             BLX      R1
   \   00000018   0x0006             MOVS     R6,R0
     88          		if (charbuf == 10 || count == GPS_MAX_STRING) {					// if 0xD,0xA or limit
   \   0000001A   0x2E0A             CMP      R6,#+10
   \   0000001C   0xD002             BEQ.N    ??GpsThreadEntryPoint_1
   \   0000001E   0xF5B5 0x7F80      CMP      R5,#+256
   \   00000022   0xD111             BNE.N    ??GpsThreadEntryPoint_2
     89          			if (count >= 1)
   \                     ??GpsThreadEntryPoint_1:
   \   00000024   0x2D01             CMP      R5,#+1
   \   00000026   0xDB03             BLT.N    ??GpsThreadEntryPoint_3
     90          				gps_str[--count] = '\0';					// delete 0xD
   \   00000028   0x1E6D             SUBS     R5,R5,#+1
   \   0000002A   0x....             LDR.N    R0,??DataTable5_18
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x5429             STRB     R1,[R5, R0]
     91          
     92          //			scheduleMsg(&logger, "got GPS [%s]", gps_str);
     93          
     94          			// 'gps_str' string completed
     95          			onGpsMessage(gps_str);
   \                     ??GpsThreadEntryPoint_3:
   \   00000030   0x....             LDR.N    R0,??DataTable5_18
   \   00000032   0x.... 0x....      BL       _Z12onGpsMessagePc
     96          			memset(&gps_str, '\0', GPS_MAX_STRING);			// clear buffer
   \   00000036   0xF44F 0x7280      MOV      R2,#+256
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x....             LDR.N    R0,??DataTable5_18
   \   0000003E   0x.... 0x....      BL       memset
     97          			count = 0;
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x0005             MOVS     R5,R0
   \   00000046   0xE7E2             B.N      ??GpsThreadEntryPoint_0
     98          		} else {
     99          			gps_str[count++] = charbuf;
   \                     ??GpsThreadEntryPoint_2:
   \   00000048   0x....             LDR.N    R0,??DataTable5_18
   \   0000004A   0x542E             STRB     R6,[R5, R0]
   \   0000004C   0x1C6D             ADDS     R5,R5,#+1
   \   0000004E   0xE7DE             B.N      ??GpsThreadEntryPoint_0
    100          		}
    101          	}
    102          #if defined __GNUC__
    103          	return 0;
    104          #endif
    105          }
    106          

   \                                 In section .text, align 2, keep-with-next
    107          void initGps(void) {
   \                     initGps:
   \   00000000   0xB580             PUSH     {R7,LR}
    108          	if(!engineConfiguration->isGpsEnabled)
   \   00000002   0x....             LDR.N    R0,??DataTable5_19
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF890 0x05D9      LDRB     R0,[R0, #+1497]
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x0900             LSRS     R0,R0,#+4
   \   0000000E   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD022             BEQ.N    ??initGps_0
    109          		return;
    110          
    111          
    112          	sdStart(GPS_SERIAL_DEVICE, &GPSserialConfig);
   \                     ??initGps_1:
   \   00000016   0x....             LDR.N    R1,??DataTable5_20
   \   00000018   0x....             LDR.N    R0,??DataTable5_17
   \   0000001A   0x.... 0x....      BL       sdStart
    113          //  GPS we have USART1: PB7 -> USART1_RX and PB6 -> USART1_TX
    114          	mySetPadMode2("GPS tx", boardConfiguration->gps_tx_pin, PAL_MODE_ALTERNATE(7));
   \   0000001E   0xF240 0x3282      MOVW     R2,#+898
   \   00000022   0x....             LDR.N    R0,??DataTable5_3
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF8D0 0x10CC      LDR      R1,[R0, #+204]
   \   0000002A   0x....             LDR.N    R0,??DataTable5_21
   \   0000002C   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    115          	mySetPadMode2("GPS rx", boardConfiguration->gps_rx_pin, PAL_MODE_ALTERNATE(7));
   \   00000030   0xF240 0x3282      MOVW     R2,#+898
   \   00000034   0x....             LDR.N    R0,??DataTable5_3
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF8D0 0x10C8      LDR      R1,[R0, #+200]
   \   0000003C   0x....             LDR.N    R0,??DataTable5_22
   \   0000003E   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    116          
    117          // todo: add a thread which would save location. If the GPS 5Hz - we should save the location each 200 ms
    118          	chThdCreateStatic(gpsThreadStack, sizeof(gpsThreadStack), LOWPRIO, GpsThreadEntryPoint, NULL);
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x9000             STR      R0,[SP, #+0]
   \   00000046   0x....             LDR.N    R3,??DataTable5_23
   \   00000048   0x2202             MOVS     R2,#+2
   \   0000004A   0xF44F 0x7132      MOV      R1,#+712
   \   0000004E   0x....             LDR.N    R0,??DataTable5_24
   \   00000050   0x.... 0x....      BL       chThdCreateStatic
    119          
    120          	addConsoleAction("gpsinfo", &printGpsInfo);
   \   00000054   0x....             LDR.N    R1,??DataTable5_25
   \   00000056   0x....             LDR.N    R0,??DataTable5_26
   \   00000058   0x.... 0x....      BL       addConsoleAction
    121          }
   \                     ??initGps_0:
   \   0000005C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     `?<Constant "uart gps">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     logging

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     GPSdata

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     `?<Constant "GPS RX %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     `?<Constant "GPS TX %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     uartErrors

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     gpsMesagesCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     `?<Constant "m=%d,e=%d: vehicle sp...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x408F4000         DC32     0x408f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     `?<Constant "communication speed: %f">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     `?<Constant "GPS latitude = %f\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x........         DC32     `?<Constant "GPS longitude = %f\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x........         DC32     curTm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x........         DC32     GPSdata+0x14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \   00000000   0x........         DC32     rlist

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_16:
   \   00000000   0x........         DC32     `?<Constant "GPS thread">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_17:
   \   00000000   0x........         DC32     SD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_18:
   \   00000000   0x........         DC32     gps_str

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_19:
   \   00000000   0x........         DC32     engineConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_20:
   \   00000000   0x........         DC32     GPSserialConfig

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_21:
   \   00000000   0x........         DC32     `?<Constant "GPS tx">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_22:
   \   00000000   0x........         DC32     `?<Constant "GPS rx">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_23:
   \   00000000   0x........         DC32     _Z19GpsThreadEntryPointPv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_24:
   \   00000000   0x........         DC32     gpsThreadStack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_25:
   \   00000000   0x........         DC32     _Z12printGpsInfov

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_26:
   \   00000000   0x........         DC32     `?<Constant "gpsinfo">`

   \                                 In section .init_array, align 4, keep-with-next, root
   \   00000000   0x........         DC32    RELOC_ARM_TARGET1 __sti__routine

   \                                 In section .rodata, align 4
   \                     `?<Constant "GPS RX %s">`:
   \   00000000   0x47 0x50          DC8 "GPS RX %s"
   \              0x53 0x20    
   \              0x52 0x58    
   \              0x20 0x25    
   \              0x73 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "GPS TX %s">`:
   \   00000000   0x47 0x50          DC8 "GPS TX %s"
   \              0x53 0x20    
   \              0x54 0x58    
   \              0x20 0x25    
   \              0x73 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "m=%d,e=%d: vehicle sp...">`:
   \   00000000   0x6D 0x3D          DC8 "m=%d,e=%d: vehicle speed = %f\015\012"
   \              0x25 0x64    
   \              0x2C 0x65    
   \              0x3D 0x25    
   \              0x64 0x3A    
   \              0x20 0x76    
   \              0x65 0x68    
   \              0x69 0x63    
   \              0x6C 0x65    
   \              0x20 0x73    
   \              0x70 0x65    
   \              0x65 0x64    
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x66 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "communication speed: %f">`:
   \   00000000   0x63 0x6F          DC8 "communication speed: %f"
   \              0x6D 0x6D    
   \              0x75 0x6E    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x3A    
   \              0x20 0x25    
   \              0x66 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "GPS latitude = %f\\r\\n">`:
   \   00000000   0x47 0x50          DC8 "GPS latitude = %f\015\012"
   \              0x53 0x20    
   \              0x6C 0x61    
   \              0x74 0x69    
   \              0x74 0x75    
   \              0x64 0x65    
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x66 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "GPS longitude = %f\\r\\n">`:
   \   00000000   0x47 0x50          DC8 "GPS longitude = %f\015\012"
   \              0x53 0x20    
   \              0x6C 0x6F    
   \              0x6E 0x67    
   \              0x69 0x74    
   \              0x75 0x64    
   \              0x65 0x20    
   \              0x3D 0x20    
   \              0x25 0x66    
   \              0x0D 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "GPS thread">`:
   \   00000000   0x47 0x50          DC8 "GPS thread"
   \              0x53 0x20    
   \              0x74 0x68    
   \              0x72 0x65    
   \              0x61 0x64    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "GPS tx">`:
   \   00000000   0x47 0x50          DC8 "GPS tx"
   \              0x53 0x20    
   \              0x74 0x78    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "GPS rx">`:
   \   00000000   0x47 0x50          DC8 "GPS rx"
   \              0x53 0x20    
   \              0x72 0x78    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "gpsinfo">`:
   \   00000000   0x67 0x70          DC8 "gpsinfo"
   \              0x73 0x69    
   \              0x6E 0x66    
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "uart gps">`:
   \   00000000   0x75 0x61          DC8 "uart gps"
   \              0x72 0x74    
   \              0x20 0x67    
   \              0x70 0x73    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    122          
    123          #endif /* EFI_UART_GPS */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   GpsThreadEntryPoint(void *)
        16   -- Indirect call
        16   -> memset
        16   -> onGpsMessage(char *)
       8   __sti__routine()
         8   -> LoggingWithStorage::LoggingWithStorage(char const *)
       0   getCurrentSpeed
       8   initGps
         8   -> addConsoleAction
         8   -> chThdCreateStatic
         8   -> mySetPadMode2(char const *, brain_pin_e, iomode_t)
         8   -> sdStart
      16   memset
        16   -> __aeabi_memset
       8   onGpsMessage(char *)
         8   -> date_get_tm(tm *)
         8   -> date_set_tm(tm *)
         8   -> gps_location
      24   printGpsInfo()
        24   -> __aeabi_d2f
        24   -> __aeabi_ddiv
        24   -> __aeabi_f2d
        24   -> __aeabi_ui2d
        24   -> currentTimeMillis
        24   -> getCurrentSpeed
        24   -> hwPortname(brain_pin_e)
        24   -> print
        24   -> scheduleMsg


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "GPS RX %s">
      12  ?<Constant "GPS TX %s">
      20  ?<Constant "GPS latitude = %f\r\n">
      24  ?<Constant "GPS longitude = %f\r\n">
       8  ?<Constant "GPS rx">
      12  ?<Constant "GPS thread">
       8  ?<Constant "GPS tx">
      24  ?<Constant "communication speed: %f">
       8  ?<Constant "gpsinfo">
      32  ?<Constant "m=%d,e=%d: vehicle sp...">
      12  ?<Constant "uart gps">
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_16
       4  ??DataTable5_17
       4  ??DataTable5_18
       4  ??DataTable5_19
       4  ??DataTable5_2
       4  ??DataTable5_20
       4  ??DataTable5_21
       4  ??DataTable5_22
       4  ??DataTable5_23
       4  ??DataTable5_24
       4  ??DataTable5_25
       4  ??DataTable5_26
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      80  GPSdata
      12  GPSserialConfig
      80  GpsThreadEntryPoint(void *)
      12  __sti__routine()
      44  curTm
       8  getCurrentSpeed
       4  gpsMesagesCount
     712  gpsThreadStack
     256  gps_str
      94  initGps
     260  logging
      22  memset
      64  onGpsMessage(char *)
     186  printGpsInfo()
       4  uartErrors
       4  -- Other

 
 1 360 bytes in section .bss
    12 bytes in section .data
     4 bytes in section .init_array
   172 bytes in section .rodata
   574 bytes in section .text
 
   556 bytes of CODE  memory (+ 22 bytes shared)
   172 bytes of CONST memory
 1 372 bytes of DATA  memory

Errors: none
Warnings: 1
