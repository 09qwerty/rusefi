###############################################################################
#                                                                             #
# IAR ELF Linker V6.50.3.4676/W32 for ARM               30/Jun/2015  23:25:47 #
# Copyright 2007-2013 IAR Systems AB.                                         #
#                                                                             #
#    Output file  =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Exe\ch.ou #
#                    t                                                        #
#    Map file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\ch.m #
#                    ap                                                       #
#    Command line =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\EfiWa #
#                    ve.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ #
#                    GY6_139QMB.o F:\stuff\rusefi_sourceforge\firmware\iar\De #
#                    bug\Obj\HIP9011.o F:\stuff\rusefi_sourceforge\firmware\i #
#                    ar\Debug\Obj\LocalVersionHolder.o                        #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\MiniC #
#                    ooperR50.o F:\stuff\rusefi_sourceforge\firmware\iar\Debu #
#                    g\Obj\PwmTester.o F:\stuff\rusefi_sourceforge\firmware\i #
#                    ar\Debug\Obj\SingleTimerExecutor.o                       #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\accel #
#                    _enrichment.o F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                    ebug\Obj\acura_rsx.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\adc.o F:\stuff\rusefi_sourceforge\firmwa #
#                    re\iar\Debug\Obj\adc_inputs.o                            #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\adc_l #
#                    ld.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ #
#                    advance_map.o F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                    ebug\Obj\algo.o F:\stuff\rusefi_sourceforge\firmware\iar #
#                    \Debug\Obj\allsensors.o F:\stuff\rusefi_sourceforge\firm #
#                    ware\iar\Debug\Obj\alternatorController.o                #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\audi_ #
#                    aan.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj #
#                    \auto_generated_enums.o F:\stuff\rusefi_sourceforge\firm #
#                    ware\iar\Debug\Obj\avg_values.o                          #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\bmw_e #
#                    34.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ #
#                    board.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\O #
#                    bj\board_test.o F:\stuff\rusefi_sourceforge\firmware\iar #
#                    \Debug\Obj\can.o F:\stuff\rusefi_sourceforge\firmware\ia #
#                    r\Debug\Obj\can_hw.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\can_lld.o F:\stuff\rusefi_sourceforge\fi #
#                    rmware\iar\Debug\Obj\ccsbcs.o                            #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\chcon #
#                    d.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\c #
#                    hcore.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\O #
#                    bj\chcore_v7m.o F:\stuff\rusefi_sourceforge\firmware\iar #
#                    \Debug\Obj\chcoreasm_v7m.o F:\stuff\rusefi_sourceforge\f #
#                    irmware\iar\Debug\Obj\chdebug.o                          #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\chdyn #
#                    amic.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Ob #
#                    j\chevents.o F:\stuff\rusefi_sourceforge\firmware\iar\De #
#                    bug\Obj\chheap.o F:\stuff\rusefi_sourceforge\firmware\ia #
#                    r\Debug\Obj\chlists.o F:\stuff\rusefi_sourceforge\firmwa #
#                    re\iar\Debug\Obj\chmboxes.o                              #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\chmem #
#                    core.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Ob #
#                    j\chmempools.o F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                    Debug\Obj\chmsg.o F:\stuff\rusefi_sourceforge\firmware\i #
#                    ar\Debug\Obj\chmtx.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\chprintf.o F:\stuff\rusefi_sourceforge\f #
#                    irmware\iar\Debug\Obj\chqueues.o                         #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\chreg #
#                    istry.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\O #
#                    bj\chrtclib.o F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                    ebug\Obj\chschd.o F:\stuff\rusefi_sourceforge\firmware\i #
#                    ar\Debug\Obj\chsem.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\chsys.o F:\stuff\rusefi_sourceforge\firm #
#                    ware\iar\Debug\Obj\chthreads.o                           #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\chvt. #
#                    o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\cit #
#                    roenBerlingoTU3JP.o F:\stuff\rusefi_sourceforge\firmware #
#                    \iar\Debug\Obj\cli_registry.o                            #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\conso #
#                    le_io.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\O #
#                    bj\crc.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\ #
#                    Obj\cstartup.o F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                    Debug\Obj\custom_engine.o F:\stuff\rusefi_sourceforge\fi #
#                    rmware\iar\Debug\Obj\cyclic_buffer.o                     #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\data_ #
#                    buffer.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\ #
#                    Obj\datalogging.o F:\stuff\rusefi_sourceforge\firmware\i #
#                    ar\Debug\Obj\digital_input_hw.o                          #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\dodge #
#                    _neon.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\O #
#                    bj\dodge_ram.o F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                    Debug\Obj\efiGpio.o F:\stuff\rusefi_sourceforge\firmware #
#                    \iar\Debug\Obj\eficonsole.o                              #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\efili #
#                    b.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\e #
#                    filib2.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\ #
#                    Obj\ego.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug #
#                    \Obj\electronic_throttle.o F:\stuff\rusefi_sourceforge\f #
#                    irmware\iar\Debug\Obj\engine.o                           #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\engin #
#                    e_configuration.o F:\stuff\rusefi_sourceforge\firmware\i #
#                    ar\Debug\Obj\engine_controller.o                         #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\engin #
#                    e_emulator.o F:\stuff\rusefi_sourceforge\firmware\iar\De #
#                    bug\Obj\engine_math.o F:\stuff\rusefi_sourceforge\firmwa #
#                    re\iar\Debug\Obj\error_handling.o                        #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\event #
#                    _queue.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\ #
#                    Obj\event_registry.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\ext.o F:\stuff\rusefi_sourceforge\firmwa #
#                    re\iar\Debug\Obj\ext_lld.o F:\stuff\rusefi_sourceforge\f #
#                    irmware\iar\Debug\Obj\ext_lld_isr.o                      #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\fatfs #
#                    _diskio.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug #
#                    \Obj\fatfs_syscall.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\ff.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\flash.o F:\stuff\rusefi_sourceforge\firm #
#                    ware\iar\Debug\Obj\flash_main.o                          #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ford_ #
#                    1995_inline_6.o F:\stuff\rusefi_sourceforge\firmware\iar #
#                    \Debug\Obj\ford_aspire.o F:\stuff\rusefi_sourceforge\fir #
#                    mware\iar\Debug\Obj\ford_fiesta.o                        #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\fsio_ #
#                    core.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Ob #
#                    j\fsio_impl.o F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                    ebug\Obj\fuel_math.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\gm_2_2.o F:\stuff\rusefi_sourceforge\fir #
#                    mware\iar\Debug\Obj\gpio_helper.o                        #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\gpt.o #
#                     F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\gpt_ #
#                    lld.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj #
#                    \hal.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Ob #
#                    j\hal_lld.o F:\stuff\rusefi_sourceforge\firmware\iar\Deb #
#                    ug\Obj\hardware.o F:\stuff\rusefi_sourceforge\firmware\i #
#                    ar\Debug\Obj\hip9011_lookup.o                            #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\histo #
#                    gram.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Ob #
#                    j\honda_accord.o F:\stuff\rusefi_sourceforge\firmware\ia #
#                    r\Debug\Obj\i2c.o F:\stuff\rusefi_sourceforge\firmware\i #
#                    ar\Debug\Obj\i2c_lld.o F:\stuff\rusefi_sourceforge\firmw #
#                    are\iar\Debug\Obj\icu.o F:\stuff\rusefi_sourceforge\firm #
#                    ware\iar\Debug\Obj\icu_lld.o                             #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\idle_ #
#                    controller.o F:\stuff\rusefi_sourceforge\firmware\iar\De #
#                    bug\Obj\idle_thread.o F:\stuff\rusefi_sourceforge\firmwa #
#                    re\iar\Debug\Obj\injector_central.o                      #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\inter #
#                    polation.o F:\stuff\rusefi_sourceforge\firmware\iar\Debu #
#                    g\Obj\io_pins.o F:\stuff\rusefi_sourceforge\firmware\iar #
#                    \Debug\Obj\joystick.o F:\stuff\rusefi_sourceforge\firmwa #
#                    re\iar\Debug\Obj\lcd_HD44780.o                           #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\lcd_c #
#                    ontroller.o F:\stuff\rusefi_sourceforge\firmware\iar\Deb #
#                    ug\Obj\lcd_menu_tree.o F:\stuff\rusefi_sourceforge\firmw #
#                    are\iar\Debug\Obj\listener_array.o                       #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\loggi #
#                    ngcentral.o F:\stuff\rusefi_sourceforge\firmware\iar\Deb #
#                    ug\Obj\mac.o F:\stuff\rusefi_sourceforge\firmware\iar\De #
#                    bug\Obj\maf.o F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                    ebug\Obj\main.o F:\stuff\rusefi_sourceforge\firmware\iar #
#                    \Debug\Obj\main_trigger_callback.o                       #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\malfu #
#                    nction_central.o F:\stuff\rusefi_sourceforge\firmware\ia #
#                    r\Debug\Obj\malfunction_indicator.o                      #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\map.o #
#                     F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\map_ #
#                    adjuster.o F:\stuff\rusefi_sourceforge\firmware\iar\Debu #
#                    g\Obj\map_averaging.o F:\stuff\rusefi_sourceforge\firmwa #
#                    re\iar\Debug\Obj\max31855.o                              #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\mazda #
#                    _323.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Ob #
#                    j\mazda_626.o F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                    ebug\Obj\mazda_miata.o F:\stuff\rusefi_sourceforge\firmw #
#                    are\iar\Debug\Obj\mazda_miata_nb.o                       #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\mcp32 #
#                    08.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ #
#                    memstreams.o F:\stuff\rusefi_sourceforge\firmware\iar\De #
#                    bug\Obj\microsecond_timer.o                              #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\mitsu #
#                    bishi.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\O #
#                    bj\mmc_card.o F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                    ebug\Obj\mmc_spi.o F:\stuff\rusefi_sourceforge\firmware\ #
#                    iar\Debug\Obj\mmcsd.o F:\stuff\rusefi_sourceforge\firmwa #
#                    re\iar\Debug\Obj\mpu_util.o                              #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\neo6m #
#                    .o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ni #
#                    ssan_primera.o F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                    Debug\Obj\nmea.o F:\stuff\rusefi_sourceforge\firmware\ia #
#                    r\Debug\Obj\nvic.o F:\stuff\rusefi_sourceforge\firmware\ #
#                    iar\Debug\Obj\obd2.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\obd2viaCAN.o                             #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\pal.o #
#                     F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\pal_ #
#                    lld.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj #
#                    \pid.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Ob #
#                    j\pin_repository.o F:\stuff\rusefi_sourceforge\firmware\ #
#                    iar\Debug\Obj\poten.o F:\stuff\rusefi_sourceforge\firmwa #
#                    re\iar\Debug\Obj\pwm.o F:\stuff\rusefi_sourceforge\firmw #
#                    are\iar\Debug\Obj\pwm_generator.o                        #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\pwm_g #
#                    enerator_logic.o F:\stuff\rusefi_sourceforge\firmware\ia #
#                    r\Debug\Obj\pwm_lld.o F:\stuff\rusefi_sourceforge\firmwa #
#                    re\iar\Debug\Obj\rfi_perftest.o                          #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\rfiut #
#                    il.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ #
#                    rover_v8.o F:\stuff\rusefi_sourceforge\firmware\iar\Debu #
#                    g\Obj\rpm_calculator.o F:\stuff\rusefi_sourceforge\firmw #
#                    are\iar\Debug\Obj\rtc.o F:\stuff\rusefi_sourceforge\firm #
#                    ware\iar\Debug\Obj\rtc_helper.o                          #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\rtc_l #
#                    ld.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ #
#                    rusefi.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\ #
#                    Obj\sachs.o F:\stuff\rusefi_sourceforge\firmware\iar\Deb #
#                    ug\Obj\saturn_ion.o F:\stuff\rusefi_sourceforge\firmware #
#                    \iar\Debug\Obj\sdc.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\sensor_chart.o                           #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\seria #
#                    l.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\s #
#                    erial_lld.o F:\stuff\rusefi_sourceforge\firmware\iar\Deb #
#                    ug\Obj\serial_usb.o F:\stuff\rusefi_sourceforge\firmware #
#                    \iar\Debug\Obj\settings.o F:\stuff\rusefi_sourceforge\fi #
#                    rmware\iar\Debug\Obj\signal_executor.o                   #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\signa #
#                    l_executor_sleep.o F:\stuff\rusefi_sourceforge\firmware\ #
#                    iar\Debug\Obj\signal_filtering.o                         #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\snow_ #
#                    blower.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\ #
#                    Obj\speed_density.o F:\stuff\rusefi_sourceforge\firmware #
#                    \iar\Debug\Obj\spi.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\spi_lld.o F:\stuff\rusefi_sourceforge\fi #
#                    rmware\iar\Debug\Obj\status_loop.o                       #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\stepp #
#                    er.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ #
#                    stm32_dma.o F:\stuff\rusefi_sourceforge\firmware\iar\Deb #
#                    ug\Obj\subaru.o F:\stuff\rusefi_sourceforge\firmware\iar #
#                    \Debug\Obj\table_helper.o F:\stuff\rusefi_sourceforge\fi #
#                    rmware\iar\Debug\Obj\test.o                              #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\test_ #
#                    engine.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\ #
#                    Obj\testbmk.o F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                    ebug\Obj\thermistors.o F:\stuff\rusefi_sourceforge\firmw #
#                    are\iar\Debug\Obj\tps.o F:\stuff\rusefi_sourceforge\firm #
#                    ware\iar\Debug\Obj\trigger_bmw.o                         #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\trigg #
#                    er_central.o F:\stuff\rusefi_sourceforge\firmware\iar\De #
#                    bug\Obj\trigger_chrysler.o F:\stuff\rusefi_sourceforge\f #
#                    irmware\iar\Debug\Obj\trigger_decoder.o                  #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\trigg #
#                    er_emulator.o F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                    ebug\Obj\trigger_emulator_algo.o                         #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\trigg #
#                    er_gm.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\O #
#                    bj\trigger_input.o F:\stuff\rusefi_sourceforge\firmware\ #
#                    iar\Debug\Obj\trigger_mazda.o                            #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\trigg #
#                    er_mitsubishi.o F:\stuff\rusefi_sourceforge\firmware\iar #
#                    \Debug\Obj\trigger_structure.o                           #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\tuner #
#                    studio.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\ #
#                    Obj\tunerstudio_io.o F:\stuff\rusefi_sourceforge\firmwar #
#                    e\iar\Debug\Obj\uart.o F:\stuff\rusefi_sourceforge\firmw #
#                    are\iar\Debug\Obj\usb.o F:\stuff\rusefi_sourceforge\firm #
#                    ware\iar\Debug\Obj\usb_lld.o                             #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\usbcf #
#                    g.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\u #
#                    sbconsole.o F:\stuff\rusefi_sourceforge\firmware\iar\Deb #
#                    ug\Obj\vectors.o F:\stuff\rusefi_sourceforge\firmware\ia #
#                    r\Debug\Obj\vehicle_speed.o                              #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\volta #
#                    ge.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ #
#                    vw.o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ #
#                    wave_analyzer.o F:\stuff\rusefi_sourceforge\firmware\iar #
#                    \Debug\Obj\wave_chart.o F:\stuff\rusefi_sourceforge\firm #
#                    ware\iar\Debug\Obj\wbo.o -o                              #
#                    F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Exe\ch.ou #
#                    t --redirect _Printf=_PrintfTiny --redirect              #
#                    _Scanf=_ScanfSmall --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5- #
#                    7,8.2-8.3,9.3,12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,    #
#                    20.11 --map F:\stuff\rusefi_sourceforge\firmware\iar\Deb #
#                    ug\List\ch.map --config F:\stuff\rusefi_sourceforge\firm #
#                    ware\iar\ch.icf --semihosting --entry                    #
#                    __iar_program_start --vfe --enable_stack_usage           #
#                                                                             #
#                                                                             #
###############################################################################

*******************************************************************************
*** MESSAGES
***

Warning[Lo007]: [stack usage analysis] at least one function does not have
          stack usage information. Example: "__iar_program_start". A complete
          list of such functions is in the map file.
Warning[Lo009]: [stack usage analysis] the program contains at least one
          indirect call. Example: from "chvprintf". A complete list of such
          functions is in the map file.
Warning[Lo010]: [stack usage analysis] the program contains at least one
          instance of recursion for which  stack usage analysis has not been
          able to calculate a maximum stack depth. One function involved is
          "firmwareError". A complete list of all recursion nests is in the map
          file.


*******************************************************************************
*** RUNTIME MODEL ATTRIBUTES
***

CppFlavor                     = *
__CPP_Language                = EC++
__Heap_Handler                = Basic
__SystemLibrary               = DLib
__dlib_dynamic_initialization = normal


*******************************************************************************
*** PLACEMENT SUMMARY
***

"A1":  place at 0x08000000 { section .intvec };
"P1":  place in [from 0x08000000 to 0x0803ffff] { ro };
"A2":  place at start of [0x20000000-0x2001ffff] { block IRQSTACK };
"P2":  place in [from 0x20000000 to 0x2001ffff] { block DATABSS, block HEAP };
"A3":  place at end of [0x20000000-0x2001ffff] { block CSTACK };
"P4":  place in [from 0x10000000 to 0x1000ffff] { section .ccm };

  Section               Kind        Address     Size  Object
  -------               ----        -------     ----  ------
"A1":                                          0x188
  .intvec               ro code  0x08000000      0x0  cstartup.o [1]
  .intvec               ro code  0x08000000    0x188  vectors.o [1]
                               - 0x08000188    0x188

"P1":                                        0x35a00
  .text                 ro code  0x08000188   0x244c  settings.o [1]
  .text                 ro code  0x080025d4    0x4e0  datalogging.o [1]
  .text                 ro code  0x08002ab4    0x3e2  efilib.o [1]
  .text                 ro code  0x08002e96     0x22  zero_init3.o [6]
  .text                 ro code  0x08002eb8    0x374  auto_generated_enums.o [1]
  .text                 ro code  0x0800322c    0x450  pin_repository.o [1]
  .text                 ro code  0x0800367c   0x1868  engine_configuration.o [1]
  .text                 ro code  0x08004ee4     0x4e  FltToDbl.o [5]
  .rodata               const    0x08004f32      0x2  mmc_spi.o [1]
  .text                 ro code  0x08004f34    0x340  wave_chart.o [1]
  .text                 ro code  0x08005274    0x2c4  flash_main.o [1]
  .text                 ro code  0x08005538    0x974  adc_inputs.o [1]
  .text                 ro code  0x08005eac    0x6ee  thermistors.o [1]
  .rodata               const    0x0800659a      0x2  mmc_spi.o [1]
  .text                 ro code  0x0800659c    0xb10  engine_controller.o [1]
  .text                 ro code  0x080070ac    0x1fc  tps.o [1]
  .text                 ro code  0x080072a8    0x11c  efiGpio.o [1]
  .text                 ro code  0x080073c4    0x9c4  engine_math.o [1]
  .text                 ro code  0x08007d88    0xe98  trigger_structure.o [1]
  .text                 ro code  0x08008c20    0x214  rusefi.o [1]
  .text                 ro code  0x08008e34    0x640  interpolation.o [1]
  .text                 ro code  0x08009474    0x254  io_pins.o [1]
  .text                 ro code  0x080096c8    0x108  rtc_helper.o [1]
  .text                 ro code  0x080097d0    0x3bc  alternatorController.o [1]
  .text                 ro code  0x08009b8c    0x730  cli_registry.o [1]
  .text                 ro code  0x0800a2bc    0x128  error_handling.o [1]
  .text                 ro code  0x0800a3e4     0x44  strcpy.o [6]
  .text                 ro code  0x0800a428    0x204  mpu_util.o [1]
  .text                 ro code  0x0800a62c    0x444  chprintf.o [1]
  .text                 ro code  0x0800aa70    0x34c  console_io.o [1]
  .text                 ro code  0x0800adbc     0x36  strlen.o [6]
  .rodata               const    0x0800adf2      0x2  pwm_generator.o [1]
  .text                 ro code  0x0800adf4    0x110  loggingcentral.o [1]
  .text                 ro code  0x0800af04     0xd4  memstreams.o [1]
  .text                 ro code  0x0800afd8    0x1a2  DblMul.o [5]
  .rodata               const    0x0800b17a      0x2  usb.o [1]
  .text                 ro code  0x0800b17c     0x90  DblToFlt.o [5]
  .text                 ro code  0x0800b20c    0x2ac  eficonsole.o [1]
  .text                 ro code  0x0800b4b8    0x1ac  pal_lld.o [1]
  .text                 ro code  0x0800b664    0x154  icu.o [1]
  .text                 ro code  0x0800b7b8     0xb8  table_helper.o [1]
  .text                 ro code  0x0800b870     0x16  usb.o [1]
  .rodata               const    0x0800b886      0x2  usb.o [1]
  .text                 ro code  0x0800b888    0x370  electronic_throttle.o [1]
  .text                 ro code  0x0800bbf8    0x7b0  maf.o [1]
  .text                 ro code  0x0800c3a8    0x2e4  speed_density.o [1]
  .text                 ro code  0x0800c68c    0x2a4  advance_map.o [1]
  .text                 ro code  0x0800c930    0x130  ego.o [1]
  .text                 ro code  0x0800ca60    0x138  rover_v8.o [1]
  .text                 ro code  0x0800cb98    0x13c  custom_engine.o [1]
  .text                 ro code  0x0800ccd4     0x10  acura_rsx.o [1]
  .text                 ro code  0x0800cce4    0x568  dodge_neon.o [1]
  .text                 ro code  0x0800d24c    0x20c  ford_aspire.o [1]
  .text                 ro code  0x0800d458     0x8c  ford_fiesta.o [1]
  .text                 ro code  0x0800d4e4      0x8  nissan_primera.o [1]
  .text                 ro code  0x0800d4ec    0x254  honda_accord.o [1]
  .text                 ro code  0x0800d740    0x114  mitsubishi.o [1]
  .text                 ro code  0x0800d854    0x208  ford_1995_inline_6.o [1]
  .text                 ro code  0x0800da5c    0x120  GY6_139QMB.o [1]
  .text                 ro code  0x0800db7c    0x1d8  mazda_miata_nb.o [1]
  .text                 ro code  0x0800dd54     0x18  mazda_323.o [1]
  .text                 ro code  0x0800dd6c    0x168  mazda_626.o [1]
  .text                 ro code  0x0800ded4      0x8  saturn_ion.o [1]
  .text                 ro code  0x0800dedc      0x8  MiniCooperR50.o [1]
  .text                 ro code  0x0800dee4    0x7c0  mazda_miata.o [1]
  .text                 ro code  0x0800e6a4    0x2e0  citroenBerlingoTU3JP.o [1]
  .text                 ro code  0x0800e984     0x44  subaru.o [1]
  .text                 ro code  0x0800e9c8    0x368  bmw_e34.o [1]
  .text                 ro code  0x0800ed30     0x34  gm_2_2.o [1]
  .text                 ro code  0x0800ed64    0x1c0  dodge_ram.o [1]
  .text                 ro code  0x0800ef24     0xd8  vw.o [1]
  .text                 ro code  0x0800effc     0xd8  test_engine.o [1]
  .text                 ro code  0x0800f0d4    0x1e8  sachs.o [1]
  .text                 ro code  0x0800f2bc    0xe60  tunerstudio.o [1]
  .text                 ro code  0x0801011c     0x32  cxxabi.o [4]
  .rodata               const    0x0801014e      0x2  usb.o [1]
  .text                 ro code  0x08010150    0xd08  trigger_decoder.o [1]
  .text                 ro code  0x08010e58    0xccc  fsio_impl.o [1]
  .text                 ro code  0x08011b24    0x132  I64DivMod.o [6]
  .text                 ro code  0x08011c56      0x2  trigger_decoder.o [1]
  .text                 ro code  0x08011c58   0x10b8  status_loop.o [1]
  .text                 ro code  0x08012d10    0x4ec  rpm_calculator.o [1]
  .text                 ro code  0x080131fc     0x6c  crc.o [1]
  .text                 ro code  0x08013268    0x300  flash.o [1]
  .text                 ro code  0x08013568    0x1e4  chdebug.o [1]
  .text                 ro code  0x0801374c     0xe0  adc.o [1]
  .text                 ro code  0x0801382c     0x70  pwm.o [1]
  .text                 ro code  0x0801389c      0x6  logf.o [5]
  .text                 ro code  0x080138a2     0x38  xfdtest.o [5]
  .text                 ro code  0x080138da      0x2  vectors.o [1]
  .text                 ro code  0x080138dc     0x62  memcmp.o [6]
  .text                 ro code  0x0801393e     0x16  usb_lld.o [1]
  .text                 ro code  0x08013954    0x67c  engine.o [1]
  .text                 ro code  0x08013fd0     0x70  efilib2.o [1]
  .text                 ro code  0x08014040     0x26  LocalVersionHolder.o [1]
  .text                 ro code  0x08014068    0x19c  chthreads.o [1]
  .text                 ro code  0x08014204     0xf0  malfunction_central.o [1]
  .text                 ro code  0x080142f4     0x3c  rfiutil.o [1]
  .text                 ro code  0x08014330     0x78  listener_array.o [1]
  .text                 ro code  0x080143a8    0x528  map.o [1]
  .text                 ro code  0x080148d0    0x394  accel_enrichment.o [1]
  .text                 ro code  0x08014c64     0x6c  allsensors.o [1]
  .text                 ro code  0x08014cd0    0x162  pwm_generator.o [1]
  .text                 ro code  0x08014e34    0x10c  sensor_chart.o [1]
  .text                 ro code  0x08014f40     0x22  algo.o [1]
  .text                 ro code  0x08014f64    0x4e4  wave_analyzer.o [1]
  .text                 ro code  0x08015448    0x6e4  injector_central.o [1]
  .text                 ro code  0x08015b2c    0x12c  malfunction_indicator.o [1]
  .text                 ro code  0x08015c58    0x488  map_averaging.o [1]
  .text                 ro code  0x080160e0    0xb54  main_trigger_callback.o [1]
  .text                 ro code  0x08016c34    0x5ac  idle_thread.o [1]
  .text                 ro code  0x080171e0    0x71c  lcd_controller.o [1]
  .text                 ro code  0x080178fc    0x246  DblDiv.o [5]
  .text                 ro code  0x08017b44     0x58  DblToI32.o [5]
  .text                 ro code  0x08017b9c     0x58  efiGpio.o [1]
  .text                 ro code  0x08017bf4      0x6  engine_math.o [1]
  .text                 ro code  0x08017bfc     0x28  engine_math.o [1]
  .text                 ro code  0x08017c24     0x28  engine_math.o [1]
  .text                 ro code  0x08017c4c     0x30  engine_math.o [1]
  .text                 ro code  0x08017c7c      0x6  engine_math.o [1]
  .text                 ro code  0x08017c84     0x30  I32ToDbl.o [5]
  .text                 ro code  0x08017cb4     0x48  xdtest.o [5]
  .text                 ro code  0x08017cfc    0x104  EfiWave.o [1]
  .text                 ro code  0x08017e00     0xe4  chvt.o [1]
  .text                 ro code  0x08017ee4    0x384  hardware.o [1]
  .text                 ro code  0x08018268     0x28  engine_emulator.o [1]
  .text                 ro code  0x08018290     0x6c  strncpy.o [6]
  .text                 ro code  0x080182fc     0x44  gpio_helper.o [1]
  .text                 ro code  0x08018340    0x29a  chrtclib.o [1]
  .text                 ro code  0x080185dc    0x370  pwm_generator_logic.o [1]
  .text                 ro code  0x0801894c     0xe4  pid.o [1]
  .text                 ro code  0x08018a30     0x54  voltage.o [1]
  .text                 ro code  0x08018a84    0x378  board_test.o [1]
  .text                 ro code  0x08018dfc     0x2a  strncmp.o [3]
  .text                 ro code  0x08018e26     0x1c  strcat.o [3]
  .text                 ro code  0x08018e44    0x6e0  lcd_HD44780.o [1]
  .text                 ro code  0x08019524      0x4  chcore.o [1]
  .text                 ro code  0x08019528     0x2e  DblCmpLe.o [5]
  .text                 ro code  0x08019558    0x180  DblSub.o [5]
  .text                 ro code  0x080196d8     0xec  chevents.o [1]
  .text                 ro code  0x080197c4     0x7c  usbconsole.o [1]
  .text                 ro code  0x08019840    0x19c  serial.o [1]
  .text                 ro code  0x080199dc     0x50  chregistry.o [1]
  .text                 ro code  0x08019a2c    0x44e  icu_lld.o [1]
  .text                 ro code  0x08019e7c     0x66  ABImemset.o [6]
  .text                 ro code  0x08019ee4     0xe8  DblAdd.o [5]
  .text                 ro code  0x08019fcc     0x1e  speed_density.o [1]
  .text                 ro code  0x08019fea     0x1e  speed_density.o [1]
  .text                 ro code  0x0801a008     0x4c  speed_density.o [1]
  .text                 ro code  0x0801a054     0x28  speed_density.o [1]
  .text                 ro code  0x0801a07c     0x24  speed_density.o [1]
  .text                 ro code  0x0801a0a0     0x50  status_loop.o [1]
  .text                 ro code  0x0801a0f0    0xa68  HIP9011.o [1]
  .text                 ro code  0x0801ab58    0x18e  tunerstudio_io.o [1]
  .text                 ro code  0x0801ace8     0x98  cppinit.o [3]
  .text                 ro code  0x0801ad80     0x10  trigger_decoder.o [1]
  .text                 ro code  0x0801ad90     0x3a  trigger_decoder.o [1]
  .text                 ro code  0x0801adca     0x30  trigger_decoder.o [1]
  .text                 ro code  0x0801adfc    0x454  trigger_mazda.o [1]
  .text                 ro code  0x0801b250    0x504  trigger_chrysler.o [1]
  .text                 ro code  0x0801b754    0x258  trigger_mitsubishi.o [1]
  .text                 ro code  0x0801b9ac    0x1e4  trigger_bmw.o [1]
  .text                 ro code  0x0801bb90     0x1e  trigger_decoder.o [1]
  .text                 ro code  0x0801bbb0    0x8a0  fsio_core.o [1]
  .text                 ro code  0x0801c450      0x2  I64DivZer.o [6]
  .text                 ro code  0x0801c454    0x164  vehicle_speed.o [1]
  .text                 ro code  0x0801c5b8    0x49c  fuel_math.o [1]
  .text                 ro code  0x0801ca54    0x614  mmc_card.o [1]
  .text                 ro code  0x0801d068    0x8f8  trigger_central.o [1]
  .text                 ro code  0x0801d960    0x288  max31855.o [1]
  .text                 ro code  0x0801dbe8     0x62  I64ToFlt.o [5]
  .text                 ro code  0x0801dc4c    0x228  SingleTimerExecutor.o [1]
  .text                 ro code  0x0801de74    0x480  adc_lld.o [1]
  .text                 ro code  0x0801e2f4    0x1b8  chmtx.o [1]
  .text                 ro code  0x0801e4ac    0x2cc  pwm_lld.o [1]
  .text                 ro code  0x0801e778    0x168  xflog.o [5]
  .text                 ro code  0x0801e8e0     0x76  ABImemcpy.o [6]
  .text                 ro code  0x0801e956      0x6  engine.o [1]
  .text                 ro code  0x0801e95c     0x9c  engine.o [1]
  .text                 ro code  0x0801e9f8    0x2a8  chschd.o [1]
  .text                 ro code  0x0801eca0     0x58  I64ToDbl.o [5]
  .text                 ro code  0x0801ecf8    0x1c0  digital_input_hw.o [1]
  .text                 ro code  0x0801eeb8      0x6  accel_enrichment.o [1]
  .text                 ro code  0x0801eec0     0x54  accel_enrichment.o [1]
  .text                 ro code  0x0801ef14     0x34  accel_enrichment.o [1]
  .text                 ro code  0x0801ef48     0x10  accel_enrichment.o [1]
  .text                 ro code  0x0801ef58     0x1c  accel_enrichment.o [1]
  .text                 ro code  0x0801ef74     0x76  FltToS64.o [5]
  .text                 ro code  0x0801efec    0x274  signal_executor.o [1]
  .text                 ro code  0x0801f260     0x44  main_trigger_callback.o [1]
  .text                 ro code  0x0801f2a4    0x1f4  stepper.o [1]
  .text                 ro code  0x0801f498    0x240  idle_controller.o [1]
  .text                 ro code  0x0801f6d8    0x12a  lcd_menu_tree.o [1]
  .text                 ro code  0x0801f804    0x244  trigger_input.o [1]
  .text                 ro code  0x0801fa48    0x678  can_hw.o [1]
  .text                 ro code  0x080200c0    0x228  neo6m.o [1]
  .text                 ro code  0x080202e8    0x33c  joystick.o [1]
  .text                 ro code  0x08020624      0x2  wbo.o [1]
  .text                 ro code  0x08020628    0x174  poten.o [1]
  .text                 ro code  0x0802079c     0xa0  trigger_emulator.o [1]
  .text                 ro code  0x0802083c      0x6  ABImemclr4.o [6]
  .text                 ro code  0x08020844     0x9c  rtc.o [1]
  .text                 ro code  0x080208e0     0xd4  mktime.o [3]
  .text                 ro code  0x080209b4     0xba  localtim.o [3]
  .text                 ro code  0x08020a70    0x212  event_queue.o [1]
  .text                 ro code  0x08020c84    0x48e  serial_usb.o [1]
  .text                 ro code  0x08021114    0x87c  usb.o [1]
  .text                 ro code  0x08021990    0x3b0  chqueues.o [1]
  .text                 ro code  0x08021d40    0x2e0  serial_lld.o [1]
  .text                 ro code  0x08022020    0x144  chcore_v7m.o [1]
  .text                 ro code  0x08022164     0xb8  nvic.o [1]
  .text                 ro code  0x0802221c    0x4d0  spi_lld.o [1]
  .text                 ro code  0x080226ec     0xf8  hip9011_lookup.o [1]
  .text                 ro code  0x080227e4    0x378  spi.o [1]
  .text                 ro code  0x08022b5c     0x16  trigger_decoder.o [1]
  .text                 ro code  0x08022b72     0x18  fsio_core.o [1]
  .text                 ro code  0x08022b8a      0x6  fsio_core.o [1]
  .text                 ro code  0x08022b90      0x4  fsio_core.o [1]
  .text                 ro code  0x08022b94     0x24  fsio_core.o [1]
  .text                 ro code  0x08022bb8     0x34  fsio_core.o [1]
  .text                 ro code  0x08022bec     0x50  fuel_math.o [1]
  .text                 ro code  0x08022c3c   0x2300  ff.o [1]
  .text                 ro code  0x08024f3c    0x89c  mmc_spi.o [1]
  .text                 ro code  0x080257d8    0x1a0  microsecond_timer.o [1]
  .text                 ro code  0x08025978    0x54c  stm32_dma.o [1]
  .text                 ro code  0x08025ec4     0x26  xfdnorm.o [5]
  .text                 ro code  0x08025eec      0xc  errno.o [3]
  .text                 ro code  0x08025ef8     0x38  chcoreasm_v7m.o [1]
  .text                 ro code  0x08025f30     0x2c  digital_input_hw.o [1]
  .text                 ro code  0x08025f5c     0x2c  digital_input_hw.o [1]
  .text                 ro code  0x08025f88     0x16  accel_enrichment.o [1]
  .text                 ro code  0x08025f9e     0x1e  accel_enrichment.o [1]
  .text                 ro code  0x08025fbc    0x1dc  can.o [1]
  .text                 ro code  0x08026198    0x1f0  obd2.o [1]
  .text                 ro code  0x08026388    0x5bc  nmea.o [1]
  .text                 ro code  0x08026944     0x6c  ext.o [1]
  .text                 ro code  0x080269b0    0x3ec  trigger_emulator_algo.o [1]
  .text                 ro code  0x08026d9c     0x32  ABImemset48.o [6]
  .text                 ro code  0x08026dd0    0x202  rtc_lld.o [1]
  .text                 ro code  0x08026fd4    0x188  xttotm.o [3]
  .text                 ro code  0x0802715c      0x2  xtls.o [3]
  .text                 ro code  0x08027160     0x29  setlocale.o [3]
  .text                 ro code  0x0802718c      0xa  getzone.o [3]
  .text                 ro code  0x08027196     0x42  xgettime.o [3]
  .text                 ro code  0x080271d8     0x86  xstol.o [3]
  .text                 ro code  0x08027260    0xe58  usb_lld.o [1]
  .text                 ro code  0x080280b8    0x11c  chsys.o [1]
  .text                 ro code  0x080281d4     0x1c  trigger_decoder.o [1]
  .text                 ro code  0x080281f0    0x170  fatfs_diskio.o [1]
  .text                 ro code  0x08028360     0x90  ccsbcs.o [1]
  .text                 ro code  0x080283f0     0x1a  fatfs_syscall.o [1]
  .text                 ro code  0x0802840c     0xd8  mmcsd.o [1]
  .text                 ro code  0x080284e4     0xe8  gpt.o [1]
  .text                 ro code  0x080285cc      0x6  digital_input_hw.o [1]
  .text                 ro code  0x080285d4    0x740  can_lld.o [1]
  .text                 ro code  0x08028d14    0x118  chsem.o [1]
  .text                 ro code  0x08028e2c     0xc0  modf.o [5]
  .text                 ro code  0x08028eec     0x4c  round.o [5]
  .text                 ro code  0x08028f38     0x16  strchr.o [6]
  .text                 ro code  0x08028f4e     0x10  nmea.o [1]
  .text                 ro code  0x08028f5e     0x10  nmea.o [1]
  .text                 ro code  0x08028f70    0x174  ext_lld.o [1]
  .text                 ro code  0x080290e4    0x134  xisdst.o [3]
  .text                 ro code  0x08029218    0x170  xstoul.o [3]
  .text                 ro code  0x08029388     0xa0  hal.o [1]
  .text                 ro code  0x08029428     0x78  chmemcore.o [1]
  .text                 ro code  0x080294a0    0x174  chheap.o [1]
  .text                 ro code  0x08029614     0x16  board.o [1]
  .text                 ro code  0x0802962c    0x12a  gpt_lld.o [1]
  .text                 ro code  0x08029756     0x7e  xdint.o [5]
  .text                 ro code  0x080297d4     0x2c  strstr.o [3]
  .text                 ro code  0x08029800     0x18  strrchr.o [3]
  .text                 ro code  0x08029818    0x2f8  ext_lld_isr.o [1]
  .text                 ro code  0x08029b10    0x142  xgetdst.o [3]
  .text                 ro code  0x08029c54     0x80  xxmemxfree.o [3]
  .text                 ro code  0x08029cd4     0x58  memchr.o [6]
  .text                 ro code  0x08029d2c    0x23c  hal_lld.o [1]
  .text                 ro code  0x08029f68     0x1e  i2c.o [1]
  .text                 ro code  0x08029f88     0xb0  xxmemxmalloc.o [3]
  .text                 ro code  0x0802a038    0x2b0  i2c_lld.o [1]
  .text                 ro code  0x0802a2e8     0x2c  xgetmemchunk.o [3]
  .rodata               const    0x0802a314    0x400  GY6_139QMB.o [1]
  .rodata               const    0x0802a714    0x400  advance_map.o [1]
  .rodata               const    0x0802ab14    0x400  citroenBerlingoTU3JP.o [1]
  .rodata               const    0x0802af14    0x400  citroenBerlingoTU3JP.o [1]
  .rodata               const    0x0802b314    0x400  dodge_neon.o [1]
  .rodata               const    0x0802b714    0x400  dodge_neon.o [1]
  .rodata               const    0x0802bb14    0x400  dodge_neon.o [1]
  .rodata               const    0x0802bf14    0x400  ford_aspire.o [1]
  .rodata               const    0x0802c314    0x400  ford_aspire.o [1]
  .rodata               const    0x0802c714    0x400  mazda_miata.o [1]
  .rodata               const    0x0802cb14    0x400  mazda_miata.o [1]
  .rodata               const    0x0802cf14    0x1e0  ccsbcs.o [1]
  .rodata               const    0x0802d0f4    0x1e0  ccsbcs.o [1]
  .text                 ro code  0x0802d2d4    0x1a4  lz77_init.o [6]
  .text                 ro code  0x0802d478      0x6  abort.o [3]
  .text                 ro code  0x0802d480     0x14  exit.o [7]
  .rodata               const    0x0802d494    0x100  ccsbcs.o [1]
  .rodata               const    0x0802d594    0x100  hip9011_lookup.o [1]
  .rodata               const    0x0802d694    0x100  hip9011_lookup.o [1]
  .rodata               const    0x0802d794    0x100  mmc_spi.o [1]
  .rodata               const    0x0802d894     0xfc  board.o [1]
  .rodata               const    0x0802d990     0xc0  stm32_dma.o [1]
  .text                 ro code  0x0802da50     0xa4  usbcfg.o [1]
  SHT$$PREINIT_ARRAY             0x0802daf4      0x0  <Block>
  SHT$$INIT_ARRAY                0x0802daf4     0xa4  <Block>
    .init_array         const    0x0802daf4      0x4  HIP9011.o [1]
    .init_array         const    0x0802daf8      0x4  SingleTimerExecutor.o [1]
    .init_array         const    0x0802dafc      0x4  adc_inputs.o [1]
    .init_array         const    0x0802db00      0x4  advance_map.o [1]
    .init_array         const    0x0802db04      0x4  alternatorController.o [1]
    .init_array         const    0x0802db08      0x4  can_hw.o [1]
    .init_array         const    0x0802db0c      0x4  digital_input_hw.o [1]
    .init_array         const    0x0802db10      0x4  efiGpio.o [1]
    .init_array         const    0x0802db14      0x4  eficonsole.o [1]
    .init_array         const    0x0802db18      0x4  electronic_throttle.o [1]
    .init_array         const    0x0802db1c      0x4  engine.o [1]
    .init_array         const    0x0802db20      0x4  engine_controller.o [1]
    .init_array         const    0x0802db24      0x4  error_handling.o [1]
    .init_array         const    0x0802db28      0x4  fsio_core.o [1]
    .init_array         const    0x0802db2c      0x4  fsio_impl.o [1]
    .init_array         const    0x0802db30      0x4  fuel_math.o [1]
    .init_array         const    0x0802db34      0x4  idle_thread.o [1]
    .init_array         const    0x0802db38      0x4  injector_central.o [1]
    .init_array         const    0x0802db3c      0x4  io_pins.o [1]
    .init_array         const    0x0802db40      0x4  lcd_controller.o [1]
    .init_array         const    0x0802db44      0x4  main_trigger_callback.o [1]
    .init_array         const    0x0802db48      0x4  map.o [1]
    .init_array         const    0x0802db4c      0x4  map_averaging.o [1]
    .init_array         const    0x0802db50      0x4  mmc_card.o [1]
    .init_array         const    0x0802db54      0x4  neo6m.o [1]
    .init_array         const    0x0802db58      0x4  obd2.o [1]
    .init_array         const    0x0802db5c      0x4  pin_repository.o [1]
    .init_array         const    0x0802db60      0x4  rpm_calculator.o [1]
    .init_array         const    0x0802db64      0x4  rtc_helper.o [1]
    .init_array         const    0x0802db68      0x4  rusefi.o [1]
    .init_array         const    0x0802db6c      0x4  sensor_chart.o [1]
    .init_array         const    0x0802db70      0x4  settings.o [1]
    .init_array         const    0x0802db74      0x4  speed_density.o [1]
    .init_array         const    0x0802db78      0x4  status_loop.o [1]
    .init_array         const    0x0802db7c      0x4  trigger_central.o [1]
    .init_array         const    0x0802db80      0x4  trigger_decoder.o [1]
    .init_array         const    0x0802db84      0x4  trigger_emulator.o [1]
    .init_array         const    0x0802db88      0x4  trigger_emulator_algo.o [1]
    .init_array         const    0x0802db8c      0x4  tunerstudio.o [1]
    .init_array         const    0x0802db90      0x4  wave_analyzer.o [1]
    .init_array         const    0x0802db94      0x4  wave_chart.o [1]
  .rodata               const    0x0802db98     0x80  ff.o [1]
  .rodata               const    0x0802dc18     0x80  hip9011_lookup.o [1]
  .text                 ro code  0x0802dc98     0x64  event_registry.o [1]
  .text                 ro code  0x0802dcfc     0x28  event_registry.o [1]
  .rodata               const    0x0802dd24     0x5c  cli_registry.o [1]
  .rodata               const    0x0802dd80     0x5c  trigger_central.o [1]
  .rodata               const    0x0802dddc     0x58  wave_chart.o [1]
  .rodata               const    0x0802de34     0x54  stm32_dma.o [1]
  .rodata               const    0x0802de88     0x50  flash_main.o [1]
  .rodata               const    0x0802ded8     0x48  HIP9011.o [1]
  .rodata               const    0x0802df20     0x48  chdebug.o [1]
  .rodata               const    0x0802df68     0x48  chevents.o [1]
  .rodata               const    0x0802dfb0     0x48  chqueues.o [1]
  .rodata               const    0x0802dff8     0x48  chthreads.o [1]
  .rodata               const    0x0802e040     0x48  serial_usb.o [1]
  .rodata               const    0x0802e088     0x48  trigger_decoder.o [1]
  .rodata               const    0x0802e0d0     0x48  tunerstudio.o [1]
  .rodata               const    0x0802e118     0x48  tunerstudio.o [1]
  .rodata               const    0x0802e160     0x44  board_test.o [1]
  .rodata               const    0x0802e1a4     0x44  chheap.o [1]
  .rodata               const    0x0802e1e8     0x44  chmtx.o [1]
  .rodata               const    0x0802e22c     0x44  chsem.o [1]
  .rodata               const    0x0802e270     0x44  chvt.o [1]
  .rodata               const    0x0802e2b4     0x44  eficonsole.o [1]
  .rodata               const    0x0802e2f8     0x44  mmc_spi.o [1]
  .rodata               const    0x0802e33c     0x44  mpu_util.o [1]
  .rodata               const    0x0802e380     0x44  serial.o [1]
  .rodata               const    0x0802e3c4     0x44  usbcfg.o [1]
  .rodata               const    0x0802e408     0x40  adc.o [1]
  .rodata               const    0x0802e448     0x40  advance_map.o [1]
  .rodata               const    0x0802e488     0x40  can.o [1]
  .rodata               const    0x0802e4c8     0x40  ext.o [1]
  .rodata               const    0x0802e508     0x40  gpt.o [1]
  .rodata               const    0x0802e548     0x40  icu.o [1]
  .rodata               const    0x0802e588     0x40  mmcsd.o [1]
  .rodata               const    0x0802e5c8     0x40  pwm.o [1]
  .rodata               const    0x0802e608     0x40  rtc.o [1]
  .rodata               const    0x0802e648     0x40  speed_density.o [1]
  .rodata               const    0x0802e688     0x40  spi.o [1]
  .rodata               const    0x0802e6c8     0x40  trigger_central.o [1]
  .rodata               const    0x0802e708     0x40  usb.o [1]
  .rodata               const    0x0802e748     0x3c  eficonsole.o [1]
  .rodata               const    0x0802e784     0x3c  engine_math.o [1]
  .rodata               const    0x0802e7c0     0x3c  engine_math.o [1]
  .rodata               const    0x0802e7fc     0x3c  fsio_impl.o [1]
  .rodata               const    0x0802e838     0x3c  rtc_helper.o [1]
  .rodata               const    0x0802e874     0x3c  settings.o [1]
  .rodata               const    0x0802e8b0     0x3c  settings.o [1]
  .rodata               const    0x0802e8ec     0x3c  trigger_central.o [1]
  .rodata               const    0x0802e928     0x3c  trigger_central.o [1]
  .rodata               const    0x0802e964     0x38  can_hw.o [1]
  .rodata               const    0x0802e99c     0x38  flash_main.o [1]
  .rodata               const    0x0802e9d4     0x38  injector_central.o [1]
  .rodata               const    0x0802ea0c     0x38  settings.o [1]
  .rodata               const    0x0802ea44     0x38  settings.o [1]
  .rodata               const    0x0802ea7c     0x38  trigger_decoder.o [1]
  .rodata               const    0x0802eab4     0x38  usbcfg.o [1]
  .rodata               const    0x0802eaec     0x34  HIP9011.o [1]
  .rodata               const    0x0802eb20     0x34  adc_inputs.o [1]
  .rodata               const    0x0802eb54     0x34  board_test.o [1]
  .rodata               const    0x0802eb88     0x34  board_test.o [1]
  .rodata               const    0x0802ebbc     0x34  cli_registry.o [1]
  .rodata               const    0x0802ebf0     0x34  eficonsole.o [1]
  .rodata               const    0x0802ec24     0x34  engine_controller.o [1]
  .rodata               const    0x0802ec58     0x34  interpolation.o [1]
  .rodata               const    0x0802ec8c     0x34  mmc_card.o [1]
  .rodata               const    0x0802ecc0     0x34  rpm_calculator.o [1]
  .rodata               const    0x0802ecf4     0x34  settings.o [1]
  .rodata               const    0x0802ed28     0x34  settings.o [1]
  .rodata               const    0x0802ed5c     0x34  settings.o [1]
  .rodata               const    0x0802ed90     0x34  settings.o [1]
  .rodata               const    0x0802edc4     0x34  settings.o [1]
  .rodata               const    0x0802edf8     0x34  settings.o [1]
  .rodata               const    0x0802ee2c     0x34  settings.o [1]
  .rodata               const    0x0802ee60     0x34  status_loop.o [1]
  .rodata               const    0x0802ee94     0x34  thermistors.o [1]
  .rodata               const    0x0802eec8     0x34  tunerstudio.o [1]
  .rodata               const    0x0802eefc     0x34  tunerstudio.o [1]
  .rodata               const    0x0802ef30     0x34  tunerstudio.o [1]
  .rodata               const    0x0802ef64     0x30  engine.o [1]
  .rodata               const    0x0802ef94     0x30  engine.o [1]
  .rodata               const    0x0802efc4     0x30  engine.o [1]
  .rodata               const    0x0802eff4     0x30  engine_math.o [1]
  .rodata               const    0x0802f024     0x30  mmc_card.o [1]
  .rodata               const    0x0802f054     0x30  settings.o [1]
  .rodata               const    0x0802f084     0x30  trigger_decoder.o [1]
  .rodata               const    0x0802f0b4     0x30  trigger_emulator_algo.o [1]
  .text                 ro code  0x0802f0e4     0x30  engine_configuration.o [1]
  .rodata               const    0x0802f114     0x2c  alternatorController.o [1]
  .rodata               const    0x0802f140     0x2c  datalogging.o [1]
  .rodata               const    0x0802f16c     0x2c  eficonsole.o [1]
  .rodata               const    0x0802f198     0x2c  eficonsole.o [1]
  .rodata               const    0x0802f1c4     0x2c  flash_main.o [1]
  .rodata               const    0x0802f1f0     0x2c  interpolation.o [1]
  .rodata               const    0x0802f21c     0x2c  mmc_card.o [1]
  .rodata               const    0x0802f248     0x2c  settings.o [1]
  .rodata               const    0x0802f274     0x2c  settings.o [1]
  .rodata               const    0x0802f2a0     0x2c  settings.o [1]
  .rodata               const    0x0802f2cc     0x2c  thermistors.o [1]
  .rodata               const    0x0802f2f8     0x2c  thermistors.o [1]
  .rodata               const    0x0802f324     0x2c  thermistors.o [1]
  .rodata               const    0x0802f350     0x2c  thermistors.o [1]
  .rodata               const    0x0802f37c     0x2c  tps.o [1]
  .rodata               const    0x0802f3a8     0x2c  trigger_central.o [1]
  .rodata               const    0x0802f3d4     0x2c  trigger_central.o [1]
  .rodata               const    0x0802f400     0x2c  trigger_central.o [1]
  .rodata               const    0x0802f42c     0x2c  trigger_central.o [1]
  .rodata               const    0x0802f458     0x2c  tunerstudio.o [1]
  .rodata               const    0x0802f484     0x2c  tunerstudio.o [1]
  .rodata               const    0x0802f4b0     0x2c  tunerstudio.o [1]
  .rodata               const    0x0802f4dc     0x28  HIP9011.o [1]
  .rodata               const    0x0802f504     0x28  adc_inputs.o [1]
  .rodata               const    0x0802f52c     0x28  auto_generated_enums.o [1]
  .rodata               const    0x0802f554     0x28  can_hw.o [1]
  .rodata               const    0x0802f57c     0x28  engine_math.o [1]
  .rodata               const    0x0802f5a4     0x28  flash_main.o [1]
  .rodata               const    0x0802f5cc     0x28  gpio_helper.o [1]
  .rodata               const    0x0802f5f4     0x28  idle_controller.o [1]
  .rodata               const    0x0802f61c     0x28  idle_thread.o [1]
  .rodata               const    0x0802f644     0x28  main_trigger_callback.o [1]
  .rodata               const    0x0802f66c     0x28  map_averaging.o [1]
  .rodata               const    0x0802f694     0x28  poten.o [1]
  .rodata               const    0x0802f6bc     0x28  rtc_helper.o [1]
  .rodata               const    0x0802f6e4     0x28  settings.o [1]
  .rodata               const    0x0802f70c     0x28  settings.o [1]
  .rodata               const    0x0802f734     0x28  settings.o [1]
  .rodata               const    0x0802f75c     0x28  settings.o [1]
  .rodata               const    0x0802f784     0x28  trigger_central.o [1]
  .rodata               const    0x0802f7ac     0x28  trigger_central.o [1]
  .rodata               const    0x0802f7d4     0x28  trigger_emulator_algo.o [1]
  .rodata               const    0x0802f7fc     0x28  tunerstudio.o [1]
  .rodata               const    0x0802f824     0x28  tunerstudio.o [1]
  .rodata               const    0x0802f84c     0x28  usbcfg.o [1]
  .rodata               const    0x0802f874     0x28  vehicle_speed.o [1]
  .text                 ro code  0x0802f89c     0x28  cstartup.o [1]
  .text                 ro code  0x0802f8c4     0x1a  fpinit_M.o [5]
  .text                 ro code  0x0802f8e0     0x16  cmain.o [6]
  .text                 ro code  0x0802f8f6      0x4  low_level_init.o [3]
  .text                 ro code  0x0802f8fc     0x28  data_init.o [6]
  .text                 ro code  0x0802f924     0x16  main.o [1]
  .text                 ro code  0x0802f93a      0x4  exit.o [3]
  .text                 ro code  0x0802f940      0xe  cexit.o [6]
  .rodata               const    0x0802f950     0x24  EfiWave.o [1]
  .rodata               const    0x0802f974     0x24  HIP9011.o [1]
  .rodata               const    0x0802f998     0x24  HIP9011.o [1]
  .rodata               const    0x0802f9bc     0x24  board_test.o [1]
  .rodata               const    0x0802f9e0     0x24  can_hw.o [1]
  .rodata               const    0x0802fa04     0x24  chdebug.o [1]
  .rodata               const    0x0802fa28     0x24  eficonsole.o [1]
  .rodata               const    0x0802fa4c     0x24  engine_configuration.o [1]
  .rodata               const    0x0802fa70     0x24  engine_controller.o [1]
  .rodata               const    0x0802fa94     0x24  engine_math.o [1]
  .rodata               const    0x0802fab8     0x24  flash_main.o [1]
  .rodata               const    0x0802fadc     0x24  fsio_impl.o [1]
  .rodata               const    0x0802fb00     0x24  fsio_impl.o [1]
  .rodata               const    0x0802fb24     0x24  idle_controller.o [1]
  .rodata               const    0x0802fb48     0x24  main_trigger_callback.o [1]
  .rodata               const    0x0802fb6c     0x24  main_trigger_callback.o [1]
  .rodata               const    0x0802fb90     0x24  mmc_card.o [1]
  .rodata               const    0x0802fbb4     0x24  mmc_card.o [1]
  .rodata               const    0x0802fbd8     0x24  settings.o [1]
  .rodata               const    0x0802fbfc     0x24  settings.o [1]
  .rodata               const    0x0802fc20     0x24  settings.o [1]
  .rodata               const    0x0802fc44     0x24  settings.o [1]
  .rodata               const    0x0802fc68     0x24  settings.o [1]
  .rodata               const    0x0802fc8c     0x24  settings.o [1]
  .rodata               const    0x0802fcb0     0x24  settings.o [1]
  .rodata               const    0x0802fcd4     0x24  status_loop.o [1]
  .rodata               const    0x0802fcf8     0x24  trigger_central.o [1]
  .rodata               const    0x0802fd1c     0x24  trigger_decoder.o [1]
  .rodata               const    0x0802fd40     0x24  trigger_decoder.o [1]
  .rodata               const    0x0802fd64     0x24  tunerstudio.o [1]
  .rodata               const    0x0802fd88     0x24  tunerstudio.o [1]
  .rodata               const    0x0802fdac     0x24  tunerstudio.o [1]
  .rodata               const    0x0802fdd0     0x24  tunerstudio.o [1]
  .rodata               const    0x0802fdf4     0x24  tunerstudio.o [1]
  .rodata               const    0x0802fe18     0x24  tunerstudio_io.o [1]
  .rodata               const    0x0802fe3c     0x24  usb_lld.o [1]
  .rodata               const    0x0802fe60     0x24  usbcfg.o [1]
  .rodata               const    0x0802fe84     0x24  usbcfg.o [1]
  .iar.init_table       const    0x0802fea8     0x38  - Linker created -
  .rodata               const    0x0802fee0     0x20  EfiWave.o [1]
  .rodata               const    0x0802ff00     0x20  HIP9011.o [1]
  .rodata               const    0x0802ff20     0x20  auto_generated_enums.o [1]
  .rodata               const    0x0802ff40     0x20  auto_generated_enums.o [1]
  .rodata               const    0x0802ff60     0x20  board_test.o [1]
  .rodata               const    0x0802ff80     0x20  chdebug.o [1]
  .rodata               const    0x0802ffa0     0x20  console_io.o [1]
  .rodata               const    0x0802ffc0     0x20  eficonsole.o [1]
  .rodata               const    0x0802ffe0     0x20  eficonsole.o [1]
  .rodata               const    0x08030000     0x20  eficonsole.o [1]
  .rodata               const    0x08030020     0x20  eficonsole.o [1]
  .rodata               const    0x08030040     0x20  eficonsole.o [1]
  .rodata               const    0x08030060     0x20  eficonsole.o [1]
  .rodata               const    0x08030080     0x20  eficonsole.o [1]
  .rodata               const    0x080300a0     0x20  engine_configuration.o [1]
  .rodata               const    0x080300c0     0x20  engine_controller.o [1]
  .rodata               const    0x080300e0     0x20  engine_math.o [1]
  .rodata               const    0x08030100     0x20  flash_main.o [1]
  .rodata               const    0x08030120     0x20  flash_main.o [1]
  .rodata               const    0x08030140     0x20  flash_main.o [1]
  .rodata               const    0x08030160     0x20  flash_main.o [1]
  .rodata               const    0x08030180     0x20  fsio_core.o [1]
  .rodata               const    0x080301a0     0x20  fsio_core.o [1]
  .rodata               const    0x080301c0     0x20  fsio_impl.o [1]
  .rodata               const    0x080301e0     0x20  fsio_impl.o [1]
  .rodata               const    0x08030200     0x20  fsio_impl.o [1]
  .rodata               const    0x08030220     0x20  fuel_math.o [1]
  .rodata               const    0x08030240     0x20  idle_controller.o [1]
  .rodata               const    0x08030260     0x20  idle_controller.o [1]
  .rodata               const    0x08030280     0x20  idle_thread.o [1]
  .rodata               const    0x080302a0     0x20  idle_thread.o [1]
  .rodata               const    0x080302c0     0x20  interpolation.o [1]
  .rodata               const    0x080302e0     0x20  interpolation.o [1]
  .rodata               const    0x08030300     0x20  main_trigger_callback.o [1]
  .rodata               const    0x08030320     0x20  main_trigger_callback.o [1]
  .rodata               const    0x08030340     0x20  microsecond_timer.o [1]
  .rodata               const    0x08030360     0x20  mmc_card.o [1]
  .rodata               const    0x08030380     0x20  mmc_spi.o [1]
  .rodata               const    0x080303a0     0x20  mmc_spi.o [1]
  .rodata               const    0x080303c0     0x20  mmc_spi.o [1]
  .rodata               const    0x080303e0     0x20  neo6m.o [1]
  .rodata               const    0x08030400     0x20  pwm_generator_logic.o [1]
  .rodata               const    0x08030420     0x20  pwm_generator_logic.o [1]
  .rodata               const    0x08030440     0x20  serial.o [1]
  .rodata               const    0x08030460     0x20  serial_usb.o [1]
  .rodata               const    0x08030480     0x20  settings.o [1]
  .rodata               const    0x080304a0     0x20  settings.o [1]
  .rodata               const    0x080304c0     0x20  settings.o [1]
  .rodata               const    0x080304e0     0x20  settings.o [1]
  .rodata               const    0x08030500     0x20  settings.o [1]
  .rodata               const    0x08030520     0x20  settings.o [1]
  .rodata               const    0x08030540     0x20  settings.o [1]
  .rodata               const    0x08030560     0x20  settings.o [1]
  .rodata               const    0x08030580     0x20  settings.o [1]
  .rodata               const    0x080305a0     0x20  settings.o [1]
  .rodata               const    0x080305c0     0x20  settings.o [1]
  .rodata               const    0x080305e0     0x20  settings.o [1]
  .rodata               const    0x08030600     0x20  signal_executor.o [1]
  .rodata               const    0x08030620     0x20  trigger_central.o [1]
  .rodata               const    0x08030640     0x20  trigger_central.o [1]
  .rodata               const    0x08030660     0x20  trigger_central.o [1]
  .rodata               const    0x08030680     0x20  trigger_central.o [1]
  .rodata               const    0x080306a0     0x20  trigger_structure.o [1]
  .rodata               const    0x080306c0     0x20  tunerstudio.o [1]
  .rodata               const    0x080306e0     0x20  tunerstudio.o [1]
  .rodata               const    0x08030700     0x20  tunerstudio.o [1]
  .rodata               const    0x08030720     0x20  tunerstudio.o [1]
  .rodata               const    0x08030740     0x20  tunerstudio.o [1]
  .rodata               const    0x08030760     0x20  tunerstudio.o [1]
  .rodata               const    0x08030780     0x20  tunerstudio.o [1]
  .rodata               const    0x080307a0     0x20  usbcfg.o [1]
  .rodata               const    0x080307c0     0x20  wave_analyzer.o [1]
  .text                 ro code  0x080307e0     0x20  cmain_call_ctors.o [6]
  .rodata               const    0x08030800     0x1c  HIP9011.o [1]
  .rodata               const    0x0803081c     0x1c  SingleTimerExecutor.o [1]
  .rodata               const    0x08030838     0x1c  accel_enrichment.o [1]
  .rodata               const    0x08030854     0x1c  accel_enrichment.o [1]
  .rodata               const    0x08030870     0x1c  accel_enrichment.o [1]
  .rodata               const    0x0803088c     0x1c  adc.o [1]
  .rodata               const    0x080308a8     0x1c  adc_inputs.o [1]
  .rodata               const    0x080308c4     0x1c  alternatorController.o [1]
  .rodata               const    0x080308e0     0x1c  alternatorController.o [1]
  .rodata               const    0x080308fc     0x1c  auto_generated_enums.o [1]
  .rodata               const    0x08030918     0x1c  auto_generated_enums.o [1]
  .rodata               const    0x08030934     0x1c  auto_generated_enums.o [1]
  .rodata               const    0x08030950     0x1c  chdebug.o [1]
  .rodata               const    0x0803096c     0x1c  cli_registry.o [1]
  .rodata               const    0x08030988     0x1c  cli_registry.o [1]
  .rodata               const    0x080309a4     0x1c  datalogging.o [1]
  .rodata               const    0x080309c0     0x1c  digital_input_hw.o [1]
  .rodata               const    0x080309dc     0x1c  efiGpio.o [1]
  .rodata               const    0x080309f8     0x1c  efiGpio.o [1]
  .rodata               const    0x08030a14     0x1c  eficonsole.o [1]
  .rodata               const    0x08030a30     0x1c  eficonsole.o [1]
  .rodata               const    0x08030a4c     0x1c  electronic_throttle.o [1]
  .rodata               const    0x08030a68     0x1c  electronic_throttle.o [1]
  .rodata               const    0x08030a84     0x1c  engine_configuration.o [1]
  .rodata               const    0x08030aa0     0x1c  engine_configuration.o [1]
  .rodata               const    0x08030abc     0x1c  engine_controller.o [1]
  .rodata               const    0x08030ad8     0x1c  engine_controller.o [1]
  .rodata               const    0x08030af4     0x1c  engine_math.o [1]
  .rodata               const    0x08030b10     0x1c  engine_math.o [1]
  .rodata               const    0x08030b2c     0x1c  flash_main.o [1]
  .rodata               const    0x08030b48     0x1c  fsio_impl.o [1]
  .rodata               const    0x08030b64     0x1c  fsio_impl.o [1]
  .rodata               const    0x08030b80     0x1c  fsio_impl.o [1]
  .rodata               const    0x08030b9c     0x1c  fsio_impl.o [1]
  .rodata               const    0x08030bb8     0x1c  fsio_impl.o [1]
  .rodata               const    0x08030bd4     0x1c  fsio_impl.o [1]
  .rodata               const    0x08030bf0     0x1c  hardware.o [1]
  .rodata               const    0x08030c0c     0x1c  idle_controller.o [1]
  .rodata               const    0x08030c28     0x1c  idle_thread.o [1]
  .rodata               const    0x08030c44     0x1c  io_pins.o [1]
  .rodata               const    0x08030c60     0x1c  lcd_HD44780.o [1]
  .rodata               const    0x08030c7c     0x1c  main_trigger_callback.o [1]
  .rodata               const    0x08030c98     0x1c  main_trigger_callback.o [1]
  .rodata               const    0x08030cb4     0x1c  map.o [1]
  .rodata               const    0x08030cd0     0x1c  max31855.o [1]
  .rodata               const    0x08030cec     0x1c  microsecond_timer.o [1]
  .rodata               const    0x08030d08     0x1c  mmc_card.o [1]
  .rodata               const    0x08030d24     0x1c  mmc_card.o [1]
  .rodata               const    0x08030d40     0x1c  mmc_card.o [1]
  .rodata               const    0x08030d5c     0x1c  mmc_card.o [1]
  .rodata               const    0x08030d78     0x1c  mmc_spi.o [1]
  .rodata               const    0x08030d94     0x1c  mmc_spi.o [1]
  .rodata               const    0x08030db0     0x1c  mmc_spi.o [1]
  .rodata               const    0x08030dcc     0x1c  mmc_spi.o [1]
  .rodata               const    0x08030de8     0x1c  obd2.o [1]
  .rodata               const    0x08030e04     0x1c  obd2.o [1]
  .rodata               const    0x08030e20     0x1c  pin_repository.o [1]
  .rodata               const    0x08030e3c     0x1c  pin_repository.o [1]
  .rodata               const    0x08030e58     0x1c  pwm_generator_logic.o [1]
  .rodata               const    0x08030e74     0x1c  rtc_helper.o [1]
  .rodata               const    0x08030e90     0x1c  rusefi.o [1]
  .rodata               const    0x08030eac     0x1c  settings.o [1]
  .rodata               const    0x08030ec8     0x1c  settings.o [1]
  .rodata               const    0x08030ee4     0x1c  settings.o [1]
  .rodata               const    0x08030f00     0x1c  settings.o [1]
  .rodata               const    0x08030f1c     0x1c  settings.o [1]
  .rodata               const    0x08030f38     0x1c  settings.o [1]
  .rodata               const    0x08030f54     0x1c  settings.o [1]
  .rodata               const    0x08030f70     0x1c  settings.o [1]
  .rodata               const    0x08030f8c     0x1c  settings.o [1]
  .rodata               const    0x08030fa8     0x1c  settings.o [1]
  .rodata               const    0x08030fc4     0x1c  settings.o [1]
  .rodata               const    0x08030fe0     0x1c  signal_executor.o [1]
  .rodata               const    0x08030ffc     0x1c  signal_executor.o [1]
  .rodata               const    0x08031018     0x1c  status_loop.o [1]
  .rodata               const    0x08031034     0x1c  status_loop.o [1]
  .rodata               const    0x08031050     0x1c  status_loop.o [1]
  .rodata               const    0x0803106c     0x1c  thermistors.o [1]
  .rodata               const    0x08031088     0x1c  thermistors.o [1]
  .rodata               const    0x080310a4     0x1c  thermistors.o [1]
  .rodata               const    0x080310c0     0x1c  thermistors.o [1]
  .rodata               const    0x080310dc     0x1c  thermistors.o [1]
  .rodata               const    0x080310f8     0x1c  trigger_central.o [1]
  .rodata               const    0x08031114     0x1c  trigger_central.o [1]
  .rodata               const    0x08031130     0x1c  trigger_central.o [1]
  .rodata               const    0x0803114c     0x1c  trigger_central.o [1]
  .rodata               const    0x08031168     0x1c  trigger_central.o [1]
  .rodata               const    0x08031184     0x1c  trigger_central.o [1]
  .rodata               const    0x080311a0     0x1c  trigger_central.o [1]
  .rodata               const    0x080311bc     0x1c  trigger_decoder.o [1]
  .rodata               const    0x080311d8     0x1c  trigger_emulator_algo.o [1]
  .rodata               const    0x080311f4     0x1c  trigger_input.o [1]
  .rodata               const    0x08031210     0x1c  trigger_input.o [1]
  .rodata               const    0x0803122c     0x1c  trigger_input.o [1]
  .rodata               const    0x08031248     0x1c  trigger_structure.o [1]
  .rodata               const    0x08031264     0x1c  trigger_structure.o [1]
  .rodata               const    0x08031280     0x1c  trigger_structure.o [1]
  .rodata               const    0x0803129c     0x1c  tunerstudio.o [1]
  .rodata               const    0x080312b8     0x1c  tunerstudio.o [1]
  .rodata               const    0x080312d4     0x1c  tunerstudio.o [1]
  .rodata               const    0x080312f0     0x1c  tunerstudio.o [1]
  .rodata               const    0x0803130c     0x1c  tunerstudio.o [1]
  .rodata               const    0x08031328     0x1c  tunerstudio_io.o [1]
  .rodata               const    0x08031344     0x1c  usb.o [1]
  .rodata               const    0x08031360     0x1c  usb.o [1]
  .rodata               const    0x0803137c     0x18  HIP9011.o [1]
  .rodata               const    0x08031394     0x18  HIP9011.o [1]
  .rodata               const    0x080313ac     0x18  HIP9011.o [1]
  .rodata               const    0x080313c4     0x18  accel_enrichment.o [1]
  .rodata               const    0x080313dc     0x18  accel_enrichment.o [1]
  .rodata               const    0x080313f4     0x18  accel_enrichment.o [1]
  .rodata               const    0x0803140c     0x18  accel_enrichment.o [1]
  .rodata               const    0x08031424     0x18  accel_enrichment.o [1]
  .rodata               const    0x0803143c     0x18  accel_enrichment.o [1]
  .rodata               const    0x08031454     0x18  adc.o [1]
  .rodata               const    0x0803146c     0x18  adc_inputs.o [1]
  .rodata               const    0x08031484     0x18  alternatorController.o [1]
  .rodata               const    0x0803149c     0x18  alternatorController.o [1]
  .rodata               const    0x080314b4     0x18  auto_generated_enums.o [1]
  .rodata               const    0x080314cc     0x18  auto_generated_enums.o [1]
  .rodata               const    0x080314e4     0x18  auto_generated_enums.o [1]
  .rodata               const    0x080314fc     0x18  auto_generated_enums.o [1]
  .rodata               const    0x08031514     0x18  auto_generated_enums.o [1]
  .rodata               const    0x0803152c     0x18  auto_generated_enums.o [1]
  .rodata               const    0x08031544     0x18  auto_generated_enums.o [1]
  .rodata               const    0x0803155c     0x18  auto_generated_enums.o [1]
  .rodata               const    0x08031574     0x18  board_test.o [1]
  .rodata               const    0x0803158c     0x18  chevents.o [1]
  .rodata               const    0x080315a4     0x18  chevents.o [1]
  .rodata               const    0x080315bc     0x18  chqueues.o [1]
  .rodata               const    0x080315d4     0x18  chregistry.o [1]
  .rodata               const    0x080315ec     0x18  chsem.o [1]
  .rodata               const    0x08031604     0x18  chsem.o [1]
  .rodata               const    0x0803161c     0x18  cli_registry.o [1]
  .rodata               const    0x08031634     0x18  cli_registry.o [1]
  .rodata               const    0x0803164c     0x18  digital_input_hw.o [1]
  .rodata               const    0x08031664     0x18  eficonsole.o [1]
  .rodata               const    0x0803167c     0x18  engine.o [1]
  .rodata               const    0x08031694     0x18  engine_configuration.o [1]
  .rodata               const    0x080316ac     0x18  engine_controller.o [1]
  .rodata               const    0x080316c4     0x18  engine_math.o [1]
  .rodata               const    0x080316dc     0x18  engine_math.o [1]
  .rodata               const    0x080316f4     0x18  engine_math.o [1]
  .rodata               const    0x0803170c     0x18  event_queue.o [1]
  .rodata               const    0x08031724     0x18  flash_main.o [1]
  .rodata               const    0x0803173c     0x18  flash_main.o [1]
  .rodata               const    0x08031754     0x18  fsio_core.o [1]
  .rodata               const    0x0803176c     0x18  fsio_impl.o [1]
  .rodata               const    0x08031784     0x18  fsio_impl.o [1]
  .rodata               const    0x0803179c     0x18  fsio_impl.o [1]
  .rodata               const    0x080317b4     0x18  gpt.o [1]
  .rodata               const    0x080317cc     0x18  gpt.o [1]
  .rodata               const    0x080317e4     0x18  idle_thread.o [1]
  .rodata               const    0x080317fc     0x18  interpolation.o [1]
  .rodata               const    0x08031814     0x18  interpolation.o [1]
  .rodata               const    0x0803182c     0x18  io_pins.o [1]
  .rodata               const    0x08031844     0x18  io_pins.o [1]
  .rodata               const    0x0803185c     0x18  joystick.o [1]
  .rodata               const    0x08031874     0x18  lcd_HD44780.o [1]
  .rodata               const    0x0803188c     0x18  main_trigger_callback.o [1]
  .rodata               const    0x080318a4     0x18  main_trigger_callback.o [1]
  .rodata               const    0x080318bc     0x18  main_trigger_callback.o [1]
  .rodata               const    0x080318d4     0x18  main_trigger_callback.o [1]
  .rodata               const    0x080318ec     0x18  main_trigger_callback.o [1]
  .rodata               const    0x08031904     0x18  map.o [1]
  .rodata               const    0x0803191c     0x18  map.o [1]
  .rodata               const    0x08031934     0x18  map.o [1]
  .rodata               const    0x0803194c     0x18  max31855.o [1]
  .rodata               const    0x08031964     0x18  mmc_spi.o [1]
  .rodata               const    0x0803197c     0x18  mmc_spi.o [1]
  .rodata               const    0x08031994     0x18  neo6m.o [1]
  .rodata               const    0x080319ac     0x18  neo6m.o [1]
  .rodata               const    0x080319c4     0x18  obd2.o [1]
  .rodata               const    0x080319dc     0x18  obd2.o [1]
  .rodata               const    0x080319f4     0x18  pin_repository.o [1]
  .rodata               const    0x08031a0c     0x18  poten.o [1]
  .rodata               const    0x08031a24     0x18  pwm_generator_logic.o [1]
  .rodata               const    0x08031a3c     0x18  pwm_generator_logic.o [1]
  .rodata               const    0x08031a54     0x18  sensor_chart.o [1]
  .rodata               const    0x08031a6c     0x18  settings.o [1]
  .rodata               const    0x08031a84     0x18  settings.o [1]
  .rodata               const    0x08031a9c     0x18  settings.o [1]
  .rodata               const    0x08031ab4     0x18  settings.o [1]
  .rodata               const    0x08031acc     0x18  settings.o [1]
  .rodata               const    0x08031ae4     0x18  settings.o [1]
  .rodata               const    0x08031afc     0x18  settings.o [1]
  .rodata               const    0x08031b14     0x18  settings.o [1]
  .rodata               const    0x08031b2c     0x18  settings.o [1]
  .rodata               const    0x08031b44     0x18  settings.o [1]
  .rodata               const    0x08031b5c     0x18  settings.o [1]
  .rodata               const    0x08031b74     0x18  settings.o [1]
  .rodata               const    0x08031b8c     0x18  settings.o [1]
  .rodata               const    0x08031ba4     0x18  settings.o [1]
  .rodata               const    0x08031bbc     0x18  settings.o [1]
  .rodata               const    0x08031bd4     0x18  settings.o [1]
  .rodata               const    0x08031bec     0x18  settings.o [1]
  .rodata               const    0x08031c04     0x18  settings.o [1]
  .rodata               const    0x08031c1c     0x18  settings.o [1]
  .rodata               const    0x08031c34     0x18  settings.o [1]
  .rodata               const    0x08031c4c     0x18  settings.o [1]
  .rodata               const    0x08031c64     0x18  settings.o [1]
  .rodata               const    0x08031c7c     0x18  settings.o [1]
  .rodata               const    0x08031c94     0x18  settings.o [1]
  .rodata               const    0x08031cac     0x18  settings.o [1]
  .rodata               const    0x08031cc4     0x18  signal_executor.o [1]
  .rodata               const    0x08031cdc     0x18  status_loop.o [1]
  .rodata               const    0x08031cf4     0x18  status_loop.o [1]
  .rodata               const    0x08031d0c     0x18  status_loop.o [1]
  .rodata               const    0x08031d24     0x18  status_loop.o [1]
  .rodata               const    0x08031d3c     0x18  status_loop.o [1]
  .rodata               const    0x08031d54     0x18  status_loop.o [1]
  .rodata               const    0x08031d6c     0x18  stm32_dma.o [1]
  .rodata               const    0x08031d84     0x18  stm32_dma.o [1]
  .rodata               const    0x08031d9c     0x18  stm32_dma.o [1]
  .rodata               const    0x08031db4     0x18  thermistors.o [1]
  .rodata               const    0x08031dcc     0x18  thermistors.o [1]
  .rodata               const    0x08031de4     0x18  trigger_central.o [1]
  .rodata               const    0x08031dfc     0x18  trigger_central.o [1]
  .rodata               const    0x08031e14     0x18  trigger_central.o [1]
  .rodata               const    0x08031e2c     0x18  trigger_decoder.o [1]
  .rodata               const    0x08031e44     0x18  trigger_decoder.o [1]
  .rodata               const    0x08031e5c     0x18  trigger_decoder.o [1]
  .rodata               const    0x08031e74     0x18  trigger_structure.o [1]
  .rodata               const    0x08031e8c     0x18  trigger_structure.o [1]
  .rodata               const    0x08031ea4     0x18  trigger_structure.o [1]
  .rodata               const    0x08031ebc     0x18  tunerstudio.o [1]
  .rodata               const    0x08031ed4     0x18  tunerstudio.o [1]
  .rodata               const    0x08031eec     0x18  tunerstudio.o [1]
  .rodata               const    0x08031f04     0x18  tunerstudio.o [1]
  .rodata               const    0x08031f1c     0x18  tunerstudio.o [1]
  .rodata               const    0x08031f34     0x18  tunerstudio.o [1]
  .rodata               const    0x08031f4c     0x18  tunerstudio.o [1]
  .rodata               const    0x08031f64     0x18  tunerstudio_io.o [1]
  .rodata               const    0x08031f7c     0x18  tunerstudio_io.o [1]
  .rodata               const    0x08031f94     0x18  usb.o [1]
  .rodata               const    0x08031fac     0x18  usb.o [1]
  .rodata               const    0x08031fc4     0x18  usb.o [1]
  .rodata               const    0x08031fdc     0x18  usb_lld.o [1]
  .rodata               const    0x08031ff4     0x18  wave_analyzer.o [1]
  .rodata               const    0x0803200c     0x18  wave_analyzer.o [1]
  .rodata               const    0x08032024     0x18  wave_chart.o [1]
  .rodata               const    0x0803203c     0x18  wave_chart.o [1]
  .text                 ro code  0x08032054     0x18  digital_input_hw.o [1]
  .text                 ro code  0x0803206c     0x18  engine_controller.o [1]
  .text                 ro code  0x08032084      0xe  engine_controller.o [1]
  .text                 ro code  0x08032092      0x2  engine_controller.o [1]
  .rodata               const    0x08032094     0x14  HIP9011.o [1]
  .rodata               const    0x080320a8     0x14  SingleTimerExecutor.o [1]
  .rodata               const    0x080320bc     0x14  accel_enrichment.o [1]
  .rodata               const    0x080320d0     0x14  accel_enrichment.o [1]
  .rodata               const    0x080320e4     0x14  accel_enrichment.o [1]
  .rodata               const    0x080320f8     0x14  adc_inputs.o [1]
  .rodata               const    0x0803210c     0x14  adc_lld.o [1]
  .rodata               const    0x08032120     0x14  adc_lld.o [1]
  .rodata               const    0x08032134     0x14  advance_map.o [1]
  .rodata               const    0x08032148     0x14  alternatorController.o [1]
  .rodata               const    0x0803215c     0x14  alternatorController.o [1]
  .rodata               const    0x08032170     0x14  alternatorController.o [1]
  .rodata               const    0x08032184     0x14  auto_generated_enums.o [1]
  .rodata               const    0x08032198     0x14  auto_generated_enums.o [1]
  .rodata               const    0x080321ac     0x14  auto_generated_enums.o [1]
  .rodata               const    0x080321c0     0x14  auto_generated_enums.o [1]
  .rodata               const    0x080321d4     0x14  auto_generated_enums.o [1]
  .rodata               const    0x080321e8     0x14  auto_generated_enums.o [1]
  .rodata               const    0x080321fc     0x14  auto_generated_enums.o [1]
  .rodata               const    0x08032210     0x14  auto_generated_enums.o [1]
  .rodata               const    0x08032224     0x14  auto_generated_enums.o [1]
  .rodata               const    0x08032238     0x14  auto_generated_enums.o [1]
  .rodata               const    0x0803224c     0x14  auto_generated_enums.o [1]
  .rodata               const    0x08032260     0x14  auto_generated_enums.o [1]
  .rodata               const    0x08032274     0x14  board_test.o [1]
  .rodata               const    0x08032288     0x14  board_test.o [1]
  .rodata               const    0x0803229c     0x14  can.o [1]
  .rodata               const    0x080322b0     0x14  can.o [1]
  .rodata               const    0x080322c4     0x14  can_hw.o [1]
  .rodata               const    0x080322d8     0x14  can_hw.o [1]
  .rodata               const    0x080322ec     0x14  can_lld.o [1]
  .rodata               const    0x08032300     0x14  chevents.o [1]
  .rodata               const    0x08032314     0x14  chheap.o [1]
  .rodata               const    0x08032328     0x14  chmtx.o [1]
  .rodata               const    0x0803233c     0x14  chmtx.o [1]
  .rodata               const    0x08032350     0x14  chmtx.o [1]
  .rodata               const    0x08032364     0x14  chmtx.o [1]
  .rodata               const    0x08032378     0x14  chqueues.o [1]
  .rodata               const    0x0803238c     0x14  chschd.o [1]
  .rodata               const    0x080323a0     0x14  chsem.o [1]
  .rodata               const    0x080323b4     0x14  chsem.o [1]
  .rodata               const    0x080323c8     0x14  chthreads.o [1]
  .rodata               const    0x080323dc     0x14  chthreads.o [1]
  .rodata               const    0x080323f0     0x14  chvt.o [1]
  .rodata               const    0x08032404     0x14  cli_registry.o [1]
  .rodata               const    0x08032418     0x14  cli_registry.o [1]
  .rodata               const    0x0803242c     0x14  datalogging.o [1]
  .rodata               const    0x08032440     0x14  digital_input_hw.o [1]
  .rodata               const    0x08032454     0x14  eficonsole.o [1]
  .rodata               const    0x08032468     0x14  eficonsole.o [1]
  .rodata               const    0x0803247c     0x14  eficonsole.o [1]
  .rodata               const    0x08032490     0x14  eficonsole.o [1]
  .rodata               const    0x080324a4     0x14  eficonsole.o [1]
  .rodata               const    0x080324b8     0x14  eficonsole.o [1]
  .rodata               const    0x080324cc     0x14  ego.o [1]
  .rodata               const    0x080324e0     0x14  electronic_throttle.o [1]
  .rodata               const    0x080324f4     0x14  electronic_throttle.o [1]
  .rodata               const    0x08032508     0x14  engine.o [1]
  .rodata               const    0x0803251c     0x14  engine_controller.o [1]
  .rodata               const    0x08032530     0x14  engine_controller.o [1]
  .rodata               const    0x08032544     0x14  engine_controller.o [1]
  .rodata               const    0x08032558     0x14  engine_controller.o [1]
  .rodata               const    0x0803256c     0x14  engine_controller.o [1]
  .rodata               const    0x08032580     0x14  engine_math.o [1]
  .rodata               const    0x08032594     0x14  error_handling.o [1]
  .rodata               const    0x080325a8     0x14  event_queue.o [1]
  .rodata               const    0x080325bc     0x14  flash_main.o [1]
  .rodata               const    0x080325d0     0x14  fsio_core.o [1]
  .rodata               const    0x080325e4     0x14  fsio_core.o [1]
  .rodata               const    0x080325f8     0x14  fsio_core.o [1]
  .rodata               const    0x0803260c     0x14  fsio_core.o [1]
  .rodata               const    0x08032620     0x14  fsio_impl.o [1]
  .rodata               const    0x08032634     0x14  fsio_impl.o [1]
  .rodata               const    0x08032648     0x14  fsio_impl.o [1]
  .rodata               const    0x0803265c     0x14  fsio_impl.o [1]
  .rodata               const    0x08032670     0x14  fsio_impl.o [1]
  .rodata               const    0x08032684     0x14  fsio_impl.o [1]
  .rodata               const    0x08032698     0x14  fuel_math.o [1]
  .rodata               const    0x080326ac     0x14  gpt.o [1]
  .rodata               const    0x080326c0     0x14  gpt.o [1]
  .rodata               const    0x080326d4     0x14  gpt_lld.o [1]
  .rodata               const    0x080326e8     0x14  hardware.o [1]
  .rodata               const    0x080326fc     0x14  hardware.o [1]
  .rodata               const    0x08032710     0x14  icu.o [1]
  .rodata               const    0x08032724     0x14  icu_lld.o [1]
  .rodata               const    0x08032738     0x14  idle_controller.o [1]
  .rodata               const    0x0803274c     0x14  idle_controller.o [1]
  .rodata               const    0x08032760     0x14  idle_thread.o [1]
  .rodata               const    0x08032774     0x14  idle_thread.o [1]
  .rodata               const    0x08032788     0x14  idle_thread.o [1]
  .rodata               const    0x0803279c     0x14  idle_thread.o [1]
  .rodata               const    0x080327b0     0x14  idle_thread.o [1]
  .rodata               const    0x080327c4     0x14  idle_thread.o [1]
  .rodata               const    0x080327d8     0x14  idle_thread.o [1]
  .rodata               const    0x080327ec     0x14  injector_central.o [1]
  .rodata               const    0x08032800     0x14  injector_central.o [1]
  .rodata               const    0x08032814     0x14  injector_central.o [1]
  .rodata               const    0x08032828     0x14  injector_central.o [1]
  .rodata               const    0x0803283c     0x14  injector_central.o [1]
  .rodata               const    0x08032850     0x14  injector_central.o [1]
  .rodata               const    0x08032864     0x14  injector_central.o [1]
  .rodata               const    0x08032878     0x14  interpolation.o [1]
  .rodata               const    0x0803288c     0x14  interpolation.o [1]
  .rodata               const    0x080328a0     0x14  interpolation.o [1]
  .rodata               const    0x080328b4     0x14  interpolation.o [1]
  .rodata               const    0x080328c8     0x14  lcd_HD44780.o [1]
  .rodata               const    0x080328dc     0x14  listener_array.o [1]
  .rodata               const    0x080328f0     0x14  main_trigger_callback.o [1]
  .rodata               const    0x08032904     0x14  main_trigger_callback.o [1]
  .rodata               const    0x08032918     0x14  main_trigger_callback.o [1]
  .rodata               const    0x0803292c     0x14  main_trigger_callback.o [1]
  .rodata               const    0x08032940     0x14  map.o [1]
  .rodata               const    0x08032954     0x14  map_averaging.o [1]
  .rodata               const    0x08032968     0x14  map_averaging.o [1]
  .rodata               const    0x0803297c     0x14  max31855.o [1]
  .rodata               const    0x08032990     0x14  max31855.o [1]
  .rodata               const    0x080329a4     0x14  microsecond_timer.o [1]
  .rodata               const    0x080329b8     0x14  microsecond_timer.o [1]
  .rodata               const    0x080329cc     0x14  mmc_card.o [1]
  .rodata               const    0x080329e0     0x14  mmc_card.o [1]
  .rodata               const    0x080329f4     0x14  mmc_card.o [1]
  .rodata               const    0x08032a08     0x14  mmc_spi.o [1]
  .rodata               const    0x08032a1c     0x14  mmc_spi.o [1]
  .rodata               const    0x08032a30     0x14  mmc_spi.o [1]
  .rodata               const    0x08032a44     0x14  mmcsd.o [1]
  .rodata               const    0x08032a58     0x14  mpu_util.o [1]
  .rodata               const    0x08032a6c     0x14  mpu_util.o [1]
  .rodata               const    0x08032a80     0x14  neo6m.o [1]
  .rodata               const    0x08032a94     0x14  obd2.o [1]
  .rodata               const    0x08032aa8     0x14  obd2.o [1]
  .rodata               const    0x08032abc     0x14  obd2.o [1]
  .rodata               const    0x08032ad0     0x14  pin_repository.o [1]
  .rodata               const    0x08032ae4     0x14  pwm_generator.o [1]
  .rodata               const    0x08032af8     0x14  pwm_generator.o [1]
  .rodata               const    0x08032b0c     0x14  pwm_generator_logic.o [1]
  .rodata               const    0x08032b20     0x14  pwm_generator_logic.o [1]
  .rodata               const    0x08032b34     0x14  pwm_lld.o [1]
  .rodata               const    0x08032b48     0x14  rpm_calculator.o [1]
  .rodata               const    0x08032b5c     0x14  rusefi.o [1]
  .rodata               const    0x08032b70     0x14  serial.o [1]
  .rodata               const    0x08032b84     0x14  settings.o [1]
  .rodata               const    0x08032b98     0x14  settings.o [1]
  .rodata               const    0x08032bac     0x14  settings.o [1]
  .rodata               const    0x08032bc0     0x14  settings.o [1]
  .rodata               const    0x08032bd4     0x14  settings.o [1]
  .rodata               const    0x08032be8     0x14  settings.o [1]
  .rodata               const    0x08032bfc     0x14  settings.o [1]
  .rodata               const    0x08032c10     0x14  settings.o [1]
  .rodata               const    0x08032c24     0x14  settings.o [1]
  .rodata               const    0x08032c38     0x14  settings.o [1]
  .rodata               const    0x08032c4c     0x14  settings.o [1]
  .rodata               const    0x08032c60     0x14  settings.o [1]
  .rodata               const    0x08032c74     0x14  settings.o [1]
  .rodata               const    0x08032c88     0x14  settings.o [1]
  .rodata               const    0x08032c9c     0x14  settings.o [1]
  .rodata               const    0x08032cb0     0x14  settings.o [1]
  .rodata               const    0x08032cc4     0x14  settings.o [1]
  .rodata               const    0x08032cd8     0x14  settings.o [1]
  .rodata               const    0x08032cec     0x14  settings.o [1]
  .rodata               const    0x08032d00     0x14  settings.o [1]
  .rodata               const    0x08032d14     0x14  settings.o [1]
  .rodata               const    0x08032d28     0x14  settings.o [1]
  .rodata               const    0x08032d3c     0x14  settings.o [1]
  .rodata               const    0x08032d50     0x14  settings.o [1]
  .rodata               const    0x08032d64     0x14  settings.o [1]
  .rodata               const    0x08032d78     0x14  settings.o [1]
  .rodata               const    0x08032d8c     0x14  settings.o [1]
  .rodata               const    0x08032da0     0x14  settings.o [1]
  .rodata               const    0x08032db4     0x14  settings.o [1]
  .rodata               const    0x08032dc8     0x14  settings.o [1]
  .rodata               const    0x08032ddc     0x14  settings.o [1]
  .rodata               const    0x08032df0     0x14  settings.o [1]
  .rodata               const    0x08032e04     0x14  settings.o [1]
  .rodata               const    0x08032e18     0x14  settings.o [1]
  .rodata               const    0x08032e2c     0x14  settings.o [1]
  .rodata               const    0x08032e40     0x14  settings.o [1]
  .rodata               const    0x08032e54     0x14  settings.o [1]
  .rodata               const    0x08032e68     0x14  settings.o [1]
  .rodata               const    0x08032e7c     0x14  settings.o [1]
  .rodata               const    0x08032e90     0x14  settings.o [1]
  .rodata               const    0x08032ea4     0x14  settings.o [1]
  .rodata               const    0x08032eb8     0x14  settings.o [1]
  .rodata               const    0x08032ecc     0x14  settings.o [1]
  .rodata               const    0x08032ee0     0x14  settings.o [1]
  .rodata               const    0x08032ef4     0x14  settings.o [1]
  .rodata               const    0x08032f08     0x14  settings.o [1]
  .rodata               const    0x08032f1c     0x14  signal_executor.o [1]
  .rodata               const    0x08032f30     0x14  speed_density.o [1]
  .rodata               const    0x08032f44     0x14  speed_density.o [1]
  .rodata               const    0x08032f58     0x14  spi.o [1]
  .rodata               const    0x08032f6c     0x14  spi.o [1]
  .rodata               const    0x08032f80     0x14  spi.o [1]
  .rodata               const    0x08032f94     0x14  spi.o [1]
  .rodata               const    0x08032fa8     0x14  spi.o [1]
  .rodata               const    0x08032fbc     0x14  spi.o [1]
  .rodata               const    0x08032fd0     0x14  spi_lld.o [1]
  .rodata               const    0x08032fe4     0x14  spi_lld.o [1]
  .rodata               const    0x08032ff8     0x14  spi_lld.o [1]
  .rodata               const    0x0803300c     0x14  spi_lld.o [1]
  .rodata               const    0x08033020     0x14  spi_lld.o [1]
  .rodata               const    0x08033034     0x14  spi_lld.o [1]
  .rodata               const    0x08033048     0x14  status_loop.o [1]
  .rodata               const    0x0803305c     0x14  status_loop.o [1]
  .rodata               const    0x08033070     0x14  status_loop.o [1]
  .rodata               const    0x08033084     0x14  status_loop.o [1]
  .rodata               const    0x08033098     0x14  status_loop.o [1]
  .rodata               const    0x080330ac     0x14  status_loop.o [1]
  .rodata               const    0x080330c0     0x14  status_loop.o [1]
  .rodata               const    0x080330d4     0x14  status_loop.o [1]
  .rodata               const    0x080330e8     0x14  thermistors.o [1]
  .rodata               const    0x080330fc     0x14  thermistors.o [1]
  .rodata               const    0x08033110     0x14  thermistors.o [1]
  .rodata               const    0x08033124     0x14  trigger_bmw.o [1]
  .rodata               const    0x08033138     0x14  trigger_central.o [1]
  .rodata               const    0x0803314c     0x14  trigger_central.o [1]
  .rodata               const    0x08033160     0x14  trigger_central.o [1]
  .rodata               const    0x08033174     0x14  trigger_central.o [1]
  .rodata               const    0x08033188     0x14  trigger_central.o [1]
  .rodata               const    0x0803319c     0x14  trigger_decoder.o [1]
  .rodata               const    0x080331b0     0x14  trigger_emulator_algo.o [1]
  .rodata               const    0x080331c4     0x14  trigger_structure.o [1]
  .rodata               const    0x080331d8     0x14  trigger_structure.o [1]
  .rodata               const    0x080331ec     0x14  tunerstudio.o [1]
  .rodata               const    0x08033200     0x14  tunerstudio.o [1]
  .rodata               const    0x08033214     0x14  tunerstudio.o [1]
  .rodata               const    0x08033228     0x14  tunerstudio.o [1]
  .rodata               const    0x0803323c     0x14  tunerstudio.o [1]
  .rodata               const    0x08033250     0x14  tunerstudio.o [1]
  .rodata               const    0x08033264     0x14  usbcfg.o [1]
  .rodata               const    0x08033278     0x14  wave_analyzer.o [1]
  .rodata               const    0x0803328c     0x14  wave_chart.o [1]
  .rodata               const    0x080332a0     0x10  HIP9011.o [1]
  .rodata               const    0x080332b0     0x10  HIP9011.o [1]
  .rodata               const    0x080332c0     0x10  HIP9011.o [1]
  .rodata               const    0x080332d0     0x10  adc.o [1]
  .rodata               const    0x080332e0     0x10  adc.o [1]
  .rodata               const    0x080332f0     0x10  adc_inputs.o [1]
  .rodata               const    0x08033300     0x10  adc_inputs.o [1]
  .rodata               const    0x08033310     0x10  adc_inputs.o [1]
  .rodata               const    0x08033320     0x10  advance_map.o [1]
  .rodata               const    0x08033330     0x10  alternatorController.o [1]
  .rodata               const    0x08033340     0x10  auto_generated_enums.o [1]
  .rodata               const    0x08033350     0x10  auto_generated_enums.o [1]
  .rodata               const    0x08033360     0x10  auto_generated_enums.o [1]
  .rodata               const    0x08033370     0x10  auto_generated_enums.o [1]
  .rodata               const    0x08033380     0x10  auto_generated_enums.o [1]
  .rodata               const    0x08033390     0x10  auto_generated_enums.o [1]
  .rodata               const    0x080333a0     0x10  auto_generated_enums.o [1]
  .rodata               const    0x080333b0     0x10  auto_generated_enums.o [1]
  .rodata               const    0x080333c0     0x10  auto_generated_enums.o [1]
  .rodata               const    0x080333d0     0x10  auto_generated_enums.o [1]
  .rodata               const    0x080333e0     0x10  auto_generated_enums.o [1]
  .rodata               const    0x080333f0     0x10  board_test.o [1]
  .rodata               const    0x08033400     0x10  board_test.o [1]
  .rodata               const    0x08033410     0x10  board_test.o [1]
  .rodata               const    0x08033420     0x10  can.o [1]
  .rodata               const    0x08033430     0x10  can.o [1]
  .rodata               const    0x08033440     0x10  can.o [1]
  .rodata               const    0x08033450     0x10  can.o [1]
  .rodata               const    0x08033460     0x10  can_hw.o [1]
  .rodata               const    0x08033470     0x10  can_hw.o [1]
  .rodata               const    0x08033480     0x10  chheap.o [1]
  .rodata               const    0x08033490     0x10  chmtx.o [1]
  .rodata               const    0x080334a0     0x10  chmtx.o [1]
  .rodata               const    0x080334b0     0x10  chschd.o [1]
  .rodata               const    0x080334c0     0x10  chsem.o [1]
  .rodata               const    0x080334d0     0x10  chthreads.o [1]
  .rodata               const    0x080334e0     0x10  chvt.o [1]
  .rodata               const    0x080334f0     0x10  chvt.o [1]
  .rodata               const    0x08033500     0x10  cli_registry.o [1]
  .rodata               const    0x08033510     0x10  cli_registry.o [1]
  .rodata               const    0x08033520     0x10  cli_registry.o [1]
  .rodata               const    0x08033530     0x10  cli_registry.o [1]
  .rodata               const    0x08033540     0x10  console_io.o [1]
  .rodata               const    0x08033550     0x10  datalogging.o [1]
  .rodata               const    0x08033560     0x10  datalogging.o [1]
  .rodata               const    0x08033570     0x10  digital_input_hw.o [1]
  .rodata               const    0x08033580     0x10  dodge_neon.o [1]
  .rodata               const    0x08033590     0x10  eficonsole.o [1]
  .rodata               const    0x080335a0     0x10  eficonsole.o [1]
  .rodata               const    0x080335b0     0x10  eficonsole.o [1]
  .rodata               const    0x080335c0     0x10  eficonsole.o [1]
  .rodata               const    0x080335d0     0x10  eficonsole.o [1]
  .rodata               const    0x080335e0     0x10  eficonsole.o [1]
  .rodata               const    0x080335f0     0x10  eficonsole.o [1]
  .rodata               const    0x08033600     0x10  engine.o [1]
  .rodata               const    0x08033610     0x10  engine_controller.o [1]
  .rodata               const    0x08033620     0x10  engine_controller.o [1]
  .rodata               const    0x08033630     0x10  engine_controller.o [1]
  .rodata               const    0x08033640     0x10  engine_math.o [1]
  .rodata               const    0x08033650     0x10  engine_math.o [1]
  .rodata               const    0x08033660     0x10  engine_math.o [1]
  .rodata               const    0x08033670     0x10  engine_math.o [1]
  .rodata               const    0x08033680     0x10  engine_math.o [1]
  .rodata               const    0x08033690     0x10  error_handling.o [1]
  .rodata               const    0x080336a0     0x10  event_queue.o [1]
  .rodata               const    0x080336b0     0x10  ext.o [1]
  .rodata               const    0x080336c0     0x10  ext.o [1]
  .rodata               const    0x080336d0     0x10  ff.o [1]
  .rodata               const    0x080336e0     0x10  flash_main.o [1]
  .rodata               const    0x080336f0     0x10  flash_main.o [1]
  .rodata               const    0x08033700     0x10  fsio_core.o [1]
  .rodata               const    0x08033710     0x10  fsio_core.o [1]
  .rodata               const    0x08033720     0x10  fsio_impl.o [1]
  .rodata               const    0x08033730     0x10  fsio_impl.o [1]
  .rodata               const    0x08033740     0x10  fsio_impl.o [1]
  .rodata               const    0x08033750     0x10  fsio_impl.o [1]
  .rodata               const    0x08033760     0x10  fsio_impl.o [1]
  .rodata               const    0x08033770     0x10  fsio_impl.o [1]
  .rodata               const    0x08033780     0x10  fsio_impl.o [1]
  .rodata               const    0x08033790     0x10  fsio_impl.o [1]
  .rodata               const    0x080337a0     0x10  fsio_impl.o [1]
  .rodata               const    0x080337b0     0x10  fsio_impl.o [1]
  .rodata               const    0x080337c0     0x10  fsio_impl.o [1]
  .rodata               const    0x080337d0     0x10  fuel_math.o [1]
  .rodata               const    0x080337e0     0x10  gpt.o [1]
  .rodata               const    0x080337f0     0x10  gpt.o [1]
  .rodata               const    0x08033800     0x10  hardware.o [1]
  .rodata               const    0x08033810     0x10  icu.o [1]
  .rodata               const    0x08033820     0x10  icu.o [1]
  .rodata               const    0x08033830     0x10  icu.o [1]
  .rodata               const    0x08033840     0x10  icu.o [1]
  .rodata               const    0x08033850     0x10  icu.o [1]
  .rodata               const    0x08033860     0x10  icu.o [1]
  .rodata               const    0x08033870     0x10  idle_thread.o [1]
  .rodata               const    0x08033880     0x10  idle_thread.o [1]
  .rodata               const    0x08033890     0x10  injector_central.o [1]
  .rodata               const    0x080338a0     0x10  injector_central.o [1]
  .rodata               const    0x080338b0     0x10  injector_central.o [1]
  .rodata               const    0x080338c0     0x10  injector_central.o [1]
  .rodata               const    0x080338d0     0x10  io_pins.o [1]
  .rodata               const    0x080338e0     0x10  joystick.o [1]
  .rodata               const    0x080338f0     0x10  joystick.o [1]
  .rodata               const    0x08033900     0x10  lcd_HD44780.o [1]
  .rodata               const    0x08033910     0x10  lcd_HD44780.o [1]
  .rodata               const    0x08033920     0x10  lcd_HD44780.o [1]
  .rodata               const    0x08033930     0x10  lcd_HD44780.o [1]
  .rodata               const    0x08033940     0x10  lcd_HD44780.o [1]
  .rodata               const    0x08033950     0x10  lcd_HD44780.o [1]
  .rodata               const    0x08033960     0x10  lcd_HD44780.o [1]
  .rodata               const    0x08033970     0x10  lcd_controller.o [1]
  .rodata               const    0x08033980     0x10  lcd_controller.o [1]
  .rodata               const    0x08033990     0x10  lcd_controller.o [1]
  .rodata               const    0x080339a0     0x10  lcd_controller.o [1]
  .rodata               const    0x080339b0     0x10  lcd_controller.o [1]
  .rodata               const    0x080339c0     0x10  lcd_controller.o [1]
  .rodata               const    0x080339d0     0x10  lcd_controller.o [1]
  .rodata               const    0x080339e0     0x10  main_trigger_callback.o [1]
  .rodata               const    0x080339f0     0x10  main_trigger_callback.o [1]
  .rodata               const    0x08033a00     0x10  main_trigger_callback.o [1]
  .rodata               const    0x08033a10     0x10  main_trigger_callback.o [1]
  .rodata               const    0x08033a20     0x10  main_trigger_callback.o [1]
  .rodata               const    0x08033a30     0x10  map.o [1]
  .rodata               const    0x08033a40     0x10  map.o [1]
  .rodata               const    0x08033a50     0x10  map_averaging.o [1]
  .rodata               const    0x08033a60     0x10  memstreams.o [1]
  .rodata               const    0x08033a70     0x10  microsecond_timer.o [1]
  .rodata               const    0x08033a80     0x10  microsecond_timer.o [1]
  .rodata               const    0x08033a90     0x10  mmc_card.o [1]
  .rodata               const    0x08033aa0     0x10  mmc_card.o [1]
  .rodata               const    0x08033ab0     0x10  mmc_card.o [1]
  .rodata               const    0x08033ac0     0x10  mmc_spi.o [1]
  .rodata               const    0x08033ad0     0x10  mmc_spi.o [1]
  .rodata               const    0x08033ae0     0x10  mmc_spi.o [1]
  .rodata               const    0x08033af0     0x10  mmc_spi.o [1]
  .rodata               const    0x08033b00     0x10  mmc_spi.o [1]
  .rodata               const    0x08033b10     0x10  mpu_util.o [1]
  .rodata               const    0x08033b20     0x10  mpu_util.o [1]
  .rodata               const    0x08033b30     0x10  mpu_util.o [1]
  .rodata               const    0x08033b40     0x10  mpu_util.o [1]
  .rodata               const    0x08033b50     0x10  obd2.o [1]
  .rodata               const    0x08033b60     0x10  obd2.o [1]
  .rodata               const    0x08033b70     0x10  obd2.o [1]
  .rodata               const    0x08033b80     0x10  pin_repository.o [1]
  .rodata               const    0x08033b90     0x10  pin_repository.o [1]
  .rodata               const    0x08033ba0     0x10  pwm.o [1]
  .rodata               const    0x08033bb0     0x10  pwm.o [1]
  .rodata               const    0x08033bc0     0x10  rpm_calculator.o [1]
  .rodata               const    0x08033bd0     0x10  rpm_calculator.o [1]
  .rodata               const    0x08033be0     0x10  rtc.o [1]
  .rodata               const    0x08033bf0     0x10  rtc.o [1]
  .rodata               const    0x08033c00     0x10  rtc_helper.o [1]
  .rodata               const    0x08033c10     0x10  sensor_chart.o [1]
  .rodata               const    0x08033c20     0x10  sensor_chart.o [1]
  .rodata               const    0x08033c30     0x10  serial.o [1]
  .rodata               const    0x08033c40     0x10  serial_usb.o [1]
  .rodata               const    0x08033c50     0x10  serial_usb.o [1]
  .rodata               const    0x08033c60     0x10  settings.o [1]
  .rodata               const    0x08033c70     0x10  settings.o [1]
  .rodata               const    0x08033c80     0x10  settings.o [1]
  .rodata               const    0x08033c90     0x10  settings.o [1]
  .rodata               const    0x08033ca0     0x10  settings.o [1]
  .rodata               const    0x08033cb0     0x10  settings.o [1]
  .rodata               const    0x08033cc0     0x10  settings.o [1]
  .rodata               const    0x08033cd0     0x10  settings.o [1]
  .rodata               const    0x08033ce0     0x10  settings.o [1]
  .rodata               const    0x08033cf0     0x10  settings.o [1]
  .rodata               const    0x08033d00     0x10  settings.o [1]
  .rodata               const    0x08033d10     0x10  settings.o [1]
  .rodata               const    0x08033d20     0x10  settings.o [1]
  .rodata               const    0x08033d30     0x10  settings.o [1]
  .rodata               const    0x08033d40     0x10  settings.o [1]
  .rodata               const    0x08033d50     0x10  settings.o [1]
  .rodata               const    0x08033d60     0x10  settings.o [1]
  .rodata               const    0x08033d70     0x10  settings.o [1]
  .rodata               const    0x08033d80     0x10  settings.o [1]
  .rodata               const    0x08033d90     0x10  settings.o [1]
  .rodata               const    0x08033da0     0x10  settings.o [1]
  .rodata               const    0x08033db0     0x10  settings.o [1]
  .rodata               const    0x08033dc0     0x10  settings.o [1]
  .rodata               const    0x08033dd0     0x10  signal_executor.o [1]
  .rodata               const    0x08033de0     0x10  signal_executor.o [1]
  .rodata               const    0x08033df0     0x10  spi.o [1]
  .rodata               const    0x08033e00     0x10  spi.o [1]
  .rodata               const    0x08033e10     0x10  spi.o [1]
  .rodata               const    0x08033e20     0x10  spi.o [1]
  .rodata               const    0x08033e30     0x10  spi.o [1]
  .rodata               const    0x08033e40     0x10  spi.o [1]
  .rodata               const    0x08033e50     0x10  spi.o [1]
  .rodata               const    0x08033e60     0x10  spi.o [1]
  .rodata               const    0x08033e70     0x10  spi.o [1]
  .rodata               const    0x08033e80     0x10  spi.o [1]
  .rodata               const    0x08033e90     0x10  spi.o [1]
  .rodata               const    0x08033ea0     0x10  spi.o [1]
  .rodata               const    0x08033eb0     0x10  spi.o [1]
  .rodata               const    0x08033ec0     0x10  status_loop.o [1]
  .rodata               const    0x08033ed0     0x10  status_loop.o [1]
  .rodata               const    0x08033ee0     0x10  status_loop.o [1]
  .rodata               const    0x08033ef0     0x10  status_loop.o [1]
  .rodata               const    0x08033f00     0x10  stepper.o [1]
  .rodata               const    0x08033f10     0x10  stepper.o [1]
  .rodata               const    0x08033f20     0x10  thermistors.o [1]
  .rodata               const    0x08033f30     0x10  thermistors.o [1]
  .rodata               const    0x08033f40     0x10  trigger_central.o [1]
  .rodata               const    0x08033f50     0x10  trigger_central.o [1]
  .rodata               const    0x08033f60     0x10  trigger_decoder.o [1]
  .rodata               const    0x08033f70     0x10  trigger_emulator.o [1]
  .rodata               const    0x08033f80     0x10  trigger_emulator.o [1]
  .rodata               const    0x08033f90     0x10  trigger_emulator.o [1]
  .rodata               const    0x08033fa0     0x10  trigger_emulator.o [1]
  .rodata               const    0x08033fb0     0x10  trigger_emulator_algo.o [1]
  .rodata               const    0x08033fc0     0x10  tunerstudio.o [1]
  .rodata               const    0x08033fd0     0x10  tunerstudio.o [1]
  .rodata               const    0x08033fe0     0x10  tunerstudio.o [1]
  .rodata               const    0x08033ff0     0x10  tunerstudio.o [1]
  .rodata               const    0x08034000     0x10  tunerstudio.o [1]
  .rodata               const    0x08034010     0x10  tunerstudio.o [1]
  .rodata               const    0x08034020     0x10  tunerstudio.o [1]
  .rodata               const    0x08034030     0x10  tunerstudio.o [1]
  .rodata               const    0x08034040     0x10  tunerstudio.o [1]
  .rodata               const    0x08034050     0x10  tunerstudio.o [1]
  .rodata               const    0x08034060     0x10  tunerstudio_io.o [1]
  .rodata               const    0x08034070     0x10  tunerstudio_io.o [1]
  .rodata               const    0x08034080     0x10  usb.o [1]
  .rodata               const    0x08034090     0x10  usb.o [1]
  .rodata               const    0x080340a0     0x10  usb_lld.o [1]
  .rodata               const    0x080340b0     0x10  usbcfg.o [1]
  .rodata               const    0x080340c0     0x10  wave_analyzer.o [1]
  .rodata               const    0x080340d0     0x10  wave_analyzer.o [1]
  .rodata               const    0x080340e0     0x10  wave_analyzer.o [1]
  .rodata               const    0x080340f0     0x10  wave_chart.o [1]
  .rodata               const    0x08034100     0x10  wave_chart.o [1]
  .rodata               const    0x08034110      0xc  HIP9011.o [1]
  .rodata               const    0x0803411c      0xc  HIP9011.o [1]
  .rodata               const    0x08034128      0xc  HIP9011.o [1]
  .rodata               const    0x08034134      0xc  SingleTimerExecutor.o [1]
  .rodata               const    0x08034140      0xc  accel_enrichment.o [1]
  .rodata               const    0x0803414c      0xc  adc_inputs.o [1]
  .rodata               const    0x08034158      0xc  adc_inputs.o [1]
  .rodata               const    0x08034164      0xc  adc_inputs.o [1]
  .rodata               const    0x08034170      0xc  adc_inputs.o [1]
  .rodata               const    0x0803417c      0xc  adc_inputs.o [1]
  .rodata               const    0x08034188      0xc  adc_inputs.o [1]
  .rodata               const    0x08034194      0xc  adc_inputs.o [1]
  .rodata               const    0x080341a0      0xc  adc_inputs.o [1]
  .rodata               const    0x080341ac      0xc  adc_inputs.o [1]
  .rodata               const    0x080341b8      0xc  advance_map.o [1]
  .rodata               const    0x080341c4      0xc  advance_map.o [1]
  .rodata               const    0x080341d0      0xc  alternatorController.o [1]
  .rodata               const    0x080341dc      0xc  auto_generated_enums.o [1]
  .rodata               const    0x080341e8      0xc  auto_generated_enums.o [1]
  .rodata               const    0x080341f4      0xc  auto_generated_enums.o [1]
  .rodata               const    0x08034200      0xc  auto_generated_enums.o [1]
  .rodata               const    0x0803420c      0xc  auto_generated_enums.o [1]
  .rodata               const    0x08034218      0xc  auto_generated_enums.o [1]
  .rodata               const    0x08034224      0xc  auto_generated_enums.o [1]
  .rodata               const    0x08034230      0xc  auto_generated_enums.o [1]
  .rodata               const    0x0803423c      0xc  auto_generated_enums.o [1]
  .rodata               const    0x08034248      0xc  auto_generated_enums.o [1]
  .rodata               const    0x08034254      0xc  auto_generated_enums.o [1]
  .rodata               const    0x08034260      0xc  auto_generated_enums.o [1]
  .rodata               const    0x0803426c      0xc  auto_generated_enums.o [1]
  .rodata               const    0x08034278      0xc  auto_generated_enums.o [1]
  .rodata               const    0x08034284      0xc  auto_generated_enums.o [1]
  .rodata               const    0x08034290      0xc  auto_generated_enums.o [1]
  .rodata               const    0x0803429c      0xc  auto_generated_enums.o [1]
  .rodata               const    0x080342a8      0xc  can_hw.o [1]
  .rodata               const    0x080342b4      0xc  can_hw.o [1]
  .rodata               const    0x080342c0      0xc  can_hw.o [1]
  .rodata               const    0x080342cc      0xc  can_hw.o [1]
  .rodata               const    0x080342d8      0xc  chprintf.o [1]
  .rodata               const    0x080342e4      0xc  console_io.o [1]
  .rodata               const    0x080342f0      0xc  datalogging.o [1]
  .rodata               const    0x080342fc      0xc  datalogging.o [1]
  .rodata               const    0x08034308      0xc  datalogging.o [1]
  .rodata               const    0x08034314      0xc  datalogging.o [1]
  .rodata               const    0x08034320      0xc  datalogging.o [1]
  .rodata               const    0x0803432c      0xc  datalogging.o [1]
  .rodata               const    0x08034338      0xc  datalogging.o [1]
  .rodata               const    0x08034344      0xc  datalogging.o [1]
  .rodata               const    0x08034350      0xc  datalogging.o [1]
  .rodata               const    0x0803435c      0xc  eficonsole.o [1]
  .rodata               const    0x08034368      0xc  eficonsole.o [1]
  .rodata               const    0x08034374      0xc  eficonsole.o [1]
  .rodata               const    0x08034380      0xc  eficonsole.o [1]
  .rodata               const    0x0803438c      0xc  eficonsole.o [1]
  .rodata               const    0x08034398      0xc  electronic_throttle.o [1]
  .rodata               const    0x080343a4      0xc  electronic_throttle.o [1]
  .rodata               const    0x080343b0      0xc  electronic_throttle.o [1]
  .rodata               const    0x080343bc      0xc  engine_controller.o [1]
  .rodata               const    0x080343c8      0xc  engine_controller.o [1]
  .rodata               const    0x080343d4      0xc  engine_controller.o [1]
  .rodata               const    0x080343e0      0xc  engine_controller.o [1]
  .rodata               const    0x080343ec      0xc  engine_controller.o [1]
  .rodata               const    0x080343f8      0xc  engine_controller.o [1]
  .rodata               const    0x08034404      0xc  engine_controller.o [1]
  .rodata               const    0x08034410      0xc  engine_controller.o [1]
  .rodata               const    0x0803441c      0xc  engine_controller.o [1]
  .rodata               const    0x08034428      0xc  engine_math.o [1]
  .rodata               const    0x08034434      0xc  engine_math.o [1]
  .rodata               const    0x08034440      0xc  error_handling.o [1]
  .rodata               const    0x0803444c      0xc  ff.o [1]
  .rodata               const    0x08034458      0xc  flash_main.o [1]
  .rodata               const    0x08034464      0xc  flash_main.o [1]
  .rodata               const    0x08034470      0xc  flash_main.o [1]
  .rodata               const    0x0803447c      0xc  flash_main.o [1]
  .rodata               const    0x08034488      0xc  fsio_core.o [1]
  .rodata               const    0x08034494      0xc  fsio_core.o [1]
  .rodata               const    0x080344a0      0xc  fsio_impl.o [1]
  .rodata               const    0x080344ac      0xc  fsio_impl.o [1]
  .rodata               const    0x080344b8      0xc  fsio_impl.o [1]
  .rodata               const    0x080344c4      0xc  fsio_impl.o [1]
  .rodata               const    0x080344d0      0xc  fuel_math.o [1]
  .rodata               const    0x080344dc      0xc  hardware.o [1]
  .rodata               const    0x080344e8      0xc  hardware.o [1]
  .rodata               const    0x080344f4      0xc  hardware.o [1]
  .rodata               const    0x08034500      0xc  icu.o [1]
  .rodata               const    0x0803450c      0xc  idle_thread.o [1]
  .rodata               const    0x08034518      0xc  idle_thread.o [1]
  .rodata               const    0x08034524      0xc  idle_thread.o [1]
  .rodata               const    0x08034530      0xc  idle_thread.o [1]
  .rodata               const    0x0803453c      0xc  injector_central.o [1]
  .rodata               const    0x08034548      0xc  injector_central.o [1]
  .rodata               const    0x08034554      0xc  injector_central.o [1]
  .rodata               const    0x08034560      0xc  injector_central.o [1]
  .rodata               const    0x0803456c      0xc  injector_central.o [1]
  .rodata               const    0x08034578      0xc  injector_central.o [1]
  .rodata               const    0x08034584      0xc  injector_central.o [1]
  .rodata               const    0x08034590      0xc  injector_central.o [1]
  .rodata               const    0x0803459c      0xc  injector_central.o [1]
  .rodata               const    0x080345a8      0xc  injector_central.o [1]
  .rodata               const    0x080345b4      0xc  interpolation.o [1]
  .rodata               const    0x080345c0      0xc  io_pins.o [1]
  .rodata               const    0x080345cc      0xc  io_pins.o [1]
  .rodata               const    0x080345d8      0xc  io_pins.o [1]
  .rodata               const    0x080345e4      0xc  io_pins.o [1]
  .rodata               const    0x080345f0      0xc  io_pins.o [1]
  .rodata               const    0x080345fc      0xc  joystick.o [1]
  .rodata               const    0x08034608      0xc  lcd_HD44780.o [1]
  .rodata               const    0x08034614      0xc  lcd_controller.o [1]
  .rodata               const    0x08034620      0xc  lcd_controller.o [1]
  .rodata               const    0x0803462c      0xc  lcd_controller.o [1]
  .rodata               const    0x08034638      0xc  lcd_controller.o [1]
  .rodata               const    0x08034644      0xc  lcd_controller.o [1]
  .rodata               const    0x08034650      0xc  lcd_controller.o [1]
  .rodata               const    0x0803465c      0xc  lcd_controller.o [1]
  .rodata               const    0x08034668      0xc  lcd_controller.o [1]
  .rodata               const    0x08034674      0xc  lcd_controller.o [1]
  .rodata               const    0x08034680      0xc  lcd_controller.o [1]
  .rodata               const    0x0803468c      0xc  lcd_controller.o [1]
  .rodata               const    0x08034698      0xc  lcd_controller.o [1]
  .rodata               const    0x080346a4      0xc  lcd_controller.o [1]
  .rodata               const    0x080346b0      0xc  lcd_controller.o [1]
  .rodata               const    0x080346bc      0xc  lcd_controller.o [1]
  .rodata               const    0x080346c8      0xc  lcd_controller.o [1]
  .rodata               const    0x080346d4      0xc  lcd_controller.o [1]
  .rodata               const    0x080346e0      0xc  lcd_controller.o [1]
  .rodata               const    0x080346ec      0xc  lcd_controller.o [1]
  .rodata               const    0x080346f8      0xc  loggingcentral.o [1]
  .rodata               const    0x08034704      0xc  main_trigger_callback.o [1]
  .rodata               const    0x08034710      0xc  main_trigger_callback.o [1]
  .rodata               const    0x0803471c      0xc  main_trigger_callback.o [1]
  .rodata               const    0x08034728      0xc  main_trigger_callback.o [1]
  .rodata               const    0x08034734      0xc  main_trigger_callback.o [1]
  .rodata               const    0x08034740      0xc  main_trigger_callback.o [1]
  .rodata               const    0x0803474c      0xc  main_trigger_callback.o [1]
  .rodata               const    0x08034758      0xc  main_trigger_callback.o [1]
  .rodata               const    0x08034764      0xc  main_trigger_callback.o [1]
  .rodata               const    0x08034770      0xc  main_trigger_callback.o [1]
  .rodata               const    0x0803477c      0xc  malfunction_indicator.o [1]
  .rodata               const    0x08034788      0xc  map.o [1]
  .rodata               const    0x08034794      0xc  map_averaging.o [1]
  .rodata               const    0x080347a0      0xc  map_averaging.o [1]
  .rodata               const    0x080347ac      0xc  map_averaging.o [1]
  .rodata               const    0x080347b8      0xc  max31855.o [1]
  .rodata               const    0x080347c4      0xc  max31855.o [1]
  .rodata               const    0x080347d0      0xc  max31855.o [1]
  .rodata               const    0x080347dc      0xc  max31855.o [1]
  .rodata               const    0x080347e8      0xc  max31855.o [1]
  .rodata               const    0x080347f4      0xc  microsecond_timer.o [1]
  .rodata               const    0x08034800      0xc  microsecond_timer.o [1]
  .rodata               const    0x0803480c      0xc  mitsubishi.o [1]
  .rodata               const    0x08034818      0xc  mmc_card.o [1]
  .rodata               const    0x08034824      0xc  mmc_card.o [1]
  .rodata               const    0x08034830      0xc  mmc_card.o [1]
  .rodata               const    0x0803483c      0xc  mmc_card.o [1]
  .rodata               const    0x08034848      0xc  mmc_card.o [1]
  .rodata               const    0x08034854      0xc  mmc_card.o [1]
  .rodata               const    0x08034860      0xc  mmc_card.o [1]
  .rodata               const    0x0803486c      0xc  mmc_card.o [1]
  .rodata               const    0x08034878      0xc  mmc_spi.o [1]
  .rodata               const    0x08034884      0xc  mmc_spi.o [1]
  .rodata               const    0x08034890      0xc  mpu_util.o [1]
  .rodata               const    0x0803489c      0xc  mpu_util.o [1]
  .rodata               const    0x080348a8      0xc  mpu_util.o [1]
  .rodata               const    0x080348b4      0xc  mpu_util.o [1]
  .rodata               const    0x080348c0      0xc  mpu_util.o [1]
  .rodata               const    0x080348cc      0xc  neo6m.o [1]
  .rodata               const    0x080348d8      0xc  neo6m.o [1]
  .rodata               const    0x080348e4      0xc  neo6m.o [1]
  .rodata               const    0x080348f0      0xc  neo6m.o [1]
  .rodata               const    0x080348fc      0xc  pin_repository.o [1]
  .rodata               const    0x08034908      0xc  pin_repository.o [1]
  .rodata               const    0x08034914      0xc  pin_repository.o [1]
  .rodata               const    0x08034920      0xc  pwm_generator.o [1]
  .rodata               const    0x0803492c      0xc  rpm_calculator.o [1]
  .rodata               const    0x08034938      0xc  rpm_calculator.o [1]
  .rodata               const    0x08034944      0xc  rpm_calculator.o [1]
  .rodata               const    0x08034950      0xc  rtc_helper.o [1]
  .rodata               const    0x0803495c      0xc  serial.o [1]
  .rodata               const    0x08034968      0xc  serial_lld.o [1]
  .rodata               const    0x08034974      0xc  settings.o [1]
  .rodata               const    0x08034980      0xc  settings.o [1]
  .rodata               const    0x0803498c      0xc  settings.o [1]
  .rodata               const    0x08034998      0xc  settings.o [1]
  .rodata               const    0x080349a4      0xc  settings.o [1]
  .rodata               const    0x080349b0      0xc  settings.o [1]
  .rodata               const    0x080349bc      0xc  settings.o [1]
  .rodata               const    0x080349c8      0xc  settings.o [1]
  .rodata               const    0x080349d4      0xc  settings.o [1]
  .rodata               const    0x080349e0      0xc  settings.o [1]
  .rodata               const    0x080349ec      0xc  settings.o [1]
  .rodata               const    0x080349f8      0xc  settings.o [1]
  .rodata               const    0x08034a04      0xc  settings.o [1]
  .rodata               const    0x08034a10      0xc  settings.o [1]
  .rodata               const    0x08034a1c      0xc  settings.o [1]
  .rodata               const    0x08034a28      0xc  settings.o [1]
  .rodata               const    0x08034a34      0xc  settings.o [1]
  .rodata               const    0x08034a40      0xc  settings.o [1]
  .rodata               const    0x08034a4c      0xc  settings.o [1]
  .rodata               const    0x08034a58      0xc  settings.o [1]
  .rodata               const    0x08034a64      0xc  settings.o [1]
  .rodata               const    0x08034a70      0xc  settings.o [1]
  .rodata               const    0x08034a7c      0xc  settings.o [1]
  .rodata               const    0x08034a88      0xc  settings.o [1]
  .rodata               const    0x08034a94      0xc  settings.o [1]
  .rodata               const    0x08034aa0      0xc  settings.o [1]
  .rodata               const    0x08034aac      0xc  settings.o [1]
  .rodata               const    0x08034ab8      0xc  settings.o [1]
  .rodata               const    0x08034ac4      0xc  settings.o [1]
  .rodata               const    0x08034ad0      0xc  settings.o [1]
  .rodata               const    0x08034adc      0xc  settings.o [1]
  .rodata               const    0x08034ae8      0xc  settings.o [1]
  .rodata               const    0x08034af4      0xc  settings.o [1]
  .rodata               const    0x08034b00      0xc  settings.o [1]
  .rodata               const    0x08034b0c      0xc  settings.o [1]
  .rodata               const    0x08034b18      0xc  settings.o [1]
  .rodata               const    0x08034b24      0xc  signal_executor.o [1]
  .rodata               const    0x08034b30      0xc  spi.o [1]
  .rodata               const    0x08034b3c      0xc  spi.o [1]
  .rodata               const    0x08034b48      0xc  status_loop.o [1]
  .rodata               const    0x08034b54      0xc  status_loop.o [1]
  .rodata               const    0x08034b60      0xc  status_loop.o [1]
  .rodata               const    0x08034b6c      0xc  status_loop.o [1]
  .rodata               const    0x08034b78      0xc  status_loop.o [1]
  .rodata               const    0x08034b84      0xc  status_loop.o [1]
  .rodata               const    0x08034b90      0xc  status_loop.o [1]
  .rodata               const    0x08034b9c      0xc  status_loop.o [1]
  .rodata               const    0x08034ba8      0xc  status_loop.o [1]
  .rodata               const    0x08034bb4      0xc  status_loop.o [1]
  .rodata               const    0x08034bc0      0xc  stepper.o [1]
  .rodata               const    0x08034bcc      0xc  trigger_central.o [1]
  .rodata               const    0x08034bd8      0xc  trigger_central.o [1]
  .rodata               const    0x08034be4      0xc  trigger_central.o [1]
  .rodata               const    0x08034bf0      0xc  trigger_central.o [1]
  .rodata               const    0x08034bfc      0xc  trigger_central.o [1]
  .rodata               const    0x08034c08      0xc  trigger_decoder.o [1]
  .rodata               const    0x08034c14      0xc  trigger_decoder.o [1]
  .rodata               const    0x08034c20      0xc  tunerstudio.o [1]
  .rodata               const    0x08034c2c      0xc  tunerstudio.o [1]
  .rodata               const    0x08034c38      0xc  tunerstudio.o [1]
  .rodata               const    0x08034c44      0xc  usb_lld.o [1]
  .rodata               const    0x08034c50      0xc  vehicle_speed.o [1]
  .rodata               const    0x08034c5c      0xc  vehicle_speed.o [1]
  .rodata               const    0x08034c68      0xc  wave_analyzer.o [1]
  .rodata               const    0x08034c74      0xc  wave_analyzer.o [1]
  .rodata               const    0x08034c80      0xc  wave_analyzer.o [1]
  .rodata               const    0x08034c8c      0xc  wave_analyzer.o [1]
  .rodata               const    0x08034c98      0xc  wave_analyzer.o [1]
  .rodata               const    0x08034ca4      0xc  wave_chart.o [1]
  .rodata               const    0x08034cb0      0xc  wave_chart.o [1]
  .rodata               const    0x08034cbc      0xc  wave_chart.o [1]
  .rodata               const    0x08034cc8      0xc  wave_chart.o [1]
  .rodata               const    0x08034cd4      0x8  HIP9011.o [1]
  .rodata               const    0x08034cdc      0x8  HIP9011.o [1]
  .rodata               const    0x08034ce4      0x8  adc_inputs.o [1]
  .rodata               const    0x08034cec      0x8  adc_inputs.o [1]
  .rodata               const    0x08034cf4      0x8  adc_inputs.o [1]
  .rodata               const    0x08034cfc      0x8  adc_inputs.o [1]
  .rodata               const    0x08034d04      0x8  adc_inputs.o [1]
  .rodata               const    0x08034d0c      0x8  adc_inputs.o [1]
  .rodata               const    0x08034d14      0x8  adc_inputs.o [1]
  .rodata               const    0x08034d1c      0x8  adc_inputs.o [1]
  .rodata               const    0x08034d24      0x8  adc_lld.o [1]
  .rodata               const    0x08034d2c      0x8  alternatorController.o [1]
  .rodata               const    0x08034d34      0x8  auto_generated_enums.o [1]
  .rodata               const    0x08034d3c      0x8  auto_generated_enums.o [1]
  .rodata               const    0x08034d44      0x8  auto_generated_enums.o [1]
  .rodata               const    0x08034d4c      0x8  board_test.o [1]
  .rodata               const    0x08034d54      0x8  board_test.o [1]
  .rodata               const    0x08034d5c      0x8  can_hw.o [1]
  .rodata               const    0x08034d64      0x8  can_hw.o [1]
  .rodata               const    0x08034d6c      0x8  can_hw.o [1]
  .rodata               const    0x08034d74      0x8  can_hw.o [1]
  .rodata               const    0x08034d7c      0x8  chdebug.o [1]
  .rodata               const    0x08034d84      0x8  chdebug.o [1]
  .rodata               const    0x08034d8c      0x8  chdebug.o [1]
  .rodata               const    0x08034d94      0x8  chdebug.o [1]
  .rodata               const    0x08034d9c      0x8  chdebug.o [1]
  .rodata               const    0x08034da4      0x8  chdebug.o [1]
  .rodata               const    0x08034dac      0x8  chprintf.o [1]
  .rodata               const    0x08034db4      0x8  chsys.o [1]
  .rodata               const    0x08034dbc      0x8  cli_registry.o [1]
  .rodata               const    0x08034dc4      0x8  cli_registry.o [1]
  .rodata               const    0x08034dcc      0x8  cli_registry.o [1]
  .rodata               const    0x08034dd4      0x8  cli_registry.o [1]
  .rodata               const    0x08034ddc      0x8  datalogging.o [1]
  .rodata               const    0x08034de4      0x8  datalogging.o [1]
  .rodata               const    0x08034dec      0x8  datalogging.o [1]
  .rodata               const    0x08034df4      0x8  datalogging.o [1]
  .rodata               const    0x08034dfc      0x8  datalogging.o [1]
  .rodata               const    0x08034e04      0x8  eficonsole.o [1]
  .rodata               const    0x08034e0c      0x8  eficonsole.o [1]
  .rodata               const    0x08034e14      0x8  eficonsole.o [1]
  .rodata               const    0x08034e1c      0x8  eficonsole.o [1]
  .rodata               const    0x08034e24      0x8  eficonsole.o [1]
  .rodata               const    0x08034e2c      0x8  eficonsole.o [1]
  .rodata               const    0x08034e34      0x8  eficonsole.o [1]
  .rodata               const    0x08034e3c      0x8  eficonsole.o [1]
  .rodata               const    0x08034e44      0x8  eficonsole.o [1]
  .rodata               const    0x08034e4c      0x8  eficonsole.o [1]
  .rodata               const    0x08034e54      0x8  eficonsole.o [1]
  .rodata               const    0x08034e5c      0x8  eficonsole.o [1]
  .rodata               const    0x08034e64      0x8  eficonsole.o [1]
  .rodata               const    0x08034e6c      0x8  eficonsole.o [1]
  .rodata               const    0x08034e74      0x8  eficonsole.o [1]
  .rodata               const    0x08034e7c      0x8  eficonsole.o [1]
  .rodata               const    0x08034e84      0x8  eficonsole.o [1]
  .rodata               const    0x08034e8c      0x8  eficonsole.o [1]
  .rodata               const    0x08034e94      0x8  eficonsole.o [1]
  .rodata               const    0x08034e9c      0x8  electronic_throttle.o [1]
  .rodata               const    0x08034ea4      0x8  electronic_throttle.o [1]
  .rodata               const    0x08034eac      0x8  electronic_throttle.o [1]
  .rodata               const    0x08034eb4      0x8  electronic_throttle.o [1]
  .rodata               const    0x08034ebc      0x8  engine.o [1]
  .rodata               const    0x08034ec4      0x8  engine.o [1]
  .rodata               const    0x08034ecc      0x8  engine_controller.o [1]
  .rodata               const    0x08034ed4      0x8  engine_controller.o [1]
  .rodata               const    0x08034edc      0x8  engine_controller.o [1]
  .rodata               const    0x08034ee4      0x8  engine_controller.o [1]
  .rodata               const    0x08034eec      0x8  engine_controller.o [1]
  .rodata               const    0x08034ef4      0x8  engine_controller.o [1]
  .rodata               const    0x08034efc      0x8  engine_controller.o [1]
  .rodata               const    0x08034f04      0x8  engine_controller.o [1]
  .rodata               const    0x08034f0c      0x8  engine_controller.o [1]
  .rodata               const    0x08034f14      0x8  engine_controller.o [1]
  .rodata               const    0x08034f1c      0x8  engine_controller.o [1]
  .rodata               const    0x08034f24      0x8  engine_controller.o [1]
  .rodata               const    0x08034f2c      0x8  engine_controller.o [1]
  .rodata               const    0x08034f34      0x8  ff.o [1]
  .rodata               const    0x08034f3c      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f44      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f4c      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f54      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f5c      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f64      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f6c      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f74      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f7c      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f84      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f8c      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f94      0x8  fsio_impl.o [1]
  .rodata               const    0x08034f9c      0x8  fsio_impl.o [1]
  .rodata               const    0x08034fa4      0x8  fsio_impl.o [1]
  .rodata               const    0x08034fac      0x8  fsio_impl.o [1]
  .rodata               const    0x08034fb4      0x8  fsio_impl.o [1]
  .rodata               const    0x08034fbc      0x8  fsio_impl.o [1]
  .rodata               const    0x08034fc4      0x8  fsio_impl.o [1]
  .rodata               const    0x08034fcc      0x8  fsio_impl.o [1]
  .rodata               const    0x08034fd4      0x8  fsio_impl.o [1]
  .rodata               const    0x08034fdc      0x8  fsio_impl.o [1]
  .rodata               const    0x08034fe4      0x8  fsio_impl.o [1]
  .rodata               const    0x08034fec      0x8  fsio_impl.o [1]
  .rodata               const    0x08034ff4      0x8  fsio_impl.o [1]
  .rodata               const    0x08034ffc      0x8  fsio_impl.o [1]
  .rodata               const    0x08035004      0x8  fsio_impl.o [1]
  .rodata               const    0x0803500c      0x8  hardware.o [1]
  .rodata               const    0x08035014      0x8  hardware.o [1]
  .rodata               const    0x0803501c      0x8  idle_thread.o [1]
  .rodata               const    0x08035024      0x8  injector_central.o [1]
  .rodata               const    0x0803502c      0x8  injector_central.o [1]
  .rodata               const    0x08035034      0x8  io_pins.o [1]
  .rodata               const    0x0803503c      0x8  io_pins.o [1]
  .rodata               const    0x08035044      0x8  joystick.o [1]
  .rodata               const    0x0803504c      0x8  joystick.o [1]
  .rodata               const    0x08035054      0x8  joystick.o [1]
  .rodata               const    0x0803505c      0x8  joystick.o [1]
  .rodata               const    0x08035064      0x8  joystick.o [1]
  .rodata               const    0x0803506c      0x8  joystick.o [1]
  .rodata               const    0x08035074      0x8  joystick.o [1]
  .rodata               const    0x0803507c      0x8  joystick.o [1]
  .rodata               const    0x08035084      0x8  lcd_HD44780.o [1]
  .rodata               const    0x0803508c      0x8  lcd_HD44780.o [1]
  .rodata               const    0x08035094      0x8  lcd_HD44780.o [1]
  .rodata               const    0x0803509c      0x8  lcd_HD44780.o [1]
  .rodata               const    0x080350a4      0x8  lcd_HD44780.o [1]
  .rodata               const    0x080350ac      0x8  lcd_HD44780.o [1]
  .rodata               const    0x080350b4      0x8  lcd_HD44780.o [1]
  .rodata               const    0x080350bc      0x8  lcd_HD44780.o [1]
  .rodata               const    0x080350c4      0x8  lcd_HD44780.o [1]
  .rodata               const    0x080350cc      0x8  lcd_controller.o [1]
  .rodata               const    0x080350d4      0x8  lcd_controller.o [1]
  .rodata               const    0x080350dc      0x8  lcd_controller.o [1]
  .rodata               const    0x080350e4      0x8  lcd_controller.o [1]
  .rodata               const    0x080350ec      0x8  lcd_controller.o [1]
  .rodata               const    0x080350f4      0x8  lcd_controller.o [1]
  .rodata               const    0x080350fc      0x8  lcd_controller.o [1]
  .rodata               const    0x08035104      0x8  lcd_controller.o [1]
  .rodata               const    0x0803510c      0x8  lcd_controller.o [1]
  .rodata               const    0x08035114      0x8  main_trigger_callback.o [1]
  .rodata               const    0x0803511c      0x8  main_trigger_callback.o [1]
  .rodata               const    0x08035124      0x8  malfunction_indicator.o [1]
  .rodata               const    0x0803512c      0x8  map.o [1]
  .rodata               const    0x08035134      0x8  map.o [1]
  .rodata               const    0x0803513c      0x8  max31855.o [1]
  .rodata               const    0x08035144      0x8  max31855.o [1]
  .rodata               const    0x0803514c      0x8  max31855.o [1]
  .rodata               const    0x08035154      0x8  max31855.o [1]
  .rodata               const    0x0803515c      0x8  mmc_card.o [1]
  .rodata               const    0x08035164      0x8  mmc_card.o [1]
  .rodata               const    0x0803516c      0x8  mmc_card.o [1]
  .rodata               const    0x08035174      0x8  mmc_card.o [1]
  .rodata               const    0x0803517c      0x8  mmc_card.o [1]
  .rodata               const    0x08035184      0x8  mmc_spi.o [1]
  .rodata               const    0x0803518c      0x8  neo6m.o [1]
  .rodata               const    0x08035194      0x8  neo6m.o [1]
  .rodata               const    0x0803519c      0x8  neo6m.o [1]
  .rodata               const    0x080351a4      0x8  nmea.o [1]
  .rodata               const    0x080351ac      0x8  nmea.o [1]
  .rodata               const    0x080351b4      0x8  obd2.o [1]
  .rodata               const    0x080351bc      0x8  pin_repository.o [1]
  .rodata               const    0x080351c4      0x8  pin_repository.o [1]
  .rodata               const    0x080351cc      0x8  pin_repository.o [1]
  .rodata               const    0x080351d4      0x8  pin_repository.o [1]
  .rodata               const    0x080351dc      0x8  pin_repository.o [1]
  .rodata               const    0x080351e4      0x8  pin_repository.o [1]
  .rodata               const    0x080351ec      0x8  pin_repository.o [1]
  .rodata               const    0x080351f4      0x8  poten.o [1]
  .rodata               const    0x080351fc      0x8  pwm_generator.o [1]
  .rodata               const    0x08035204      0x8  rusefi.o [1]
  .rodata               const    0x0803520c      0x8  rusefi.o [1]
  .rodata               const    0x08035214      0x8  rusefi.o [1]
  .rodata               const    0x0803521c      0x8  sensor_chart.o [1]
  .rodata               const    0x08035224      0x8  settings.o [1]
  .rodata               const    0x0803522c      0x8  settings.o [1]
  .rodata               const    0x08035234      0x8  settings.o [1]
  .rodata               const    0x0803523c      0x8  settings.o [1]
  .rodata               const    0x08035244      0x8  settings.o [1]
  .rodata               const    0x0803524c      0x8  settings.o [1]
  .rodata               const    0x08035254      0x8  settings.o [1]
  .rodata               const    0x0803525c      0x8  settings.o [1]
  .rodata               const    0x08035264      0x8  settings.o [1]
  .rodata               const    0x0803526c      0x8  settings.o [1]
  .rodata               const    0x08035274      0x8  settings.o [1]
  .rodata               const    0x0803527c      0x8  settings.o [1]
  .rodata               const    0x08035284      0x8  settings.o [1]
  .rodata               const    0x0803528c      0x8  settings.o [1]
  .rodata               const    0x08035294      0x8  settings.o [1]
  .rodata               const    0x0803529c      0x8  settings.o [1]
  .rodata               const    0x080352a4      0x8  settings.o [1]
  .rodata               const    0x080352ac      0x8  settings.o [1]
  .rodata               const    0x080352b4      0x8  settings.o [1]
  .rodata               const    0x080352bc      0x8  settings.o [1]
  .rodata               const    0x080352c4      0x8  settings.o [1]
  .rodata               const    0x080352cc      0x8  settings.o [1]
  .rodata               const    0x080352d4      0x8  settings.o [1]
  .rodata               const    0x080352dc      0x8  settings.o [1]
  .rodata               const    0x080352e4      0x8  settings.o [1]
  .rodata               const    0x080352ec      0x8  settings.o [1]
  .rodata               const    0x080352f4      0x8  settings.o [1]
  .rodata               const    0x080352fc      0x8  settings.o [1]
  .rodata               const    0x08035304      0x8  settings.o [1]
  .rodata               const    0x0803530c      0x8  settings.o [1]
  .rodata               const    0x08035314      0x8  settings.o [1]
  .rodata               const    0x0803531c      0x8  settings.o [1]
  .rodata               const    0x08035324      0x8  settings.o [1]
  .rodata               const    0x0803532c      0x8  settings.o [1]
  .rodata               const    0x08035334      0x8  settings.o [1]
  .rodata               const    0x0803533c      0x8  settings.o [1]
  .rodata               const    0x08035344      0x8  settings.o [1]
  .rodata               const    0x0803534c      0x8  settings.o [1]
  .rodata               const    0x08035354      0x8  settings.o [1]
  .rodata               const    0x0803535c      0x8  settings.o [1]
  .rodata               const    0x08035364      0x8  settings.o [1]
  .rodata               const    0x0803536c      0x8  settings.o [1]
  .rodata               const    0x08035374      0x8  settings.o [1]
  .rodata               const    0x0803537c      0x8  settings.o [1]
  .rodata               const    0x08035384      0x8  settings.o [1]
  .rodata               const    0x0803538c      0x8  signal_executor.o [1]
  .rodata               const    0x08035394      0x8  status_loop.o [1]
  .rodata               const    0x0803539c      0x8  status_loop.o [1]
  .rodata               const    0x080353a4      0x8  status_loop.o [1]
  .rodata               const    0x080353ac      0x8  status_loop.o [1]
  .rodata               const    0x080353b4      0x8  status_loop.o [1]
  .rodata               const    0x080353bc      0x8  status_loop.o [1]
  .rodata               const    0x080353c4      0x8  status_loop.o [1]
  .rodata               const    0x080353cc      0x8  status_loop.o [1]
  .rodata               const    0x080353d4      0x8  status_loop.o [1]
  .rodata               const    0x080353dc      0x8  status_loop.o [1]
  .rodata               const    0x080353e4      0x8  status_loop.o [1]
  .rodata               const    0x080353ec      0x8  status_loop.o [1]
  .rodata               const    0x080353f4      0x8  status_loop.o [1]
  .rodata               const    0x080353fc      0x8  status_loop.o [1]
  .rodata               const    0x08035404      0x8  status_loop.o [1]
  .rodata               const    0x0803540c      0x8  status_loop.o [1]
  .rodata               const    0x08035414      0x8  status_loop.o [1]
  .rodata               const    0x0803541c      0x8  status_loop.o [1]
  .rodata               const    0x08035424      0x8  status_loop.o [1]
  .rodata               const    0x0803542c      0x8  status_loop.o [1]
  .rodata               const    0x08035434      0x8  stepper.o [1]
  .rodata               const    0x0803543c      0x8  thermistors.o [1]
  .rodata               const    0x08035444      0x8  trigger_decoder.o [1]
  .rodata               const    0x0803544c      0x8  trigger_input.o [1]
  .rodata               const    0x08035454      0x8  tunerstudio.o [1]
  .rodata               const    0x0803545c      0x8  tunerstudio.o [1]
  .rodata               const    0x08035464      0x8  tunerstudio.o [1]
  .rodata               const    0x0803546c      0x8  tunerstudio.o [1]
  .rodata               const    0x08035474      0x8  tunerstudio.o [1]
  .rodata               const    0x0803547c      0x8  usbcfg.o [1]
  .rodata               const    0x08035484      0x8  usbcfg.o [1]
  .rodata               const    0x0803548c      0x8  usbcfg.o [1]
  .rodata               const    0x08035494      0x8  usbcfg.o [1]
  .rodata               const    0x0803549c      0x8  voltage.o [1]
  .rodata               const    0x080354a4      0x8  wave_analyzer.o [1]
  .rodata               const    0x080354ac      0x8  wave_analyzer.o [1]
  .rodata               const    0x080354b4      0x8  wave_chart.o [1]
  .rodata               const    0x080354bc      0x4  signal_executor.o [1]
  .rodata               const    0x080354c0      0x4  signal_executor.o [1]
  .rodata               const    0x080354c4      0x4  signal_executor.o [1]
  .rodata               const    0x080354c8      0x4  signal_executor.o [1]
  .rodata               const    0x080354cc      0x4  signal_executor.o [1]
  .rodata               const    0x080354d0      0x4  signal_executor.o [1]
  .rodata               const    0x080354d4      0x4  signal_executor.o [1]
  .rodata               const    0x080354d8      0x4  signal_executor.o [1]
  .rodata               const    0x080354dc      0x4  signal_executor.o [1]
  .rodata               const    0x080354e0      0x4  signal_executor.o [1]
  .rodata               const    0x080354e4      0x4  signal_executor.o [1]
  .rodata               const    0x080354e8      0x4  signal_executor.o [1]
  .rodata               const    0x080354ec      0x4  signal_executor.o [1]
  .rodata               const    0x080354f0      0x4  signal_executor.o [1]
  .rodata               const    0x080354f4      0x4  signal_executor.o [1]
  .rodata               const    0x080354f8      0x4  signal_executor.o [1]
  .rodata               const    0x080354fc      0x4  signal_executor.o [1]
  .rodata               const    0x08035500      0x4  signal_executor.o [1]
  .rodata               const    0x08035504      0x4  signal_executor.o [1]
  .rodata               const    0x08035508      0x4  signal_executor.o [1]
  .rodata               const    0x0803550c      0x4  signal_executor.o [1]
  .rodata               const    0x08035510      0x4  signal_executor.o [1]
  .rodata               const    0x08035514      0x4  signal_executor.o [1]
  .rodata               const    0x08035518      0x4  signal_executor.o [1]
  .rodata               const    0x0803551c      0x4  trigger_central.o [1]
  .rodata               const    0x08035520      0x4  trigger_central.o [1]
  .rodata               const    0x08035524      0x4  trigger_central.o [1]
  .rodata               const    0x08035528      0x4  usbcfg.o [1]
  .text                 ro code  0x0803552c      0x0  cstart_call_dtors.o [6]
  .rodata               const    0x0803552c      0x0  zero_init3.o [6]
  .rodata               const    0x0803552c      0x0  lz77_init.o [6]
  Initializer bytes     ro data  0x0803552c    0x65c  <for DATABSS-1>
                               - 0x08035b88  0x35a00

"P4":                                         0xf710
  .ccm                  zero     0x10000000   0x6b60  engine_controller.o [1]
  .ccm                  zero     0x10006b60   0x3bc4  engine_controller.o [1]
  .ccm                  zero     0x1000a724   0x1f40  loggingcentral.o [1]
  .ccm                  zero     0x1000c664   0x1388  wave_chart.o [1]
  .ccm                  zero     0x1000d9ec    0xe10  rusefi.o [1]
  .ccm                  zero     0x1000e7fc    0x7d0  datalogging.o [1]
  .ccm                  zero     0x1000efd0    0x700  fsio_impl.o [1]
  .ccm                  zero     0x1000f6d0     0x40  fsio_impl.o [1]
                               - 0x1000f710   0xf710

"A2":                                         0x1000
  IRQSTACK                       0x20000000   0x1000  <Block>
    IRQSTACK            uninit   0x20000000   0x1000  <Block tail>
                               - 0x20001000   0x1000

"P2", part 1 of 2:                           0x1b808
  DATABSS                        0x20001000  0x1b808  <Block>
    DATABSS-1                    0x20001000    0x8ac  <Init block>
      .data             inited   0x20001000      0x4  HIP9011.o [1]
      .data             inited   0x20001004      0x4  HIP9011.o [1]
      .data             inited   0x20001008      0xc  HIP9011.o [1]
      .data             inited   0x20001014      0x4  HIP9011.o [1]
      .data             inited   0x20001018      0x1  HIP9011.o [1]
      .data             inited   0x2000101c     0x28  adc_inputs.o [1]
      .data             inited   0x20001044     0x28  adc_inputs.o [1]
      .data             inited   0x2000106c     0x34  adc_inputs.o [1]
      .data             inited   0x200010a0     0x34  adc_inputs.o [1]
      .data             inited   0x200010d4      0x4  board_test.o [1]
      .data             inited   0x200010d8     0x58  board_test.o [1]
      .data             inited   0x20001130      0x4  board_test.o [1]
      .data             inited   0x20001134      0x4  can_hw.o [1]
      .data             inited   0x20001138     0x50  console_io.o [1]
      .data             inited   0x20001188      0xc  console_io.o [1]
      .data             inited   0x20001194    0x400  crc.o [1]
      .data             inited   0x20001594     0x1c  digital_input_hw.o [1]
      .data             inited   0x200015b0     0x3c  eficonsole.o [1]
      .data             inited   0x200015ec      0x4  engine_controller.o [1]
      .data             inited   0x200015f0      0x4  engine_controller.o [1]
      .data             inited   0x200015f4      0x4  engine_controller.o [1]
      .data             inited   0x200015f8      0x4  engine_controller.o [1]
      .data             inited   0x200015fc      0x4  engine_controller.o [1]
      .data             inited   0x20001600     0x10  engine_math.o [1]
      .data             inited   0x20001610     0x10  engine_math.o [1]
      .data             inited   0x20001620     0x10  engine_math.o [1]
      .data             inited   0x20001630     0x14  engine_math.o [1]
      .data             inited   0x20001644     0x18  engine_math.o [1]
      .data             inited   0x2000165c     0x18  engine_math.o [1]
      .data             inited   0x20001674     0x20  engine_math.o [1]
      .data             inited   0x20001694      0x8  engine_math.o [1]
      .data             inited   0x2000169c      0x4  error_handling.o [1]
      .data             inited   0x200016a0      0x4  idle_controller.o [1]
      .data             inited   0x200016a4      0x4  idle_thread.o [1]
      .data             inited   0x200016a8     0x40  interpolation.o [1]
      .data             inited   0x200016e8     0x20  io_pins.o [1]
      .data             inited   0x20001708      0x4  main_trigger_callback.o [1]
      .data             inited   0x2000170c      0xc  mmc_card.o [1]
      .data             inited   0x20001718      0xc  mmc_card.o [1]
      .data             inited   0x20001724      0xc  mmc_card.o [1]
      .data             inited   0x20001730      0x4  mmc_card.o [1]
      .data             inited   0x20001734      0xc  neo6m.o [1]
      .data             inited   0x20001740     0x1c  pin_repository.o [1]
      .data             inited   0x2000175c      0x8  serial_usb.o [1]
      .data             inited   0x20001764     0x30  signal_executor.o [1]
      .data             inited   0x20001794     0x30  signal_executor.o [1]
      .data             inited   0x200017c4      0x1  status_loop.o [1]
      .data             inited   0x200017c8      0x4  status_loop.o [1]
      .data             inited   0x200017cc      0x4  status_loop.o [1]
      .data             inited   0x200017d0      0x4  status_loop.o [1]
      .data             inited   0x200017d4      0x4  status_loop.o [1]
      .data             inited   0x200017d8     0x14  status_loop.o [1]
      .data             inited   0x200017ec      0x4  status_loop.o [1]
      .data             inited   0x200017f0      0x8  trigger_central.o [1]
      .data             inited   0x200017f8      0x8  trigger_central.o [1]
      .data             inited   0x20001800     0x18  trigger_central.o [1]
      .data             inited   0x20001818      0x8  trigger_decoder.o [1]
      .data             inited   0x20001820      0x8  trigger_decoder.o [1]
      .data             inited   0x20001828      0x8  trigger_emulator_algo.o [1]
      .data             inited   0x20001830      0x4  trigger_emulator_algo.o [1]
      .data             inited   0x20001834      0x1  trigger_emulator_algo.o [1]
      .data             inited   0x20001838     0x1c  trigger_input.o [1]
      .data             inited   0x20001854      0x2  tunerstudio.o [1]
      .data             inited   0x20001858      0xc  tunerstudio_io.o [1]
      __DLIB_PERTHREAD  inited   0x20001864      0x8  localtim.o [3]
      __DLIB_PERTHREAD  inited   0x2000186c      0x8  setlocale.o [3]
      __DLIB_PERTHREAD  inited   0x20001874     0x2c  xttotm.o [3]
      __DLIB_PERTHREAD  inited   0x200018a0      0x4  errno.o [3]
      __DLIB_PERTHREAD  inited   0x200018a4      0x4  xisdst.o [3]
      __DLIB_PERTHREAD  inited   0x200018a8      0x4  xisdstData.o [3]
    .bss                zero     0x200018b0     0x30  HIP9011.o [1]
    .bss                zero     0x200018e0     0x30  HIP9011.o [1]
    .bss                zero     0x20001910    0x2c8  HIP9011.o [1]
    .bss                zero     0x20001bd8     0x18  SingleTimerExecutor.o [1]
    .bss                zero     0x20001bf0      0x8  SingleTimerExecutor.o [1]
    .bss                zero     0x20001bf8     0x70  alternatorController.o [1]
    .bss                zero     0x20001c68    0x2c8  alternatorController.o [1]
    .bss                zero     0x20001f30    0x2c8  board_test.o [1]
    .bss                zero     0x200021f8    0x2c8  can_hw.o [1]
    .bss                zero     0x200024c0     0x20  chheap.o [1]
    .bss                zero     0x200024e0    0x800  chmemcore.o [1]
    .bss                zero     0x20002ce0    0x538  chsys.o [1]
    .bss                zero     0x20003218    0x458  console_io.o [1]
    .bss                zero     0x20003670    0x2c8  electronic_throttle.o [1]
    .bss                zero     0x20003938     0x70  electronic_throttle.o [1]
    .bss                zero     0x200039a8     0x70  electronic_throttle.o [1]
    .bss                zero     0x20003a18   0x2418  engine_controller.o [1]
    .bss                zero     0x20005e30     0x10  engine_controller.o [1]
    .bss                zero     0x20005e40    0x2c8  engine_controller.o [1]
    .bss                zero     0x20006108    0x2c8  idle_thread.o [1]
    .bss                zero     0x200063d0     0x70  idle_thread.o [1]
    .bss                zero     0x20006440    0x2f0  idle_thread.o [1]
    .bss                zero     0x20006730    0x2c8  injector_central.o [1]
    .bss                zero     0x200069f8      0x8  joystick.o [1]
    .bss                zero     0x20006a00    0xe20  main_trigger_callback.o [1]
    .bss                zero     0x20007820    0x2c8  malfunction_indicator.o [1]
    .bss                zero     0x20007ae8      0x8  map.o [1]
    .bss                zero     0x20007af0     0x30  map_averaging.o [1]
    .bss                zero     0x20007b20     0x30  map_averaging.o [1]
    .bss                zero     0x20007b50      0x8  microsecond_timer.o [1]
    .bss                zero     0x20007b58    0x2c8  microsecond_timer.o [1]
    .bss                zero     0x20007e20    0x2c8  mmc_card.o [1]
    .bss                zero     0x200080e8    0x2c8  neo6m.o [1]
    .bss                zero     0x200083b0      0x8  rpm_calculator.o [1]
    .bss                zero     0x200083b8      0x8  rpm_calculator.o [1]
    .bss                zero     0x200083c0     0x30  rpm_calculator.o [1]
    .bss                zero     0x200083f0    0x2c8  status_loop.o [1]
    .bss                zero     0x200086b8    0x1b8  status_loop.o [1]
    .bss                zero     0x20008870     0x50  trigger_central.o [1]
    .bss                zero     0x200088c0    0xe20  trigger_central.o [1]
    .bss                zero     0x200096e0    0x158  trigger_central.o [1]
    .bss                zero     0x20009838     0x60  trigger_emulator_algo.o [1]
    .bss                zero     0x20009898    0x5e8  tunerstudio.o [1]
    .bss                zero     0x20009e80    0x5a0  usb_lld.o [1]
    .bss                zero     0x2000a420      0x8  vehicle_speed.o [1]
    .bss                zero     0x2000a428      0x8  vehicle_speed.o [1]
    .bss                zero     0x2000a430      0x8  wave_analyzer.o [1]
    .bss                zero     0x2000a438    0x1b8  wave_analyzer.o [1]
    .bss                zero     0x2000a5f0    0x2c8  wave_analyzer.o [1]
    .bss                zero     0x2000a8b8     0x14  HIP9011.o [1]
    .bss                zero     0x2000a8cc     0x10  HIP9011.o [1]
    .bss                zero     0x2000a8dc      0x4  HIP9011.o [1]
    .bss                zero     0x2000a8e0      0x4  HIP9011.o [1]
    .bss                zero     0x2000a8e4      0x4  HIP9011.o [1]
    .bss                zero     0x2000a8e8      0x4  HIP9011.o [1]
    .bss                zero     0x2000a8ec      0x4  HIP9011.o [1]
    .bss                zero     0x2000a8f0      0x4  HIP9011.o [1]
    .bss                zero     0x2000a8f4      0x4  HIP9011.o [1]
    .bss                zero     0x2000a8f8      0x4  HIP9011.o [1]
    .bss                zero     0x2000a8fc     0x10  HIP9011.o [1]
    .bss                zero     0x2000a90c      0x4  HIP9011.o [1]
    .bss                zero     0x2000a910      0x4  HIP9011.o [1]
    .bss                zero     0x2000a914      0x4  SingleTimerExecutor.o [1]
    .bss                zero     0x2000a918      0x4  SingleTimerExecutor.o [1]
    .bss                zero     0x2000a91c      0x4  SingleTimerExecutor.o [1]
    .bss                zero     0x2000a920      0x4  accel_enrichment.o [1]
    .bss                zero     0x2000a924     0x40  adc_inputs.o [1]
    .bss                zero     0x2000a964     0x40  adc_inputs.o [1]
    .bss                zero     0x2000a9a4    0x1f4  adc_inputs.o [1]
    .bss                zero     0x2000ab98     0x3c  adc_inputs.o [1]
    .bss                zero     0x2000abd4      0x4  adc_inputs.o [1]
    .bss                zero     0x2000abd8      0x4  adc_inputs.o [1]
    .bss                zero     0x2000abdc     0xf0  adc_inputs.o [1]
    .bss                zero     0x2000accc     0xf0  adc_inputs.o [1]
    .bss                zero     0x2000adbc      0xc  adc_inputs.o [1]
    .bss                zero     0x2000adc8     0x34  adc_lld.o [1]
    .bss                zero     0x2000adfc     0x34  adc_lld.o [1]
    .bss                zero     0x2000ae30     0x4c  advance_map.o [1]
    .bss                zero     0x2000ae7c     0x4c  advance_map.o [1]
    .bss                zero     0x2000aec8      0x4  alternatorController.o [1]
    .bss                zero     0x2000aecc     0x10  alternatorController.o [1]
    .bss                zero     0x2000aedc     0x1c  alternatorController.o [1]
    .bss                zero     0x2000aef8      0x4  alternatorController.o [1]
    .bss                zero     0x2000aefc      0x4  board_test.o [1]
    .bss                zero     0x2000af00      0x4  board_test.o [1]
    .bss                zero     0x2000af04      0x4  can_hw.o [1]
    .bss                zero     0x2000af08      0x4  can_hw.o [1]
    .bss                zero     0x2000af0c      0x4  can_hw.o [1]
    .bss                zero     0x2000af10    0x104  can_hw.o [1]
    .bss                zero     0x2000b014     0x14  can_hw.o [1]
    .bss                zero     0x2000b028     0x10  can_hw.o [1]
    .bss                zero     0x2000b038      0x4  can_hw.o [1]
    .bss                zero     0x2000b03c      0x4  can_hw.o [1]
    .bss                zero     0x2000b040     0x38  can_lld.o [1]
    .bss                zero     0x2000b078     0x38  can_lld.o [1]
    .bss                zero     0x2000b0b0      0x4  chdebug.o [1]
    .bss                zero     0x2000b0b4      0x4  chdebug.o [1]
    .bss                zero     0x2000b0b8    0x408  chdebug.o [1]
    .bss                zero     0x2000b4c0      0x4  chdebug.o [1]
    .bss                zero     0x2000b4c4      0x4  chmemcore.o [1]
    .bss                zero     0x2000b4c8      0x4  chmemcore.o [1]
    .bss                zero     0x2000b4cc     0x1c  chschd.o [1]
    .bss                zero     0x2000b4e8     0x4c  chsys.o [1]
    .bss                zero     0x2000b534     0x10  chvt.o [1]
    .bss                zero     0x2000b544      0x4  cli_registry.o [1]
    .bss                zero     0x2000b548      0x4  cli_registry.o [1]
    .bss                zero     0x2000b54c    0xc40  cli_registry.o [1]
    .bss                zero     0x2000c18c     0xc8  cli_registry.o [1]
    .bss                zero     0x2000c254     0xc8  cli_registry.o [1]
    .bss                zero     0x2000c31c      0x4  console_io.o [1]
    .bss                zero     0x2000c320      0x4  console_io.o [1]
    .bss                zero     0x2000c324     0x10  console_io.o [1]
    .bss                zero     0x2000c334      0x4  console_io.o [1]
    .bss                zero     0x2000c338    0x134  console_io.o [1]
    .bss                zero     0x2000c46c   0x1f40  console_io.o [1]
    .bss                zero     0x2000e3ac      0x4  console_io.o [1]
    .bss                zero     0x2000e3b0     0x14  datalogging.o [1]
    .bss                zero     0x2000e3c4     0x10  datalogging.o [1]
    .bss                zero     0x2000e3d4    0x804  digital_input_hw.o [1]
    .bss                zero     0x2000ebd8      0x4  efiGpio.o [1]
    .bss                zero     0x2000ebdc    0x240  efiGpio.o [1]
    .bss                zero     0x2000ee1c    0x104  eficonsole.o [1]
    .bss                zero     0x2000ef20     0x64  efilib.o [1]
    .bss                zero     0x2000ef84    0x104  electronic_throttle.o [1]
    .bss                zero     0x2000f088     0x10  electronic_throttle.o [1]
    .bss                zero     0x2000f098     0x10  electronic_throttle.o [1]
    .bss                zero     0x2000f0a8     0x1c  electronic_throttle.o [1]
    .bss                zero     0x2000f0c4      0x4  electronic_throttle.o [1]
    .bss                zero     0x2000f0c8     0x10  electronic_throttle.o [1]
    .bss                zero     0x2000f0d8    0x104  engine.o [1]
    .bss                zero     0x2000f1dc      0x4  engine_configuration.o [1]
    .bss                zero     0x2000f1e0     0x14  engine_controller.o [1]
    .bss                zero     0x2000f1f4     0x14  engine_controller.o [1]
    .bss                zero     0x2000f208    0x104  engine_controller.o [1]
    .bss                zero     0x2000f30c      0x4  engine_controller.o [1]
    .bss                zero     0x2000f310     0x10  engine_controller.o [1]
    .bss                zero     0x2000f320    0x104  error_handling.o [1]
    .bss                zero     0x2000f424      0x4  error_handling.o [1]
    .bss                zero     0x2000f428      0x4  error_handling.o [1]
    .bss                zero     0x2000f42c     0x50  error_handling.o [1]
    .bss                zero     0x2000f47c     0x14  error_handling.o [1]
    .bss                zero     0x2000f490      0x4  error_handling.o [1]
    .bss                zero     0x2000f494      0x4  event_queue.o [1]
    .bss                zero     0x2000f498      0x4  event_queue.o [1]
    .bss                zero     0x2000f49c      0x4  event_queue.o [1]
    .bss                zero     0x2000f4a0      0x4  event_queue.o [1]
    .bss                zero     0x2000f4a4      0x8  ext_lld.o [1]
    .bss                zero     0x2000f4ac      0x4  ff.o [1]
    .bss                zero     0x2000f4b0      0x4  flash_main.o [1]
    .bss                zero     0x2000f4b4      0x4  fsio_core.o [1]
    .bss                zero     0x2000f4b8      0xc  fsio_core.o [1]
    .bss                zero     0x2000f4c4      0xc  fsio_core.o [1]
    .bss                zero     0x2000f4d0      0xc  fsio_core.o [1]
    .bss                zero     0x2000f4dc      0xc  fsio_core.o [1]
    .bss                zero     0x2000f4e8      0xc  fsio_core.o [1]
    .bss                zero     0x2000f4f4      0xc  fsio_core.o [1]
    .bss                zero     0x2000f500      0xc  fsio_core.o [1]
    .bss                zero     0x2000f50c      0xc  fsio_core.o [1]
    .bss                zero     0x2000f518      0xc  fsio_core.o [1]
    .bss                zero     0x2000f524      0xc  fsio_core.o [1]
    .bss                zero     0x2000f530      0xc  fsio_core.o [1]
    .bss                zero     0x2000f53c      0xc  fsio_core.o [1]
    .bss                zero     0x2000f548      0xc  fsio_core.o [1]
    .bss                zero     0x2000f554      0xc  fsio_core.o [1]
    .bss                zero     0x2000f560      0xc  fsio_core.o [1]
    .bss                zero     0x2000f56c      0xc  fsio_core.o [1]
    .bss                zero     0x2000f578     0x40  fsio_core.o [1]
    .bss                zero     0x2000f5b8      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f5c4      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f5d0      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f5dc      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f5e8      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f5f4      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f600      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f60c      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f618      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f624      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f630      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f63c      0xc  fsio_impl.o [1]
    .bss                zero     0x2000f648    0x28c  fsio_impl.o [1]
    .bss                zero     0x2000f8d4    0x200  fsio_impl.o [1]
    .bss                zero     0x2000fad4      0xc  fsio_impl.o [1]
    .bss                zero     0x2000fae0    0x800  fsio_impl.o [1]
    .bss                zero     0x200102e0      0xc  fsio_impl.o [1]
    .bss                zero     0x200102ec    0x800  fsio_impl.o [1]
    .bss                zero     0x20010aec      0xc  fsio_impl.o [1]
    .bss                zero     0x20010af8      0x4  fsio_impl.o [1]
    .bss                zero     0x20010afc      0x4  fsio_impl.o [1]
    .bss                zero     0x20010b00      0x4  fsio_impl.o [1]
    .bss                zero     0x20010b04      0x4  fsio_impl.o [1]
    .bss                zero     0x20010b08      0x4  fsio_impl.o [1]
    .bss                zero     0x20010b0c    0x28c  fsio_impl.o [1]
    .bss                zero     0x20010d98    0x100  fsio_impl.o [1]
    .bss                zero     0x20010e98      0xc  fsio_impl.o [1]
    .bss                zero     0x20010ea4      0x4  fsio_impl.o [1]
    .bss                zero     0x20010ea8     0x4c  fuel_math.o [1]
    .bss                zero     0x20010ef4     0x4c  fuel_math.o [1]
    .bss                zero     0x20010f40     0x10  gpt_lld.o [1]
    .bss                zero     0x20010f50     0x10  hardware.o [1]
    .bss                zero     0x20010f60      0x4  hardware.o [1]
    .bss                zero     0x20010f64      0x4  hardware.o [1]
    .bss                zero     0x20010f68      0x4  hardware.o [1]
    .bss                zero     0x20010f6c      0x4  hardware.o [1]
    .bss                zero     0x20010f70      0x4  hardware.o [1]
    .bss                zero     0x20010f74     0x80  hip9011_lookup.o [1]
    .bss                zero     0x20010ff4     0x38  i2c_lld.o [1]
    .bss                zero     0x2001102c     0x18  icu_lld.o [1]
    .bss                zero     0x20011044     0x18  icu_lld.o [1]
    .bss                zero     0x2001105c     0x18  icu_lld.o [1]
    .bss                zero     0x20011074     0x18  icu_lld.o [1]
    .bss                zero     0x2001108c      0x4  idle_thread.o [1]
    .bss                zero     0x20011090     0x10  idle_thread.o [1]
    .bss                zero     0x200110a0     0x14  idle_thread.o [1]
    .bss                zero     0x200110b4    0x104  injector_central.o [1]
    .bss                zero     0x200111b8     0x30  injector_central.o [1]
    .bss                zero     0x200111e8      0x4  injector_central.o [1]
    .bss                zero     0x200111ec      0x4  injector_central.o [1]
    .bss                zero     0x200111f0      0x4  injector_central.o [1]
    .bss                zero     0x200111f4      0x4  injector_central.o [1]
    .bss                zero     0x200111f8      0x4  injector_central.o [1]
    .bss                zero     0x200111fc      0x4  injector_central.o [1]
    .bss                zero     0x20011200      0x4  interpolation.o [1]
    .bss                zero     0x20011204    0x104  io_pins.o [1]
    .bss                zero     0x20011308     0x10  io_pins.o [1]
    .bss                zero     0x20011318      0x4  io_pins.o [1]
    .bss                zero     0x2001131c      0x4  joystick.o [1]
    .bss                zero     0x20011320      0x4  joystick.o [1]
    .bss                zero     0x20011324      0x4  joystick.o [1]
    .bss                zero     0x20011328      0x4  joystick.o [1]
    .bss                zero     0x2001132c      0x4  joystick.o [1]
    .bss                zero     0x20011330      0x4  joystick.o [1]
    .bss                zero     0x20011334      0x4  joystick.o [1]
    .bss                zero     0x20011338     0xb8  joystick.o [1]
    .bss                zero     0x200113f0      0x4  lcd_HD44780.o [1]
    .bss                zero     0x200113f4      0x4  lcd_HD44780.o [1]
    .bss                zero     0x200113f8      0x4  lcd_HD44780.o [1]
    .bss                zero     0x200113fc      0x4  lcd_HD44780.o [1]
    .bss                zero     0x20011400     0x24  lcd_controller.o [1]
    .bss                zero     0x20011424     0x10  lcd_controller.o [1]
    .bss                zero     0x20011434     0x24  lcd_controller.o [1]
    .bss                zero     0x20011458     0x24  lcd_controller.o [1]
    .bss                zero     0x2001147c     0x24  lcd_controller.o [1]
    .bss                zero     0x200114a0     0x24  lcd_controller.o [1]
    .bss                zero     0x200114c4     0x24  lcd_controller.o [1]
    .bss                zero     0x200114e8     0x24  lcd_controller.o [1]
    .bss                zero     0x2001150c     0x24  lcd_controller.o [1]
    .bss                zero     0x20011530     0x24  lcd_controller.o [1]
    .bss                zero     0x20011554     0x24  lcd_controller.o [1]
    .bss                zero     0x20011578     0x24  lcd_controller.o [1]
    .bss                zero     0x2001159c     0x24  lcd_controller.o [1]
    .bss                zero     0x200115c0     0x24  lcd_controller.o [1]
    .bss                zero     0x200115e4     0x24  lcd_controller.o [1]
    .bss                zero     0x20011608     0x24  lcd_controller.o [1]
    .bss                zero     0x2001162c     0x24  lcd_controller.o [1]
    .bss                zero     0x20011650     0x24  lcd_controller.o [1]
    .bss                zero     0x20011674     0x24  lcd_controller.o [1]
    .bss                zero     0x20011698     0x24  lcd_controller.o [1]
    .bss                zero     0x200116bc     0x24  lcd_controller.o [1]
    .bss                zero     0x200116e0     0x24  lcd_controller.o [1]
    .bss                zero     0x20011704     0x24  lcd_controller.o [1]
    .bss                zero     0x20011728     0x24  lcd_controller.o [1]
    .bss                zero     0x2001174c     0x24  lcd_controller.o [1]
    .bss                zero     0x20011770     0x24  lcd_controller.o [1]
    .bss                zero     0x20011794     0x24  lcd_controller.o [1]
    .bss                zero     0x200117b8     0x24  lcd_controller.o [1]
    .bss                zero     0x200117dc     0x24  lcd_controller.o [1]
    .bss                zero     0x20011800     0x24  lcd_controller.o [1]
    .bss                zero     0x20011824     0x24  lcd_controller.o [1]
    .bss                zero     0x20011848     0x24  lcd_controller.o [1]
    .bss                zero     0x2001186c     0x24  lcd_controller.o [1]
    .bss                zero     0x20011890     0x24  lcd_controller.o [1]
    .bss                zero     0x200118b4     0x20  lcd_controller.o [1]
    .bss                zero     0x200118d4     0x14  lcd_controller.o [1]
    .bss                zero     0x200118e8     0x18  lcd_controller.o [1]
    .bss                zero     0x20011900      0x4  loggingcentral.o [1]
    .bss                zero     0x20011904   0x1f40  loggingcentral.o [1]
    .bss                zero     0x20013844      0x4  loggingcentral.o [1]
    .bss                zero     0x20013848      0x4  loggingcentral.o [1]
    .bss                zero     0x2001384c      0x4  main_trigger_callback.o [1]
    .bss                zero     0x20013850      0x4  main_trigger_callback.o [1]
    .bss                zero     0x20013854      0x4  main_trigger_callback.o [1]
    .bss                zero     0x20013858    0x10c  main_trigger_callback.o [1]
    .bss                zero     0x20013964      0x4  main_trigger_callback.o [1]
    .bss                zero     0x20013968     0x2c  malfunction_central.o [1]
    .bss                zero     0x20013994      0x4  map.o [1]
    .bss                zero     0x20013998      0x8  map.o [1]
    .bss                zero     0x200139a0      0x4  map.o [1]
    .bss                zero     0x200139a4      0x8  map.o [1]
    .bss                zero     0x200139ac      0x8  map.o [1]
    .bss                zero     0x200139b4      0x8  map.o [1]
    .bss                zero     0x200139bc      0x8  map.o [1]
    .bss                zero     0x200139c4      0x8  map.o [1]
    .bss                zero     0x200139cc      0x8  map.o [1]
    .bss                zero     0x200139d4      0x4  map.o [1]
    .bss                zero     0x200139d8      0x4  map_averaging.o [1]
    .bss                zero     0x200139dc     0x14  map_averaging.o [1]
    .bss                zero     0x200139f0      0x4  map_averaging.o [1]
    .bss                zero     0x200139f4      0x4  map_averaging.o [1]
    .bss                zero     0x200139f8      0x4  map_averaging.o [1]
    .bss                zero     0x200139fc      0x8  map_averaging.o [1]
    .bss                zero     0x20013a04      0x8  map_averaging.o [1]
    .bss                zero     0x20013a0c      0x4  map_averaging.o [1]
    .bss                zero     0x20013a10      0x4  map_averaging.o [1]
    .bss                zero     0x20013a14      0x4  map_averaging.o [1]
    .bss                zero     0x20013a18      0x4  max31855.o [1]
    .bss                zero     0x20013a1c      0x4  max31855.o [1]
    .bss                zero     0x20013a20     0x60  max31855.o [1]
    .bss                zero     0x20013a80      0x4  microsecond_timer.o [1]
    .bss                zero     0x20013a84      0x4  microsecond_timer.o [1]
    .bss                zero     0x20013a88      0x4  microsecond_timer.o [1]
    .bss                zero     0x20013a8c      0x4  microsecond_timer.o [1]
    .bss                zero     0x20013a90      0x4  microsecond_timer.o [1]
    .bss                zero     0x20013a94     0x20  microsecond_timer.o [1]
    .bss                zero     0x20013ab4     0x34  mmc_card.o [1]
    .bss                zero     0x20013ae8    0x230  mmc_card.o [1]
    .bss                zero     0x20013d18    0x104  mmc_card.o [1]
    .bss                zero     0x20013e1c    0x224  mmc_card.o [1]
    .bss                zero     0x20014040    0x224  mmc_card.o [1]
    .bss                zero     0x20014264     0x10  mmc_card.o [1]
    .bss                zero     0x20014274      0x4  mmc_card.o [1]
    .bss                zero     0x20014278      0x4  mmc_card.o [1]
    .bss                zero     0x2001427c      0x8  mpu_util.o [1]
    .bss                zero     0x20014284    0x104  neo6m.o [1]
    .bss                zero     0x20014388     0x50  neo6m.o [1]
    .bss                zero     0x200143d8      0x4  neo6m.o [1]
    .bss                zero     0x200143dc      0x4  neo6m.o [1]
    .bss                zero     0x200143e0     0x2c  neo6m.o [1]
    .bss                zero     0x2001440c    0x100  neo6m.o [1]
    .bss                zero     0x2001450c    0x104  obd2.o [1]
    .bss                zero     0x20014610    0x1c0  pin_repository.o [1]
    .bss                zero     0x200147d0      0x4  pin_repository.o [1]
    .bss                zero     0x200147d4    0x104  pin_repository.o [1]
    .bss                zero     0x200148d8      0x4  pin_repository.o [1]
    .bss                zero     0x200148dc     0x14  pin_repository.o [1]
    .bss                zero     0x200148f0     0x14  pin_repository.o [1]
    .bss                zero     0x20014904      0x4  poten.o [1]
    .bss                zero     0x20014908     0x40  poten.o [1]
    .bss                zero     0x20014948     0x14  pwm_lld.o [1]
    .bss                zero     0x2001495c     0x14  pwm_lld.o [1]
    .bss                zero     0x20014970      0x4  rpm_calculator.o [1]
    .bss                zero     0x20014974      0xc  rpm_calculator.o [1]
    .bss                zero     0x20014980    0x104  rtc_helper.o [1]
    .bss                zero     0x20014a84      0x4  rtc_helper.o [1]
    .bss                zero     0x20014a88      0x4  rtc_lld.o [1]
    .bss                zero     0x20014a8c    0x104  rusefi.o [1]
    .bss                zero     0x20014b90     0x14  rusefi.o [1]
    .bss                zero     0x20014ba4     0xc8  rusefi.o [1]
    .bss                zero     0x20014c6c     0x14  rusefi.o [1]
    .bss                zero     0x20014c80    0x8a8  rusefi.o [1]
    .bss                zero     0x20015528     0xc8  rusefi.o [1]
    .bss                zero     0x200155f0   0x1388  sensor_chart.o [1]
    .bss                zero     0x20016978     0x3c  sensor_chart.o [1]
    .bss                zero     0x200169b4      0x4  sensor_chart.o [1]
    .bss                zero     0x200169b8      0x4  sensor_chart.o [1]
    .bss                zero     0x200169bc     0x78  serial_lld.o [1]
    .bss                zero     0x20016a34     0x78  serial_lld.o [1]
    .bss                zero     0x20016aac     0x78  serial_lld.o [1]
    .bss                zero     0x20016b24    0x3e8  settings.o [1]
    .bss                zero     0x20016f0c     0x3c  settings.o [1]
    .bss                zero     0x20016f48     0x10  settings.o [1]
    .bss                zero     0x20016f58     0x4c  speed_density.o [1]
    .bss                zero     0x20016fa4     0x4c  speed_density.o [1]
    .bss                zero     0x20016ff0     0x4c  speed_density.o [1]
    .bss                zero     0x2001703c     0x1c  speed_density.o [1]
    .bss                zero     0x20017058     0x30  spi_lld.o [1]
    .bss                zero     0x20017088     0x30  spi_lld.o [1]
    .bss                zero     0x200170b8     0x30  spi_lld.o [1]
    .bss                zero     0x200170e8     0x10  status_loop.o [1]
    .bss                zero     0x200170f8    0x578  status_loop.o [1]
    .bss                zero     0x20017670     0x3c  status_loop.o [1]
    .bss                zero     0x200176ac    0x104  status_loop.o [1]
    .bss                zero     0x200177b0      0x4  status_loop.o [1]
    .bss                zero     0x200177b4      0x4  status_loop.o [1]
    .bss                zero     0x200177b8    0x104  status_loop.o [1]
    .bss                zero     0x200178bc     0x10  status_loop.o [1]
    .bss                zero     0x200178cc     0x10  status_loop.o [1]
    .bss                zero     0x200178dc     0x10  status_loop.o [1]
    .bss                zero     0x200178ec     0x10  status_loop.o [1]
    .bss                zero     0x200178fc      0x4  stm32_dma.o [1]
    .bss                zero     0x20017900     0x80  stm32_dma.o [1]
    .bss                zero     0x20017980      0x4  thermistors.o [1]
    .bss                zero     0x20017984     0x28  tps.o [1]
    .bss                zero     0x200179ac      0x4  tps.o [1]
    .bss                zero     0x200179b0      0x4  tps.o [1]
    .bss                zero     0x200179b4      0x4  trigger_central.o [1]
    .bss                zero     0x200179b8      0x4  trigger_central.o [1]
    .bss                zero     0x200179bc      0x4  trigger_central.o [1]
    .bss                zero     0x200179c0      0x4  trigger_central.o [1]
    .bss                zero     0x200179c4      0x4  trigger_central.o [1]
    .bss                zero     0x200179c8      0x4  trigger_central.o [1]
    .bss                zero     0x200179cc     0x10  trigger_central.o [1]
    .bss                zero     0x200179dc     0x10  trigger_decoder.o [1]
    .bss                zero     0x200179ec    0x10c  trigger_decoder.o [1]
    .bss                zero     0x20017af8      0x4  trigger_decoder.o [1]
    .bss                zero     0x20017afc     0x30  trigger_emulator.o [1]
    .bss                zero     0x20017b2c     0xfc  trigger_emulator_algo.o [1]
    .bss                zero     0x20017c28     0xfc  trigger_emulator_algo.o [1]
    .bss                zero     0x20017d24     0xfc  trigger_emulator_algo.o [1]
    .bss                zero     0x20017e20      0xc  trigger_emulator_algo.o [1]
    .bss                zero     0x20017e2c      0xc  trigger_emulator_algo.o [1]
    .bss                zero     0x20017e38    0x3f0  trigger_emulator_algo.o [1]
    .bss                zero     0x20018228      0x4  trigger_emulator_algo.o [1]
    .bss                zero     0x2001822c      0x4  trigger_emulator_algo.o [1]
    .bss                zero     0x20018230      0x4  trigger_emulator_algo.o [1]
    .bss                zero     0x20018234      0x4  trigger_input.o [1]
    .bss                zero     0x20018238      0x4  trigger_input.o [1]
    .bss                zero     0x2001823c    0x104  tunerstudio.o [1]
    .bss                zero     0x20018340      0x4  tunerstudio.o [1]
    .bss                zero     0x20018344    0x134  tunerstudio.o [1]
    .bss                zero     0x20018478      0x8  tunerstudio.o [1]
    .bss                zero     0x20018480      0x8  tunerstudio.o [1]
    .bss                zero     0x20018488     0x28  tunerstudio.o [1]
    .bss                zero     0x200184b0     0xc4  tunerstudio.o [1]
    .bss                zero     0x20018574   0x3bb8  tunerstudio.o [1]
    .bss                zero     0x2001c12c    0x12c  tunerstudio.o [1]
    .bss                zero     0x2001c258     0x14  usb_lld.o [1]
    .bss                zero     0x2001c26c      0x8  usb_lld.o [1]
    .bss                zero     0x2001c274     0x14  usbcfg.o [1]
    .bss                zero     0x2001c288     0x14  usbcfg.o [1]
    .bss                zero     0x2001c29c     0x14  usbcfg.o [1]
    .bss                zero     0x2001c2b0    0x258  usbcfg.o [1]
    .bss                zero     0x2001c508      0x4  vehicle_speed.o [1]
    .bss                zero     0x2001c50c      0x4  vehicle_speed.o [1]
    .bss                zero     0x2001c510      0x4  wave_analyzer.o [1]
    .bss                zero     0x2001c514      0x4  wave_analyzer.o [1]
    .bss                zero     0x2001c518      0x4  wave_chart.o [1]
    .bss                zero     0x2001c51c    0x104  wave_chart.o [1]
    .bss                zero     0x2001c620      0x4  wave_chart.o [1]
    .bss                zero     0x2001c624      0xc  wave_chart.o [1]
    .bss                zero     0x2001c630      0x4  cppinit.o [3]
    .bss                zero     0x2001c634      0x4  cppinit.o [3]
    .bss                zero     0x2001c638      0x8  xxmemxmalloc.o [3]
    .bss                zero     0x2001c640      0x4  xgetmemchunk.o [3]
    .bss                zero     0x2001c644      0x2  ff.o [1]
    .bss                zero     0x2001c646      0x2  spi_lld.o [1]
    .bss                zero     0x2001c648      0x2  spi_lld.o [1]
    .bss                zero     0x2001c64a      0x2  tunerstudio.o [1]
    .bss                zero     0x2001c64c      0x2  tunerstudio.o [1]
    .bss                zero     0x2001c64e      0x1  HIP9011.o [1]
    .bss                zero     0x2001c64f      0x1  HIP9011.o [1]
    .bss                zero     0x2001c650      0x1  HIP9011.o [1]
    .bss                zero     0x2001c651      0x1  board_test.o [1]
    .bss                zero     0x2001c652      0x1  console_io.o [1]
    .bss                zero     0x2001c653      0x1  console_io.o [1]
    .bss                zero     0x2001c654      0x1  console_io.o [1]
    .bss                zero     0x2001c655      0x1  datalogging.o [1]
    .bss                zero     0x2001c656      0x1  error_handling.o [1]
    .bss                zero     0x2001c657      0x1  flash_main.o [1]
    .bss                zero     0x2001c658      0x1  injector_central.o [1]
    .bss                zero     0x2001c659      0x1  injector_central.o [1]
    .bss                zero     0x2001c65a      0x1  map_averaging.o [1]
    .bss                zero     0x2001c65b      0x1  microsecond_timer.o [1]
    .bss                zero     0x2001c65c      0x1  mmc_card.o [1]
    .bss                zero     0x2001c65d      0x1  rusefi.o [1]
    .bss                zero     0x2001c65e      0x1  rusefi.o [1]
    .bss                zero     0x2001c65f      0x1  thermistors.o [1]
    .bss                zero     0x2001c660      0x1  tunerstudio.o [1]
    .bss                zero     0x2001c661      0x1  tunerstudio.o [1]
    .iar.dynexit                 0x2001c664    0x1a4  <Block>
      .iar.dynexit      uninit   0x2001c664      0xc  cppinit.o [3]
      .iar.dynexit      uninit   0x2001c670    0x198  <Block tail>
                               - 0x2001c808  0x1b808

"P2", part 2 of 2:                             0x400
  HEAP                           0x2001c808    0x400  <Block>
    HEAP                uninit   0x2001c808    0x400  <Block tail>
                               - 0x2001cc08    0x400

"A3":                                          0x400
  CSTACK                         0x2001fc00    0x400  <Block>
    CSTACK              const    0x2001fc00      0x0  cstartup.o [1]
    CSTACK              uninit   0x2001fc00    0x400  <Block tail>
                               - 0x20020000    0x400


*******************************************************************************
*** INIT TABLE
***

          Address     Size
          -------     ----
Zero (__iar_zero_init3)
    2 destination ranges, total size 0x2a4c2:
          0x10000000   0xf710
          0x200018b0  0x1adb2

Copy/lz77 (__iar_lz77_init3)
    1 source range, total size 0x65c (73% of destination):
          0x0803552c    0x65c
    1 destination range, total size 0x8ac:
          0x20001000    0x8ac

Extra (__iar_cstart_call_ctors)


*******************************************************************************
*** STACK USAGE
***

  Call Graph Root Category  Max Use  Total Use
  ------------------------  -------  ---------
  Program entry                   0          0
  Uncalled function             888    120 300


Uncalled function
  "endIntegration()" in HIP9011.o [1]: 0x0801a42f

  Maximum call chain                            *?* 416 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "endIntegration()" in HIP9011.o [1]               8
    "turnPinLow(NamedOutputPin *)"                   16
    "WaveChart::addWaveChartEvent3(char const *, char const *)"
                                                     40
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "setKnockThresh(float)" in HIP9011.o [1]: 0x0801a535

  Maximum call chain                            *?* 440 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setKnockThresh(float)" in HIP9011.o [1]         16
    "showHipInfo()" in HIP9011.o [1]                 40
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "intHoldCallback(trigger_event_e, unsigned int)" in HIP9011.o [1]: 0x0801a44d

  Maximum call chain                            *?* 648 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "EventQueue::executeAll(long long)")
                            functions with no stack usage info (example: "_port_switch") **)

    "intHoldCallback(trigger_event_e, unsigned int)" in HIP9011.o [1]
                                                     24
    "scheduleByAngle(int, scheduling_s *, float, void (*)(void *), void *, RpmCalculator *)"
                                                     40
    "scheduleTask(char const *, scheduling_s *, int, void (*)(void *), void *)"
                                                     32
    "Executor::scheduleByTime(scheduling_s *, long long, void (*)(void *), void *)"
                                                     40
    "Executor::scheduleTimerCallback()"              24
    "setHardwareUsTimer"                              8
    "gptStartOneShotI"                               16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "endOfSpiExchange(SPIDriver *)" in HIP9011.o [1]: 0x0801a59f

  Maximum call chain                                 8 bytes

    "endOfSpiExchange(SPIDriver *)" in HIP9011.o [1]
                                                     8
    "spi_lld_unselect"                               0

Uncalled function
  "startIntegration()" in HIP9011.o [1]: 0x0801a411

  Maximum call chain                            *?* 416 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "startIntegration()" in HIP9011.o [1]             8
    "turnPinHigh(NamedOutputPin *)"                  16
    "WaveChart::addWaveChartEvent3(char const *, char const *)"
                                                     40
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "setMaxKnockSubDeg(int)" in HIP9011.o [1]: 0x0801a513

  Maximum call chain                            *?* 440 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setMaxKnockSubDeg(int)" in HIP9011.o [1]        16
    "showHipInfo()" in HIP9011.o [1]                 40
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setPrescalerAndSDO(int)" in HIP9011.o [1]: 0x0801a557

  Maximum call chain                                 0 bytes

    "setPrescalerAndSDO(int)" in HIP9011.o [1]       0

Uncalled function
  "setBand(float)" in HIP9011.o [1]: 0x0801a563

  Maximum call chain                            *?* 440 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setBand(float)" in HIP9011.o [1]                16
    "showHipInfo()" in HIP9011.o [1]                 40
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setGain(float)" in HIP9011.o [1]: 0x0801a581

  Maximum call chain                            *?* 440 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setGain(float)" in HIP9011.o [1]                16
    "showHipInfo()" in HIP9011.o [1]                 40
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "hipThread(void *)" in HIP9011.o [1]: 0x0801a939

  Maximum call chain                            *?* 536 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "hipThread(void *)" in HIP9011.o [1]              8
    "hipStartupCode()" in HIP9011.o [1]               8
    "spiStart"                                       16
    "spi_lld_start"                                  16
    "dmaStreamAllocate"                              24
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "executorCallback(void *)" in SingleTimerExecutor.o [1]: 0x0801dc57

  Maximum call chain                            *?* 528 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "EventQueue::executeAll(long long)")
                            functions with no stack usage info (example: "_port_switch") **)

    "executorCallback(void *)" in SingleTimerExecutor.o [1]
                                                      8
    "Executor::onTimerCallback()"                     8
    "Executor::scheduleTimerCallback()"              24
    "setHardwareUsTimer"                              8
    "gptStartOneShotI"                               16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setDecelThr(float)" in accel_enrichment.o [1]: 0x08014b01

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setDecelThr(float)" in accel_enrichment.o [1]
                                                     16
    "accelInfo()" in accel_enrichment.o [1]          16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setDecelMult(float)" in accel_enrichment.o [1]: 0x08014b21

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setDecelMult(float)" in accel_enrichment.o [1]
                                                     16
    "accelInfo()" in accel_enrichment.o [1]          16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setMapAccelThr(float)" in accel_enrichment.o [1]: 0x08014a81

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setMapAccelThr(float)" in accel_enrichment.o [1]
                                                     16
    "accelInfo()" in accel_enrichment.o [1]          16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setTpsAccelThr(float)" in accel_enrichment.o [1]: 0x08014ac1

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setTpsAccelThr(float)" in accel_enrichment.o [1]
                                                     16
    "accelInfo()" in accel_enrichment.o [1]          16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setMapAccelMult(float)" in accel_enrichment.o [1]: 0x08014aa1

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setMapAccelMult(float)" in accel_enrichment.o [1]
                                                     16
    "accelInfo()" in accel_enrichment.o [1]          16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setTpsAccelMult(float)" in accel_enrichment.o [1]: 0x08014ae1

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setTpsAccelMult(float)" in accel_enrichment.o [1]
                                                     16
    "accelInfo()" in accel_enrichment.o [1]          16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "pwmpcb_fast(PWMDriver *)" in adc_inputs.o [1]: 0x08005657

  Maximum call chain                            *?* 496 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "pwmpcb_fast(PWMDriver *)" in adc_inputs.o [1]
                                                      8
    "adcStartConversionI"                            24
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "pwmpcb_slow(PWMDriver *)" in adc_inputs.o [1]: 0x080055cd

  Maximum call chain                            *?* 496 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "pwmpcb_slow(PWMDriver *)" in adc_inputs.o [1]
                                                      8
    "adcStartConversionI"                            24
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "printAdcValue(adc_channel_e)" in adc_inputs.o [1]: 0x08005a69

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "printAdcValue(adc_channel_e)" in adc_inputs.o [1]
                                                     16
    "getInternalAdcValue(char const *, adc_channel_e)"
                                                     16
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "adc_callback_slow(ADCDriver *, unsigned short *, unsigned int)" in adc_inputs.o [1]: 0x08005b8b

  Maximum call chain                            *?* 192 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf") **)

    "adc_callback_slow(ADCDriver *, unsigned short *, unsigned int)" in adc_inputs.o [1]
                                                     24
    "firmwareError"                                  24
    "chvprintf"                                      88
    "ftoa"                                           32
    "__aeabi_dsub"                                   12
    "__iar_dsub"                                     12

Uncalled function
  "setAdcDebugReporting(int)" in adc_inputs.o [1]: 0x08005b7d

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setAdcDebugReporting(int)" in adc_inputs.o [1]
                                                      8
    "printStatus()" in adc_inputs.o [1]               8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "adc_lld_serve_rx_interrupt" in adc_lld.o [1]: 0x0801de75

  Maximum call chain                            *?* 336 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "adc_lld_serve_rx_interrupt" in adc_lld.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "adc_lld_serve_rx_interrupt" in adc_lld.o [1]
                                                     24
    "chSchReadyI"                                    16
    "chDbgCheckClassI"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector88": 0x0801dfc3

  Maximum call chain                            *?* 328 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector88")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector88"                                       16
    "chSchReadyI"                                    16
    "chDbgCheckClassI"                                8
    "chDbgPanic"                                      0

Uncalled function
  "AltCtrlThread(int)" in alternatorController.o [1]: 0x080097fd

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "AltCtrlThread(int)" in alternatorController.o [1]
                                                     72
    "getVBatt()"                                      8
    "getInternalAdcValue(char const *, adc_channel_e)"
                                                     16
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "applyAlternatorPinState(PwmConfig *, int)" in alternatorController.o [1]: 0x08009a21

  Maximum call chain                            *?* 192 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf") **)

    "applyAlternatorPinState(PwmConfig *, int)" in alternatorController.o [1]
                                                     24
    "firmwareError"                                  24
    "chvprintf"                                      88
    "ftoa"                                           32
    "__aeabi_dsub"                                   12
    "__iar_dsub"                                     12

Uncalled function
  "__early_init": 0x08029615

  Maximum call chain                                 8 bytes

    "__early_init"                                   8
    "stm32_clock_init"                               0

Uncalled function
  "mmc_lld_is_card_inserted": 0x0802961d

  Maximum call chain                                 0 bytes

    "mmc_lld_is_card_inserted"                       0

Uncalled function
  "ivThread(int)" in board_test.o [1]: 0x08018b9f

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "ivThread(int)" in board_test.o [1]              16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setIndex(int)" in board_test.o [1]: 0x08018b61

  Maximum call chain                                 8 bytes

    "setIndex(int)" in board_test.o [1]              8
    "nextStep()" in board_test.o [1]                 0

Uncalled function
  "canInfo()" in can_hw.o [1]: 0x0801ff19

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "canInfo()" in can_hw.o [1]                      16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "canThread(void *)" in can_hw.o [1]: 0x0801fe91

  Maximum call chain                            *?* 560 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "canThread(void *)" in can_hw.o [1]               8
    "canRead()" in can_hw.o [1]                       8
    "obdOnCanPacketRx(CANRxFrame *)"                  8
    "handleGetDataRequest(CANRxFrame *)" in obd2.o [1]
                                                     16
    "sendMessage()"                                   8
    "sendMessage2(int)"                               8
    "canTransmit"                                    24
    "chSemWaitTimeoutS"                              16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector13C": 0x08028949

  Maximum call chain                            *?* 512 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector13C"                                       8
    "can_lld_tx_handler" in can_lld.o [1]             8
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector140": 0x08028961

  Maximum call chain                            *?* 520 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector140"                                       8
    "can_lld_rx0_handler" in can_lld.o [1]           16
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector144": 0x08028979

  Maximum call chain                            *?* 520 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector144"                                       8
    "can_lld_rx1_handler" in can_lld.o [1]           16
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector148": 0x08028991

  Maximum call chain                            *?* 528 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector148"                                       8
    "can_lld_sce_handler" in can_lld.o [1]           24
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector8C": 0x080288e9

  Maximum call chain                            *?* 512 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector8C"                                        8
    "can_lld_tx_handler" in can_lld.o [1]             8
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector90": 0x08028901

  Maximum call chain                            *?* 520 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector90"                                        8
    "can_lld_rx0_handler" in can_lld.o [1]           16
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector94": 0x08028919

  Maximum call chain                            *?* 520 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector94"                                        8
    "can_lld_rx1_handler" in can_lld.o [1]           16
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector98": 0x08028931

  Maximum call chain                            *?* 528 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector98"                                        8
    "can_lld_sce_handler" in can_lld.o [1]           24
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "SVCallVector": 0x08022049

  Maximum call chain                                 0 bytes

    "SVCallVector"                                   0

Uncalled function
  "SysTickVector": 0x08022021

  Maximum call chain                            *?* 320 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chSysTimerHandlerI")
                            functions with no stack usage info (example: "_port_switch") **)

    "SysTickVector"                                   8
    "chSysTimerHandlerI"                             16
    "chDbgCheckClassI"                                8
    "chDbgPanic"                                      0

Uncalled function
  "chCoreAlloc": 0x08029437

  Maximum call chain                            *?* 328 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "chCoreAlloc"                                    16
    "chCoreAllocI"                                   16
    "chDbgCheckClassI"                                8
    "chDbgPanic"                                      0

Uncalled function
  "wakeup" in chschd.o [1]: 0x0801eabf

  Maximum call chain                            *?* 328 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "wakeup" in chschd.o [1]                         16
    "chSchReadyI"                                    16
    "chDbgCheckClassI"                                8
    "chDbgPanic"                                      0

Uncalled function
  "chSchDoReschedule": 0x0801ec75

  Maximum call chain                            *?* 328 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "chSchDoReschedule"                               8
    "chSchDoRescheduleBehind"                         8
    "chSchReadyI"                                    16
    "chDbgCheckClassI"                                8
    "chDbgPanic"                                      0

Uncalled function
  "_idle_thread": 0x080280b9

  Maximum call chain                                 0 bytes

    "_idle_thread"                                   0

Uncalled function
  "chThdExit": 0x080141a7

  Maximum call chain                            *?* 336 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "chThdExit"                                       8
    "chThdExitS"                                     16
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "echo(int)" in cli_registry.o [1]: 0x08009d87

  Maximum call chain                            *?* 176 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf") **)

    "echo(int)" in cli_registry.o [1]                 8
    "print"                                          24
    "chvprintf"                                      88
    "ftoa"                                           32
    "__aeabi_dsub"                                   12
    "__iar_dsub"                                     12

Uncalled function
  "handleConsoleLine": 0x0800a1f3

  Maximum call chain                            *?* 464 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "handleConsoleLine"                              16
    "handleConsoleLineInternal(char const *, int)" in cli_registry.o [1]
                                                     32
    "handleActionWithParameter(TokenCallback *, char *)"
                                                     56
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "switchToBinaryProtocol()" in console_io.o [1]: 0x0800ac45

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "switchToBinaryProtocol()" in console_io.o [1]
                                                      8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "consoleThreadThreadEntryPoint(void *)" in console_io.o [1]: 0x0800ab85

  Maximum call chain                            *?* 768 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "consoleThreadThreadEntryPoint(void *)" in console_io.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "consoleThreadThreadEntryPoint(void *)" in console_io.o [1]
                                                     16
    "runBinaryProtocolLoop(ts_channel_s *, bool)"
                                                     56
    "tunerStudioHandleCrcCommand(ts_channel_s *, char *, int)"
                                                     40
    "handleOutputChannelsCommand(ts_channel_s *, ts_response_format_e)"
                                                     16
    "prepareTunerStudioOutputs()"                     8
    "updateTunerStudioState(TunerStudioOutputChannels *)"
                                                     48
    "getFuelMs(int)"                                 24
    "getBaseFuel(int)"                               16
    "getRealMafFuel(float, int)"                     24
    "Map3D<(int)16, (int)16>::getValue(float, float)"
                                                     24
    "interpolate3d(float, float *, int, float, float *, int, float **)"
                                                     96
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "icuWidthCallback(ICUDriver *)" in digital_input_hw.o [1]: 0x0801ed3d

  Maximum call chain                            *?* 192 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf") **)

    "icuWidthCallback(ICUDriver *)" in digital_input_hw.o [1]
                                                     16
    "finddigital_input_s(ICUDriver *)" in digital_input_hw.o [1]
                                                      8
    "firmwareError"                                  24
    "chvprintf"                                      88
    "ftoa"                                           32
    "__aeabi_dsub"                                   12
    "__iar_dsub"                                     12

Uncalled function
  "icuPeriordCallBack(ICUDriver *)" in digital_input_hw.o [1]: 0x0801ed53

  Maximum call chain                            *?* 192 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf") **)

    "icuPeriordCallBack(ICUDriver *)" in digital_input_hw.o [1]
                                                     16
    "finddigital_input_s(ICUDriver *)" in digital_input_hw.o [1]
                                                      8
    "firmwareError"                                  24
    "chvprintf"                                      88
    "ftoa"                                           32
    "__aeabi_dsub"                                   12
    "__iar_dsub"                                     12

Uncalled function
  "sayNothing()" in eficonsole.o [1]: 0x0800b237

  Maximum call chain                                 0 bytes

    "sayNothing()" in eficonsole.o [1]               0

Uncalled function
  "cmd_threads()" in eficonsole.o [1]: 0x0800b33b

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "cmd_threads()" in eficonsole.o [1]              32
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "myerror()" in eficonsole.o [1]: 0x0800b227

  Maximum call chain                            *?* 176 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf") **)

    "myerror()" in eficonsole.o [1]                   8
    "firmwareError"                                  24
    "chvprintf"                                      88
    "ftoa"                                           32
    "__aeabi_dsub"                                   12
    "__iar_dsub"                                     12

Uncalled function
  "myfatal()" in eficonsole.o [1]: 0x0800b219

  Maximum call chain                            *?* 472 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "myfatal()" in eficonsole.o [1]                   8
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setEtbIFactor(float)" in electronic_throttle.o [1]: 0x0800ba83

  Maximum call chain                            *?* 480 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setEtbIFactor(float)" in electronic_throttle.o [1]
                                                     16
    "showEthInfo()" in electronic_throttle.o [1]
                                                     32
    "getTPS()"                                        8
    "getPrimatyRawTPS()" in tps.o [1]                 8
    "getTpsValue(int)"                               16
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "setEtbPFactor(float)" in electronic_throttle.o [1]: 0x0800ba63

  Maximum call chain                            *?* 480 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setEtbPFactor(float)" in electronic_throttle.o [1]
                                                     16
    "showEthInfo()" in electronic_throttle.o [1]
                                                     32
    "getTPS()"                                        8
    "getPrimatyRawTPS()" in tps.o [1]                 8
    "getTpsValue(int)"                               16
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "setThrottleConsole(int)" in electronic_throttle.o [1]: 0x0800b931

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setThrottleConsole(int)" in electronic_throttle.o [1]
                                                     16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "etbThread(void *)" in electronic_throttle.o [1]: 0x0800b8c9

  Maximum call chain                            *?* 448 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "etbThread(void *)" in electronic_throttle.o [1]
                                                     16
    "getTPS()"                                        8
    "getPrimatyRawTPS()" in tps.o [1]                 8
    "getTpsValue(int)"                               16
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "applyPinState2(PwmConfig *, int)": 0x0800bae1

  Maximum call chain                            *?* 208 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf") **)

    "applyPinState2(PwmConfig *, int)"               16
    "applyPinState(PwmConfig *, int)"                24
    "firmwareError"                                  24
    "chvprintf"                                      88
    "ftoa"                                           32
    "__aeabi_dsub"                                   12
    "__iar_dsub"                                     12

Uncalled function
  "invokeEnginePreCalculate(Engine *)" in engine.o [1]: 0x08013a2b

  Maximum call chain                            *?* 464 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "invokeEnginePreCalculate(Engine *)" in engine.o [1]
                                                      8
    "Engine::preCalculate()"                         24
    "interpolate2d(float, float *, float *, int)"
                                                     32
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "resetAccel()" in engine_controller.o [1]: 0x08006dc1

  Maximum call chain                                 8 bytes

    "resetAccel()" in engine_controller.o [1]        8
    "AccelEnrichmemnt::reset()"                      0

Uncalled function
  "getKnockInfo()" in engine_controller.o [1]: 0x08006e1f

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "getKnockInfo()" in engine_controller.o [1]       8
    "Engine::printKnockState()"                      16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "printAnalogInfo()" in engine_controller.o [1]: 0x080069a1

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "printAnalogInfo()" in engine_controller.o [1]
                                                      8
    "printAnalogChannelInfo(char const *, adc_channel_e)" in engine_controller.o [1]
                                                     16
    "printAnalogChannelInfoExt(char const *, adc_channel_e, float, float)" in engine_controller.o [1]
                                                     72
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "periodicSlowCallback(Engine *)" in engine_controller.o [1]: 0x08006801

  Maximum call chain                            *?* 688 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "periodicSlowCallback(Engine *)" in engine_controller.o [1]
                                                     16
    "runFsio()"                                       8
    "setPinState(char const *, OutputPin *, LEElement *, Engine *)" in fsio_impl.o [1]
                                                     40
    "LECalculator::getValue2(LEElement *, Engine *)"
                                                     16
    "LECalculator::getValue(Engine *)"               24
    "LECalculator::doJob(Engine *, LEElement *)"
                                                     40
    "getLEValue(Engine *, FLStack<float, (int)32> *, le_action_e)"
                                                     24
    "getCoolantTemperature()"                        16
    "getTemperatureC(ThermistorConf *, ThermistorMath *)"
                                                     24
    "getKelvinTemperature(ThermistorConf *, float, ThermistorMath *)"
                                                     24
    "ThermistorMath::init(thermistor_conf_s *)"      16
    "prepareThermistorCurve(thermistor_conf_s *, thermistor_curve_s *)" in thermistors.o [1]
                                                     80
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "getBit(int, int)" in engine_controller.o [1]: 0x08006c5d

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "getBit(int, int)" in engine_controller.o [1]
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setBit(char const *, char const *, char const *)" in engine_controller.o [1]: 0x08006b53

  Maximum call chain                            *?* 576 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setBit(char const *, char const *, char const *)" in engine_controller.o [1]
                                                     40
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setInt(int, int)" in engine_controller.o [1]: 0x08006cd5

  Maximum call chain                            *?* 552 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setInt(int, int)" in engine_controller.o [1]
                                                     16
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "csThread()" in engine_controller.o [1]: 0x080065dd

  Maximum call chain                            *?* 400 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "csThread()" in engine_controller.o [1]          16
    "RpmCalculator::rpm()"                           16
    "RpmCalculator::isRunning()"                     16
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "setFloat(char const *, char const *)" in engine_controller.o [1]: 0x08006d49

  Maximum call chain                            *?* 424 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFloat(char const *, char const *)" in engine_controller.o [1]
                                                     32
    "getFloat(int)" in engine_controller.o [1]       32
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setShort(int, int)" in engine_controller.o [1]: 0x08006c33

  Maximum call chain                            *?* 552 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setShort(int, int)" in engine_controller.o [1]
                                                     16
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector138": 0x08029a21

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector138")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector138"                                       8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector170": 0x08029a47

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector170")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector170"                                       8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector44": 0x080299af

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector44")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector44"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector4C": 0x08029a6d

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector4C")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector4C"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector58": 0x08029819

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector58")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector58"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector5C": 0x0802983b

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector5C")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector5C"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector60": 0x0802985d

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector60")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector60"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector64": 0x0802987f

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector64")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector64"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector68": 0x080298a1

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector68")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector68"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector9C": 0x080298c3

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector9C")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector9C"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "VectorE0": 0x08029931

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "VectorE0")
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorE0"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "VectorE4": 0x080299d5

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "VectorE4")
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorE4"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "VectorE8": 0x080299fb

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "VectorE8")
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorE8"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "rewriteConfig()" in flash_main.o [1]: 0x08005479

  Maximum call chain                            *?* 848 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "rewriteConfig()" in flash_main.o [1]             8
    "doResetConfiguration()" in flash_main.o [1]
                                                      8
    "resetConfigurationExt(Logging *, engine_type_e)"
                                                     16
    "applyNonPersistentConfiguration(Logging *)"
                                                      8
    "TriggerShape::initializeTriggerShape(Logging *)"
                                                     24
    "TriggerShape::calculateTriggerSynchPoint()"
                                                     40
    "findTriggerZeroEventIndex(TriggerShape *, trigger_config_s const *)"
                                                    216
    "doFindTrigger(TriggerStimulatorHelper *, TriggerShape *, trigger_config_s const *, TriggerState *)" in trigger_decoder.o [1]
                                                     32
    "TriggerStimulatorHelper::nextStep(TriggerState *, TriggerShape *, int, trigger_config_s const *)"
                                                     64
    "TriggerState::decodeTriggerEvent(trigger_event_e, long long)"
                                                     72
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setFsioSetting(float, float)" in fsio_impl.o [1]: 0x080115dd

  Maximum call chain                            *?* 440 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFsioSetting(float, float)" in fsio_impl.o [1]
                                                     16
    "showFsioInfo()" in fsio_impl.o [1]              40
    "showFsio(char const *, LEElement *)" in fsio_impl.o [1]
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setFsioInputPin(char const *, char const *)" in fsio_impl.o [1]: 0x08011049

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFsioInputPin(char const *, char const *)" in fsio_impl.o [1]
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setFsioFrequency(int, int)" in fsio_impl.o [1]: 0x08011629

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFsioFrequency(int, int)" in fsio_impl.o [1]
                                                     16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setFsioOutputPin(char const *, char const *)" in fsio_impl.o [1]: 0x080110bd

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFsioOutputPin(char const *, char const *)" in fsio_impl.o [1]
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setFsioExpression(char const *, char const *, Engine *)" in fsio_impl.o [1]: 0x08011679

  Maximum call chain                            *?* 448 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFsioExpression(char const *, char const *, Engine *)" in fsio_impl.o [1]
                                                     24
    "showFsioInfo()" in fsio_impl.o [1]              40
    "showFsio(char const *, LEElement *)" in fsio_impl.o [1]
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "eval(char *, Engine *)" in fsio_impl.o [1]: 0x08011701

  Maximum call chain                            *?* 648 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "eval(char *, Engine *)" in fsio_impl.o [1]      24
    "LECalculator::getValue2(LEElement *, Engine *)"
                                                     16
    "LECalculator::getValue(Engine *)"               24
    "LECalculator::doJob(Engine *, LEElement *)"
                                                     40
    "getLEValue(Engine *, FLStack<float, (int)32> *, le_action_e)"
                                                     24
    "getCoolantTemperature()"                        16
    "getTemperatureC(ThermistorConf *, ThermistorMath *)"
                                                     24
    "getKelvinTemperature(ThermistorConf *, float, ThermistorMath *)"
                                                     24
    "ThermistorMath::init(thermistor_conf_s *)"      16
    "prepareThermistorCurve(thermistor_conf_s *, thermistor_curve_s *)" in thermistors.o [1]
                                                     80
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "Vector108": 0x08029651

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "gpt_lld_serve_interrupt" in gpt_lld.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector108"                                       8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "sendI2Cbyte(int, int)" in hardware.o [1]: 0x08017f75

  Maximum call chain                                 0 bytes

    "sendI2Cbyte(int, int)" in hardware.o [1]        0

Uncalled function
  "adcConfigListener(Engine *)" in hardware.o [1]: 0x08018067

  Maximum call chain                                 8 bytes

    "adcConfigListener(Engine *)" in hardware.o [1]
                                                     8
    "calcFastAdcIndexes()" in hardware.o [1]         0

Uncalled function
  "adc_callback_fast(ADCDriver *, unsigned short *, unsigned int)": 0x08017f77

  Maximum call chain                            *?* 472 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "adc_callback_fast(ADCDriver *, unsigned short *, unsigned int)"
                                                     16
    "mapAveragingCallback(unsigned short)"           24
    "getMapByVoltage(float)"                         16
    "decodePressure(float, air_pressure_sensor_config_s *)"
                                                     16
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "VectorBC": 0x0802a263

  Maximum call chain                            *?* 344 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorBC"                                        8
    "i2c_lld_serve_event_interrupt" in i2c_lld.o [1]
                                                     24
    "chSchReadyI"                                    16
    "chDbgCheckClassI"                                8
    "chDbgPanic"                                      0

Uncalled function
  "VectorC0": 0x0802a27b

  Maximum call chain                            *?* 336 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorC0"                                        8
    "i2c_lld_serve_error_interrupt" in i2c_lld.o [1]
                                                     16
    "chSchReadyI"                                    16
    "chDbgCheckClassI"                                8
    "chDbgPanic"                                      0

Uncalled function
  "VectorA0": 0x08019b17

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "icu_lld_serve_interrupt" in icu_lld.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorA0"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "VectorA4": 0x08019abf

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "icu_lld_serve_interrupt" in icu_lld.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorA4"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "VectorAC": 0x08019ad5

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "icu_lld_serve_interrupt" in icu_lld.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorAC"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "VectorB0": 0x08019aeb

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "icu_lld_serve_interrupt" in icu_lld.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorB0"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "VectorB4": 0x08019b01

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "icu_lld_serve_interrupt" in icu_lld.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorB4"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "setIdleRpmAction(int)" in idle_thread.o [1]: 0x08016fc3

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setIdleRpmAction(int)" in idle_thread.o [1]
                                                      8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setIdleValvePosition(int)" in idle_thread.o [1]: 0x08016ea9

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setIdleValvePosition(int)" in idle_thread.o [1]
                                                      8
    "doSetIdleValvePosition(int)" in idle_thread.o [1]
                                                     16
    "interpolate2d(float, float *, float *, int)"
                                                     32
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "setIdleControlEnabled(int)" in idle_thread.o [1]: 0x08016d89

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setIdleControlEnabled(int)" in idle_thread.o [1]
                                                      8
    "showIdleInfo()" in idle_thread.o [1]            24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "applyIdleSolenoidPinState(PwmConfig *, int)" in idle_thread.o [1]: 0x08016fdd

  Maximum call chain                            *?* 192 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf") **)

    "applyIdleSolenoidPinState(PwmConfig *, int)" in idle_thread.o [1]
                                                     24
    "firmwareError"                                  24
    "chvprintf"                                      88
    "ftoa"                                           32
    "__aeabi_dsub"                                   12
    "__iar_dsub"                                     12

Uncalled function
  "ivThread(int)" in idle_thread.o [1]: 0x08016ecf

  Maximum call chain                            *?* 512 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "ivThread(int)" in idle_thread.o [1]             24
    "IdleValveState::getIdle(int, unsigned int)"
                                                     24
    "changeValue(IdleValveState *, int, int, char const *, float)" in idle_controller.o [1]
                                                     32
    "getTPS()"                                        8
    "getPrimatyRawTPS()" in tps.o [1]                 8
    "getTpsValue(int)"                               16
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "sparkbench(char const *, char const *, char const *)" in injector_central.o [1]: 0x08015829

  Maximum call chain                            *?* 424 bytes
    (** call graph contains recursive functions (example: "atoi")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "sparkbench(char const *, char const *, char const *)" in injector_central.o [1]
                                                     24
    "sparkbench2(char const *, char const *, char const *, char const *, char const *)" in injector_central.o [1]
                                                     40
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "benchThread(int)" in injector_central.o [1]: 0x08015843

  Maximum call chain                            *?* 432 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "benchThread(int)" in injector_central.o [1]
                                                      8
    "runBench(brain_pin_e, OutputPin *, float, float, float, int)" in injector_central.o [1]
                                                     64
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setInjectorEnabled(int, int)" in injector_central.o [1]: 0x080154e5

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setInjectorEnabled(int, int)" in injector_central.o [1]
                                                     16
    "printStatus()" in injector_central.o [1]         8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "fuelbench(char const *, char const *, char const *)" in injector_central.o [1]: 0x080157ab

  Maximum call chain                            *?* 424 bytes
    (** call graph contains recursive functions (example: "atoi")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "fuelbench(char const *, char const *, char const *)" in injector_central.o [1]
                                                     24
    "fuelbench2(char const *, char const *, char const *, char const *, char const *)" in injector_central.o [1]
                                                     40
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "fuelPumpBench()": 0x0801578d

  Maximum call chain                            *?* 104 bytes
    (** call graph contains recursive functions (example: "atoi") **)

    "fuelPumpBench()"                                16
    "pinbench(char const *, char const *, char const *, char const *, OutputPin *, brain_pin_e)" in injector_central.o [1]
                                                     32
    "atoff"                                          40
    "indexOf"                                        16
    "efiStrlen"                                       0

Uncalled function
  "fanBench()": 0x0801573b

  Maximum call chain                            *?* 104 bytes
    (** call graph contains recursive functions (example: "atoi") **)

    "fanBench()"                                     16
    "pinbench(char const *, char const *, char const *, char const *, OutputPin *, brain_pin_e)" in injector_central.o [1]
                                                     32
    "atoff"                                          40
    "indexOf"                                        16
    "efiStrlen"                                       0

Uncalled function
  "milBench()": 0x08015761

  Maximum call chain                            *?* 104 bytes
    (** call graph contains recursive functions (example: "atoi") **)

    "milBench()"                                     16
    "pinbench(char const *, char const *, char const *, char const *, OutputPin *, brain_pin_e)" in injector_central.o [1]
                                                     32
    "atoff"                                          40
    "indexOf"                                        16
    "efiStrlen"                                       0

Uncalled function
  "testBinary()" in interpolation.o [1]: 0x08008e35

  Maximum call chain                            *?* 400 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "testBinary()" in interpolation.o [1]            40
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "extCallback(EXTDriver *, unsigned int)" in joystick.o [1]: 0x080202e9

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "MenuTree::enterSubMenu()")
                            functions with no stack usage info (example: "_port_switch") **)

    "extCallback(EXTDriver *, unsigned int)" in joystick.o [1]
                                                     24
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "joystickInfo()" in joystick.o [1]: 0x080203d3

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "joystickInfo()" in joystick.o [1]                8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "lcdInfo()" in lcd_HD44780.o [1]: 0x08019189

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "lcdInfo()" in lcd_HD44780.o [1]                  8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "showMainInfo(Engine *)" in main_trigger_callback.o [1]: 0x08016a63

  Maximum call chain                            *?* 616 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "showMainInfo(Engine *)" in main_trigger_callback.o [1]
                                                     32
    "getFuelMs(int)"                                 24
    "getBaseFuel(int)"                               16
    "getRealMafFuel(float, int)"                     24
    "Map3D<(int)16, (int)16>::getValue(float, float)"
                                                     24
    "interpolate3d(float, float *, int, float, float *, int, float **)"
                                                     96
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "showTriggerHistogram()" in main_trigger_callback.o [1]: 0x08016a3d

  Maximum call chain                                16 bytes

    "showTriggerHistogram()" in main_trigger_callback.o [1]
                                                     8
    "showMainHistogram"                              8
    "printHistogram(Logging *, histogram_s *)"       0

Uncalled function
  "endSimultaniousInjection(Engine *)" in main_trigger_callback.o [1]: 0x08016127

  Maximum call chain                            *?* 424 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "endSimultaniousInjection(Engine *)" in main_trigger_callback.o [1]
                                                     16
    "turnPinLow(NamedOutputPin *)"                   16
    "WaveChart::addWaveChartEvent3(char const *, char const *)"
                                                     40
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "startSimultaniousInjection(Engine *)" in main_trigger_callback.o [1]: 0x08016101

  Maximum call chain                            *?* 424 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "startSimultaniousInjection(Engine *)" in main_trigger_callback.o [1]
                                                     16
    "turnPinHigh(NamedOutputPin *)"                  16
    "WaveChart::addWaveChartEvent3(char const *, char const *)"
                                                     40
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "mainTriggerCallback(trigger_event_e, unsigned int)": 0x080166ad

  Maximum call chain                            *?* 752 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "EventQueue::executeAll(long long)")
                            functions with no stack usage info (example: "_port_switch") **)

    "mainTriggerCallback(trigger_event_e, unsigned int)"
                                                     32
    "handleFuel(unsigned int, int)" in main_trigger_callback.o [1]
                                                     32
    "handleFuelInjectionEvent(InjectionEvent *, int)" in main_trigger_callback.o [1]
                                                     48
    "scheduleOutput(OutputSignal_struct *, long long, float, float)"
                                                     48
    "scheduleByTime(char const *, scheduling_s *, long long, void (*)(void *), void *)"
                                                     40
    "Executor::scheduleByTime(scheduling_s *, long long, void (*)(void *), void *)"
                                                     40
    "Executor::scheduleTimerCallback()"              24
    "setHardwareUsTimer"                              8
    "gptStartOneShotI"                               16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "testMil()" in malfunction_indicator.o [1]: 0x08015c0f

  Maximum call chain                                16 bytes

    "testMil()" in malfunction_indicator.o [1]       8
    "addError"                                       8
    "find_position" in malfunction_central.o [1]
                                                     0

Uncalled function
  "mfiThread()" in malfunction_indicator.o [1]: 0x08015bd5

  Maximum call chain                            *?* 448 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            functions with no stack usage info (example: "_port_switch") **)

    "mfiThread()" in malfunction_indicator.o [1]
                                                     56
    "DisplayErrorCode(int, int)" in malfunction_indicator.o [1]
                                                     24
    "blink_digits(int, int)" in malfunction_indicator.o [1]
                                                     16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "printMAPInfo()" in map.o [1]: 0x080146ed

  Maximum call chain                            *?* 480 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "printMAPInfo()" in map.o [1]                    24
    "getMap()"                                        8
    "getRawMap()"                                    16
    "getMapByVoltage(float)"                         16
    "decodePressure(float, air_pressure_sensor_config_s *)"
                                                     16
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "digitalMapWidthCallback()" in map.o [1]: 0x080146a3

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "digitalMapWidthCallback()" in map.o [1]         16
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "endAveraging(void *)" in map_averaging.o [1]: 0x08015df9

  Maximum call chain                            *?* 424 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "endAveraging(void *)" in map_averaging.o [1]
                                                     16
    "turnPinLow(NamedOutputPin *)"                   16
    "WaveChart::addWaveChartEvent3(char const *, char const *)"
                                                     40
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "showMapStats()" in map_averaging.o [1]: 0x08015fe3

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "showMapStats()" in map_averaging.o [1]           8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "startAveraging(void *)" in map_averaging.o [1]: 0x08015c87

  Maximum call chain                            *?* 424 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "startAveraging(void *)" in map_averaging.o [1]
                                                     16
    "turnPinHigh(NamedOutputPin *)"                  16
    "WaveChart::addWaveChartEvent3(char const *, char const *)"
                                                     40
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "mapAveragingCallback(trigger_event_e, unsigned int)" in map_averaging.o [1]: 0x08015e59

  Maximum call chain                            *?* 672 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "EventQueue::executeAll(long long)")
                            functions with no stack usage info (example: "_port_switch") **)

    "mapAveragingCallback(trigger_event_e, unsigned int)" in map_averaging.o [1]
                                                     48
    "scheduleByAngle(int, scheduling_s *, float, void (*)(void *), void *, RpmCalculator *)"
                                                     40
    "scheduleTask(char const *, scheduling_s *, int, void (*)(void *), void *)"
                                                     32
    "Executor::scheduleByTime(scheduling_s *, long long, void (*)(void *), void *)"
                                                     40
    "Executor::scheduleTimerCallback()"              24
    "setHardwareUsTimer"                              8
    "gptStartOneShotI"                               16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "showEgtInfo()" in max31855.o [1]: 0x0801d961

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "showEgtInfo()" in max31855.o [1]                 8
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "egtRead()" in max31855.o [1]: 0x0801daa5

  Maximum call chain                            *?* 568 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "egtRead()" in max31855.o [1]                    32
    "readEgtPacket(int)" in max31855.o [1]           16
    "spiStart"                                       16
    "spi_lld_start"                                  16
    "dmaStreamAllocate"                              24
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "get" in memstreams.o [1]: 0x0800af95

  Maximum call chain                                 4 bytes

    "get" in memstreams.o [1]                        4

Uncalled function
  "put" in memstreams.o [1]: 0x0800af6d

  Maximum call chain                                 4 bytes

    "put" in memstreams.o [1]                        4

Uncalled function
  "reads" in memstreams.o [1]: 0x0800af39

  Maximum call chain                                48 bytes

    "reads" in memstreams.o [1]                     24
    "memcpy"                                        16
    "__aeabi_memcpy"                                 0
    "__aeabi_memcpy4"                                8

Uncalled function
  "writes" in memstreams.o [1]: 0x0800af05

  Maximum call chain                                48 bytes

    "writes" in memstreams.o [1]                    24
    "memcpy"                                        16
    "__aeabi_memcpy"                                 0
    "__aeabi_memcpy4"                                8

Uncalled function
  "callback(GPTDriver *)" in microsecond_timer.o [1]: 0x08025835

  Maximum call chain                            *?* 176 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "callback(GPTDriver *)" in microsecond_timer.o [1]) **)

    "callback(GPTDriver *)" in microsecond_timer.o [1]
                                                      8
    "firmwareError"                                  24
    "chvprintf"                                      88
    "ftoa"                                           32
    "__aeabi_dsub"                                   12
    "__iar_dsub"                                     12

Uncalled function
  "mwThread(int)" in microsecond_timer.o [1]: 0x080258d9

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "mwThread(int)" in microsecond_timer.o [1]        8
    "usTimerWatchDog()" in microsecond_timer.o [1]
                                                     16
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "removeFile(char const *)" in mmc_card.o [1]: 0x0801cca9

  Maximum call chain                            *?* 848 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "removeFile(char const *)" in mmc_card.o [1]
                                                      8
    "f_unlink"                                      112
    "follow_path" in ff.o [1]                        24
    "dir_find" in ff.o [1]                           32
    "dir_next" in ff.o [1]                           24
    "create_chain" in ff.o [1]                       32
    "put_fat"                                        32
    "move_window" in ff.o [1]                        24
    "disk_read"                                      24
    "mmcStartSequentialRead"                         16
    "send_hdr" in mmc_spi.o [1]                      24
    "wait" in mmc_spi.o [1]                          16
    "spiReceive"                                     16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "MMCmonThread()" in mmc_card.o [1]: 0x0801cea9

  Maximum call chain                            *?* 888 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "MMCmonThread()" in mmc_card.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "MMCmonThread()" in mmc_card.o [1]                8
    "MMCmount()" in mmc_card.o [1]                    8
    "incLogFileName()" in mmc_card.o [1]             24
    "f_open"                                         88
    "dir_register" in ff.o [1]                       56
    "dir_find" in ff.o [1]                           32
    "dir_next" in ff.o [1]                           24
    "create_chain" in ff.o [1]                       32
    "put_fat"                                        32
    "move_window" in ff.o [1]                        24
    "disk_read"                                      24
    "mmcStartSequentialRead"                         16
    "send_hdr" in mmc_spi.o [1]                      24
    "wait" in mmc_spi.o [1]                          16
    "spiReceive"                                     16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "sdStatistics()" in mmc_card.o [1]: 0x0801ca9f

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "sdStatistics()" in mmc_card.o [1]                8
    "printMmcPinout()" in mmc_card.o [1]              8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "listDirectory(char const *)" in mmc_card.o [1]: 0x0801ccd3

  Maximum call chain                            *?* 848 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "listDirectory(char const *)" in mmc_card.o [1]
                                                     88
    "f_opendir"                                      32
    "follow_path" in ff.o [1]                        24
    "dir_find" in ff.o [1]                           32
    "dir_next" in ff.o [1]                           24
    "create_chain" in ff.o [1]                       32
    "put_fat"                                        32
    "move_window" in ff.o [1]                        24
    "disk_read"                                      24
    "mmcStartSequentialRead"                         16
    "send_hdr" in mmc_spi.o [1]                      24
    "wait" in mmc_spi.o [1]                          16
    "spiReceive"                                     16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "MMCumount()" in mmc_card.o [1]: 0x0801cde5

  Maximum call chain                            *?* 648 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "MMCumount()" in mmc_card.o [1]                   8
    "f_close"                                        16
    "f_sync"                                         24
    "sync" in ff.o [1]                               16
    "move_window" in ff.o [1]                        24
    "disk_read"                                      24
    "mmcStartSequentialRead"                         16
    "send_hdr" in mmc_spi.o [1]                      24
    "wait" in mmc_spi.o [1]                          16
    "spiReceive"                                     16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "mmc_read" in mmc_spi.o [1]: 0x08024f3d

  Maximum call chain                            *?* 560 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "mmc_read" in mmc_spi.o [1]                      24
    "mmcStartSequentialRead"                         16
    "send_hdr" in mmc_spi.o [1]                      24
    "wait" in mmc_spi.o [1]                          16
    "spiReceive"                                     16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "mmc_write" in mmc_spi.o [1]: 0x08024f85

  Maximum call chain                            *?* 560 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "mmc_write" in mmc_spi.o [1]                     24
    "mmcStartSequentialWrite"                        16
    "send_hdr" in mmc_spi.o [1]                      24
    "wait" in mmc_spi.o [1]                          16
    "spiReceive"                                     16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "mmcGetInfo": 0x08025741

  Maximum call chain                            *?* 480 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "mmcGetInfo"                                     16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "mmcSync": 0x08025705

  Maximum call chain                            *?* 528 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "mmcSync"                                         8
    "spiStart"                                       16
    "spi_lld_start"                                  16
    "dmaStreamAllocate"                              24
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "BusFaultVector": 0x0800a471

  Maximum call chain                            *?* 472 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "BusFaultVector"                                  8
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "DebugMonitorVector": 0x0800a455

  Maximum call chain                            *?* 472 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "DebugMonitorVector"                              8
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "HardFaultVector": 0x0800a481

  Maximum call chain                            *?* 472 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "HardFaultVector"                                 8
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "UsageFaultVector": 0x0800a463

  Maximum call chain                            *?* 472 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "UsageFaultVector"                                8
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "printGpsInfo()" in neo6m.o [1]: 0x080200d5

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "printGpsInfo()" in neo6m.o [1]                  24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "GpsThreadEntryPoint(void *)" in neo6m.o [1]: 0x080201cf

  Maximum call chain                            *?* 544 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "GpsThreadEntryPoint(void *)" in neo6m.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "GpsThreadEntryPoint(void *)" in neo6m.o [1]
                                                     16
    "onGpsMessage(char *)" in neo6m.o [1]             8
    "date_get_tm(tm *)"                               8
    "rtcGetTimeTm"                                   32
    "rtcGetTime"                                     16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "reportPins()" in pin_repository.o [1]: 0x0800331b

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "reportPins()" in pin_repository.o [1]           32
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setPotValue1(int)" in poten.o [1]: 0x080206f1

  Maximum call chain                            *?* 552 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setPotValue1(int)" in poten.o [1]                8
    "sendToPot(Mcp42010Driver *, int, int)" in poten.o [1]
                                                     24
    "spiStart"                                       16
    "spi_lld_start"                                  16
    "dmaStreamAllocate"                              24
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setPotResistanceCommand(int, int)" in poten.o [1]: 0x080206cd

  Maximum call chain                            *?* 584 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setPotResistanceCommand(int, int)" in poten.o [1]
                                                     16
    "setPotResistance(Mcp42010Driver *, int, int)"
                                                     24
    "sendToPot(Mcp42010Driver *, int, int)" in poten.o [1]
                                                     24
    "spiStart"                                       16
    "spi_lld_start"                                  16
    "dmaStreamAllocate"                              24
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "VectorB8": 0x0801e505

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "pwm_lld_serve_interrupt" in pwm_lld.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorB8"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "VectorF0": 0x0801e51b

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "VectorF0")
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorF0"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "VectorF8": 0x0801e53d

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "VectorF8")
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorF8"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "onTdcCallback()" in rpm_calculator.o [1]: 0x08012ff7

  Maximum call chain                            *?* 400 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "onTdcCallback()" in rpm_calculator.o [1]         8
    "WaveChart::addWaveChartEvent3(char const *, char const *)"
                                                     40
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "tdcMarkCallback(trigger_event_e, unsigned int)" in rpm_calculator.o [1]: 0x08013015

  Maximum call chain                            *?* 656 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "tdcMarkCallback(trigger_event_e, unsigned int)" in rpm_calculator.o [1]
                                                     32
    "scheduleByAngle(int, scheduling_s *, float, void (*)(void *), void *, RpmCalculator *)"
                                                     40
    "scheduleTask(char const *, scheduling_s *, int, void (*)(void *), void *)"
                                                     32
    "Executor::scheduleByTime(scheduling_s *, long long, void (*)(void *), void *)"
                                                     40
    "Executor::scheduleTimerCallback()"              24
    "setHardwareUsTimer"                              8
    "gptStartOneShotI"                               16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "rpmShaftPositionCallback(trigger_event_e, unsigned int)": 0x08012ec9

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "rpmShaftPositionCallback(trigger_event_e, unsigned int)"
                                                     48
    "getCrankshaftAngleNt(long long)"                24
    "RpmCalculator::rpm()"                           16
    "RpmCalculator::isRunning()"                     16
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "scheduleReboot()" in rusefi.o [1]: 0x08008c4f

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "scheduleReboot()" in rusefi.o [1]                8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "rebootNow()" in rusefi.o [1]: 0x08008c47

  Maximum call chain                                 8 bytes

    "rebootNow()" in rusefi.o [1]                    8
    "NVIC_SystemReset()" in rusefi.o [1]             0

Uncalled function
  "setSensorChartFrequency(int)" in sensor_chart.o [1]: 0x08014ef9

  Maximum call chain                                 0 bytes

    "setSensorChartFrequency(int)" in sensor_chart.o [1]
                                                     0

Uncalled function
  "get" in serial.o [1]: 0x0801988d

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chIQGetTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "get" in serial.o [1]                             8
    "chIQGetTimeout"                                 24
    "qwait" in chqueues.o [1]                        16
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "gett" in serial.o [1]: 0x080198b7

  Maximum call chain                            *?* 400 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chIQGetTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "gett" in serial.o [1]                           16
    "chIQGetTimeout"                                 24
    "qwait" in chqueues.o [1]                        16
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "put" in serial.o [1]: 0x08019875

  Maximum call chain                            *?* 400 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chOQPutTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "put" in serial.o [1]                            16
    "chOQPutTimeout"                                 24
    "qwait" in chqueues.o [1]                        16
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "putt" in serial.o [1]: 0x0801989f

  Maximum call chain                            *?* 400 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chOQPutTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "putt" in serial.o [1]                           16
    "chOQPutTimeout"                                 24
    "qwait" in chqueues.o [1]                        16
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "read" in serial.o [1]: 0x0801985b

  Maximum call chain                            *?* 512 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chIQReadTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "read" in serial.o [1]                           16
    "chIQReadTimeout"                                32
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "readt" in serial.o [1]: 0x080198e3

  Maximum call chain                            *?* 520 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chIQReadTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "readt" in serial.o [1]                          24
    "chIQReadTimeout"                                32
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "write" in serial.o [1]: 0x08019841

  Maximum call chain                            *?* 512 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chOQWriteTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "write" in serial.o [1]                          16
    "chOQWriteTimeout"                               32
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "writet" in serial.o [1]: 0x080198c9

  Maximum call chain                            *?* 520 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chOQWriteTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "writet" in serial.o [1]                         24
    "chOQWriteTimeout"                               32
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "notify1" in serial_lld.o [1]: 0x08021ecd

  Maximum call chain                                 0 bytes

    "notify1" in serial_lld.o [1]                    0

Uncalled function
  "notify2" in serial_lld.o [1]: 0x08021edb

  Maximum call chain                                 0 bytes

    "notify2" in serial_lld.o [1]                    0

Uncalled function
  "notify3" in serial_lld.o [1]: 0x08021ee9

  Maximum call chain                                 0 bytes

    "notify3" in serial_lld.o [1]                    0

Uncalled function
  "VectorD4": 0x08021ef7

  Maximum call chain                            *?* 544 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorD4"                                        8
    "serve_interrupt" in serial_lld.o [1]            24
    "set_error" in serial_lld.o [1]                  16
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "VectorD8": 0x08021f0d

  Maximum call chain                            *?* 544 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorD8"                                        8
    "serve_interrupt" in serial_lld.o [1]            24
    "set_error" in serial_lld.o [1]                  16
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "VectorDC": 0x08021f23

  Maximum call chain                            *?* 544 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorDC"                                        8
    "serve_interrupt" in serial_lld.o [1]            24
    "set_error" in serial_lld.o [1]                  16
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "get" in serial_usb.o [1]: 0x08020cd1

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chIQGetTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "get" in serial_usb.o [1]                         8
    "chIQGetTimeout"                                 24
    "qwait" in chqueues.o [1]                        16
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "gett" in serial_usb.o [1]: 0x08020cfb

  Maximum call chain                            *?* 400 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chIQGetTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "gett" in serial_usb.o [1]                       16
    "chIQGetTimeout"                                 24
    "qwait" in chqueues.o [1]                        16
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "inotify" in serial_usb.o [1]: 0x08020d41

  Maximum call chain                            *?* 504 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "inotify" in serial_usb.o [1]                    24
    "usbStartReceiveI"                               16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "onotify" in serial_usb.o [1]: 0x08020ddb

  Maximum call chain                            *?* 496 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "onotify" in serial_usb.o [1]                    16
    "usbStartTransmitI"                              16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "put" in serial_usb.o [1]: 0x08020cb9

  Maximum call chain                            *?* 400 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chOQPutTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "put" in serial_usb.o [1]                        16
    "chOQPutTimeout"                                 24
    "qwait" in chqueues.o [1]                        16
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "putt" in serial_usb.o [1]: 0x08020ce3

  Maximum call chain                            *?* 400 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chOQPutTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "putt" in serial_usb.o [1]                       16
    "chOQPutTimeout"                                 24
    "qwait" in chqueues.o [1]                        16
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "read" in serial_usb.o [1]: 0x08020c9f

  Maximum call chain                            *?* 512 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chIQReadTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "read" in serial_usb.o [1]                       16
    "chIQReadTimeout"                                32
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "readt" in serial_usb.o [1]: 0x08020d27

  Maximum call chain                            *?* 520 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chIQReadTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "readt" in serial_usb.o [1]                      24
    "chIQReadTimeout"                                32
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "write" in serial_usb.o [1]: 0x08020c85

  Maximum call chain                            *?* 512 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chOQWriteTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "write" in serial_usb.o [1]                      16
    "chOQWriteTimeout"                               32
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "writet" in serial_usb.o [1]: 0x08020d0d

  Maximum call chain                            *?* 520 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chOQWriteTimeout")
                            functions with no stack usage info (example: "_port_switch") **)

    "writet" in serial_usb.o [1]                     24
    "chOQWriteTimeout"                               32
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "sduDataReceived": 0x0802107f

  Maximum call chain                            *?* 520 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "sduDataReceived"                                24
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "sduDataTransmitted": 0x08020fb5

  Maximum call chain                            *?* 520 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "sduDataTransmitted"                             24
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "sduInterruptTransmitted": 0x08021111

  Maximum call chain                                 0 bytes

    "sduInterruptTransmitted"                        0

Uncalled function
  "sduRequestsHook": 0x08020f41

  Maximum call chain                                 0 bytes

    "sduRequestsHook"                                0

Uncalled function
  "disableSpi(int)" in settings.o [1]: 0x08001ddb

  Maximum call chain                            *?* 408 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "disableSpi(int)" in settings.o [1]               8
    "setSpiMode(int, bool)" in settings.o [1]        16
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setCltBias(float)" in settings.o [1]: 0x08000f21

  Maximum call chain                                 0 bytes

    "setCltBias(float)" in settings.o [1]            0

Uncalled function
  "setFuelMap(char const *, char const *, char const *)" in settings.o [1]: 0x08001759

  Maximum call chain                            *?* 408 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFuelMap(char const *, char const *, char const *)" in settings.o [1]
                                                     48
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setIatBias(float)" in settings.o [1]: 0x08000fc5

  Maximum call chain                                 0 bytes

    "setIatBias(float)" in settings.o [1]            0

Uncalled function
  "setIdlePin(char const *)" in settings.o [1]: 0x08001257

  Maximum call chain                            *?* 568 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setIdlePin(char const *)" in settings.o [1]
                                                      8
    "setIndividualPin(char const *, brain_pin_e *, char const *)" in settings.o [1]
                                                     24
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setEgtCSPin(char const *, char const *, board_configuration_s *)" in settings.o [1]: 0x0800140d

  Maximum call chain                            *?* 560 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setEgtCSPin(char const *, char const *, board_configuration_s *)" in settings.o [1]
                                                     24
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "printAllInfo()" in settings.o [1]: 0x08001ea9

  Maximum call chain                            *?* 600 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "printAllInfo()" in settings.o [1]                8
    "printTemperatureInfo()" in settings.o [1]        8
    "printThermistor(char const *, ThermistorConf *, ThermistorMath *)" in settings.o [1]
                                                     80
    "getTemperatureC(ThermistorConf *, ThermistorMath *)"
                                                     24
    "getKelvinTemperature(ThermistorConf *, float, ThermistorMath *)"
                                                     24
    "ThermistorMath::init(thermistor_conf_s *)"      16
    "prepareThermistorCurve(thermistor_conf_s *, thermistor_curve_s *)" in thermistors.o [1]
                                                     80
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setTimingMap(char const *, char const *, char const *)" in settings.o [1]: 0x08001699

  Maximum call chain                            *?* 408 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setTimingMap(char const *, char const *, char const *)" in settings.o [1]
                                                     48
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setFanSetting(float, float)" in settings.o [1]: 0x08000f61

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFanSetting(float, float)" in settings.o [1]
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setTimingMode(int)" in settings.o [1]: 0x08000879

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setTimingMode(int)" in settings.o [1]            8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setWholeVeCmd(float)" in settings.o [1]: 0x080010e5

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setWholeVeCmd(float)" in settings.o [1]         16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "enableIgnition()" in settings.o [1]: 0x08001e39

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "enableIgnition()" in settings.o [1]              8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setCrankingRpm(int)" in settings.o [1]: 0x08000cad

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setCrankingRpm(int)" in settings.o [1]           8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setFiringOrder(int)" in settings.o [1]: 0x08000ced

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFiringOrder(int)" in settings.o [1]           8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setFuelPumpPin(char const *)" in settings.o [1]: 0x080012d9

  Maximum call chain                            *?* 568 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFuelPumpPin(char const *)" in settings.o [1]
                                                      8
    "setIndividualPin(char const *, brain_pin_e *, char const *)" in settings.o [1]
                                                     24
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setIdlePinMode(int)" in settings.o [1]: 0x08000913

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setIdlePinMode(int)" in settings.o [1]           8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setIgnitionPin(char const *, char const *)" in settings.o [1]: 0x080011b9

  Maximum call chain                            *?* 560 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setIgnitionPin(char const *, char const *)" in settings.o [1]
                                                     24
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setInjectorLag(float)" in settings.o [1]: 0x08001f27

  Maximum call chain                                 0 bytes

    "setInjectorLag(float)" in settings.o [1]        0

Uncalled function
  "setTriggerType(int)" in settings.o [1]: 0x08000e1d

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setTriggerType(int)" in settings.o [1]           8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "disableIgnition()" in settings.o [1]: 0x08001e5d

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "disableIgnition()" in settings.o [1]             8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "enableInjection()" in settings.o [1]: 0x08001de9

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "enableInjection()" in settings.o [1]             8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setAlgorithmInt(int)" in settings.o [1]: 0x08000cd1

  Maximum call chain                            *?* 488 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setAlgorithmInt(int)" in settings.o [1]          8
    "setAlgorithm(engine_load_mode_e)"                8
    "setTimingLoadBin(float, float)"                 16
    "setTableBin(float *, int, float, float)"        24
    "setTableBin2(float *, int, float, float, float)"
                                                     32
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "setCrankingFuel(float)" in settings.o [1]: 0x08000d2d

  Maximum call chain                            *?* 608 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setCrankingFuel(float)" in settings.o [1]       16
    "printTemperatureInfo()" in settings.o [1]        8
    "printThermistor(char const *, ThermistorConf *, ThermistorMath *)" in settings.o [1]
                                                     80
    "getTemperatureC(ThermistorConf *, ThermistorMath *)"
                                                     24
    "getKelvinTemperature(ThermistorConf *, float, ThermistorMath *)"
                                                     24
    "ThermistorMath::init(thermistor_conf_s *)"      16
    "prepareThermistorCurve(thermistor_conf_s *, thermistor_curve_s *)" in thermistors.o [1]
                                                     80
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setIgnitionMode(int)" in settings.o [1]: 0x08000df5

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setIgnitionMode(int)" in settings.o [1]          8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setInjectionPin(char const *, char const *)" in settings.o [1]: 0x080012fd

  Maximum call chain                            *?* 560 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setInjectionPin(char const *, char const *)" in settings.o [1]
                                                     24
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setMainRelayPin(char const *)" in settings.o [1]: 0x08001275

  Maximum call chain                            *?* 568 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setMainRelayPin(char const *)" in settings.o [1]
                                                      8
    "setIndividualPin(char const *, brain_pin_e *, char const *)" in settings.o [1]
                                                     24
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setRpmHardLimit(int)" in settings.o [1]: 0x08000d0d

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setRpmHardLimit(int)" in settings.o [1]          8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setToothedWheel(int, int)" in settings.o [1]: 0x08000e41

  Maximum call chain                            *?* 464 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setToothedWheel(int, int)" in settings.o [1]
                                                     16
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setVBattDivider(float)" in settings.o [1]: 0x08000fd9

  Maximum call chain                                 0 bytes

    "setVBattDivider(float)" in settings.o [1]       0

Uncalled function
  "showPinFunction(char const *)" in settings.o [1]: 0x08001655

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "atoi")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "showPinFunction(char const *)" in settings.o [1]
                                                     16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "disableInjection()" in settings.o [1]: 0x08001e11

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "disableInjection()" in settings.o [1]            8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setAlternatorPin(char const *)" in settings.o [1]: 0x08001295

  Maximum call chain                            *?* 568 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setAlternatorPin(char const *)" in settings.o [1]
                                                      8
    "setIndividualPin(char const *, brain_pin_e *, char const *)" in settings.o [1]
                                                     24
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setInjectionMode(int)" in settings.o [1]: 0x08000dd1

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setInjectionMode(int)" in settings.o [1]         8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setLogicInputPin(char const *, char const *)" in settings.o [1]: 0x080015f5

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setLogicInputPin(char const *, char const *)" in settings.o [1]
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setAnalogInputPin(char const *, char const *)" in settings.o [1]: 0x08001505

  Maximum call chain                            *?* 560 bytes
    (** call graph contains recursive functions (example: "atoi")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setAnalogInputPin(char const *, char const *)" in settings.o [1]
                                                     24
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setIgnitionOffset(float)" in settings.o [1]: 0x08000953

  Maximum call chain                            *?* 464 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setIgnitionOffset(float)" in settings.o [1]
                                                     16
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setFixedModeTiming(int)" in settings.o [1]: 0x0800084d

  Maximum call chain                            *?* 464 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFixedModeTiming(int)" in settings.o [1]      16
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setFuelPumpPinMode(int)" in settings.o [1]: 0x0800097b

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setFuelPumpPinMode(int)" in settings.o [1]       8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setIgnitionPinMode(int)" in settings.o [1]: 0x080008f9

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setIgnitionPinMode(int)" in settings.o [1]       8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setInjectionOffset(float)" in settings.o [1]: 0x0800092b

  Maximum call chain                            *?* 464 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setInjectionOffset(float)" in settings.o [1]
                                                     16
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setSensorChartMode(int)" in settings.o [1]: 0x080009ad

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setSensorChartMode(int)" in settings.o [1]       8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setTriggerInputPin(char const *, char const *)" in settings.o [1]: 0x0800135d

  Maximum call chain                            *?* 560 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setTriggerInputPin(char const *, char const *)" in settings.o [1]
                                                     24
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setWholeFuelMapCmd(float)" in settings.o [1]: 0x08001141

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setWholeFuelMapCmd(float)" in settings.o [1]
                                                     16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setInjectionPinMode(int)" in settings.o [1]: 0x080008e1

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setInjectionPinMode(int)" in settings.o [1]
                                                      8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setWholePhaseMapCmd(float)" in settings.o [1]: 0x08001061

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setWholePhaseMapCmd(float)" in settings.o [1]
                                                     16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setWholeTimingMapCmd(float)" in settings.o [1]: 0x080010a5

  Maximum call chain                            *?* 392 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setWholeTimingMapCmd(float)" in settings.o [1]
                                                     16
    "setWholeTimingMap(float)" in settings.o [1]
                                                     16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setCrankingChargeAngle(float)" in settings.o [1]: 0x08000e85

  Maximum call chain                            *?* 464 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setCrankingChargeAngle(float)" in settings.o [1]
                                                     16
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setCrankingTimingAngle(float)" in settings.o [1]: 0x08000d7d

  Maximum call chain                            *?* 464 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setCrankingTimingAngle(float)" in settings.o [1]
                                                     16
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setTriggerSimulatorPin(char const *, char const *)" in settings.o [1]: 0x08001481

  Maximum call chain                            *?* 560 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setTriggerSimulatorPin(char const *, char const *)" in settings.o [1]
                                                     24
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setGlobalFuelCorrection(float)" in settings.o [1]: 0x08000ec9

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setGlobalFuelCorrection(float)" in settings.o [1]
                                                     16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setTriggerSimulatorMode(char const *, char const *)" in settings.o [1]: 0x080013c1

  Maximum call chain                            *?* 40 bytes
    (** call graph contains recursive functions (example: "atoi") **)

    "setTriggerSimulatorMode(char const *, char const *)" in settings.o [1]
                                                    24
    "atoi"                                          16

Uncalled function
  "setCrankingInjectionMode(int)" in settings.o [1]: 0x08000dad

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setCrankingInjectionMode(int)" in settings.o [1]
                                                      8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setIdleSolenoidFrequency(int)" in settings.o [1]: 0x080008d7

  Maximum call chain                                 0 bytes

    "setIdleSolenoidFrequency(int)" in settings.o [1]
                                                     0

Uncalled function
  "setGlobalTriggerAngleOffset(float)" in settings.o [1]: 0x08000d51

  Maximum call chain                            *?* 464 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setGlobalTriggerAngleOffset(float)" in settings.o [1]
                                                     16
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setMalfunctionIndicatorPinMode(int)" in settings.o [1]: 0x08000993

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setMalfunctionIndicatorPinMode(int)" in settings.o [1]
                                                      8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setOM(int)" in settings.o [1]: 0x080009c7

  Maximum call chain                            *?* 456 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setOM(int)" in settings.o [1]                    8
    "doPrintConfiguration(Engine *)" in settings.o [1]
                                                      8
    "printConfiguration(engine_configuration_s *)"
                                                     56
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "enable(char const *)" in settings.o [1]: 0x08001db1

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "enable(char const *)" in settings.o [1]          8
    "enableOrDisable(char const *, bool)" in settings.o [1]
                                                     16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "disable(char const *)" in settings.o [1]: 0x08001dbf

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "disable(char const *)" in settings.o [1]         8
    "enableOrDisable(char const *, bool)" in settings.o [1]
                                                     16
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "getValue(char const *)" in settings.o [1]: 0x08001f31

  Maximum call chain                            *?* 624 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "getValue(char const *)" in settings.o [1]        8
    "printDateTime()"                                64
    "rtcGetTimeUnixSec"                              72
    "rtcGetTime"                                     16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setACPin(char const *)" in settings.o [1]: 0x080012b9

  Maximum call chain                            *?* 568 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setACPin(char const *)" in settings.o [1]        8
    "setIndividualPin(char const *, brain_pin_e *, char const *)" in settings.o [1]
                                                     24
    "applyNewConfiguration"                           8
    "applyNewHardwareSettings()"                      8
    "applyNewTriggerInputPins()"                      8
    "turnOnTriggerInputPin(brain_pin_e)" in trigger_input.o [1]
                                                     16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setValue(char const *, char const *)" in settings.o [1]: 0x08001f71

  Maximum call chain                            *?* 656 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setValue(char const *, char const *)" in settings.o [1]
                                                     24
    "setDateTime(char const *)"                      16
    "printDateTime()"                                64
    "rtcGetTimeUnixSec"                              72
    "rtcGetTime"                                     16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "enableSpi(int)" in settings.o [1]: 0x08001dcd

  Maximum call chain                            *?* 408 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "enableSpi(int)" in settings.o [1]                8
    "setSpiMode(int, bool)" in settings.o [1]        16
    "printSpiState(Logging *, board_configuration_s *)"
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setEgtSpi(int)" in settings.o [1]: 0x0800118d

  Maximum call chain                                 0 bytes

    "setEgtSpi(int)" in settings.o [1]               0

Uncalled function
  "setPotSpi(int)" in settings.o [1]: 0x080011a1

  Maximum call chain                                 0 bytes

    "setPotSpi(int)" in settings.o [1]               0

Uncalled function
  "stopEngine()": 0x08001e81

  Maximum call chain                            *?* 360 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "stopEngine()"                                    8
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "setEngineType(int)": 0x08000897

  Maximum call chain                            *?* 840 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setEngineType(int)"                              8
    "resetConfigurationExt(Logging *, engine_type_e)"
                                                     16
    "applyNonPersistentConfiguration(Logging *)"
                                                      8
    "TriggerShape::initializeTriggerShape(Logging *)"
                                                     24
    "TriggerShape::calculateTriggerSynchPoint()"
                                                     40
    "findTriggerZeroEventIndex(TriggerShape *, trigger_config_s const *)"
                                                    216
    "doFindTrigger(TriggerStimulatorHelper *, TriggerShape *, trigger_config_s const *, TriggerState *)" in trigger_decoder.o [1]
                                                     32
    "TriggerStimulatorHelper::nextStep(TriggerState *, TriggerShape *, int, trigger_config_s const *)"
                                                     64
    "TriggerState::decodeTriggerEvent(trigger_event_e, long long)"
                                                     72
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "spi_lld_serve_rx_interrupt" in spi_lld.o [1]: 0x0802221d

  Maximum call chain                            *?* 328 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "spi_lld_serve_rx_interrupt" in spi_lld.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "spi_lld_serve_rx_interrupt" in spi_lld.o [1]
                                                     16
    "chSchReadyI"                                    16
    "chDbgCheckClassI"                                8
    "chDbgPanic"                                      0

Uncalled function
  "spi_lld_serve_tx_interrupt" in spi_lld.o [1]: 0x080222cd

  Maximum call chain                                 0 bytes

    "spi_lld_serve_tx_interrupt" in spi_lld.o [1]
                                                     0

Uncalled function
  "printStatus()" in status_loop.o [1]: 0x08012185

  Maximum call chain                                 0 bytes

    "printStatus()" in status_loop.o [1]             0

Uncalled function
  "unsubscribe(int)" in status_loop.o [1]: 0x08012ad5

  Maximum call chain                                 0 bytes

    "unsubscribe(int)" in status_loop.o [1]          0

Uncalled function
  "showFuelInfo()" in status_loop.o [1]: 0x0801256b

  Maximum call chain                            *?* 608 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "showFuelInfo()" in status_loop.o [1]            16
    "showFuelInfo2(float, float)" in status_loop.o [1]
                                                     56
    "getBaseTableFuel(engine_configuration_s *, int, float)"
                                                     16
    "Map3D<(int)16, (int)16>::getValue(float, float)"
                                                     24
    "interpolate3d(float, float *, int, float, float *, int, float **)"
                                                     96
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "blinkingThread(void *)" in status_loop.o [1]: 0x0801266b

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "blinkingThread(void *)" in status_loop.o [1]
                                                     16
    "initialLedsBlink()" in status_loop.o [1]        16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "setBlinkingPeriod(int)" in status_loop.o [1]: 0x0801260b

  Maximum call chain                                 0 bytes

    "setBlinkingPeriod(int)" in status_loop.o [1]
                                                     0

Uncalled function
  "setWarningEnabled(int)" in status_loop.o [1]: 0x08011ca9

  Maximum call chain                                 0 bytes

    "setWarningEnabled(int)" in status_loop.o [1]
                                                     0

Uncalled function
  "lcdThread(void *)" in status_loop.o [1]: 0x08012711

  Maximum call chain                            *?* 568 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "lcdThread(void *)" in status_loop.o [1]          8
    "updateHD44780lcd(Engine *)"                     24
    "showLine(lcd_line_e, int)" in lcd_controller.o [1]
                                                     16
    "getCoolantTemperature()"                        16
    "getTemperatureC(ThermistorConf *, ThermistorMath *)"
                                                     24
    "getKelvinTemperature(ThermistorConf *, float, ThermistorMath *)"
                                                     24
    "ThermistorMath::init(thermistor_conf_s *)"      16
    "prepareThermistorCurve(thermistor_conf_s *, thermistor_curve_s *)" in thermistors.o [1]
                                                     80
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "subscribe(int)" in status_loop.o [1]: 0x08012ac9

  Maximum call chain                                 0 bytes

    "subscribe(int)" in status_loop.o [1]            0

Uncalled function
  "stThread(StepperMotor *)" in stepper.o [1]: 0x0801f2a5

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            functions with no stack usage info (example: "_port_switch") **)

    "stThread(StepperMotor *)" in stepper.o [1]      24
    "StepperMotor::pulse()"                           8
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector120": 0x08025b71

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector120")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector120"                                       8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector124": 0x08025ba5

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector124")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector124"                                       8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector128": 0x08025bdb

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector128")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector128"                                       8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector12C": 0x08025c11

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector12C")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector12C"                                       8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector130": 0x08025c47

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector130")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector130"                                       8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector150": 0x08025c79

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector150")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector150"                                       8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector154": 0x08025caf

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector154")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector154"                                       8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector158": 0x08025ce5

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector158")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector158"                                       8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector6C": 0x08025979

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector6C")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector6C"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector70": 0x080259b5

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector70")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector70"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector74": 0x080259f5

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector74")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector74"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector78": 0x08025a35

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector78")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector78"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector7C": 0x08025a75

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector7C")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector7C"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector80": 0x08025ab1

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector80")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector80"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "Vector84": 0x08025af1

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "Vector84")
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector84"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "VectorFC": 0x08025b31

  Maximum call chain                            *?* 304 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "VectorFC")
                            functions with no stack usage info (example: "_port_switch") **)

    "VectorFC"                                        8
    "dbg_check_enter_isr"                             8
    "chDbgPanic"                                      0

Uncalled function
  "testCltByR(float)" in thermistors.o [1]: 0x08006421

  Maximum call chain                            *?* 504 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "testCltByR(float)" in thermistors.o [1]         24
    "getKelvinTemperature(ThermistorConf *, float, ThermistorMath *)"
                                                     24
    "ThermistorMath::init(thermistor_conf_s *)"      16
    "prepareThermistorCurve(thermistor_conf_s *, thermistor_curve_s *)" in thermistors.o [1]
                                                     80
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "triggerShapeInfo()" in trigger_central.o [1]: 0x0801d3af

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "triggerShapeInfo()" in trigger_central.o [1]
                                                     24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "resetRunningTriggerCounters()" in trigger_central.o [1]: 0x0801d801

  Maximum call chain                            *?* 408 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "resetRunningTriggerCounters()" in trigger_central.o [1]
                                                      8
    "triggerInfo()"                                  40
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "onFindIndex(TriggerState *)" in trigger_decoder.o [1]: 0x08010c5b

  Maximum call chain                                 0 bytes

    "onFindIndex(TriggerState *)" in trigger_decoder.o [1]
                                                     0

Uncalled function
  "resumeStimulator(Engine *)" in trigger_emulator_algo.o [1]: 0x08026c8d

  Maximum call chain                                 0 bytes

    "resumeStimulator(Engine *)" in trigger_emulator_algo.o [1]
                                                     0

Uncalled function
  "setEmulatorAtIndex(int, Engine *)" in trigger_emulator_algo.o [1]: 0x08026c87

  Maximum call chain                                 0 bytes

    "setEmulatorAtIndex(int, Engine *)" in trigger_emulator_algo.o [1]
                                                     0

Uncalled function
  "emulatorApplyPinState(PwmConfig *, int)" in trigger_emulator_algo.o [1]: 0x08026c47

  Maximum call chain                            *?* 544 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "TriggerCentral::handleShaftSignal(trigger_event_e)")
                            functions with no stack usage info (example: "_port_switch") **)

    "emulatorApplyPinState(PwmConfig *, int)" in trigger_emulator_algo.o [1]
                                                     16
    "TriggerEmulatorHelper::handleEmulatorCallback(PwmConfig *, int)"
                                                     48
    "fireShaftSignal(trigger_event_e)" in trigger_emulator_algo.o [1]
                                                      8
    "hwHandleShaftSignal(trigger_event_e)"            8
    "TriggerCentral::handleShaftSignal(trigger_event_e)"
                                                     32
    "TriggerState::decodeTriggerEvent(trigger_event_e, long long)"
                                                     72
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "updateTriggerShapeIfNeeded(PwmConfig *)" in trigger_emulator_algo.o [1]: 0x08026bd1

  Maximum call chain                            *?* 848 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "updateTriggerShapeIfNeeded(PwmConfig *)" in trigger_emulator_algo.o [1]
                                                     32
    "applyNonPersistentConfiguration(Logging *)"
                                                      8
    "TriggerShape::initializeTriggerShape(Logging *)"
                                                     24
    "TriggerShape::calculateTriggerSynchPoint()"
                                                     40
    "findTriggerZeroEventIndex(TriggerShape *, trigger_config_s const *)"
                                                    216
    "doFindTrigger(TriggerStimulatorHelper *, TriggerShape *, trigger_config_s const *, TriggerState *)" in trigger_decoder.o [1]
                                                     32
    "TriggerStimulatorHelper::nextStep(TriggerState *, TriggerShape *, int, trigger_config_s const *)"
                                                     64
    "TriggerState::decodeTriggerEvent(trigger_event_e, long long)"
                                                     72
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "shaft_icu_width_callback(ICUDriver *)" in trigger_input.o [1]: 0x0801f805

  Maximum call chain                            *?* 488 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "TriggerCentral::handleShaftSignal(trigger_event_e)")
                            functions with no stack usage info (example: "_port_switch") **)

    "shaft_icu_width_callback(ICUDriver *)" in trigger_input.o [1]
                                                     16
    "hwHandleShaftSignal(trigger_event_e)"            8
    "TriggerCentral::handleShaftSignal(trigger_event_e)"
                                                     32
    "TriggerState::decodeTriggerEvent(trigger_event_e, long long)"
                                                     72
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "shaft_icu_period_callback(ICUDriver *)" in trigger_input.o [1]: 0x0801f86f

  Maximum call chain                            *?* 488 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "TriggerCentral::handleShaftSignal(trigger_event_e)")
                            functions with no stack usage info (example: "_port_switch") **)

    "shaft_icu_period_callback(ICUDriver *)" in trigger_input.o [1]
                                                     16
    "hwHandleShaftSignal(trigger_event_e)"            8
    "TriggerCentral::handleShaftSignal(trigger_event_e)"
                                                     32
    "TriggerState::decodeTriggerEvent(trigger_event_e, long long)"
                                                     72
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setTsSpeed(int)" in tunerstudio.o [1]: 0x0800f3ab

  Maximum call chain                            *?* 416 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setTsSpeed(int)" in tunerstudio.o [1]            8
    "printTsStats()"                                 24
    "printErrorCounters()" in tunerstudio.o [1]      24
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "tsThreadEntryPoint(void *)" in tunerstudio.o [1]: 0x0800fab1

  Maximum call chain                            *?* 760 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "runBinaryProtocolLoop(ts_channel_s *, bool)")
                            functions with no stack usage info (example: "_port_switch") **)

    "tsThreadEntryPoint(void *)" in tunerstudio.o [1]
                                                      8
    "runBinaryProtocolLoop(ts_channel_s *, bool)"
                                                     56
    "tunerStudioHandleCrcCommand(ts_channel_s *, char *, int)"
                                                     40
    "handleOutputChannelsCommand(ts_channel_s *, ts_response_format_e)"
                                                     16
    "prepareTunerStudioOutputs()"                     8
    "updateTunerStudioState(TunerStudioOutputChannels *)"
                                                     48
    "getFuelMs(int)"                                 24
    "getBaseFuel(int)"                               16
    "getRealMafFuel(float, int)"                     24
    "Map3D<(int)16, (int)16>::getValue(float, float)"
                                                     24
    "interpolate3d(float, float *, int, float, float *, int, float **)"
                                                     96
    "interpolate(float, float, float, float, float)"
                                                     40
    "warning"                                        32
    "scheduleLogging"                                16
    "lockOutputBuffer"                                8
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "resetTs()" in tunerstudio.o [1]: 0x0800f2e7

  Maximum call chain                                32 bytes

    "resetTs()" in tunerstudio.o [1]                 8
    "memset"                                        16
    "__iar_Memset"                                   0
    "__iar_Memset_word"                              8

Uncalled function
  "_usb_ep0in": 0x0802182b

  Maximum call chain                            *?* 496 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "_usb_ep0in")
                            functions with no stack usage info (example: "_port_switch") **)

    "_usb_ep0in"                                     16
    "usbStartReceiveI"                               16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "_usb_ep0out": 0x08021907

  Maximum call chain                            *?* 496 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "_usb_ep0out")
                            functions with no stack usage info (example: "_port_switch") **)

    "_usb_ep0out"                                    16
    "usbStartTransmitI"                              16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "_usb_ep0setup": 0x080216d5

  Maximum call chain                            *?* 496 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "_usb_ep0setup")
                            functions with no stack usage info (example: "_port_switch") **)

    "_usb_ep0setup"                                  16
    "usbStartReceiveI"                               16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "usb_lld_pump" in usb_lld.o [1]: 0x080279fd

  Maximum call chain                            *?* 408 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "usb_lld_pump" in usb_lld.o [1]                  32
    "otg_rxfifo_handler" in usb_lld.o [1]            24
    "otg_fifo_read_to_queue" in usb_lld.o [1]        40
    "chSchReadyI"                                    16
    "chDbgCheckClassI"                                8
    "chDbgPanic"                                      0

Uncalled function
  "Vector14C": 0x08027aeb

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "usb_lld_serve_interrupt" in usb_lld.o [1])
                            functions with no stack usage info (example: "_port_switch") **)

    "Vector14C"                                       8
    "usb_lld_serve_interrupt" in usb_lld.o [1]       24
    "otg_epin_handler" in usb_lld.o [1]              24
    "usb_lld_wakeup_pump" in usb_lld.o [1]            8
    "chSchReadyI"                                    16
    "chDbgCheckClassI"                                8
    "chDbgPanic"                                      0

Uncalled function
  "get_descriptor" in usbcfg.o [1]: 0x0802da51

  Maximum call chain                                 4 bytes

    "get_descriptor" in usbcfg.o [1]                 4

Uncalled function
  "usb_event" in usbcfg.o [1]: 0x0802da83

  Maximum call chain                            *?* 528 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "usb_event" in usbcfg.o [1]                      16
    "sduConfigureHookI"                              16
    "chEvtBroadcastFlagsI"                           16
    "chEvtSignalI"                                   16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "vsAnaWidthCallback()" in vehicle_speed.o [1]: 0x0801c4ab

  Maximum call chain                            *?* 368 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "vsAnaWidthCallback()" in vehicle_speed.o [1]
                                                     16
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "speedInfo()" in vehicle_speed.o [1]: 0x0801c4d5

  Maximum call chain                            *?* 416 bytes
    (** call graph contains recursive functions (example: "chDbgPanic")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "speedInfo()" in vehicle_speed.o [1]             40
    "getVehicleSpeed()"                              24
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "setWaveModeSilent(int, int)" in wave_analyzer.o [1]: 0x0801505d

  Maximum call chain                            *?* 528 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setWaveModeSilent(int, int)" in wave_analyzer.o [1]
                                                     16
    "startInputDriver(digital_input_s *, bool)"      16
    "efiIcuStart(ICUDriver *, ICUConfig const *)"
                                                     16
    "icuStart"                                       16
    "chDbgPanic3"                                    16
    "lcdShowFatalMessage"                             8
    "lcd_HD44780_print_string"                        8
    "lcd_HD44780_print_char"                          8
    "lcd_HD44780_set_position"                       16
    "lcd_HD44780_write_command(unsigned char)"       16
    "lcd_HD44780_write(unsigned char)" in lcd_HD44780.o [1]
                                                     24
    "lcdSleep(int)" in lcd_HD44780.o [1]             16
    "chThdSleep"                                      8
    "chSchGoSleepTimeoutS"                           32
    "chSchGoSleepS"                                  16
    "chDbgCheckClassS"                                8
    "chDbgPanic"                                      0

Uncalled function
  "waAnaWidthCallback(WaveReader *)" in wave_analyzer.o [1]: 0x08014f91

  Maximum call chain                            *?* 408 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "waAnaWidthCallback(WaveReader *)" in wave_analyzer.o [1]
                                                     16
    "WaveChart::addWaveChartEvent3(char const *, char const *)"
                                                     40
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "waIcuPeriodCallback(WaveReader *)" in wave_analyzer.o [1]: 0x08015051

  Maximum call chain                            *?* 424 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "waIcuPeriodCallback(WaveReader *)" in wave_analyzer.o [1]
                                                      8
    "WaveReader::onFallEvent()"                      24
    "WaveChart::addWaveChartEvent3(char const *, char const *)"
                                                     40
    "getTimeNowNt"                                    8
    "Overflow64Counter::get()"                       40
    "lockAnyContext"                                  8
    "dbg_check_lock"                                  8
    "chDbgPanic"                                      0

Uncalled function
  "waThread(void *)" in wave_analyzer.o [1]: 0x0801511f

  Maximum call chain                            *?* 384 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "waThread(void *)" in wave_analyzer.o [1]         8
    "WaveChart::publishChartIfFull()"                 8
    "WaveChart::publishChart()"                      16
    "appendPrintf"                                   24
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setChartActive(int)" in wave_chart.o [1]: 0x08004ff9

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setChartActive(int)" in wave_chart.o [1]         8
    "printStatus()" in wave_chart.o [1]               8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "setChartSize(int)": 0x08005027

  Maximum call chain                            *?* 376 bytes
    (** call graph contains recursive functions (example: "warning")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "setChartSize(int)"                               8
    "printStatus()" in wave_chart.o [1]               8
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "__cmain": 0x0802f8e1

  Maximum call chain                            *?* 880 bytes
    (** call graph contains recursive functions (example: "firmwareError")
                            indirect calls (example: "chvprintf")
                            functions with no stack usage info (example: "_port_switch") **)

    "__cmain"                                         0
    "main"                                            8
    "runRusEfi"                                       8
    "initHardware(Logging *)"                        24
    "readFromFlash()"                                 8
    "resetConfigurationExt(Logging *, engine_type_e)"
                                                     16
    "applyNonPersistentConfiguration(Logging *)"
                                                      8
    "TriggerShape::initializeTriggerShape(Logging *)"
                                                     24
    "TriggerShape::calculateTriggerSynchPoint()"
                                                     40
    "findTriggerZeroEventIndex(TriggerShape *, trigger_config_s const *)"
                                                    216
    "doFindTrigger(TriggerStimulatorHelper *, TriggerShape *, trigger_config_s const *, TriggerState *)" in trigger_decoder.o [1]
                                                     32
    "TriggerStimulatorHelper::nextStep(TriggerState *, TriggerShape *, int, trigger_config_s const *)"
                                                     64
    "TriggerState::decodeTriggerEvent(trigger_event_e, long long)"
                                                     72
    "scheduleMsg"                                    32
    "vappendPrintf"                                  24
    "vappendPrintfI(Logging *, char const *, _VA_LIST)" in datalogging.o [1]
                                                     16
    "append"                                         24
    "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]
                                                      0

Uncalled function
  "__iar_init_vfp": 0x0802f8c5

  Maximum call chain                                 0 bytes

    "__iar_init_vfp"                                 0

The following functions make up recursion nest 0, which has no maximum recursion depth specified:

  "chDbgCheckClassI": 0x08013673
  "chDbgCheckClassS": 0x0801368d
  "chDbgPanic": 0x080136f3
  "chDbgPanic3": 0x0800a2c9
  "chSchGoSleepS": 0x0801ea71
  "chSchGoSleepTimeoutS": 0x0801eb15
  "chThdSleep": 0x08014175
  "chVTResetI": 0x08017e89
  "chVTSetI": 0x08017e1b
  "dbg_check_lock": 0x08013581
  "dbg_check_unlock": 0x0801359f

The following functions make up recursion nest 1, which has no maximum recursion depth specified:

  "OutputPin::setValue(int)": 0x08007307
  "chvprintf": 0x0800a761
  "firmwareError": 0x08008d45
  "turnAllPinsOff()": 0x0800962d

The following functions make up recursion nest 2, which has no maximum recursion depth specified:

  "ftoa": 0x0800a699

The following functions make up recursion nest 3, which has no maximum recursion depth specified:

  "append": 0x0800261d
  "validateBuffer(Logging *, unsigned int)" in datalogging.o [1]: 0x080025e1
  "warning": 0x0800a319

The following functions make up recursion nest 4, which has no maximum recursion depth specified:

  "atoi": 0x08002b8b

The following functions make up recursion nest 5, which has no maximum recursion depth specified:

  "efiPow10": 0x08002c93

The following functions appear not to be called and have no stack
usage information:

  "MemManageVector": 0x080138db
  "NMIVector": 0x080138db
  "PendSVVector": 0x080138db
  "Vector100": 0x080138db
  "Vector104": 0x080138db
  "Vector10C": 0x080138db
  "Vector110": 0x080138db
  "Vector114": 0x080138db
  "Vector118": 0x080138db
  "Vector11C": 0x080138db
  "Vector134": 0x080138db
  "Vector15C": 0x080138db
  "Vector160": 0x080138db
  "Vector164": 0x080138db
  "Vector168": 0x080138db
  "Vector16C": 0x080138db
  "Vector174": 0x080138db
  "Vector178": 0x080138db
  "Vector17C": 0x080138db
  "Vector180": 0x080138db
  "Vector184": 0x080138db
  "Vector1C": 0x080138db
  "Vector20": 0x080138db
  "Vector24": 0x080138db
  "Vector28": 0x080138db
  "Vector34": 0x080138db
  "Vector40": 0x080138db
  "Vector48": 0x080138db
  "Vector50": 0x080138db
  "Vector54": 0x080138db
  "VectorA8": 0x080138db
  "VectorC4": 0x080138db
  "VectorC8": 0x080138db
  "VectorCC": 0x080138db
  "VectorD0": 0x080138db
  "VectorEC": 0x080138db
  "VectorF4": 0x080138db
  "__iar_program_start": 0x0802f89d
  "_port_exit_from_isr": 0x08025f2f
  "_port_switch_from_isr": 0x08025f23
  "_port_thread_start": 0x08025f11
  "_unhandled_exception": 0x080138db

The following functions appear to be called, but have no stack
usage information:

  "_port_switch": 0x08025ef9

The following functions perform unknown indirect calls:

  "EventQueue::executeAll(long long)": 0x08020b69
  "GpsThreadEntryPoint(void *)" in neo6m.o [1]: 0x080201cf
  "IntListenerArray::invokeJustArgCallbacks()": 0x08014381
  "MMCmonThread()" in mmc_card.o [1]: 0x0801cea9
  "MenuTree::enterSubMenu()": 0x0801f6f1
  "PwmConfig::handleCycleStart()": 0x08018745
  "TriggerCentral::handleShaftSignal(trigger_event_e)": 0x0801d245
  "TriggerState::decodeTriggerEvent(trigger_event_e, long long)": 0x0801018d
  "Vector120": 0x08025b71
  "Vector124": 0x08025ba5
  "Vector128": 0x08025bdb
  "Vector12C": 0x08025c11
  "Vector130": 0x08025c47
  "Vector138": 0x08029a21
  "Vector150": 0x08025c79
  "Vector154": 0x08025caf
  "Vector158": 0x08025ce5
  "Vector170": 0x08029a47
  "Vector44": 0x080299af
  "Vector4C": 0x08029a6d
  "Vector58": 0x08029819
  "Vector5C": 0x0802983b
  "Vector60": 0x0802985d
  "Vector64": 0x0802987f
  "Vector68": 0x080298a1
  "Vector6C": 0x08025979
  "Vector70": 0x080259b5
  "Vector74": 0x080259f5
  "Vector78": 0x08025a35
  "Vector7C": 0x08025a75
  "Vector80": 0x08025ab1
  "Vector84": 0x08025af1
  "Vector88": 0x0801dfc3
  "Vector9C": 0x080298c3
  "VectorE0": 0x08029931
  "VectorE4": 0x080299d5
  "VectorE8": 0x080299fb
  "VectorF0": 0x0801e51b
  "VectorF8": 0x0801e53d
  "VectorFC": 0x08025b31
  "_usb_ep0in": 0x0802182b
  "_usb_ep0out": 0x08021907
  "_usb_ep0setup": 0x080216d5
  "adc_lld_serve_rx_interrupt" in adc_lld.o [1]: 0x0801de75
  "callback(GPTDriver *)" in microsecond_timer.o [1]: 0x08025835
  "chHeapAlloc": 0x080294bd
  "chIQGetTimeout": 0x08021a7b
  "chIQReadTimeout": 0x08021ae5
  "chOQPutTimeout": 0x08021bcd
  "chOQWriteTimeout": 0x08021c93
  "chSysTimerHandlerI": 0x08028123
  "chvprintf": 0x0800a761
  "consoleOutputBuffer(unsigned char const *, int)": 0x0800ac19
  "consolePutChar(int)": 0x0800abfb
  "consoleThreadThreadEntryPoint(void *)" in console_io.o [1]: 0x0800ab85
  "default_handler" in usb.o [1]: 0x0802113f
  "getConsoleLine(BaseSequentialStream *, char *, unsigned int)" in console_io.o [1]: 0x0800aa71
  "gpt_lld_serve_interrupt" in gpt_lld.o [1]: 0x0802962d
  "handleActionWithParameter(TokenCallback *, char *)": 0x08009df1
  "handleConsoleLineInternal(char const *, int)" in cli_registry.o [1]: 0x0800a123
  "handleExecuteCommand(ts_channel_s *, char *, int)" in tunerstudio.o [1]: 0x0800fba5
  "handlePlainCommand(ts_channel_s *, unsigned char)": 0x0800fbd1
  "icu_lld_serve_interrupt" in icu_lld.o [1]: 0x08019a2d
  "otg_epin_handler" in usb_lld.o [1]: 0x08027781
  "otg_epout_handler" in usb_lld.o [1]: 0x08027861
  "pwm_lld_serve_interrupt" in pwm_lld.o [1]: 0x0801e4ad
  "runBinaryProtocolLoop(ts_channel_s *, bool)": 0x0800f88f
  "set_address" in usb.o [1]: 0x08021115
  "spi_lld_serve_rx_interrupt" in spi_lld.o [1]: 0x0802221d
  "togglePwmState(PwmConfig *)" in pwm_generator_logic.o [1]: 0x0801879d
  "tunerStudioWriteData(ts_channel_s *, unsigned char const *, int)": 0x0801abc9
  "usb_lld_serve_interrupt" in usb_lld.o [1]: 0x0802791f


*******************************************************************************
*** MODULE SUMMARY
***

    Module                   ro code  ro data  rw data
    ------                   -------  -------  -------
F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj: [1]
    EfiWave.o                    260       68
    GY6_139QMB.o                 288    1 024
    HIP9011.o                  2 664      510      928
    LocalVersionHolder.o          38
    MiniCooperR50.o                8
    SingleTimerExecutor.o        552       64       44
    accel_enrichment.o         1 154      300        4
    acura_rsx.o                   16
    adc.o                        224      148
    adc_inputs.o               2 420      525    1 372
    adc_lld.o                  1 152       48      104
    advance_map.o                676    1 152      152
    algo.o                        34
    allsensors.o                 108
    alternatorController.o       956      248      876
    auto_generated_enums.o       884    1 024
    bmw_e34.o                    872
    board.o                       22      252
    board_test.o                 888      438      817
    can.o                        476      168
    can_hw.o                   1 656      291    1 032
    can_lld.o                  1 856       20      112
    ccsbcs.o                     144    1 216
    chcore.o                       4
    chcore_v7m.o                 324
    chcoreasm_v7m.o               56
    chdebug.o                    484      216    1 044
    chevents.o                   236      140
    chheap.o                     372      104       32
    chmemcore.o                  120             2 056
    chmtx.o                      440      180
    chprintf.o                 1 092       20
    chqueues.o                   944      116
    chregistry.o                  80       24
    chrtclib.o                   666
    chschd.o                     680       36       28
    chsem.o                      280      172
    chsys.o                      284        8    1 412
    chthreads.o                  412      128
    chvt.o                       228      120       16
    citroenBerlingoTU3JP.o       736    2 048
    cli_registry.o             1 840      384    3 544
    console_io.o                 844      128    9 547
    crc.o                        108      751    1 024
    cstartup.o                    40
    custom_engine.o              316
    datalogging.o              1 248      272    2 037
    digital_input_hw.o           566      112    2 080
    dodge_neon.o               1 384    3 088
    dodge_ram.o                  448
    efiGpio.o                    372       60      580
    eficonsole.o                 684    1 100      320
    efilib.o                     994               100
    efilib2.o                    112
    ego.o                        304       20
    electronic_throttle.o        880      168    1 276
    engine.o                   1 822      224      260
    engine_configuration.o     6 296      148        4
    engine_controller.o        2 872      579   53 096
    engine_emulator.o             40
    engine_math.o              2 640      642      156
    error_handling.o             296       55      377
    event_queue.o                530       60       16
    event_registry.o             140
    ext.o                        108       96
    ext_lld.o                    372                 8
    ext_lld_isr.o                760
    fatfs_diskio.o               368
    fatfs_syscall.o               26
    ff.o                       8 960      164        6
    flash.o                      768
    flash_main.o                 708      560        5
    ford_1995_inline_6.o         520
    ford_aspire.o                524    2 048
    ford_fiesta.o                140
    fsio_core.o                2 330      228      260
    fsio_impl.o                3 276    1 024    8 240
    fuel_math.o                1 260       84      152
    gm_2_2.o                      52
    gpio_helper.o                 68       40
    gpt.o                        232      184
    gpt_lld.o                    298       20       16
    hal.o                        160
    hal_lld.o                    572
    hardware.o                   900      136       36
    hip9011_lookup.o             248      640      128
    honda_accord.o               596
    i2c.o                         30
    i2c_lld.o                    688                56
    icu.o                        340      192
    icu_lld.o                  1 102       20       96
    idle_controller.o            576      211        4
    idle_thread.o              1 452      391    1 620
    injector_central.o         1 764      400    1 046
    interpolation.o            1 600      347       68
    io_pins.o                    596      196      312
    joystick.o                   828      132      220
    lcd_HD44780.o              1 760      268       16
    lcd_controller.o           1 820      416    1 280
    lcd_menu_tree.o              298
    listener_array.o             120       20
    loggingcentral.o             272       12   16 012
    maf.o                      1 968
    main.o                        22
    main_trigger_callback.o    2 968      654    3 904
    malfunction_central.o        240                44
    malfunction_indicator.o      300       20      712
    map.o                      1 320      184       76
    map_averaging.o            1 160      136      161
    max31855.o                   648      184      104
    mazda_323.o                   24
    mazda_626.o                  360
    mazda_miata.o              1 984    2 048
    mazda_miata_nb.o             472
    memstreams.o                 212       16
    microsecond_timer.o          416      156      773
    mitsubishi.o                 276       12
    mmc_card.o                 1 556      638    2 745
    mmc_spi.o                  2 204      756
    mmcsd.o                      216       84
    mpu_util.o                   516      232        8
    neo6m.o                      552      185    1 372
    nissan_primera.o               8
    nmea.o                     1 500       16
    nvic.o                       184
    obd2.o                       496      224      260
    pal_lld.o                    428
    pid.o                        228
    pin_repository.o           1 104      248      784
    poten.o                      372       72       68
    pwm.o                        112       96
    pwm_generator.o              354       62
    pwm_generator_logic.o        880      180
    pwm_lld.o                    716       20       40
    rfiutil.o                     60
    rover_v8.o                   312
    rpm_calculator.o           1 260      144       80
    rtc.o                        156       96
    rtc_helper.o                 264      160      264
    rtc_lld.o                    514                 4
    rusefi.o                     532       76    6 518
    sachs.o                      488
    saturn_ion.o                   8
    sensor_chart.o               268       68    5 068
    serial.o                     412      148
    serial_lld.o                 736       12      360
    serial_usb.o               1 166      142        8
    settings.o                 9 292    4 564    1 076
    signal_executor.o            628      350       96
    speed_density.o              952      108      256
    spi.o                        888      416
    spi_lld.o                  1 232      120      148
    status_loop.o              4 360      857    3 261
    stepper.o                    500       52
    stm32_dma.o                1 356      348      132
    subaru.o                      68
    table_helper.o               184
    test_engine.o                216
    thermistors.o              1 774      516        5
    tps.o                        508       44       48
    trigger_bmw.o                484       20
    trigger_central.o          2 296    1 201    4 120
    trigger_chrysler.o         1 284
    trigger_decoder.o          3 540      432      304
    trigger_emulator.o           160       68       48
    trigger_emulator_algo.o    1 004      165    1 909
    trigger_input.o              580      115       36
    trigger_mazda.o            1 108
    trigger_mitsubishi.o         600
    trigger_structure.o        3 736      228
    tunerstudio.o              3 680    1 585   17 932
    tunerstudio_io.o             398      155       12
    usb.o                      2 194      230
    usb_lld.o                  3 694       88    1 468
    usbcfg.o                     164      340      660
    usbconsole.o                 124
    vectors.o                    394
    vehicle_speed.o              356       64       24
    voltage.o                     84        8
    vw.o                         216
    wave_analyzer.o            1 252      228    1 168
    wave_chart.o                 832      248    5 280
    wbo.o                          2
    --------------------------------------------------
    Total:                   166 166   46 047  175 363

command line: [2]
    --------------------------------------------------
    Total:

dl7M_tln.a: [3]
    abort.o                        6
    cppinit.o                    152                20
    errno.o                       12        3        4
    exit.o                         4
    getzone.o                     10
    localtim.o                   186        6        8
    low_level_init.o               4
    mktime.o                     212
    setlocale.o                   41        5        8
    strcat.o                      28
    strncmp.o                     42
    strrchr.o                     24
    strstr.o                      44
    xgetdst.o                    322
    xgetmemchunk.o                44                 4
    xgettime.o                    66
    xisdst.o                     308        3        4
    xisdstData.o                            2        4
    xstol.o                      134
    xstoul.o                     368
    xtls.o                         2
    xttotm.o                     392       33       44
    xxmemxfree.o                 128
    xxmemxmalloc.o               176                 8
    --------------------------------------------------
    Total:                     2 705       52      104

dlpp7M_tl_ne.a: [4]
    cxxabi.o                      50
    --------------------------------------------------
    Total:                        50

m7M_tlv.a: [5]
    DblAdd.o                     232
    DblCmpLe.o                    46
    DblDiv.o                     582
    DblMul.o                     418
    DblSub.o                     384
    DblToFlt.o                   144
    DblToI32.o                    88
    FltToDbl.o                    78
    FltToS64.o                   118
    I32ToDbl.o                    48
    I64ToDbl.o                    88
    I64ToFlt.o                    98
    fpinit_M.o                    26
    logf.o                         6
    modf.o                       192
    round.o                       76
    xdint.o                      126
    xdtest.o                      72
    xfdnorm.o                     38
    xfdtest.o                     56
    xflog.o                      360
    --------------------------------------------------
    Total:                     3 276

rt7M_tl.a: [6]
    ABImemclr4.o                   6
    ABImemcpy.o                  118
    ABImemset.o                  102
    ABImemset48.o                 50
    I64DivMod.o                  306
    I64DivZer.o                    2
    cexit.o                       14
    cmain.o                       22
    cmain_call_ctors.o            32
    cstart_call_dtors.o
    data_init.o                   40
    lz77_init.o                  420
    memchr.o                      88
    memcmp.o                      98
    strchr.o                      22
    strcpy.o                      68
    strlen.o                      54
    strncpy.o                    108
    zero_init3.o                  34
    --------------------------------------------------
    Total:                     1 584

shb_l.a: [7]
    exit.o                        20
    --------------------------------------------------
    Total:                        20

    Gaps                          81        2       19
    Linker created                         57    6 552
------------------------------------------------------
    Grand Total:             173 882   46 158  182 038


*******************************************************************************
*** ENTRY LIST
***

Entry                      Address    Size  Type      Object
-----                      -------    ----  ----      ------
.iar.dynexit$$Base      0x2001c664           --   Gb  - Linker created -
.iar.dynexit$$Limit     0x2001c808           --   Gb  - Linker created -
?main                   0x0802f8e1          Code  Gb  cmain.o [6]
ADCD1                   0x2000adc8    0x34  Data  Gb  adc_lld.o [1]
ADCD2                   0x2000adfc    0x34  Data  Gb  adc_lld.o [1]
AccelEnrichmemnt::AccelEnrichmemnt()
                        0x080149e1    0x1c  Code  Gb  accel_enrichment.o [1]
AccelEnrichmemnt::getDelta()
                        0x080148d1    0x14  Code  Gb  accel_enrichment.o [1]
AccelEnrichmemnt::getMapEnrichment()
                        0x08014921    0x3c  Code  Gb  accel_enrichment.o [1]
AccelEnrichmemnt::getTpsEnrichment()
                        0x080148e5    0x3c  Code  Gb  accel_enrichment.o [1]
AccelEnrichmemnt::onEngineCycle()
                        0x080149d1    0x10  Code  Gb  accel_enrichment.o [1]
AccelEnrichmemnt::onEngineCycleTps()
                        0x080149c1    0x10  Code  Gb  accel_enrichment.o [1]
AccelEnrichmemnt::onNewValue(float)
                        0x0801496b    0x56  Code  Gb  accel_enrichment.o [1]
AccelEnrichmemnt::reset()
                        0x0801495d     0xe  Code  Gb  accel_enrichment.o [1]
AccelEnrichmemnt::~AccelEnrichmemnt()
                        0x08032085     0xe  Code  Gb  engine_controller.o [1]
AdcDevice::AdcDevice(ADCConversionGroup *)
                        0x08005567    0x40  Code  Gb  adc_inputs.o [1]
AdcDevice::addChannel(adc_channel_e)
                        0x080059e9    0x80  Code  Gb  adc_inputs.o [1]
AdcDevice::getAdcHardwareIndexByInternalIndex(int)
                        0x08005ab5     0xa  Code  Gb  adc_inputs.o [1]
AdcDevice::getAdcValueByHwChannel(int)
                        0x08005983     0xe  Code  Gb  adc_inputs.o [1]
AdcDevice::getAdcValueByIndex(int)
                        0x08005991     0xa  Code  Gb  adc_inputs.o [1]
AdcDevice::init()       0x0800599b    0x2a  Code  Gb  adc_inputs.o [1]
AdcDevice::isHwUsed(adc_channel_e)
                        0x080059c5    0x24  Code  Gb  adc_inputs.o [1]
AdcDevice::size()       0x0800597d     0x6  Code  Gb  adc_inputs.o [1]
AltCtrlThread(int)      0x080097fd   0x10e  Code  Lc  alternatorController.o [1]
ArrayList<IgnitionEvent, (int)80>::ArrayList()
                        0x0802f0e5    0x30  Code  Gb  engine_configuration.o [1]
ArrayList<IgnitionEvent, (int)80>::add()
                        0x08017bfd    0x28  Code  Gb  engine_math.o [1]
ArrayList<IgnitionEvent, (int)80>::add()::string
                        0x080316dc    0x18  Data  Gb  engine_math.o [1]
ArrayList<IgnitionEvent, (int)80>::reset()
                        0x08017bf5     0x6  Code  Gb  engine_math.o [1]
ArrayList<InjectionEvent, (int)45>::ArrayList()
                        0x08017c4d    0x30  Code  Gb  engine_math.o [1]
ArrayList<InjectionEvent, (int)45>::add()
                        0x08017c25    0x28  Code  Gb  engine_math.o [1]
ArrayList<InjectionEvent, (int)45>::add()::string
                        0x080316c4    0x18  Data  Gb  engine_math.o [1]
ArrayList<InjectionEvent, (int)45>::reset()
                        0x08017c7d     0x6  Code  Gb  engine_math.o [1]
ArrayList<digital_input_s, (int)8>::ArrayList()
                        0x08025f31    0x2c  Code  Gb  digital_input_hw.o [1]
ArrayList<digital_input_s, (int)8>::add()
                        0x08025f5d    0x2c  Code  Gb  digital_input_hw.o [1]
ArrayList<digital_input_s, (int)8>::add()::string
                        0x0803164c    0x18  Data  Gb  digital_input_hw.o [1]
ArrayList<digital_input_s, (int)8>::reset()
                        0x080285cd     0x6  Code  Gb  digital_input_hw.o [1]
BINARY_RESPONSE         0x20001854     0x2  Data  Lc  tunerstudio.o [1]
BLINK_PINS              0x200010d8    0x58  Data  Lc  board_test.o [1]
BUSY_WAIT_DELAY         0x200113f4     0x4  Data  Lc  lcd_HD44780.o [1]
BusFaultVector          0x0800a471     0xe  Code  Gb  mpu_util.o [1]
CAND1                   0x2000b040    0x38  Data  Gb  can_lld.o [1]
CAND2                   0x2000b078    0x38  Data  Gb  can_lld.o [1]
CSTACK$$Base            0x2001fc00           --   Gb  - Linker created -
CSTACK$$Limit           0x20020000           --   Gb  - Linker created -
DATABSS$$Base           0x20001000           --   Gb  - Linker created -
DATABSS$$Limit          0x2001c808           --   Gb  - Linker created -
DEFAULT_OUTPUT          0x20011318     0x4  Data  Gb  io_pins.o [1]
DebugMonitorVector      0x0800a455     0xe  Code  Gb  mpu_util.o [1]
DigitLength(int)        0x08015b6f    0x14  Code  Lc  malfunction_indicator.o [1]
DisplayErrorCode(int, int)
                        0x08015b83    0x52  Code  Lc  malfunction_indicator.o [1]
DtorRecArray            0x2001c664     0xc  Data  Lc  cppinit.o [3]
EXTD1                   0x2000f4a4     0x8  Data  Gb  ext_lld.o [1]
Engine::Engine(persistent_config_s *)
                        0x08013a51   0x112  Code  Gb  engine.o [1]
Engine::addConfigurationListener(void (*)(Engine*))
                        0x08013a37    0x18  Code  Gb  engine.o [1]
Engine::init()          0x08013bf9     0x2  Code  Gb  engine.o [1]
Engine::knockLogic(float)
                        0x08013ca9    0x84  Code  Gb  engine.o [1]
Engine::onTriggerEvent(long long)
                        0x08013a13    0x18  Code  Gb  engine.o [1]
Engine::periodicFastCallback()
                        0x08013dd5   0x1a4  Code  Gb  engine.o [1]
Engine::preCalculate()  0x08013b89    0x70  Code  Gb  engine.o [1]
Engine::printKnockState()
                        0x08013c73    0x28  Code  Gb  engine.o [1]
Engine::stopPins()      0x08013c31    0x42  Code  Gb  engine.o [1]
Engine::updateSlowSensors()
                        0x08013965    0xae  Code  Gb  engine.o [1]
Engine::watchdog()      0x08013d2d    0xa4  Code  Gb  engine.o [1]
Engine::~Engine()       0x0803206d    0x18  Code  Gb  engine_controller.o [1]
EngineState::EngineState()
                        0x08013b65    0x24  Code  Gb  engine.o [1]
EventQueue::EventQueue()
                        0x08020a8b    0x14  Code  Gb  event_queue.o [1]
EventQueue::executeAll(long long)
                        0x08020b69    0xee  Code  Gb  event_queue.o [1]
EventQueue::getNextEventTime(long long)
                        0x08020b25    0x44  Code  Gb  event_queue.o [1]
EventQueue::insertTask(scheduling_s *, long long, void (*)(void *), void *)
                        0x08020a9f    0x86  Code  Gb  event_queue.o [1]
EventQueue::setLateDelay(int)
                        0x08020c79     0xa  Code  Gb  event_queue.o [1]
Executor::Executor()    0x0801dc79    0x1c  Code  Gb  SingleTimerExecutor.o [1]
Executor::doExecute()   0x0801dd0f    0x4a  Code  Gb  SingleTimerExecutor.o [1]
Executor::onTimerCallback()
                        0x0801dcf5    0x1a  Code  Gb  SingleTimerExecutor.o [1]
Executor::scheduleByTime(scheduling_s *, long long, void (*)(void *), void *)
                        0x0801dc95    0x60  Code  Gb  SingleTimerExecutor.o [1]
Executor::scheduleTimerCallback()
                        0x0801dd59    0x7e  Code  Gb  SingleTimerExecutor.o [1]
FDCurrFile              0x20014040   0x224  Data  Lc  mmc_card.o [1]
FDLogFile               0x20013e1c   0x224  Data  Lc  mmc_card.o [1]
FLStack<float, (int)32>::FLStack()
                        0x08022b73    0x18  Code  Gb  fsio_core.o [1]
FLStack<float, (int)32>::pop()
                        0x08022b95    0x24  Code  Gb  fsio_core.o [1]
FLStack<float, (int)32>::pop()::string
                        0x080325e4    0x14  Data  Gb  fsio_core.o [1]
FLStack<float, (int)32>::push(float)
                        0x08022bb9    0x34  Code  Gb  fsio_core.o [1]
FLStack<float, (int)32>::push(float)::string
                        0x080325d0    0x14  Data  Gb  fsio_core.o [1]
FLStack<float, (int)32>::reset()
                        0x08022b8b     0x6  Code  Gb  fsio_core.o [1]
FLStack<float, (int)32>::size()
                        0x08022b91     0x4  Code  Gb  fsio_core.o [1]
FastInterpolation::FastInterpolation()
                        0x08008f19    0x1e  Code  Gb  interpolation.o [1]
FastInterpolation::FastInterpolation(float, float, float, float)
                        0x08008f37    0x36  Code  Gb  interpolation.o [1]
FastInterpolation::getValue(float)
                        0x08008fdb    0x12  Code  Gb  interpolation.o [1]
FastInterpolation::init(float, float, float, float)
                        0x08008f6d    0x6e  Code  Gb  interpolation.o [1]
FatFs                   0x2000f4ac     0x4  Data  Lc  ff.o [1]
Fsid                    0x2001c644     0x2  Data  Lc  ff.o [1]
FuelSchedule::FuelSchedule()
                        0x08007615    0x14  Code  Gb  engine_math.o [1]
FuelSchedule::addFuelEvents(injection_mode_e)
                        0x08007645   0x218  Code  Gb  engine_math.o [1]
FuelSchedule::clear()   0x08007629    0x1c  Code  Gb  engine_math.o [1]
FuelSchedule::registerInjectionEvent(NamedOutputPin *, float, bool)
                        0x0800757d    0x8a  Code  Gb  engine_math.o [1]
GPSdata                 0x20014388    0x50  Data  Lc  neo6m.o [1]
GPSserialConfig         0x20001734     0xc  Data  Lc  neo6m.o [1]
GPTD5                   0x20010f40    0x10  Data  Gb  gpt_lld.o [1]
GpsThreadEntryPoint(void *)
                        0x080201cf    0x50  Code  Lc  neo6m.o [1]
HEAP$$Base              0x2001c808           --   Gb  - Linker created -
HEAP$$Limit             0x2001cc08           --   Gb  - Linker created -
HardFaultVector         0x0800a481    0x42  Code  Gb  mpu_util.o [1]
I2CD1                   0x20010ff4    0x38  Data  Gb  i2c_lld.o [1]
ICUD1                   0x2001102c    0x18  Data  Gb  icu_lld.o [1]
ICUD2                   0x20011044    0x18  Data  Gb  icu_lld.o [1]
ICUD3                   0x2001105c    0x18  Data  Gb  icu_lld.o [1]
ICUD9                   0x20011074    0x18  Data  Gb  icu_lld.o [1]
IRQSTACK$$Base          0x20000000          Data  Gb  - Linker created -
IRQSTACK$$Limit         0x20001000           --   Gb  - Linker created -
IdleValveState::IdleValveState()
                        0x0801f499    0x14  Code  Gb  idle_controller.o [1]
IdleValveState::getIdle(int, unsigned int)
                        0x0801f5a1    0xea  Code  Gb  idle_controller.o [1]
IdleValveState::init()  0x0801f4ad    0x14  Code  Gb  idle_controller.o [1]
IdleValveState::setTargetRpm(int)
                        0x0801f4c1    0x30  Code  Gb  idle_controller.o [1]
IgnitionEvent::IgnitionEvent()
                        0x0802dcc3    0x3a  Code  Gb  event_registry.o [1]
InStream_Read           0x0802d2d5    0x22  Code  Lc  lz77_init.o [6]
InjectionEvent::InjectionEvent()
                        0x0802dc99    0x1c  Code  Gb  event_registry.o [1]
IntListenerArray::IntListenerArray()
                        0x08014331    0x22  Code  Gb  listener_array.o [1]
IntListenerArray::invokeJustArgCallbacks()
                        0x08014381    0x22  Code  Gb  listener_array.o [1]
IntListenerArray::registerCallback(void (*)(int), void *)
                        0x08014353    0x2a  Code  Gb  listener_array.o [1]
LECalculator::LECalculator()
                        0x0801bca9    0x16  Code  Gb  fsio_core.o [1]
LECalculator::add(LEElement *)
                        0x0801bcef    0x20  Code  Gb  fsio_core.o [1]
LECalculator::doJob(Engine *, LEElement *)
                        0x0801bde1   0x3f4  Code  Gb  fsio_core.o [1]
LECalculator::getValue(Engine *)
                        0x0801c1f1    0x8c  Code  Gb  fsio_core.o [1]
LECalculator::getValue2(LEElement *, Engine *)
                        0x0801c1d5    0x1a  Code  Gb  fsio_core.o [1]
LECalculator::pop(le_action_e)
                        0x0801bd25    0x30  Code  Gb  fsio_core.o [1]
LECalculator::push(le_action_e, float)
                        0x0801bd99    0x46  Code  Gb  fsio_core.o [1]
LECalculator::reset()   0x0801bcbf    0x1a  Code  Gb  fsio_core.o [1]
LECalculator::reset(LEElement *)
                        0x0801bcd9    0x16  Code  Gb  fsio_core.o [1]
LEElement::LEElement()  0x0801bc89    0x14  Code  Gb  fsio_core.o [1]
LEElement::init(le_action_e)
                        0x0801bc9d     0x4  Code  Gb  fsio_core.o [1]
LEElement::init(le_action_e, float)
                        0x0801bca1     0x8  Code  Gb  fsio_core.o [1]
LEElementPool::LEElementPool(LEElement *, int)
                        0x0801c27d    0x16  Code  Gb  fsio_core.o [1]
LEElementPool::getSize()
                        0x0801c299     0x4  Code  Gb  fsio_core.o [1]
LEElementPool::next()   0x0801c29d    0x24  Code  Gb  fsio_core.o [1]
LEElementPool::parseExpression(char const *)
                        0x0801c357    0x86  Code  Gb  fsio_core.o [1]
LEElementPool::reset()  0x0801c293     0x6  Code  Gb  fsio_core.o [1]
LENameOrdinalPair::LENameOrdinalPair(le_action_e, char const *)
                        0x0801bc75    0x14  Code  Gb  fsio_core.o [1]
LE_FIRST                0x2000f4b4     0x4  Data  Gb  fsio_core.o [1]
LOGGING_BUFFER          0x2000a9a4   0x1f4  Data  Lc  adc_inputs.o [1]
LOGGING_BUFFER          0x200155f0  0x1388  Data  Lc  sensor_chart.o [1]
LOGGING_BUFFER          0x20016b24   0x3e8  Data  Lc  settings.o [1]
LOGGING_BUFFER          0x200170f8   0x578  Data  Lc  status_loop.o [1]
LfnOfs                  0x080336d0    0x10  Data  Lc  ff.o [1]
LocalVersionHolder::LocalVersionHolder()
                        0x08014041     0x8  Code  Gb  LocalVersionHolder.o [1]
LocalVersionHolder::getVersion()
                        0x08014049     0x4  Code  Gb  LocalVersionHolder.o [1]
LocalVersionHolder::isOld()
                        0x0801404d    0x1a  Code  Gb  LocalVersionHolder.o [1]
Logging::Logging()      0x08002a6f     0xe  Code  Gb  datalogging.o [1]
Logging::Logging(char const *, char *, int)
                        0x08002a7d    0x20  Code  Gb  datalogging.o [1]
Logging::Logging(char const *, char *, int) [subobject]
                        0x080025d5     0xc  Code  Gb  datalogging.o [1]
Logging::baseConstructor()
                        0x08002a59    0x16  Code  Gb  datalogging.o [1]
LoggingWithStorage::LoggingWithStorage(char const *)
                        0x08002a9d    0x18  Code  Gb  datalogging.o [1]
MMCD1                   0x20013ab4    0x34  Data  Gb  mmc_card.o [1]
MMC_FS                  0x20013ae8   0x230  Data  Lc  mmc_card.o [1]
MMCmonThread()          0x0801cea9    0x38  Code  Lc  mmc_card.o [1]
MMCmount()              0x0801ce39    0x70  Code  Lc  mmc_card.o [1]
MMCumount()             0x0801cde5    0x50  Code  Lc  mmc_card.o [1]
MainTriggerCallback::init(Engine *)
                        0x08016a4d    0x16  Code  Gb  main_trigger_callback.o [1]
Map3D<(int)16, (int)16>::Map3D()
                        0x08019fcd    0x1e  Code  Gb  speed_density.o [1]
Map3D<(int)16, (int)16>::getValue(float, float)
                        0x0801a0a1    0x50  Code  Gb  status_loop.o [1]
Map3D<(int)16, (int)16>::getValue(float, float)::string
                        0x08033048    0x14  Data  Gb  status_loop.o [1]
Map3D<(int)16, (int)16>::init(float (*)[16], float *, float *)
                        0x0801a055    0x28  Code  Gb  speed_density.o [1]
Map3D<(int)16, (int)16>::setAll(float)
                        0x0801a009    0x4c  Code  Gb  speed_density.o [1]
Map3D<(int)16, (int)16>::setAll(float)::string
                        0x08032f30    0x14  Data  Gb  speed_density.o [1]
Map3D<(int)4, (int)4>::Map3D()
                        0x08019feb    0x1e  Code  Gb  speed_density.o [1]
Map3D<(int)4, (int)4>::getValue(float, float)
                        0x08022bed    0x50  Code  Gb  fuel_math.o [1]
Map3D<(int)4, (int)4>::getValue(float, float)::string
                        0x08032698    0x14  Data  Gb  fuel_math.o [1]
Map3D<(int)4, (int)4>::init(float (*)[4], float *, float *)
                        0x0801a07d    0x24  Code  Gb  speed_density.o [1]
MemManageVector         0x080138db          Code  Wk  vectors.o [1]
MenuItem::MenuItem(MenuItem*, char const *)
                        0x0801f779    0x1e  Code  Gb  lcd_menu_tree.o [1]
MenuItem::MenuItem(MenuItem*, char const *, void (*)())
                        0x0801f75d    0x1c  Code  Gb  lcd_menu_tree.o [1]
MenuItem::MenuItem(MenuItem*, lcd_line_e)
                        0x0801f797    0x20  Code  Gb  lcd_menu_tree.o [1]
MenuItem::baseConstructor(MenuItem*, lcd_line_e, char const *, void (*)())
                        0x0801f7b7    0x4c  Code  Gb  lcd_menu_tree.o [1]
MenuTree::MenuTree(MenuItem *)
                        0x0801f6d9    0x10  Code  Gb  lcd_menu_tree.o [1]
MenuTree::back()        0x0801f717    0x16  Code  Gb  lcd_menu_tree.o [1]
MenuTree::enterSubMenu()
                        0x0801f6f1    0x26  Code  Gb  lcd_menu_tree.o [1]
MenuTree::init(MenuItem *, int)
                        0x0801f6e9     0x8  Code  Gb  lcd_menu_tree.o [1]
MenuTree::nextItem()    0x0801f72d    0x30  Code  Gb  lcd_menu_tree.o [1]
NMIVector               0x080138db          Code  Wk  vectors.o [1]
NVIC_SystemReset()      0x08008c2d    0x1a  Code  Lc  rusefi.o [1]
NamedOutputPin::NamedOutputPin()
                        0x080072bf    0x12  Code  Gb  efiGpio.o [1]
NamedOutputPin::NamedOutputPin(char const *)
                        0x080072d1    0x12  Code  Gb  efiGpio.o [1]
OUTPUT_MODE_DEFAULT     0x2000ebd8     0x4  Data  Gb  efiGpio.o [1]
OutStream_Write         0x0802d2f7    0x40  Code  Lc  lz77_init.o [6]
OutputPin::OutputPin()  0x080072e3    0x14  Code  Gb  efiGpio.o [1]
OutputPin::OutputPin() [subobject]
                        0x080072a9     0xc  Code  Gb  efiGpio.o [1]
OutputPin::getLogicValue()
                        0x0800737d    0x10  Code  Gb  efiGpio.o [1]
OutputPin::isInitialized()
                        0x080072f7    0x10  Code  Gb  efiGpio.o [1]
OutputPin::setDefaultPinState(pin_output_mode_e *)
                        0x08007393    0x20  Code  Gb  efiGpio.o [1]
OutputPin::setValue(int)
                        0x08007307    0x76  Code  Gb  efiGpio.o [1]
OutputPin::unregister()
                        0x0800738d     0x6  Code  Gb  efiGpio.o [1]
OutputSignal_struct::OutputSignal_struct()
                        0x0802dcfd    0x28  Code  Gb  event_registry.o [1]
Overflow64Counter::Overflow64Counter()
                        0x08013fd1     0xe  Code  Gb  efilib2.o [1]
Overflow64Counter::get()
                        0x08013ff7    0x44  Code  Gb  efilib2.o [1]
PIN_USED                0x20014610   0x1c0  Data  Gb  pin_repository.o [1]
PORTS                   0x200016e8    0x20  Data  Lc  io_pins.o [1]
PWMD4                   0x20014948    0x14  Data  Gb  pwm_lld.o [1]
PWMD8                   0x2001495c    0x14  Data  Gb  pwm_lld.o [1]
PendSVVector            0x080138db          Code  Wk  vectors.o [1]
Pid::Pid(float, float, float, float, float)
                        0x0801894d    0x1e  Code  Gb  pid.o [1]
Pid::getD()             0x08018a2b     0x6  Code  Gb  pid.o [1]
Pid::getI()             0x08018a1f     0x6  Code  Gb  pid.o [1]
Pid::getIntegration()   0x08018a25     0x6  Code  Gb  pid.o [1]
Pid::getP()             0x08018a19     0x6  Code  Gb  pid.o [1]
Pid::getValue(float, float, float)
                        0x0801896b    0x78  Code  Gb  pid.o [1]
Pid::reset()            0x08018a0f     0xa  Code  Gb  pid.o [1]
Pid::updateFactors(float, float, float)
                        0x080189e3    0x2c  Code  Gb  pid.o [1]
PwmConfig::PwmConfig()  0x08018669    0x1e  Code  Gb  pwm_generator_logic.o [1]
PwmConfig::PwmConfig() [subobject]
                        0x080185dd     0xc  Code  Gb  pwm_generator_logic.o [1]
PwmConfig::PwmConfig(float *, single_wave_s *)
                        0x08018687    0x2e  Code  Gb  pwm_generator_logic.o [1]
PwmConfig::baseConstructor()
                        0x0801862b    0x3e  Code  Gb  pwm_generator_logic.o [1]
PwmConfig::handleCycleStart()
                        0x08018745    0x58  Code  Gb  pwm_generator_logic.o [1]
PwmConfig::init(float *, single_wave_s *)
                        0x080186b5    0x16  Code  Gb  pwm_generator_logic.o [1]
PwmConfig::weComplexInit(char const *, int, float *, int, signed char **, void (*)(PwmConfig*), void (*)(PwmConfig*, int))
                        0x08018889    0x94  Code  Gb  pwm_generator_logic.o [1]
ROOT                    0x20011400    0x24  Data  Lc  lcd_controller.o [1]
RTCD1                   0x20014a88     0x4  Data  Gb  rtc_lld.o [1]
Region$$Table$$Base     0x0802fea8           --   Gb  - Linker created -
Region$$Table$$Limit    0x0802fee0           --   Gb  - Linker created -
RpmCalculator::RpmCalculator()
                        0x08012d25    0x36  Code  Gb  rpm_calculator.o [1]
RpmCalculator::getRevolutionCounter()
                        0x08012e15     0x4  Code  Gb  rpm_calculator.o [1]
RpmCalculator::getRevolutionCounterSinceStart()
                        0x08012e19     0x4  Code  Gb  rpm_calculator.o [1]
RpmCalculator::getRpmAcceleration()
                        0x08012e1d    0x34  Code  Gb  rpm_calculator.o [1]
RpmCalculator::isRunning()
                        0x08012d5b    0x80  Code  Gb  rpm_calculator.o [1]
RpmCalculator::onNewEngineCycle()
                        0x08012e07     0xe  Code  Gb  rpm_calculator.o [1]
RpmCalculator::rpm()    0x08012e51    0x4a  Code  Gb  rpm_calculator.o [1]
RpmCalculator::setRpmValue(int)
                        0x08012ddd    0x2a  Code  Gb  rpm_calculator.o [1]
SD1                     0x200169bc    0x78  Data  Gb  serial_lld.o [1]
SD2                     0x20016a34    0x78  Data  Gb  serial_lld.o [1]
SD3                     0x20016aac    0x78  Data  Gb  serial_lld.o [1]
SDU1                    0x2001c2b0   0x258  Data  Gb  usbcfg.o [1]
SHT$$INIT_ARRAY$$Base   0x0802daf4           --   Gb  - Linker created -
SHT$$INIT_ARRAY$$Limit  0x0802db98           --   Gb  - Linker created -
SHT$$PREINIT_ARRAY$$Base
                        0x0802daf4           --   Gb  - Linker created -
SHT$$PREINIT_ARRAY$$Limit
                        0x0802daf4           --   Gb  - Linker created -
SPID1                   0x20017058    0x30  Data  Gb  spi_lld.o [1]
SPID2                   0x20017088    0x30  Data  Gb  spi_lld.o [1]
SPID3                   0x200170b8    0x30  Data  Gb  spi_lld.o [1]
SVCallVector            0x08022049    0x20  Code  Gb  chcore_v7m.o [1]
SimplePwm::SimplePwm()  0x080185e9    0x42  Code  Gb  pwm_generator_logic.o [1]
SimplePwm::setSimplePwmDutyCycle(float)
                        0x080186cb    0x20  Code  Gb  pwm_generator_logic.o [1]
StepperMotor::StepperMotor()
                        0x0801f32f    0x2a  Code  Gb  stepper.o [1]
StepperMotor::getTargetPosition()
                        0x0801f359     0x4  Code  Gb  stepper.o [1]
StepperMotor::initialize(brain_pin_e, brain_pin_e, float, int, brain_pin_e)
                        0x0801f3c3    0xbc  Code  Gb  stepper.o [1]
StepperMotor::pulse()   0x0801f361    0x62  Code  Gb  stepper.o [1]
StepperMotor::setTargetPosition(int)
                        0x0801f35d     0x4  Code  Gb  stepper.o [1]
SysTickVector           0x08022021    0x28  Code  Gb  chcore_v7m.o [1]
Table2D<(int)8>::Table2D()
                        0x0801e957     0x6  Code  Gb  engine.o [1]
Table2D<(int)8>::preCalc(float *, float *)
                        0x0801e95d    0x9c  Code  Gb  engine.o [1]
Table2D<(int)8>::preCalc(float *, float *)::string
                        0x0802ef64    0x30  Data  Gb  engine.o [1]
Tbl                     0x0802d494   0x100  Data  Lc  ccsbcs.o [1]
ThermistorMath::ThermistorMath()
                        0x08006545    0x1e  Code  Gb  thermistors.o [1]
ThermistorMath::init(thermistor_conf_s *)
                        0x08006563    0x38  Code  Gb  thermistors.o [1]
TriggerCentral::TriggerCentral()
                        0x0801d171    0x32  Code  Gb  trigger_central.o [1]
TriggerCentral::addEventListener(void (*)(trigger_event_e, unsigned int), char const *, Engine *)
                        0x0801d089    0x22  Code  Gb  trigger_central.o [1]
TriggerCentral::getHwEventCounter(int)
                        0x0801d1a3     0xa  Code  Gb  trigger_central.o [1]
TriggerCentral::handleShaftSignal(trigger_event_e)
                        0x0801d245   0x158  Code  Gb  trigger_central.o [1]
TriggerCentral::resetCounters()
                        0x0801d1ad    0x18  Code  Gb  trigger_central.o [1]
TriggerEmulatorHelper::TriggerEmulatorHelper()
                        0x08026a0b     0xe  Code  Gb  trigger_emulator_algo.o [1]
TriggerEmulatorHelper::handleEmulatorCallback(PwmConfig *, int)
                        0x08026a45    0xec  Code  Gb  trigger_emulator_algo.o [1]
TriggerShape::TriggerShape()
                        0x08007dc9    0xa6  Code  Gb  trigger_structure.o [1]
TriggerShape::addEvent(float, trigger_wheel_e, trigger_value_e)
                        0x08008265   0x286  Code  Gb  trigger_structure.o [1]
TriggerShape::addEvent(float, trigger_wheel_e, trigger_value_e, float, float)
                        0x08008219    0x44  Code  Gb  trigger_structure.o [1]
TriggerShape::calculateTriggerSynchPoint()
                        0x08007e77   0x16c  Code  Gb  trigger_structure.o [1]
TriggerShape::clear()   0x08007fe9    0x2a  Code  Gb  trigger_structure.o [1]
TriggerShape::getAngle(int) const
                        0x080081d9    0x40  Code  Gb  trigger_structure.o [1]
TriggerShape::getCycleDuration() const
                        0x080084f1    0x16  Code  Gb  trigger_structure.o [1]
TriggerShape::getLength() const
                        0x080081b7    0x20  Code  Gb  trigger_structure.o [1]
TriggerShape::getOperationMode()
                        0x0800825d     0x8  Code  Gb  trigger_structure.o [1]
TriggerShape::getSize() const
                        0x08007e6f     0x8  Code  Gb  trigger_structure.o [1]
TriggerShape::getSwitchAngle(int) const
                        0x08008507    0x2c  Code  Gb  trigger_structure.o [1]
TriggerShape::initializeTriggerShape(Logging *)
                        0x080108f1   0x1bc  Code  Gb  trigger_decoder.o [1]
TriggerShape::reset(operation_mode_e, bool)
                        0x08008013    0x5a  Code  Gb  trigger_structure.o [1]
TriggerShape::setTriggerSynchronizationGap(float)
                        0x0800865d    0x28  Code  Gb  trigger_structure.o [1]
TriggerShape::setTriggerSynchronizationGap2(float, float)
                        0x08008647    0x16  Code  Gb  trigger_structure.o [1]
TriggerState::TriggerState()
                        0x080080e7    0x70  Code  Gb  trigger_structure.o [1]
TriggerState::clear()   0x0800817d    0x3a  Code  Gb  trigger_structure.o [1]
TriggerState::decodeTriggerEvent(trigger_event_e, long long)
                        0x0801018d   0x4b2  Code  Gb  trigger_decoder.o [1]
TriggerState::getCurrentIndex()
                        0x08008157     0x4  Code  Gb  trigger_structure.o [1]
TriggerState::getTotalEventCounter()
                        0x08008169     0xe  Code  Gb  trigger_structure.o [1]
TriggerState::getTotalRevolutionCounter()
                        0x08008177     0x6  Code  Gb  trigger_structure.o [1]
TriggerState::resetRunningCounters()
                        0x0800815b     0xe  Code  Gb  trigger_structure.o [1]
TriggerStimulatorHelper::TriggerStimulatorHelper()
                        0x08010ac5     0x2  Code  Gb  trigger_decoder.o [1]
TriggerStimulatorHelper::nextStep(TriggerState *, TriggerShape *, int, trigger_config_s const *)
                        0x08010ac9   0x192  Code  Gb  trigger_decoder.o [1]
UNUSED_CCM_SIZE         0x1000d9ec   0xe10  Data  Lc  rusefi.o [1]
UNUSED_RAM_SIZE         0x20015528    0xc8  Data  Lc  rusefi.o [1]
USBD1                   0x20009e80   0x5a0  Data  Gb  usb_lld.o [1]
UsageFaultVector        0x0800a463     0xe  Code  Gb  mpu_util.o [1]
Vector100               0x080138db          Code  Wk  vectors.o [1]
Vector104               0x080138db          Code  Wk  vectors.o [1]
Vector108               0x08029651    0x16  Code  Gb  gpt_lld.o [1]
Vector10C               0x080138db          Code  Wk  vectors.o [1]
Vector110               0x080138db          Code  Wk  vectors.o [1]
Vector114               0x080138db          Code  Wk  vectors.o [1]
Vector118               0x080138db          Code  Wk  vectors.o [1]
Vector11C               0x080138db          Code  Wk  vectors.o [1]
Vector120               0x08025b71    0x34  Code  Gb  stm32_dma.o [1]
Vector124               0x08025ba5    0x36  Code  Gb  stm32_dma.o [1]
Vector128               0x08025bdb    0x36  Code  Gb  stm32_dma.o [1]
Vector12C               0x08025c11    0x36  Code  Gb  stm32_dma.o [1]
Vector130               0x08025c47    0x32  Code  Gb  stm32_dma.o [1]
Vector134               0x080138db          Code  Wk  vectors.o [1]
Vector138               0x08029a21    0x26  Code  Gb  ext_lld_isr.o [1]
Vector13C               0x08028949    0x18  Code  Gb  can_lld.o [1]
Vector140               0x08028961    0x18  Code  Gb  can_lld.o [1]
Vector144               0x08028979    0x18  Code  Gb  can_lld.o [1]
Vector148               0x08028991    0x18  Code  Gb  can_lld.o [1]
Vector14C               0x08027aeb    0x18  Code  Gb  usb_lld.o [1]
Vector150               0x08025c79    0x36  Code  Gb  stm32_dma.o [1]
Vector154               0x08025caf    0x36  Code  Gb  stm32_dma.o [1]
Vector158               0x08025ce5    0x36  Code  Gb  stm32_dma.o [1]
Vector15C               0x080138db          Code  Wk  vectors.o [1]
Vector160               0x080138db          Code  Wk  vectors.o [1]
Vector164               0x080138db          Code  Wk  vectors.o [1]
Vector168               0x080138db          Code  Wk  vectors.o [1]
Vector16C               0x080138db          Code  Wk  vectors.o [1]
Vector170               0x08029a47    0x26  Code  Gb  ext_lld_isr.o [1]
Vector174               0x080138db          Code  Wk  vectors.o [1]
Vector178               0x080138db          Code  Wk  vectors.o [1]
Vector17C               0x080138db          Code  Wk  vectors.o [1]
Vector180               0x080138db          Code  Wk  vectors.o [1]
Vector184               0x080138db          Code  Wk  vectors.o [1]
Vector1C                0x080138db          Code  Wk  vectors.o [1]
Vector20                0x080138db          Code  Wk  vectors.o [1]
Vector24                0x080138db          Code  Wk  vectors.o [1]
Vector28                0x080138db          Code  Wk  vectors.o [1]
Vector34                0x080138db          Code  Wk  vectors.o [1]
Vector40                0x080138db          Code  Wk  vectors.o [1]
Vector44                0x080299af    0x26  Code  Gb  ext_lld_isr.o [1]
Vector48                0x080138db          Code  Wk  vectors.o [1]
Vector4C                0x08029a6d    0x26  Code  Gb  ext_lld_isr.o [1]
Vector50                0x080138db          Code  Wk  vectors.o [1]
Vector54                0x080138db          Code  Wk  vectors.o [1]
Vector58                0x08029819    0x22  Code  Gb  ext_lld_isr.o [1]
Vector5C                0x0802983b    0x22  Code  Gb  ext_lld_isr.o [1]
Vector60                0x0802985d    0x22  Code  Gb  ext_lld_isr.o [1]
Vector64                0x0802987f    0x22  Code  Gb  ext_lld_isr.o [1]
Vector68                0x080298a1    0x22  Code  Gb  ext_lld_isr.o [1]
Vector6C                0x08025979    0x3c  Code  Gb  stm32_dma.o [1]
Vector70                0x080259b5    0x40  Code  Gb  stm32_dma.o [1]
Vector74                0x080259f5    0x40  Code  Gb  stm32_dma.o [1]
Vector78                0x08025a35    0x40  Code  Gb  stm32_dma.o [1]
Vector7C                0x08025a75    0x3c  Code  Gb  stm32_dma.o [1]
Vector80                0x08025ab1    0x40  Code  Gb  stm32_dma.o [1]
Vector84                0x08025af1    0x40  Code  Gb  stm32_dma.o [1]
Vector88                0x0801dfc3   0x138  Code  Gb  adc_lld.o [1]
Vector8C                0x080288e9    0x18  Code  Gb  can_lld.o [1]
Vector90                0x08028901    0x18  Code  Gb  can_lld.o [1]
Vector94                0x08028919    0x18  Code  Gb  can_lld.o [1]
Vector98                0x08028931    0x18  Code  Gb  can_lld.o [1]
Vector9C                0x080298c3    0x6e  Code  Gb  ext_lld_isr.o [1]
VectorA0                0x08019b17    0x16  Code  Gb  icu_lld.o [1]
VectorA4                0x08019abf    0x16  Code  Gb  icu_lld.o [1]
VectorA8                0x080138db          Code  Wk  vectors.o [1]
VectorAC                0x08019ad5    0x16  Code  Gb  icu_lld.o [1]
VectorB0                0x08019aeb    0x16  Code  Gb  icu_lld.o [1]
VectorB4                0x08019b01    0x16  Code  Gb  icu_lld.o [1]
VectorB8                0x0801e505    0x16  Code  Gb  pwm_lld.o [1]
VectorBC                0x0802a263    0x18  Code  Gb  i2c_lld.o [1]
VectorC0                0x0802a27b    0x32  Code  Gb  i2c_lld.o [1]
VectorC4                0x080138db          Code  Wk  vectors.o [1]
VectorC8                0x080138db          Code  Wk  vectors.o [1]
VectorCC                0x080138db          Code  Wk  vectors.o [1]
VectorD0                0x080138db          Code  Wk  vectors.o [1]
VectorD4                0x08021ef7    0x16  Code  Gb  serial_lld.o [1]
VectorD8                0x08021f0d    0x16  Code  Gb  serial_lld.o [1]
VectorDC                0x08021f23    0x16  Code  Gb  serial_lld.o [1]
VectorE0                0x08029931    0x7e  Code  Gb  ext_lld_isr.o [1]
VectorE4                0x080299d5    0x26  Code  Gb  ext_lld_isr.o [1]
VectorE8                0x080299fb    0x26  Code  Gb  ext_lld_isr.o [1]
VectorEC                0x080138db          Code  Wk  vectors.o [1]
VectorF0                0x0801e51b    0x22  Code  Gb  pwm_lld.o [1]
VectorF4                0x080138db          Code  Wk  vectors.o [1]
VectorF8                0x0801e53d    0x5e  Code  Gb  pwm_lld.o [1]
VectorFC                0x08025b31    0x40  Code  Gb  stm32_dma.o [1]
WAVE_LOGGING_BUFFER     0x1000c664  0x1388  Data  Lc  wave_chart.o [1]
WaveChart::WaveChart()  0x08005063    0x1e  Code  Gb  wave_chart.o [1]
WaveChart::addWaveChartEvent3(char const *, char const *)
                        0x080050d5    0xfe  Code  Gb  wave_chart.o [1]
WaveChart::init()       0x08005081    0x1e  Code  Gb  wave_chart.o [1]
WaveChart::isStartedTooLongAgo()
                        0x08004f63    0x4c  Code  Gb  wave_chart.o [1]
WaveChart::isWaveChartFull()
                        0x08004faf    0x18  Code  Gb  wave_chart.o [1]
WaveChart::publishChart()
                        0x0800509f    0x36  Code  Gb  wave_chart.o [1]
WaveChart::publishChartIfFull()
                        0x0800503d    0x26  Code  Gb  wave_chart.o [1]
WaveChart::resetWaveChart()
                        0x08004f41    0x22  Code  Gb  wave_chart.o [1]
WaveReader::WaveReader()
                        0x08015111     0xe  Code  Gb  wave_analyzer.o [1]
WaveReader::onFallEvent()
                        0x08014fd3    0x7e  Code  Gb  wave_analyzer.o [1]
_Getdst                 0x08029b39   0x11a  Code  Gb  xgetdst.o [3]
_Gettime                0x08027197    0x42  Code  Gb  xgettime.o [3]
_IsdstStr               0x20001870     0x4  Data  Gb  setlocale.o [3]
_Isdst_olddst           0x200018a4     0x4  Data  Lc  xisdst.o [3]
_Isdst_rules            0x200018a8     0x4  Data  Gb  xisdstData.o [3]
_Localtime_oldzone      0x20001864     0x4  Data  Lc  localtim.o [3]
_Localtime_tzoff        0x20001868     0x4  Data  Lc  localtim.o [3]
_Ttotm_ts               0x20001874    0x2c  Data  Lc  xttotm.o [3]
_Tzoff                  0x080209b5    0x96  Code  Gb  localtim.o [3]
_TzoneStr               0x2000186c     0x4  Data  Gb  setlocale.o [3]
__aeabi_atexit          0x0801013f     0xa  Code  Gb  cxxabi.o [4]
__aeabi_cdcmple         0x08019529          Code  Gb  DblCmpLe.o [5]
__aeabi_d2f             0x0800b17d          Code  Gb  DblToFlt.o [5]
__aeabi_d2iz            0x08017b45          Code  Gb  DblToI32.o [5]
__aeabi_d2uiz           0x08017b71          Code  Gb  DblToI32.o [5]
__aeabi_dadd            0x08019ee5          Code  Gb  DblAdd.o [5]
__aeabi_ddiv            0x080178fd          Code  Gb  DblDiv.o [5]
__aeabi_dmul            0x0800afd9          Code  Gb  DblMul.o [5]
__aeabi_dsub            0x08019559          Code  Gb  DblSub.o [5]
__aeabi_errno_addr      0x08025eed     0x6  Code  Gb  errno.o [3]
__aeabi_f2d             0x08004ee5          Code  Gb  FltToDbl.o [5]
__aeabi_f2lz            0x0801ef75          Code  Gb  FltToS64.o [5]
__aeabi_i2d             0x08017c85          Code  Gb  I32ToDbl.o [5]
__aeabi_l2d             0x0801eca1          Code  Gb  I64ToDbl.o [5]
__aeabi_l2f             0x0801dbe9          Code  Gb  I64ToFlt.o [5]
__aeabi_ldiv0           0x0801c451          Code  Gb  I64DivZer.o [6]
__aeabi_ldivmod         0x08011b25          Code  Gb  I64DivMod.o [6]
__aeabi_memclr4         0x0802083d          Code  Gb  ABImemclr4.o [6]
__aeabi_memcpy          0x0801e8e1          Code  Gb  ABImemcpy.o [6]
__aeabi_memcpy4         0x0801e901          Code  Gb  ABImemcpy.o [6]
__aeabi_memcpy8         0x0801e901          Code  Gb  ABImemcpy.o [6]
__aeabi_memset          0x08019e7d          Code  Gb  ABImemset.o [6]
__aeabi_ui2d            0x08017c99          Code  Gb  I32ToDbl.o [5]
__aeabi_ul2f            0x0801dc05          Code  Gb  I64ToFlt.o [5]
__aeabi_uldivmod        0x08011b69          Code  Gb  I64DivMod.o [6]
__aeabi_vec_ctor_nocookie_nodtor
                        0x0801011d    0x22  Code  Gb  cxxabi.o [4]
__call_ctors            0x0801ace9    0x18  Code  Gb  cppinit.o [3]
__call_dtors            0x0801ad3b     0x2  Code  Gb  cppinit.o [3]
__cexit_call_dtors      0x0802f943          Code  Gb  cexit.o [6]
__cmain                 0x0802f8e1          Code  Gb  cmain.o [6]
__cstart_call_dtors     0x0803552c          Data  Gb  cstart_call_dtors.o [6]
__cxa_atexit            0x0801ad01    0x3a  Code  Gb  cppinit.o [3]
__cxa_finalize          0x0801ad3d    0x36  Code  Gb  cppinit.o [3]
__data_Aldata           0x2001c638     0x8  Data  Gb  xxmemxmalloc.o [3]
__data_GetMemChunk      0x0802a2e9    0x2c  Code  Gb  xgetmemchunk.o [3]
__dso_handle            0x2001c634     0x4  Data  Gb  cppinit.o [3]
__early_init            0x08029615     0x8  Code  Gb  board.o [1]
__exit                  0x0802d481    0x14  Code  Gb  exit.o [7]
__getzone               0x0802718d     0x6  Code  Gb  getzone.o [3]
__heap_end__            0x2001fc00          Data  Gb  cstartup.o [1]
__iar_Daysto32          0x08026fd5    0x3a  Code  Gb  xttotm.o [3]
__iar_Dint              0x08029757    0x7e  Code  Gb  xdint.o [5]
__iar_Errno             0x200018a0     0x4  Data  Gb  errno.o [3]
__iar_FDnorm            0x08025ec5    0x26  Code  Gb  xfdnorm.o [5]
__iar_FDtest            0x080138a3    0x30  Code  Gb  xfdtest.o [5]
__iar_FLog              0x0801e779   0x12a  Code  Gb  xflog.o [5]
__iar_Isdst32           0x080290e5   0x134  Code  Gb  xisdst.o [3]
__iar_Memchr            0x08029cd5          Code  Gb  memchr.o [6]
__iar_Memset            0x08019e7d          Code  Gb  ABImemset.o [6]
__iar_Memset4_word      0x08026d9d          Code  Gb  ABImemset48.o [6]
__iar_Memset8_word      0x08026d9d          Code  Gb  ABImemset48.o [6]
__iar_Memset_word       0x08019e85          Code  Gb  ABImemset.o [6]
__iar_Stolx             0x080271d9    0x86  Code  Gb  xstol.o [3]
__iar_Stoulx            0x08029219   0x118  Code  Gb  xstoul.o [3]
__iar_Strchr            0x08028f39          Code  Gb  strchr.o [6]
__iar_Strrchr           0x08029801    0x18  Code  Gb  strrchr.o [3]
__iar_Strstr            0x080297d5    0x2c  Code  Gb  strstr.o [3]
__iar_Ttotm32           0x0802700f   0x110  Code  Gb  xttotm.o [3]
__iar_TzoneStr_init     0x08027161    0x24  Code  Gb  setlocale.o [3]
__iar_cstart_call_ctors
                        0x080307e1    0x20  Code  Gb  cmain_call_ctors.o [6]
__iar_d2uiz             0x08017b7d          Code  Gb  DblToI32.o [5]
__iar_dadd              0x08019ef9          Code  Gb  DblAdd.o [5]
__iar_data_init3        0x0802f8fd    0x28  Code  Gb  data_init.o [6]
__iar_dlib_perthread_access
                        0x0802715d     0x2  Code  Gb  xtls.o [3]
__iar_dsub              0x0801956d          Code  Gb  DblSub.o [5]
__iar_dsubStart         0x0801957f          Code  Gb  DblSub.o [5]
__iar_init_vfp          0x0802f8c5          Code  Gb  fpinit_M.o [5]
__iar_lz77_init3        0x0802d337   0x142  Code  Gb  lz77_init.o [6]
__iar_modf              0x08028e45          Code  Gb  modf.o [5]
__iar_modfl             0x08028e45          Code  Gb  modf.o [5]
__iar_program_start     0x0802f89d          Code  Gb  cstartup.o [1]
__iar_ui2d              0x08017c9d          Code  Gb  I32ToDbl.o [5]
__iar_ul2d              0x0801ecbd          Code  Gb  I64ToDbl.o [5]
__iar_ul2f              0x0801dc11          Code  Gb  I64ToFlt.o [5]
__iar_vfp___iar_Dtest   0x08017cb5    0x38  Code  Gb  xdtest.o [5]
__iar_vfp_modf          0x08028e2d          Code  Gb  modf.o [5]
__iar_vfp_modfl         0x08028e2d          Code  Gb  modf.o [5]
__iar_vfp_round         0x08028eed    0x42  Code  Gb  round.o [5]
__iar_zero_init3        0x08002e97    0x22  Code  Gb  zero_init3.o [6]
__localtime32           0x08020a55    0x1a  Code  Gb  localtim.o [3]
__low_level_init        0x0802f8f7     0x4  Code  Gb  low_level_init.o [3]
__main_thread_stack_base__
                        0x2001fc00          Data  Gb  cstartup.o [1]
__mktime32              0x080208e1    0xd4  Code  Gb  mktime.o [3]
__sti__routine          0x0801a0f1    0x36  Code  Lc  HIP9011.o [1]
__sti__routine          0x0801dc4d     0xa  Code  Lc  SingleTimerExecutor.o [1]
__sti__routine          0x08005539    0x2e  Code  Lc  adc_inputs.o [1]
__sti__routine          0x0800c68d    0x10  Code  Lc  advance_map.o [1]
__sti__routine          0x080097d1    0x2a  Code  Lc  alternatorController.o [1]
__sti__routine          0x0801fa49    0x10  Code  Lc  can_hw.o [1]
__sti__routine          0x0801ecf9     0xa  Code  Lc  digital_input_hw.o [1]
__sti__routine          0x080072b5     0xa  Code  Lc  efiGpio.o [1]
__sti__routine          0x0800b20d     0xc  Code  Lc  eficonsole.o [1]
__sti__routine          0x0800b889    0x3e  Code  Lc  electronic_throttle.o [1]
__sti__routine          0x08013955    0x10  Code  Lc  engine.o [1]
__sti__routine          0x0800659d    0x40  Code  Lc  engine_controller.o [1]
__sti__routine          0x0800a2bd     0xc  Code  Lc  error_handling.o [1]
__sti__routine          0x0801bbb1    0xc4  Code  Lc  fsio_core.o [1]
__sti__routine          0x08010e59   0x12e  Code  Lc  fsio_impl.o [1]
__sti__routine          0x0801c5b9    0x14  Code  Lc  fuel_math.o [1]
__sti__routine          0x08016c35    0x24  Code  Lc  idle_thread.o [1]
__sti__routine          0x08015449    0x10  Code  Lc  injector_central.o [1]
__sti__routine          0x08009475    0x12  Code  Lc  io_pins.o [1]
__sti__routine          0x080171e1   0x20a  Code  Lc  lcd_controller.o [1]
__sti__routine          0x080160e1    0x20  Code  Lc  main_trigger_callback.o [1]
__sti__routine          0x080143a9    0x9c  Code  Lc  map.o [1]
__sti__routine          0x08015c59    0x2e  Code  Lc  map_averaging.o [1]
__sti__routine          0x0801ca55    0x10  Code  Lc  mmc_card.o [1]
__sti__routine          0x080200c1     0xc  Code  Lc  neo6m.o [1]
__sti__routine          0x08026199     0xc  Code  Lc  obd2.o [1]
__sti__routine          0x0800322d    0x10  Code  Lc  pin_repository.o [1]
__sti__routine          0x08012d11    0x14  Code  Lc  rpm_calculator.o [1]
__sti__routine          0x080096c9     0xc  Code  Lc  rtc_helper.o [1]
__sti__routine          0x08008c21     0xc  Code  Lc  rusefi.o [1]
__sti__routine          0x08014e35    0x12  Code  Lc  sensor_chart.o [1]
__sti__routine          0x08000189    0x18  Code  Lc  settings.o [1]
__sti__routine          0x0800c3a9    0x1c  Code  Lc  speed_density.o [1]
__sti__routine          0x08011c59    0x50  Code  Lc  status_loop.o [1]
__sti__routine          0x0801d069    0x14  Code  Lc  trigger_central.o [1]
__sti__routine          0x08010151    0x20  Code  Lc  trigger_decoder.o [1]
__sti__routine          0x0802079d    0x10  Code  Lc  trigger_emulator.o [1]
__sti__routine          0x080269b1    0x5a  Code  Lc  trigger_emulator_algo.o [1]
__sti__routine          0x0800f2bd    0x10  Code  Lc  tunerstudio.o [1]
__sti__routine          0x08014f65    0x14  Code  Lc  wave_analyzer.o [1]
__sti__routine          0x08004f35     0xc  Code  Lc  wave_chart.o [1]
__vector_table          0x08000000          Data  Gb  vectors.o [1]
_call_main              0x0802f8ed          Code  Gb  cmain.o [6]
_core_init              0x08029429     0xe  Code  Gb  chmemcore.o [1]
_engine                 0x20003a18  0x2418  Data  Gb  engine_controller.o [1]
_exit                   0x0802f941          Code  Gb  cexit.o [6]
_heap_init              0x080294a1    0x1c  Code  Gb  chheap.o [1]
_idle_thread            0x080280b9     0xa  Code  Gb  chsys.o [1]
_idle_thread_wa         0x20002ce0   0x538  Data  Gb  chsys.o [1]
_main                   0x0802f8f3          Code  Gb  cmain.o [6]
_pal_lld_init           0x0800b4d7    0x7a  Code  Gb  pal_lld.o [1]
_pal_lld_setgroupmode   0x0800b57d    0xe8  Code  Gb  pal_lld.o [1]
_port_exit_from_isr     0x08025f2f          Code  Gb  chcoreasm_v7m.o [1]
_port_init              0x08022069    0x54  Code  Gb  chcore_v7m.o [1]
_port_irq_epilogue      0x080220bd    0x80  Code  Gb  chcore_v7m.o [1]
_port_switch            0x08025ef9          Code  Gb  chcoreasm_v7m.o [1]
_port_switch_from_isr   0x08025f23          Code  Gb  chcoreasm_v7m.o [1]
_port_thread_start      0x08025f11          Code  Gb  chcoreasm_v7m.o [1]
_scheduler_init         0x0801ea13    0x1c  Code  Gb  chschd.o [1]
_stm32_dma_streams      0x0802d990    0xc0  Data  Gb  stm32_dma.o [1]
_thread_init            0x08014069    0x48  Code  Gb  chthreads.o [1]
_thread_memfill         0x080140b1     0xc  Code  Gb  chthreads.o [1]
_trace_init             0x080136a7     0xe  Code  Gb  chdebug.o [1]
_unhandled_exception    0x080138db          Code  Gb  vectors.o [1]
_usb_ep0in              0x0802182b    0xdc  Code  Gb  usb.o [1]
_usb_ep0out             0x08021907    0x8a  Code  Gb  usb.o [1]
_usb_ep0setup           0x080216d5   0x156  Code  Gb  usb.o [1]
_usb_reset              0x08021691    0x44  Code  Gb  usb.o [1]
_vt_init                0x08017e01    0x1a  Code  Gb  chvt.o [1]
abort                   0x0802d479     0x6  Code  Gb  abort.o [3]
absF                    0x08002ae1    0x10  Code  Gb  efilib.o [1]
absI                    0x08002af1     0x8  Code  Gb  efilib.o [1]
acRelayLogic            0x20010af8     0x4  Data  Lc  fsio_impl.o [1]
accelInfo()             0x080149fd    0x84  Code  Lc  accel_enrichment.o [1]
accumulatedSize         0x20013844     0x4  Data  Lc  loggingcentral.o [1]
accumulationBuffer      0x20011900     0x4  Data  Lc  loggingcentral.o [1]
accumulators            0x200139fc     0x8  Data  Lc  map_averaging.o [1]
action2String(le_action_e)
                        0x08011325    0x44  Code  Lc  fsio_impl.o [1]
activeConfiguration     0x20014c80   0x8a8  Data  Gb  rusefi.o [1]
active_status           0x0800b886     0x2  Data  Lc  usb.o [1]
actualIdlePosition      0x200016a4     0x4  Data  Lc  idle_thread.o [1]
adcCallbackCounter_slow
                        0x2000abd4     0x4  Data  Lc  adc_inputs.o [1]
adcConfigListener(Engine *)
                        0x08018067     0xa  Code  Lc  hardware.o [1]
adcDebugReporting       0x2000abd8     0x4  Data  Lc  adc_inputs.o [1]
adcHwChannelEnabled     0x2000a924    0x40  Data  Lc  adc_inputs.o [1]
adcHwChannelUsage       0x2000a964    0x40  Data  Lc  adc_inputs.o [1]
adcInit                 0x0801374d     0x8  Code  Gb  adc.o [1]
adcObjectInit           0x08013755    0x26  Code  Gb  adc.o [1]
adcStart                0x0801377b    0x48  Code  Gb  adc.o [1]
adcStartConversionI     0x080137c3    0x56  Code  Gb  adc.o [1]
adc_callback_fast(ADCDriver *, unsigned short *, unsigned int)
                        0x08017f77    0x8c  Code  Gb  hardware.o [1]
adc_callback_slow(ADCDriver *, unsigned short *, unsigned int)
                        0x08005b8b    0x5a  Code  Lc  adc_inputs.o [1]
adc_lld_init            0x0801e0fb    0x3c  Code  Gb  adc_lld.o [1]
adc_lld_serve_rx_interrupt
                        0x0801de75   0x14e  Code  Lc  adc_lld.o [1]
adc_lld_start           0x0801e137    0x96  Code  Gb  adc_lld.o [1]
adc_lld_start_conversion
                        0x0801e1cd    0xa4  Code  Gb  adc_lld.o [1]
adc_lld_stop_conversion
                        0x0801e271    0x3e  Code  Gb  adc_lld.o [1]
adcgrpcfgSlow           0x2000101c    0x28  Data  Lc  adc_inputs.o [1]
adcgrpcfg_fast          0x20001044    0x28  Data  Lc  adc_inputs.o [1]
addAccordPair(TriggerShape *, float, trigger_wheel_e)
                        0x08008685    0x48  Code  Lc  trigger_structure.o [1]
addAccordPair3(TriggerShape *, float)
                        0x080086cd    0x4a  Code  Lc  trigger_structure.o [1]
addChannel(char const *, adc_channel_e, adc_channel_mode_e)
                        0x08005be5    0x36  Code  Lc  adc_inputs.o [1]
addConsoleAction        0x08009bfd    0x14  Code  Gb  cli_registry.o [1]
addConsoleActionF       0x08009cb5    0x14  Code  Gb  cli_registry.o [1]
addConsoleActionFF      0x08009cc9    0x14  Code  Gb  cli_registry.o [1]
addConsoleActionI       0x08009c11    0x14  Code  Gb  cli_registry.o [1]
addConsoleActionII      0x08009c3b    0x14  Code  Gb  cli_registry.o [1]
addConsoleActionIP      0x08009c25    0x16  Code  Gb  cli_registry.o [1]
addConsoleActionP       0x08009bd1    0x16  Code  Gb  cli_registry.o [1]
addConsoleActionS       0x08009c4f    0x14  Code  Gb  cli_registry.o [1]
addConsoleActionSP      0x08009c63    0x16  Code  Gb  cli_registry.o [1]
addConsoleActionSS      0x08009c79    0x14  Code  Gb  cli_registry.o [1]
addConsoleActionSSP     0x08009be7    0x16  Code  Gb  cli_registry.o [1]
addConsoleActionSSS     0x08009c8d    0x14  Code  Gb  cli_registry.o [1]
addConsoleActionSSSSS   0x08009ca1    0x14  Code  Gb  cli_registry.o [1]
addError                0x0801422f    0x30  Code  Gb  malfunction_central.o [1]
addMafPoint(persistent_config_s *, int, float, float)
                        0x0800bcb9    0x22  Code  Lc  maf.o [1]
addPair(TriggerShape *, float, float)
                        0x0801b9ad    0x3e  Code  Lc  trigger_bmw.o [1]
addSkippedToothTriggerEvents(trigger_wheel_e, TriggerShape *, int, int, float, float, float, float, float)
                        0x08010655   0x122  Code  Gb  trigger_decoder.o [1]
addTriggerEventListener(void (*)(trigger_event_e, unsigned int), char const *, Engine *)
                        0x0801d0ab    0x18  Code  Gb  trigger_central.o [1]
advanceMap              0x2000ae30    0x4c  Data  Lc  advance_map.o [1]
afrMap                  0x20016ff0    0x4c  Data  Gb  speed_density.o [1]
alphaNfuel              0x0802b314   0x400  Data  Lc  dodge_neon.o [1]
altPid                  0x2000aedc    0x1c  Data  Lc  alternatorController.o [1]
alternatorControl       0x20001bf8    0x70  Data  Lc  alternatorController.o [1]
alternatorControlThreadStack
                        0x20001c68   0x2c8  Data  Lc  alternatorController.o [1]
alternatorLogic         0x20010b04     0x4  Data  Lc  fsio_impl.o [1]
alternatorPin           0x2000aecc    0x10  Data  Lc  alternatorController.o [1]
append                  0x0800261d    0x3c  Code  Gb  datalogging.o [1]
appendFast              0x08002659    0x2c  Code  Gb  datalogging.o [1]
appendFloat             0x08002785    0xc4  Code  Gb  datalogging.o [1]
appendMsgPostfix        0x08002905     0xe  Code  Gb  datalogging.o [1]
appendMsgPrefix         0x080028f7     0xe  Code  Gb  datalogging.o [1]
appendPrintf            0x08002713    0x30  Code  Gb  datalogging.o [1]
appendToLog             0x0801cd7d    0x68  Code  Gb  mmc_card.o [1]
apply()                 0x0800ba45    0x1e  Code  Lc  electronic_throttle.o [1]
applyAlternatorPinState(PwmConfig *, int)
                        0x08009a21    0x4a  Code  Lc  alternatorController.o [1]
applyConfiguration()    0x08014671    0x32  Code  Lc  map.o [1]
applyFsioConfiguration()
                        0x08011191    0x56  Code  Gb  fsio_impl.o [1]
applyIdleSolenoidPinState(PwmConfig *, int)
                        0x08016fdd    0x40  Code  Lc  idle_thread.o [1]
applyNewConfiguration   0x08008c85     0xc  Code  Gb  rusefi.o [1]
applyNewHardwareSettings()
                        0x0801807d    0x18  Code  Gb  hardware.o [1]
applyNewTriggerInputPins()
                        0x0801f9d9    0x40  Code  Gb  trigger_input.o [1]
applyNonPersistentConfiguration(Logging *)
                        0x08004d31    0x66  Code  Gb  engine_configuration.o [1]
applyPin(brain_pin_e)   0x080204b3    0x34  Code  Lc  joystick.o [1]
applyPinState(PwmConfig *, int)
                        0x08014cd1    0x48  Code  Gb  pwm_generator.o [1]
applyPinState2(PwmConfig *, int)
                        0x0800bae1    0x10  Code  Gb  electronic_throttle.o [1]
applySettings()         0x0800990d    0x1e  Code  Lc  alternatorController.o [1]
array16                 0x200016a8    0x40  Data  Gb  interpolation.o [1]
assertCylinderId(int, char const *)
                        0x08015461    0x3c  Code  Gb  injector_central.o [1]
atoff                   0x08002cf1    0xe6  Code  Gb  efilib.o [1]
atoi                    0x08002b8b    0x50  Code  Gb  efilib.o [1]
bandFreqLookup          0x0802d694   0x100  Data  Gb  hip9011_lookup.o [1]
baroCorrMap             0x2001703c    0x1c  Data  Gb  speed_density.o [1]
baseHardwareInit()      0x0800a44d     0x8  Code  Gb  mpu_util.o [1]
beforeHwSetTimer        0x2000a914     0x4  Data  Gb  SingleTimerExecutor.o [1]
benchThread(int)        0x08015843    0x46  Code  Lc  injector_central.o [1]
benchThreadStack        0x20006730   0x2c8  Data  Lc  injector_central.o [1]
binaryConsole           0x2000c338   0x134  Data  Gb  console_io.o [1]
blinkAllOutputPins()    0x08018c3b    0xaa  Code  Lc  board_test.o [1]
blink_digits(int, int)  0x08015b2d    0x42  Code  Lc  malfunction_indicator.o [1]
blinkingPeriod          0x200017ec     0x4  Data  Gb  status_loop.o [1]
blinkingStack           0x200086b8   0x1b8  Data  Lc  status_loop.o [1]
blinkingThread(void *)  0x0801266b    0x9c  Code  Lc  status_loop.o [1]
boardConfiguration      0x200015f4     0x4  Data  Gb  engine_controller.o [1]
boardInit               0x08029629     0x2  Code  Gb  board.o [1]
bool assertNotInList<IgnitionEvent>(IgnitionEvent *, IgnitionEvent *)
                        0x0801f261    0x44  Code  Gb  main_trigger_callback.o [1]
bool assertNotInList<IgnitionEvent>(IgnitionEvent *, IgnitionEvent *)::string
                        0x080339e0    0x10  Data  Gb  main_trigger_callback.o [1]
bool assertNotInList<IgnitionEvent>(IgnitionEvent *, IgnitionEvent *)::string (instance 2)
                        0x0802fb48    0x24  Data  Gb  main_trigger_callback.o [1]
boolToString(bool)      0x08002ab5     0xe  Code  Gb  efilib.o [1]
brainPin                0x200111f8     0x4  Data  Lc  injector_central.o [1]
btInitOutputPins()      0x08018c13    0x28  Code  Lc  board_test.o [1]
btThreadStack           0x20001f30   0x2c8  Data  Lc  board_test.o [1]
buff                    0x20013a94    0x20  Data  Lc  microsecond_timer.o [1]
buffer                  0x2000c46c  0x1f40  Data  Gb  console_io.o [1]
buffer                  0x200118e8    0x18  Data  Lc  lcd_controller.o [1]
calc                    0x20010b0c   0x28c  Data  Lc  fsio_impl.o [1]
calcFastAdcIndexes()    0x08018003    0x64  Code  Lc  hardware.o [1]
calc_crc                0x080131fd    0x34  Code  Gb  crc.o [1]
callback(GPTDriver *)   0x08025835    0x2e  Code  Lc  microsecond_timer.o [1]
canConfig               0x08034d74     0x8  Data  Lc  can_hw.o [1]
canDashboardBMW()       0x0801fbd1    0x92  Code  Lc  can_hw.o [1]
canDashboardFiat()      0x0801fd7d    0x40  Code  Lc  can_hw.o [1]
canDashboardVAG()       0x0801fdbd    0x54  Code  Lc  can_hw.o [1]
canInfo()               0x0801ff19    0x8a  Code  Lc  can_hw.o [1]
canInfoNBCBroadcast(can_nbc_e)
                        0x0801fe11    0x2e  Code  Lc  can_hw.o [1]
canInit                 0x08025fbd     0x8  Code  Gb  can.o [1]
canMazdaRX8()           0x0801fc65   0x118  Code  Lc  can_hw.o [1]
canObjectInit           0x08025fc5    0x40  Code  Gb  can.o [1]
canRead()               0x0801fe3f    0x30  Code  Lc  can_hw.o [1]
canReadCounter          0x2000af04     0x4  Data  Lc  can_hw.o [1]
canReceive              0x080260f3    0x8a  Code  Gb  can.o [1]
canStart                0x08026005    0x64  Code  Gb  can.o [1]
canThread(void *)       0x0801fe91    0x80  Code  Lc  can_hw.o [1]
canTransmit             0x08026069    0x8a  Code  Gb  can.o [1]
canTreadStack           0x200021f8   0x2c8  Data  Lc  can_hw.o [1]
canWriteNotOk           0x2000af0c     0x4  Data  Lc  can_hw.o [1]
canWriteOk              0x2000af08     0x4  Data  Lc  can_hw.o [1]
can_lld_init            0x080289a9    0x32  Code  Gb  can_lld.o [1]
can_lld_is_rx_nonempty  0x08028b83    0x58  Code  Gb  can_lld.o [1]
can_lld_is_tx_empty     0x08028a97    0x54  Code  Gb  can_lld.o [1]
can_lld_receive         0x08028bdb    0xfe  Code  Gb  can_lld.o [1]
can_lld_rx0_handler     0x08028779    0x74  Code  Lc  can_lld.o [1]
can_lld_rx1_handler     0x080287ed    0x74  Code  Lc  can_lld.o [1]
can_lld_sce_handler     0x08028861    0x88  Code  Lc  can_lld.o [1]
can_lld_set_filters     0x080285d5   0x168  Code  Lc  can_lld.o [1]
can_lld_start           0x080289db    0xbc  Code  Gb  can_lld.o [1]
can_lld_transmit        0x08028aeb    0x98  Code  Gb  can_lld.o [1]
can_lld_tx_handler      0x0802873d    0x3c  Code  Lc  can_lld.o [1]
chCoreAlloc             0x08029437    0x24  Code  Gb  chmemcore.o [1]
chCoreAllocI            0x0802945b    0x34  Code  Gb  chmemcore.o [1]
chDbgCheckClassI        0x08013673    0x1a  Code  Gb  chdebug.o [1]
chDbgCheckClassS        0x0801368d    0x1a  Code  Gb  chdebug.o [1]
chDbgPanic              0x080136f3    0x12  Code  Gb  chdebug.o [1]
chDbgPanic3             0x0800a2c9    0x50  Code  Gb  error_handling.o [1]
chEvtBroadcastFlagsI    0x08019721    0x34  Code  Gb  chevents.o [1]
chEvtGetAndClearFlagsI  0x080197a3     0xc  Code  Gb  chevents.o [1]
chEvtRegisterMask       0x080196d9    0x48  Code  Gb  chevents.o [1]
chEvtSignalI            0x08019755    0x4e  Code  Gb  chevents.o [1]
chHeapAlloc             0x080294bd    0xa0  Code  Gb  chheap.o [1]
chHeapFree              0x0802955d    0x9e  Code  Gb  chheap.o [1]
chIQGetTimeout          0x08021a7b    0x6a  Code  Gb  chqueues.o [1]
chIQInit                0x080219d5    0x1e  Code  Gb  chqueues.o [1]
chIQPutI                0x08021a1f    0x5c  Code  Gb  chqueues.o [1]
chIQReadTimeout         0x08021ae5    0x9c  Code  Gb  chqueues.o [1]
chIQResetI              0x080219f3    0x2c  Code  Gb  chqueues.o [1]
chMtxInit               0x0801e331    0x1c  Code  Gb  chmtx.o [1]
chMtxLock               0x0801e34d    0x20  Code  Gb  chmtx.o [1]
chMtxLockS              0x0801e36d    0x90  Code  Gb  chmtx.o [1]
chMtxUnlock             0x0801e3fd    0x90  Code  Gb  chmtx.o [1]
chOQGetI                0x08021c35    0x5e  Code  Gb  chqueues.o [1]
chOQInit                0x08021b81    0x1c  Code  Gb  chqueues.o [1]
chOQPutTimeout          0x08021bcd    0x68  Code  Gb  chqueues.o [1]
chOQResetI              0x08021b9d    0x30  Code  Gb  chqueues.o [1]
chOQWriteTimeout        0x08021c93    0x9e  Code  Gb  chqueues.o [1]
chRegFirstThread        0x080199dd    0x20  Code  Gb  chregistry.o [1]
chRegNextThread         0x080199fd    0x2a  Code  Gb  chregistry.o [1]
chSchDoReschedule       0x0801ec75    0x1a  Code  Gb  chschd.o [1]
chSchDoRescheduleAhead  0x0801ec17    0x5e  Code  Gb  chschd.o [1]
chSchDoRescheduleBehind
                        0x0801ebcd    0x4a  Code  Gb  chschd.o [1]
chSchGoSleepS           0x0801ea71    0x4e  Code  Gb  chschd.o [1]
chSchGoSleepTimeoutS    0x0801eb15    0x48  Code  Gb  chschd.o [1]
chSchReadyI             0x0801ea2f    0x42  Code  Gb  chschd.o [1]
chSchRescheduleS        0x0801ebb1    0x1c  Code  Gb  chschd.o [1]
chSchWakeupS            0x0801eb5d    0x54  Code  Gb  chschd.o [1]
chSemInit               0x08028d2f    0x20  Code  Gb  chsem.o [1]
chSemSignalI            0x08028dbd    0x54  Code  Gb  chsem.o [1]
chSemWaitTimeoutS       0x08028d4f    0x6e  Code  Gb  chsem.o [1]
chSysInit               0x080280c3    0x60  Code  Gb  chsys.o [1]
chSysTimerHandlerI      0x08028123    0x90  Code  Gb  chsys.o [1]
chThdCreateI            0x080140bd    0x5e  Code  Gb  chthreads.o [1]
chThdCreateStatic       0x0801411b    0x5a  Code  Gb  chthreads.o [1]
chThdExit               0x080141a7    0x16  Code  Gb  chthreads.o [1]
chThdExitS              0x080141bd    0x2e  Code  Gb  chthreads.o [1]
chThdSleep              0x08014175    0x32  Code  Gb  chthreads.o [1]
chVTResetI              0x08017e89    0x48  Code  Gb  chvt.o [1]
chVTSetAny              0x080142f5    0x3c  Code  Gb  rfiutil.o [1]
chVTSetI                0x08017e1b    0x6e  Code  Gb  chvt.o [1]
ch_debug                0x080315d4    0x18  Data  Gb  chregistry.o [1]
changeValue(IdleValveState *, int, int, char const *, float)
                        0x0801f54d    0x52  Code  Lc  idle_controller.o [1]
checkEnginePin          0x200178cc    0x10  Data  Gb  status_loop.o [1]
checkSwitchTimes2(int, float *)
                        0x08017d79    0x80  Code  Gb  EfiWave.o [1]
check_fs                0x08023f1d    0x7a  Code  Lc  ff.o [1]
chk_chr                 0x08022c93    0x14  Code  Lc  ff.o [1]
chk_mounted             0x08023f9d   0x432  Code  Lc  ff.o [1]
chprintf(BaseSequentialStream *, char const *, ...)
                        0x0800323d    0x1c  Code  Lc  pin_repository.o [1]
chvprintf               0x0800a761   0x302  Code  Gb  chprintf.o [1]
clearCallbacks(IntListenerArray *)
                        0x080143a3     0x6  Code  Gb  listener_array.o [1]
clust2sect              0x08022df7    0x1a  Code  Gb  ff.o [1]
cmd_threads()           0x0800b33b    0x4c  Code  Lc  eficonsole.o [1]
cmp_lfn                 0x080233b7    0x9e  Code  Lc  ff.o [1]
common079721_2351(engine_configuration_s *, board_configuration_s *)
                        0x0800dfeb    0x36  Code  Lc  mazda_miata.o [1]
commonFrankensoAnalogInputs(engine_configuration_s *)
                        0x08004e51     0x8  Code  Gb  engine_configuration.o [1]
commonMiataNa()         0x0800deed    0xfe  Code  Lc  mazda_miata.o [1]
commonTxInit(int)       0x0801fb27    0x54  Code  Gb  can_hw.o [1]
communicationPin        0x200178bc    0x10  Data  Lc  status_loop.o [1]
config                  0x200015ec     0x4  Data  Gb  engine_controller.o [1]
configWorkingCopy       0x20018574  0x3bb8  Data  Gb  tunerstudio.o [1]
configureFordAspireTriggerShape(TriggerShape *)
                        0x0801b755    0xd4  Code  Gb  trigger_mitsubishi.o [1]
configureHondaAccordCD(TriggerShape *, bool, bool, trigger_wheel_e, trigger_wheel_e, float)
                        0x08008971   0x25c  Code  Gb  trigger_structure.o [1]
configureHondaAccordCDDip(TriggerShape *)
                        0x08008719   0x23a  Code  Gb  trigger_structure.o [1]
configureInputs()       0x08005c25    0xd8  Code  Lc  adc_inputs.o [1]
configureMazdaProtegeLx(TriggerShape *)
                        0x0801b135    0xa6  Code  Gb  trigger_mazda.o [1]
configureMazdaProtegeSOHC(TriggerShape *)
                        0x0801b035    0xd4  Code  Gb  trigger_mazda.o [1]
configureMiniCooperTriggerShape(TriggerShape *)
                        0x0801b9ed   0x18c  Code  Gb  trigger_bmw.o [1]
configureNeon1995TriggerShape(TriggerShape *)
                        0x0801b40d   0x33c  Code  Gb  trigger_chrysler.o [1]
configureNeon2003TriggerShape(TriggerShape *)
                        0x0801b2c9    0xfc  Code  Gb  trigger_chrysler.o [1]
configureOnePlus60_2(TriggerShape *, operation_mode_e)
                        0x08010851    0x96  Code  Lc  trigger_decoder.o [1]
configureOnePlusOne(TriggerShape *, operation_mode_e)
                        0x080107f1    0x60  Code  Lc  trigger_decoder.o [1]
confirmation            0x2000c18c    0xc8  Data  Lc  cli_registry.o [1]
consoleActionCount      0x2000b548     0x4  Data  Lc  cli_registry.o [1]
consoleActions          0x2000b54c   0xc40  Data  Lc  cli_registry.o [1]
consoleEventListener    0x2000c324    0x10  Data  Lc  console_io.o [1]
consoleInBinaryMode     0x2001c654     0x1  Data  Gb  console_io.o [1]
consoleInput            0x20001138    0x50  Data  Lc  console_io.o [1]
consoleOutputBuffer(unsigned char const *, int)
                        0x0800ac19    0x2c  Code  Gb  console_io.o [1]
consolePutChar(int)     0x0800abfb    0x1e  Code  Gb  console_io.o [1]
consoleThreadStack      0x20003218   0x458  Data  Lc  console_io.o [1]
consoleThreadThreadEntryPoint(void *)
                        0x0800ab85    0x76  Code  Lc  console_io.o [1]
console_line_callback   0x2000c334     0x4  Data  Gb  console_io.o [1]
convertVoltageTo10bitADC(float)
                        0x08007245    0x2a  Code  Gb  tps.o [1]
copyFuelTable(float const (*)[16], float (*)[16])
                        0x08004e89    0x2e  Code  Gb  engine_configuration.o [1]
copyPwmParameters(PwmConfig *, int, float *, int, signed char **)
                        0x08018837    0x52  Code  Gb  pwm_generator_logic.o [1]
copyTimingTable(float const (*)[16], float (*)[16])
                        0x08004eb7    0x2e  Code  Gb  engine_configuration.o [1]
count                   0x200111f4     0x4  Data  Lc  injector_central.o [1]
counters                0x20013a04     0x8  Data  Lc  map_averaging.o [1]
crc32                   0x08013231    0x34  Code  Gb  crc.o [1]
crc32_tab               0x20001194   0x400  Data  Lc  crc.o [1]
crc7                    0x08024fcd    0x1e  Code  Lc  mmc_spi.o [1]
crc7_lookup_table       0x0802d794   0x100  Data  Lc  mmc_spi.o [1]
createLogFile()         0x0801cc03    0xa6  Code  Lc  mmc_card.o [1]
create_chain            0x080230e5    0xdc  Code  Lc  ff.o [1]
create_name             0x08023a7f   0x2ac  Code  Lc  ff.o [1]
csThread()              0x080065dd    0x7a  Code  Lc  engine_controller.o [1]
csThreadStack           0x20005e40   0x2c8  Data  Lc  engine_controller.o [1]
curTm                   0x200143e0    0x2c  Data  Lc  neo6m.o [1]
currentAltDuty          0x2000aef8     0x4  Data  Lc  alternatorController.o [1]
currentAngleWindowWidth
                        0x2000a90c     0x4  Data  Lc  HIP9011.o [1]
currentBandIndex        0x2000a8e0     0x4  Data  Lc  HIP9011.o [1]
currentColumn           0x200113fc     0x4  Data  Lc  lcd_HD44780.o [1]
currentEtbDuty          0x2000f0c4     0x4  Data  Lc  electronic_throttle.o [1]
currentGainIndex        0x20001000     0x4  Data  Lc  HIP9011.o [1]
currentIndex            0x2000af00     0x4  Data  Lc  board_test.o [1]
currentIntergratorIndex
                        0x20001004     0x4  Data  Lc  HIP9011.o [1]
currentPageId           0x2001c64c     0x2  Data  Gb  tunerstudio.o [1]
currentPin              0x200010d4     0x4  Data  Lc  board_test.o [1]
currentPrescaler        0x2000a8e8     0x4  Data  Lc  HIP9011.o [1]
currentRow              0x200113f8     0x4  Data  Lc  lcd_HD44780.o [1]
currentTimeMillis       0x0800669f     0xe  Code  Gb  engine_controller.o [1]
customMap               0x20013998     0x8  Data  Lc  map.o [1]
cyccnt                  0x20001708     0x4  Data  Gb  main_trigger_callback.o [1]
cyclic_buffer<float>::add(float)
                        0x0801ef15    0x34  Code  Gb  accel_enrichment.o [1]
cyclic_buffer<float>::baseC(int)
                        0x08025f89    0x16  Code  Gb  accel_enrichment.o [1]
cyclic_buffer<float>::clear()
                        0x08025f9f    0x1e  Code  Gb  accel_enrichment.o [1]
cyclic_buffer<float>::cyclic_buffer()
                        0x0801ef49    0x10  Code  Gb  accel_enrichment.o [1]
cyclic_buffer<float>::getSize()
                        0x0801eeb9     0x6  Code  Gb  accel_enrichment.o [1]
cyclic_buffer<float>::maxValue(int)
                        0x0801eec1    0x54  Code  Gb  accel_enrichment.o [1]
cyclic_buffer<float>::setSize(int)
                        0x0801ef59    0x1c  Code  Gb  accel_enrichment.o [1]
cyclic_buffer<float>::~cyclic_buffer()
                        0x08032093     0x2  Code  Gb  engine_controller.o [1]
cyclic_buffer<int>::add(int)
                        0x0801adcb    0x30  Code  Gb  trigger_decoder.o [1]
cyclic_buffer<int>::baseC(int)
                        0x08022b5d    0x16  Code  Gb  trigger_decoder.o [1]
cyclic_buffer<int>::clear()
                        0x0801bb91    0x1e  Code  Gb  trigger_decoder.o [1]
cyclic_buffer<int>::cyclic_buffer()
                        0x0801ad81    0x10  Code  Gb  trigger_decoder.o [1]
cyclic_buffer<int>::setSize(int)
                        0x080281d5    0x1c  Code  Gb  trigger_decoder.o [1]
cyclic_buffer<int>::sum(int)
                        0x0801ad91    0x3a  Code  Gb  trigger_decoder.o [1]
cyclic_buffer<int>::~cyclic_buffer()
                        0x08011c57     0x2  Code  Gb  trigger_decoder.o [1]
cylinderCleanupControl(Engine *)
                        0x080066bd    0x6c  Code  Lc  engine_controller.o [1]
date_get_tm(tm *)       0x080096e3     0xe  Code  Gb  rtc_helper.o [1]
date_set_tm(tm *)       0x080096d5     0xe  Code  Gb  rtc_helper.o [1]
dbg_check_enable        0x08013569    0x18  Code  Gb  chdebug.o [1]
dbg_check_enter_isr     0x080135ff    0x44  Code  Gb  chdebug.o [1]
dbg_check_leave_isr     0x08013643    0x30  Code  Gb  chdebug.o [1]
dbg_check_lock          0x08013581    0x1e  Code  Gb  chdebug.o [1]
dbg_check_lock_from_isr
                        0x080135bf    0x20  Code  Gb  chdebug.o [1]
dbg_check_unlock        0x0801359f    0x20  Code  Gb  chdebug.o [1]
dbg_check_unlock_from_isr
                        0x080135df    0x20  Code  Gb  chdebug.o [1]
dbg_isr_cnt             0x2000b0b0     0x4  Data  Gb  chdebug.o [1]
dbg_lock_cnt            0x2000b0b4     0x4  Data  Gb  chdebug.o [1]
dbg_panic_file          0x2000f424     0x4  Data  Gb  error_handling.o [1]
dbg_panic_line          0x2000f428     0x4  Data  Gb  error_handling.o [1]
dbg_panic_msg           0x2000b4c0     0x4  Data  Gb  chdebug.o [1]
dbg_trace               0x080136b5    0x3e  Code  Gb  chdebug.o [1]
dbg_trace_buffer        0x2000b0b8   0x408  Data  Gb  chdebug.o [1]
debugFloat              0x08002849    0x3a  Code  Gb  datalogging.o [1]
debugInt                0x0800275f    0x26  Code  Gb  datalogging.o [1]
decodePressure(float, air_pressure_sensor_config_s *)
                        0x08014445    0xa8  Code  Gb  map.o [1]
defa                    0x20010ea4     0x4  Data  Lc  fsio_impl.o [1]
defaultIatTiming        0x0802a714   0x400  Data  Lc  advance_map.o [1]
default_139qmb_fuel_table
                        0x0802a314   0x400  Data  Lc  GY6_139QMB.o [1]
default_aspire_fuel_table
                        0x0802bf14   0x400  Data  Lc  ford_aspire.o [1]
default_aspire_timing_table
                        0x0802c314   0x400  Data  Lc  ford_aspire.o [1]
default_baro_corr       0x0802e648    0x40  Data  Lc  speed_density.o [1]
default_config          0x08034968     0xc  Data  Lc  serial_lld.o [1]
default_handler         0x0802113f   0x2b2  Code  Lc  usb.o [1]
default_heap            0x200024c0    0x20  Data  Lc  chheap.o [1]
delayMs                 0x200111f0     0x4  Data  Lc  injector_central.o [1]
denso183                0x200139a4     0x8  Data  Lc  map.o [1]
dequeue                 0x0801e323     0xe  Code  Lc  chmtx.o [1]
dequeue                 0x0801ea05     0xe  Code  Lc  chschd.o [1]
digitalMapWidthCallback()
                        0x080146a3    0x3e  Code  Lc  map.o [1]
digital_input_s::digital_input_s()
                        0x08032055    0x18  Code  Gb  digital_input_hw.o [1]
digits                  0x08029338    0x28  Data  Lc  xstoul.o [3]
dir_find                0x0802362b   0x10a  Code  Lc  ff.o [1]
dir_next                0x08023277   0x140  Code  Lc  ff.o [1]
dir_read                0x08023735    0xf0  Code  Lc  ff.o [1]
dir_register            0x08023825   0x1ee  Code  Lc  ff.o [1]
dir_remove              0x08023a13    0x6c  Code  Lc  ff.o [1]
dir_sdi                 0x080231c1    0xb6  Code  Lc  ff.o [1]
disable(char const *)   0x08001dbf     0xe  Code  Lc  settings.o [1]
disableIgnition()       0x08001e5d    0x24  Code  Lc  settings.o [1]
disableInjection()      0x08001e11    0x24  Code  Lc  settings.o [1]
disableSpi(int)         0x08001ddb     0xe  Code  Lc  settings.o [1]
disk_initialize         0x080281f1    0x32  Code  Gb  fatfs_diskio.o [1]
disk_ioctl              0x08028323    0x2c  Code  Gb  fatfs_diskio.o [1]
disk_read               0x08028255    0x60  Code  Gb  fatfs_diskio.o [1]
disk_status             0x08028223    0x32  Code  Gb  fatfs_diskio.o [1]
disk_write              0x080282b5    0x6e  Code  Gb  fatfs_diskio.o [1]
dmaInit                 0x08025d1b    0x4a  Code  Gb  stm32_dma.o [1]
dmaStreamAllocate       0x08025d65    0xb6  Code  Gb  stm32_dma.o [1]
dmaStreamRelease        0x08025e1b    0x6a  Code  Gb  stm32_dma.o [1]
dma_isr_redir           0x20017900    0x80  Data  Lc  stm32_dma.o [1]
dma_streams_mask        0x200178fc     0x4  Data  Lc  stm32_dma.o [1]
doAddAction(char const *, action_type_e, void (*)(), void *)
                        0x08009b8d    0x44  Code  Lc  cli_registry.o [1]
doFindTrigger(TriggerStimulatorHelper *, TriggerShape *, trigger_config_s const *, TriggerState *)
                        0x08010c73    0x44  Code  Lc  trigger_decoder.o [1]
doPrintConfiguration(Engine *)
                        0x0800083d    0x10  Code  Lc  settings.o [1]
doResetConfiguration()  0x0800539d    0x12  Code  Lc  flash_main.o [1]
doSetIdleValvePosition(int)
                        0x08016dc9    0xe0  Code  Lc  idle_thread.o [1]
dodgeNeon2003           0x200139cc     0x8  Data  Lc  map.o [1]
driver                  0x20001014     0x4  Data  Lc  HIP9011.o [1]
driver                  0x20013a18     0x4  Data  Lc  max31855.o [1]
dummyrx                 0x2001c648     0x2  Data  Lc  spi_lld.o [1]
dummytx                 0x2001c646     0x2  Data  Lc  spi_lld.o [1]
ec2                     0x10000000  0x6b60  Data  Lc  engine_controller.o [1]
echo(int)               0x08009d87    0x10  Code  Lc  cli_registry.o [1]
efiIcuStart(ICUDriver *, ICUConfig const *)
                        0x080035d7    0x24  Code  Gb  pin_repository.o [1]
efiPow10                0x08002c93    0x56  Code  Gb  efilib.o [1]
efiRound                0x08002acb    0x16  Code  Gb  efilib.o [1]
efiStrlen               0x08002b21    0x10  Code  Gb  efilib.o [1]
efiTrim                 0x08002b31    0x34  Code  Gb  efilib.o [1]
egtRead()               0x0801daa5    0x9a  Code  Lc  max31855.o [1]
emulatorApplyPinState(PwmConfig *, int)
                        0x08026c47    0x40  Code  Lc  trigger_emulator_algo.o [1]
emulatorConfigVersion   0x2001822c     0x4  Data  Lc  trigger_emulator_algo.o [1]
emulatorOutputs         0x20017afc    0x30  Data  Lc  trigger_emulator.o [1]
enable(char const *)    0x08001db1     0xe  Code  Lc  settings.o [1]
enableIgnition()        0x08001e39    0x24  Code  Lc  settings.o [1]
enableInjection()       0x08001de9    0x24  Code  Lc  settings.o [1]
enableOrDisable(char const *, bool)
                        0x080018dd   0x4c2  Code  Lc  settings.o [1]
enableSpi(int)          0x08001dcd     0xe  Code  Lc  settings.o [1]
endAveraging(void *)    0x08015df9    0x56  Code  Lc  map_averaging.o [1]
endIntegration()        0x0801a42f    0x1e  Code  Lc  HIP9011.o [1]
endOfSpiExchange(SPIDriver *)
                        0x0801a59f    0x18  Code  Lc  HIP9011.o [1]
endSimultaniousInjection(Engine *)
                        0x08016127    0x26  Code  Lc  main_trigger_callback.o [1]
endTimer                0x200018e0    0x30  Data  Lc  HIP9011.o [1]
endTimer                0x20007b20    0x30  Data  Lc  map_averaging.o [1]
endmem                  0x2000b4c8     0x4  Data  Lc  chmemcore.o [1]
engine                  0x200015fc     0x4  Data  Gb  engine_controller.o [1]
engineConfiguration     0x200015f0     0x4  Data  Gb  engine_controller.o [1]
engineConfiguration2    0x200015f8     0x4  Data  Gb  engine_controller.o [1]
enginePins              0x2000ebdc   0x240  Data  Gb  efiGpio.o [1]
engine_clt              0x2000b03c     0x4  Data  Lc  can_hw.o [1]
engine_configuration2_s::engine_configuration2_s()
                        0x08004cf1    0x2a  Code  Gb  engine_configuration.o [1]
engine_pins_s::engine_pins_s()
                        0x08017b9d    0x58  Code  Gb  efiGpio.o [1]
engine_rpm              0x2000b038     0x4  Data  Lc  can_hw.o [1]
ensureInitialized(WaveReader *)
                        0x08014f79    0x18  Code  Lc  wave_analyzer.o [1]
ep0_state               0x2001c258    0x14  Data  Lc  usb_lld.o [1]
ep0config               0x0802fe3c    0x24  Data  Lc  usb_lld.o [1]
ep0setup_buffer         0x2001c26c     0x8  Data  Lc  usb_lld.o [1]
ep1config               0x0802fe60    0x24  Data  Lc  usbcfg.o [1]
ep1instate              0x2001c274    0x14  Data  Lc  usbcfg.o [1]
ep1outstate             0x2001c288    0x14  Data  Lc  usbcfg.o [1]
ep2config               0x0802fe84    0x24  Data  Lc  usbcfg.o [1]
ep2instate              0x2001c29c    0x14  Data  Lc  usbcfg.o [1]
errorDetection          0x200179ec   0x10c  Data  Lc  trigger_decoder.o [1]
errorMessageBuffer      0x20014ba4    0xc8  Data  Gb  rusefi.o [1]
errorMsgBuff            0x2000adbc     0xc  Data  Lc  adc_inputs.o [1]
errorReported           0x20014278     0x4  Data  Lc  mmc_card.o [1]
error_codes_set         0x20013968    0x2c  Data  Lc  malfunction_central.o [1]
etbPwmDown              0x200039a8    0x70  Data  Lc  electronic_throttle.o [1]
etbPwmUp                0x20003938    0x70  Data  Lc  electronic_throttle.o [1]
etbThread(void *)       0x0800b8c9    0x68  Code  Lc  electronic_throttle.o [1]
etbTreadStack           0x20003670   0x2c8  Data  Lc  electronic_throttle.o [1]
eval(char *, Engine *)  0x08011701    0x6c  Code  Lc  fsio_impl.o [1]
evalCalc                0x2000f648   0x28c  Data  Lc  fsio_impl.o [1]
evalPool                0x2000fad4     0xc  Data  Lc  fsio_impl.o [1]
evalPoolElements        0x2000f8d4   0x200  Data  Lc  fsio_impl.o [1]
eventId                 0x20001800    0x18  Data  Lc  trigger_central.o [1]
eventIndex              0x20001820     0x8  Data  Lc  trigger_decoder.o [1]
event_trigger_position_s::event_trigger_position_s()
                        0x0802dcb5     0xe  Code  Gb  event_registry.o [1]
executorCallback(void *)
                        0x0801dc57    0x22  Code  Lc  SingleTimerExecutor.o [1]
exit                    0x0802f93b     0x4  Code  Gb  exit.o [3]
extCallback(EXTDriver *, unsigned int)
                        0x080202e9    0xea  Code  Lc  joystick.o [1]
extInit                 0x08026945     0x8  Code  Gb  ext.o [1]
extObjectInit           0x0802694d     0xa  Code  Gb  ext.o [1]
extStart                0x08026957    0x4c  Code  Gb  ext.o [1]
ext_lld_channel_disable
                        0x08029087    0x42  Code  Gb  ext_lld.o [1]
ext_lld_channel_enable  0x08028fb3    0xd4  Code  Gb  ext_lld.o [1]
ext_lld_exti_irq_enable
                        0x08029a9d    0x74  Code  Gb  ext_lld_isr.o [1]
ext_lld_init            0x08028f71     0xa  Code  Gb  ext_lld.o [1]
ext_lld_start           0x08028f7b    0x38  Code  Gb  ext_lld.o [1]
extcfg                  0x20011338    0xb8  Data  Lc  joystick.o [1]
f_close                 0x08024b21    0x1c  Code  Gb  ff.o [1]
f_lseek                 0x08024b3d   0x1da  Code  Gb  ff.o [1]
f_mount                 0x080243fd    0x32  Code  Gb  ff.o [1]
f_open                  0x08024451   0x1cc  Code  Gb  ff.o [1]
f_opendir               0x08024d17    0xa4  Code  Gb  ff.o [1]
f_read                  0x0802461d   0x206  Code  Gb  ff.o [1]
f_readdir               0x08024dbb    0x86  Code  Gb  ff.o [1]
f_sync                  0x08024a5d    0xc4  Code  Gb  ff.o [1]
f_unlink                0x08024e41    0xfc  Code  Gb  ff.o [1]
f_write                 0x08024823   0x23a  Code  Gb  ff.o [1]
fanBench()              0x0801573b    0x26  Code  Gb  injector_central.o [1]
fastAdc                 0x2000accc    0xf0  Data  Gb  adc_inputs.o [1]
fastMapSampleIndex      0x20010f68     0x4  Data  Lc  hardware.o [1]
ff_convert              0x08028361    0x4e  Code  Gb  ccsbcs.o [1]
ff_memalloc             0x080283f1     0xe  Code  Gb  fatfs_syscall.o [1]
ff_memfree              0x080283ff     0xc  Code  Gb  fatfs_syscall.o [1]
ff_wtoupper             0x080283af    0x34  Code  Gb  ccsbcs.o [1]
fifo_remove             0x0801e317     0xc  Code  Lc  chmtx.o [1]
fifo_remove             0x0802199f     0xc  Code  Lc  chqueues.o [1]
fifo_remove             0x0801e9f9     0xc  Code  Lc  chschd.o [1]
fifo_remove             0x08028d23     0xc  Code  Lc  chsem.o [1]
fifo_remove             0x08027261     0xc  Code  Lc  usb_lld.o [1]
fileLogger              0x200176ac   0x104  Data  Lc  status_loop.o [1]
fillTheRest(persistent_config_s *, int)
                        0x0800bc83    0x36  Code  Lc  maf.o [1]
fillWithSpaces()        0x080176e3    0x1a  Code  Lc  lcd_controller.o [1]
findAngleIndex(float)   0x080078f7    0x66  Code  Lc  engine_math.o [1]
findEndOfToken          0x08009dc3    0x2e  Code  Gb  cli_registry.o [1]
findIndex(float const *, int, float)
                        0x080090ef    0x7c  Code  Gb  interpolation.o [1]
findIndex2(float const *, unsigned int, float)
                        0x08009061    0x8e  Code  Gb  interpolation.o [1]
findTriggerPosition(event_trigger_position_s *, float)
                        0x08007961    0xe2  Code  Gb  engine_math.o [1]
findTriggerZeroEventIndex(TriggerShape *, trigger_config_s const *)
                        0x08010cb7    0xfc  Code  Gb  trigger_decoder.o [1]
find_position           0x08014205    0x22  Code  Lc  malfunction_central.o [1]
finddigital_input_s(ICUDriver *)
                        0x0801ed03    0x3a  Code  Lc  digital_input_hw.o [1]
fireShaftSignal(trigger_event_e)
                        0x08026a19    0x2c  Code  Lc  trigger_emulator_algo.o [1]
firmwareError           0x08008d45    0x68  Code  Gb  rusefi.o [1]
firmwareErrorMessageStream
                        0x20014b90    0x14  Data  Lc  rusefi.o [1]
firstByte               0x2001c660     0x1  Data  Lc  tunerstudio.o [1]
fit_lfn                 0x080234cd    0x84  Code  Lc  ff.o [1]
flashErase              0x080133e9    0x42  Code  Gb  flash.o [1]
flashIsErased           0x0801342b    0x30  Code  Gb  flash.o [1]
flashRead               0x0801345b    0x16  Code  Gb  flash.o [1]
flashSectorAt           0x080132c9    0x1c  Code  Gb  flash.o [1]
flashSectorBegin        0x08013299    0x22  Code  Gb  flash.o [1]
flashSectorEnd          0x080132bb     0xe  Code  Gb  flash.o [1]
flashSectorErase        0x0801330d    0xdc  Code  Gb  flash.o [1]
flashSectorSize         0x08013269    0x30  Code  Gb  flash.o [1]
flashStateCrc(persistent_config_container_s *)
                        0x08005275    0x12  Code  Gb  flash_main.o [1]
flashUnlock             0x080132e5    0x28  Code  Lc  flash.o [1]
flashWrite              0x08013495    0xbc  Code  Gb  flash.o [1]
flashWriteData          0x08013471    0x24  Code  Lc  flash.o [1]
float2bool(float)       0x0801bd0f    0x14  Code  Lc  fsio_core.o [1]
follow_path             0x08023e7d    0xa0  Code  Lc  ff.o [1]
free                    0x08029c55    0x7a  Code  Gb  xxmemxfree.o [3]
fromODB                 0x0802b714   0x400  Data  Lc  dodge_neon.o [1]
fs_ready                0x2001c65c     0x1  Data  Lc  mmc_card.o [1]
fsioLogics              0x1000f6d0    0x40  Data  Lc  fsio_impl.o [1]
fsioOutputs             0x20010d98   0x100  Data  Lc  fsio_impl.o [1]
fsioPwm                 0x1000efd0   0x700  Data  Lc  fsio_impl.o [1]
fsparams                0x08034c44     0xc  Data  Lc  usb_lld.o [1]
ftoa                    0x0800a699    0xc8  Code  Gb  chprintf.o [1]
fuelMap                 0x20010ea8    0x4c  Data  Lc  fuel_math.o [1]
fuelPhaseMap            0x20010ef4    0x4c  Data  Lc  fuel_math.o [1]
fuelPumpBench()         0x0801578d    0x1e  Code  Gb  injector_central.o [1]
fuelPumpLogic           0x20010afc     0x4  Data  Lc  fsio_impl.o [1]
fuelbench(char const *, char const *, char const *)
                        0x080157ab    0x1a  Code  Lc  injector_central.o [1]
fuelbench2(char const *, char const *, char const *, char const *, char const *)
                        0x080156cf    0x6c  Code  Lc  injector_central.o [1]
fullLog                 0x200017c4     0x1  Data  Lc  status_loop.o [1]
gainLookupInReverseOrder
                        0x0802d594   0x100  Data  Gb  hip9011_lookup.o [1]
gen_numname             0x08023551    0xbc  Code  Gb  ff.o [1]
get                     0x0800af95    0x2c  Code  Lc  memstreams.o [1]
get                     0x0801988d    0x12  Code  Lc  serial.o [1]
get                     0x08020cd1    0x12  Code  Lc  serial_usb.o [1]
getAcToggle()           0x08014c79    0x46  Code  Gb  allsensors.o [1]
getAdcChannel(brain_pin_e)
                        0x08005771    0x8c  Code  Gb  adc_inputs.o [1]
getAdcChannelPin(adc_channel_e)
                        0x080058d5    0x88  Code  Gb  adc_inputs.o [1]
getAdcChannelPort(adc_channel_e)
                        0x080057fd    0xa6  Code  Gb  adc_inputs.o [1]
getAdcMode(adc_channel_e)
                        0x080058a3    0x32  Code  Gb  adc_inputs.o [1]
getAdvance(int, float)  0x0800c7c1    0x9a  Code  Gb  advance_map.o [1]
getAfr()                0x0800c931    0x50  Code  Gb  ego.o [1]
getAir_pressure_sensor_type_e(air_pressure_sensor_type_e)
                        0x08003179    0x4a  Code  Gb  auto_generated_enums.o [1]
getAlternateFunctions(ICUDriver *)
                        0x0801ed69    0x48  Code  Lc  digital_input_hw.o [1]
getAvgAdcValue(int, unsigned short *, int, int)
                        0x080055a7    0x26  Code  Lc  adc_inputs.o [1]
getBand()               0x0801a129    0x44  Code  Lc  HIP9011.o [1]
getBandIndex()          0x0801a5b7    0x1c  Code  Lc  HIP9011.o [1]
getBaroCorrection()     0x0801c945    0x34  Code  Gb  fuel_math.o [1]
getBaroPressure()       0x080145b9    0x46  Code  Gb  map.o [1]
getBaseFuel(int)        0x0801c65b    0x7a  Code  Gb  fuel_math.o [1]
getBaseTableFuel(engine_configuration_s *, int, float)
                        0x0801c901    0x40  Code  Gb  fuel_math.o [1]
getBit(int, int)        0x08006c5d    0x36  Code  Lc  engine_controller.o [1]
getCltCorrection(float)
                        0x0801c881    0x40  Code  Gb  fuel_math.o [1]
getConfigurationName(engine_type_e)
                        0x0800039d   0x138  Code  Gb  settings.o [1]
getConsoleChannel()     0x0800ab5d    0x12  Code  Gb  console_io.o [1]
getConsoleLine(BaseSequentialStream *, char *, unsigned int)
                        0x0800aa71    0xe6  Code  Lc  console_io.o [1]
getCoolantTemperature()
                        0x08006061    0x84  Code  Gb  thermistors.o [1]
getCrankEventCounter()  0x0801d07d     0xc  Code  Gb  trigger_central.o [1]
getCrankingFuel()       0x0801c979    0x18  Code  Gb  fuel_math.o [1]
getCrankingFuel3(float, unsigned int)
                        0x0801c991    0x76  Code  Gb  fuel_math.o [1]
getCrankshaftAngleNt(long long)
                        0x080130a1    0x50  Code  Gb  rpm_calculator.o [1]
getCurrentHD44780column
                        0x0801913f     0x8  Code  Gb  lcd_HD44780.o [1]
getCurrentSpeed         0x080200cd     0x8  Code  Gb  neo6m.o [1]
getCylinderId(firing_order_e, int)
                        0x08007a43    0x78  Code  Gb  engine_math.o [1]
getDecoder(air_pressure_sensor_type_e)
                        0x0801461d    0x44  Code  Lc  map.o [1]
getEgtValue(int)        0x0801da7b    0x2a  Code  Gb  max31855.o [1]
getEngineCycle(operation_mode_e)
                        0x08010641    0x14  Code  Gb  trigger_decoder.o [1]
getEngineLoadT()        0x080073c5    0xc6  Code  Gb  engine_math.o [1]
getEngine_load_mode_e(engine_load_mode_e)
                        0x08002fdf    0x48  Code  Gb  auto_generated_enums.o [1]
getErrorCodes           0x080142bd    0x22  Code  Gb  malfunction_central.o [1]
getExtMode(GPIO_TypeDef *)
                        0x08020467    0x4c  Code  Lc  joystick.o [1]
getFloat(int)           0x08006d09    0x40  Code  Lc  engine_controller.o [1]
getFuelMs(int)          0x0801c73b    0x80  Code  Gb  fuel_math.o [1]
getFullLog()            0x08012be5     0x6  Code  Gb  status_loop.o [1]
getGlobalConfigurationVersion()
                        0x0800367d     0x6  Code  Gb  engine_configuration.o [1]
getGpioPinName(int)     0x080111e7    0x9a  Code  Lc  fsio_impl.o [1]
getHip9011BandIndex(float)
                        0x080227ab    0x1c  Code  Gb  hip9011_lookup.o [1]
getHip9011GainIndex(float)
                        0x08022783    0x28  Code  Gb  hip9011_lookup.o [1]
getHwPin(brain_pin_e)   0x08009513    0x30  Code  Gb  io_pins.o [1]
getHwPort(brain_pin_e)  0x080094e5    0x2e  Code  Gb  io_pins.o [1]
getIatCorrection(float)
                        0x0801c8c1    0x40  Code  Gb  fuel_math.o [1]
getIdle_mode_e(idle_mode_e)
                        0x08003027    0x2a  Code  Gb  auto_generated_enums.o [1]
getIgnitionPinForIndex(int)
                        0x08007abb    0x78  Code  Lc  engine_math.o [1]
getIgnition_mode_e(ignition_mode_e)
                        0x0800308f    0x32  Code  Gb  auto_generated_enums.o [1]
getIndex(GPIO_TypeDef *, unsigned int)
                        0x080034bb    0x12  Code  Lc  pin_repository.o [1]
getInjection_mode_e(injection_mode_e)
                        0x080030c1    0x32  Code  Gb  auto_generated_enums.o [1]
getInjectorDutyCycle(int)
                        0x0801c735     0x6  Code  Gb  fuel_math.o [1]
getInjectorLag(float)   0x0801c7d1    0x60  Code  Gb  fuel_math.o [1]
getInputCaptureDriver(brain_pin_e)
                        0x0801edb1    0x36  Code  Gb  digital_input_hw.o [1]
getInputMode(pin_input_mode_e)
                        0x080034a1    0x1a  Code  Gb  pin_repository.o [1]
getInt(int)             0x08006ca1    0x2a  Code  Lc  engine_controller.o [1]
getIntakeAirTemperature()
                        0x08006355    0x7a  Code  Gb  thermistors.o [1]
getIntegrationIndexByRpm(float)
                        0x08022759    0x2a  Code  Gb  hip9011_lookup.o [1]
getInternalAdcValue(char const *, adc_channel_e)
                        0x080056e1    0x68  Code  Gb  adc_inputs.o [1]
getKelvinTemperature(ThermistorConf *, float, ThermistorMath *)
                        0x08005ed5    0x6c  Code  Gb  thermistors.o [1]
getKnockInfo()          0x08006e1f    0x26  Code  Lc  engine_controller.o [1]
getLEValue(Engine *, FLStack<float, (int)32> *, le_action_e)
                        0x08010f89    0xb4  Code  Gb  fsio_impl.o [1]
getMaf()                0x0800bbf9    0x32  Code  Gb  maf.o [1]
getMap()                0x08015ff5    0x46  Code  Gb  map_averaging.o [1]
getMapByVoltage(float)  0x080144ed    0x24  Code  Gb  map.o [1]
getMcCode(max_32855_code)
                        0x0801d9bb    0x2c  Code  Lc  max31855.o [1]
getNeedToWriteConfiguration()
                        0x0800529b     0x6  Code  Gb  flash_main.o [1]
getNextSwitchTimeUs(PwmConfig *)
                        0x080186eb    0x5a  Code  Lc  pwm_generator_logic.o [1]
getNextToken(char const *, char *, int)
                        0x0801c2d7    0x5c  Code  Gb  fsio_core.o [1]
getNumberOfInjections(injection_mode_e)
                        0x0801c6fb    0x3a  Code  Lc  fuel_math.o [1]
getParameterCount(action_type_e)
                        0x08009cdd    0x46  Code  Lc  cli_registry.o [1]
getPedalPosition()      0x080071a1    0x82  Code  Gb  tps.o [1]
getPinFunction(brain_pin_e)
                        0x080034cd    0x24  Code  Gb  pin_repository.o [1]
getPinNameByAdcChannel(adc_channel_e, char *)
                        0x0800688b    0x2a  Code  Gb  engine_controller.o [1]
getPin_output_mode_e(pin_output_mode_e)
                        0x08003051    0x3e  Code  Gb  auto_generated_enums.o [1]
getPortIndex(GPIO_TypeDef *)
                        0x080032b5    0x66  Code  Lc  pin_repository.o [1]
getPotStep(int)         0x08020643    0x16  Code  Lc  poten.o [1]
getPrimatyRawTPS()      0x08007195     0xc  Code  Lc  tps.o [1]
getR2InVoltageDividor(float, float, float)
                        0x08005ead    0x26  Code  Gb  thermistors.o [1]
getRawMap()             0x08014511    0x7e  Code  Gb  map.o [1]
getRealMaf()            0x0800bc59    0x2a  Code  Gb  maf.o [1]
getRealMafFuel(float, int)
                        0x0801c5cd    0x8e  Code  Gb  fuel_math.o [1]
getRemainingStack       0x0800a429    0x24  Code  Gb  mpu_util.o [1]
getResistance(ThermistorConf *)
                        0x08005f41    0x58  Code  Gb  thermistors.o [1]
getResultCode(unsigned int)
                        0x0801d9e7    0x28  Code  Lc  max31855.o [1]
getRevolutionCounter()  0x08013093     0xc  Code  Gb  rpm_calculator.o [1]
getRpmByAngleWindowAndTimeUs(int, float)
                        0x08022725    0x34  Code  Gb  hip9011_lookup.o [1]
getRpmMultiplier(operation_mode_e)
                        0x08004e31    0x1a  Code  Gb  engine_configuration.o [1]
getRunningAdvance(int, float)
                        0x0800c6c9    0xf8  Code  Lc  advance_map.o [1]
getRunningFuel(float, int)
                        0x0801c7bb    0x16  Code  Gb  fuel_math.o [1]
getRusEfiVersion        0x08008dad    0x22  Code  Gb  rusefi.o [1]
getShort(int)           0x08006b23    0x30  Code  Lc  engine_controller.o [1]
getSignalOnTime(int)    0x0801513d    0x48  Code  Lc  wave_analyzer.o [1]
getSignalPeriodMs(int)  0x0801519d    0x28  Code  Lc  wave_analyzer.o [1]
getSparkDwellMsT(int)   0x0800785d    0x9a  Code  Gb  engine_math.o [1]
getSpeedDensityFuel(int)
                        0x0800c4f5    0x4e  Code  Gb  speed_density.o [1]
getSpiAf(SPIDriver *)   0x0800a4c3    0x26  Code  Lc  mpu_util.o [1]
getSpiDevice(spi_device_e)
                        0x08017f45    0x30  Code  Gb  hardware.o [1]
getTCharge(int, float, float, float)
                        0x0800c3c5    0x80  Code  Gb  speed_density.o [1]
getTPS()                0x08007225    0x20  Code  Gb  tps.o [1]
getTPS10bitAdc()        0x08007177    0x1e  Code  Gb  tps.o [1]
getTPSVoltage()         0x08007149    0x2e  Code  Gb  tps.o [1]
getTemperatureC(ThermistorConf *, ThermistorMath *)
                        0x08005f99    0x46  Code  Gb  thermistors.o [1]
getTimeNowNt            0x08006693     0xc  Code  Gb  engine_controller.o [1]
getTimeNowSeconds       0x080066ad    0x10  Code  Gb  engine_controller.o [1]
getTimeNowUs            0x08006683    0x10  Code  Gb  engine_controller.o [1]
getTiming_mode_e(timing_mode_e)
                        0x08002eb9    0x2a  Code  Gb  auto_generated_enums.o [1]
getTpsRateOfChange()    0x080070ad    0x12  Code  Gb  tps.o [1]
getTpsValue(int)        0x080070c1    0x88  Code  Gb  tps.o [1]
getTrigger_type_e(trigger_type_e)
                        0x08002ee3    0xfc  Code  Gb  auto_generated_enums.o [1]
getTsSerialDevice()     0x0801abb7    0x12  Code  Gb  tunerstudio_io.o [1]
getTunerStudioPageSize(int)
                        0x0800f3e1    0x10  Code  Gb  tunerstudio.o [1]
getVBatt()              0x08018a49    0x2e  Code  Gb  voltage.o [1]
getValue(char const *)  0x08001f31    0x34  Code  Lc  settings.o [1]
getVehicleSpeed()       0x0801c455    0x56  Code  Gb  vehicle_speed.o [1]
getWarninig             0x0800a397     0x4  Code  Gb  error_handling.o [1]
getWaveOffset(int)      0x08015185    0x18  Code  Lc  wave_analyzer.o [1]
getWorkingPageAddr(int)
                        0x0800f3d1    0x10  Code  Gb  tunerstudio.o [1]
get_descriptor          0x0802da51    0x32  Code  Lc  usbcfg.o [1]
get_fat                 0x08022e11    0xfe  Code  Gb  ff.o [1]
get_fattime             0x0802834f     0xa  Code  Gb  fatfs_diskio.o [1]
get_fileinfo            0x08023d2b   0x152  Code  Lc  ff.o [1]
getinjectionOffset(int)
                        0x0801c6d5    0x26  Code  Gb  fuel_math.o [1]
getint                  0x08029b11    0x28  Code  Lc  xgetdst.o [3]
gett                    0x080198b7    0x12  Code  Lc  serial.o [1]
gett                    0x08020cfb    0x12  Code  Lc  serial_usb.o [1]
globalConfigurationVersion
                        0x2000f1dc     0x4  Data  Lc  engine_configuration.o [1]
globalTimerCallback     0x20013a8c     0x4  Data  Gb  microsecond_timer.o [1]
gm3bar                  0x200139bc     0x8  Data  Lc  map.o [1]
gpsMesagesCount         0x200143d8     0x4  Data  Lc  neo6m.o [1]
gpsThreadStack          0x200080e8   0x2c8  Data  Lc  neo6m.o [1]
gps_convert_deg_to_dec  0x08026511    0x5c  Code  Gb  nmea.o [1]
gps_deg_dec             0x080263f9   0x110  Code  Gb  nmea.o [1]
gps_location            0x080268ff    0x46  Code  Gb  nmea.o [1]
gps_str                 0x2001440c   0x100  Data  Lc  neo6m.o [1]
gpt5cfg                 0x08034800     0xc  Data  Lc  microsecond_timer.o [1]
gptInit                 0x080284e5     0x8  Code  Gb  gpt.o [1]
gptObjectInit           0x080284ed     0xa  Code  Gb  gpt.o [1]
gptStart                0x080284f7    0x4c  Code  Gb  gpt.o [1]
gptStartOneShotI        0x08028543    0x32  Code  Gb  gpt.o [1]
gptStopTimerI           0x08028575    0x3a  Code  Gb  gpt.o [1]
gpt_lld_init            0x08029667    0x10  Code  Gb  gpt_lld.o [1]
gpt_lld_serve_interrupt
                        0x0802962d    0x24  Code  Lc  gpt_lld.o [1]
gpt_lld_start           0x08029677    0x82  Code  Gb  gpt_lld.o [1]
gpt_lld_start_timer     0x08029711    0x2c  Code  Gb  gpt_lld.o [1]
gpt_lld_stop_timer      0x0802973d    0x1a  Code  Gb  gpt_lld.o [1]
halInit                 0x08029389    0x46  Code  Gb  hal.o [1]
halIsCounterWithin      0x080293cf    0x38  Code  Gb  hal.o [1]
halPolledDelay          0x08029407    0x18  Code  Gb  hal.o [1]
halTime                 0x20005e30    0x10  Data  Gb  engine_controller.o [1]
hal_lld_backup_domain_init
                        0x08029d2d    0x74  Code  Lc  hal_lld.o [1]
hal_lld_init            0x08029da1    0x8a  Code  Gb  hal_lld.o [1]
halted_status           0x0801014e     0x2  Data  Lc  usb.o [1]
handleActionWithParameter(TokenCallback *, char *)
                        0x08009df1   0x294  Code  Gb  cli_registry.o [1]
handleBuffer            0x2000c254    0xc8  Data  Lc  cli_registry.o [1]
handleBurnCommand(ts_channel_s *, ts_response_format_e, unsigned short)
                        0x0800f7d3    0x70  Code  Gb  tunerstudio.o [1]
handleConsoleLine       0x0800a1f3    0x62  Code  Gb  cli_registry.o [1]
handleConsoleLineInternal(char const *, int)
                        0x0800a123    0xba  Code  Lc  cli_registry.o [1]
handleCrc32Check(ts_channel_s *, ts_response_format_e, unsigned short, unsigned short, unsigned short)
                        0x0800f547    0xc4  Code  Gb  tunerstudio.o [1]
handleExecuteCommand(ts_channel_s *, char *, int)
                        0x0800fba5    0x2c  Code  Lc  tunerstudio.o [1]
handleFsio(Engine *, int)
                        0x08011285    0xa0  Code  Lc  fsio_impl.o [1]
handleFuel(unsigned int, int)
                        0x080162b3    0xe4  Code  Lc  main_trigger_callback.o [1]
handleFuelInjectionEvent(InjectionEvent *, int)
                        0x0801614d   0x166  Code  Lc  main_trigger_callback.o [1]
handleGetDataRequest(CANRxFrame *)
                        0x080261a5   0x168  Code  Lc  obd2.o [1]
handleGetText(ts_channel_s *)
                        0x0800fb89    0x1c  Code  Lc  tunerstudio.o [1]
handleOutputChannelsCommand(ts_channel_s *, ts_response_format_e)
                        0x0800fb3d    0x26  Code  Gb  tunerstudio.o [1]
handlePageReadCommand(ts_channel_s *, ts_response_format_e, unsigned short, unsigned short, unsigned short)
                        0x0800f6e7    0xc2  Code  Gb  tunerstudio.o [1]
handlePageSelectCommand(ts_channel_s *, ts_response_format_e, unsigned short)
                        0x0800f3f1    0x40  Code  Gb  tunerstudio.o [1]
handlePlainCommand(ts_channel_s *, unsigned char)
                        0x0800fbd1   0x20a  Code  Gb  tunerstudio.o [1]
handleQueryCommand(ts_channel_s *, ts_response_format_e)
                        0x0800fb03    0x3a  Code  Gb  tunerstudio.o [1]
handleSpark(unsigned int, int, ArrayList<IgnitionEvent, (int)80> *)
                        0x08016515   0x120  Code  Lc  main_trigger_callback.o [1]
handleSparkEvent(unsigned int, IgnitionEvent *, int)
                        0x08016399   0x176  Code  Lc  main_trigger_callback.o [1]
handleTestCommand(ts_channel_s *)
                        0x0800fb63    0x26  Code  Gb  tunerstudio.o [1]
handleWriteChunkCommand(ts_channel_s *, ts_response_format_e, short, short, void *)
                        0x0800f467    0xe0  Code  Gb  tunerstudio.o [1]
handleWriteValueCommand(ts_channel_s *, ts_response_format_e, unsigned short, unsigned short, unsigned char)
                        0x0800f611    0xc4  Code  Gb  tunerstudio.o [1]
hasBaroSensor()         0x0801458f    0x2a  Code  Gb  map.o [1]
hasErrorCodes           0x080142df    0x12  Code  Gb  malfunction_central.o [1]
hasFirmwareErrorFlag    0x2001c65e     0x1  Data  Gb  rusefi.o [1]
hasMafSensor()          0x0800bc2b    0x2e  Code  Gb  maf.o [1]
hasVBatt()              0x08018a31    0x16  Code  Gb  voltage.o [1]
hasValidEngineType(engine_configuration_s *)
                        0x080053af    0x18  Code  Lc  flash_main.o [1]
header                  0x2000e3c4    0x10  Data  Lc  datalogging.o [1]
helpCommand             0x08009d23    0x64  Code  Gb  cli_registry.o [1]
helper                  0x20018230     0x4  Data  Lc  trigger_emulator_algo.o [1]
hex2int                 0x08026389    0x4a  Code  Gb  nmea.o [1]
hipAdcCallback(unsigned short)
                        0x0801a5d5   0x228  Code  Gb  HIP9011.o [1]
hipCs                   0x2000a8cc    0x10  Data  Lc  HIP9011.o [1]
hipLastExecutionCount   0x2000a8dc     0x4  Data  Gb  HIP9011.o [1]
hipSampleIndex          0x20010f6c     0x4  Data  Lc  hardware.o [1]
hipStartupCode()        0x0801a801   0x138  Code  Lc  HIP9011.o [1]
hipThread(void *)       0x0801a939    0x28  Code  Lc  HIP9011.o [1]
hipTreadStack           0x20001910   0x2c8  Data  Lc  HIP9011.o [1]
hipValueMax             0x2000a8ec     0x4  Data  Lc  HIP9011.o [1]
honda3bar               0x200139ac     0x8  Data  Lc  map.o [1]
hs_spicfg               0x2000170c     0xc  Data  Lc  mmc_card.o [1]
hwHandleShaftSignal(trigger_event_e)
                        0x0801d0c3    0xae  Code  Gb  trigger_central.o [1]
hwPortname(brain_pin_e)
                        0x080033db    0x4c  Code  Gb  pin_repository.o [1]
hwSetTimerTime          0x2000a918     0x4  Data  Gb  SingleTimerExecutor.o [1]
i2cInit                 0x08029f69     0x8  Code  Gb  i2c.o [1]
i2cObjectInit           0x08029f71    0x16  Code  Gb  i2c.o [1]
i2c_lld_init            0x0802a2ad    0x22  Code  Gb  i2c_lld.o [1]
i2c_lld_serve_error_interrupt
                        0x0802a161   0x102  Code  Lc  i2c_lld.o [1]
i2c_lld_serve_event_interrupt
                        0x0802a039   0x128  Code  Lc  i2c_lld.o [1]
iHead                   0x20013854     0x4  Data  Lc  main_trigger_callback.o [1]
iacMotor                0x20006440   0x2f0  Data  Lc  idle_thread.o [1]
iatAdvanceCorrectionMap
                        0x2000ae7c    0x4c  Data  Lc  advance_map.o [1]
iatTimingRpmBins        0x0802e448    0x40  Data  Lc  advance_map.o [1]
icuDisable              0x0800b745    0x50  Code  Gb  icu.o [1]
icuEnable               0x0800b707    0x3e  Code  Gb  icu.o [1]
icuInit                 0x0800b665     0x8  Code  Gb  icu.o [1]
icuObjectInit           0x0800b66d     0xa  Code  Gb  icu.o [1]
icuPeriordCallBack(ICUDriver *)
                        0x0801ed53    0x16  Code  Lc  digital_input_hw.o [1]
icuStart                0x0800b677    0x4c  Code  Gb  icu.o [1]
icuStop                 0x0800b6c3    0x44  Code  Gb  icu.o [1]
icuWidthCallback(ICUDriver *)
                        0x0801ed3d    0x16  Code  Lc  digital_input_hw.o [1]
icu_lld_disable         0x08019e61    0x1a  Code  Gb  icu_lld.o [1]
icu_lld_enable          0x08019dd9    0x88  Code  Gb  icu_lld.o [1]
icu_lld_init            0x08019b2d    0x36  Code  Gb  icu_lld.o [1]
icu_lld_serve_interrupt
                        0x08019a2d    0x92  Code  Lc  icu_lld.o [1]
icu_lld_start           0x08019b63   0x1b8  Code  Gb  icu_lld.o [1]
icu_lld_stop            0x08019d1b    0x84  Code  Gb  icu_lld.o [1]
idleDebug(char const *, float)
                        0x08016c59    0x32  Code  Gb  idle_thread.o [1]
idleMath                0x200110a0    0x14  Data  Lc  idle_thread.o [1]
idleSolenoid            0x200063d0    0x70  Data  Lc  idle_thread.o [1]
idleSolenoidPin         0x20011090    0x10  Data  Lc  idle_thread.o [1]
ignitionCalc(int)       0x08016647    0x62  Code  Lc  main_trigger_callback.o [1]
ignitionErrorDetection  0x20013858   0x10c  Data  Lc  main_trigger_callback.o [1]
incLogFileName()        0x0801caef   0x114  Code  Lc  mmc_card.o [1]
incrementGlobalConfigurationVersion()
                        0x08003683     0xc  Code  Gb  engine_configuration.o [1]
indexOf                 0x08002b65    0x26  Code  Gb  efilib.o [1]
initAccelEnrichment(Logging *)
                        0x08014b95    0x6a  Code  Gb  accel_enrichment.o [1]
initAdcHwChannel(adc_channel_e)
                        0x0800595d    0x20  Code  Lc  adc_inputs.o [1]
initAdcInputs(bool)     0x08005cfd    0xa2  Code  Gb  adc_inputs.o [1]
initAdcPin(GPIO_TypeDef *, int, char const *)
                        0x08005749    0x22  Code  Lc  adc_inputs.o [1]
initAlgo(Logging *, engine_configuration_s *)
                        0x08014f51    0x12  Code  Gb  algo.o [1]
initAlternatorCtrl(Logging *)
                        0x08009abd    0x5c  Code  Gb  alternatorController.o [1]
initBoardTest()         0x08018ce9    0xa2  Code  Gb  board_test.o [1]
initCan()               0x0801ffa9    0x6e  Code  Gb  can_hw.o [1]
initConfigActions()     0x08006ddb    0x44  Code  Gb  engine_controller.o [1]
initConsoleLogic        0x0800a09f    0x1a  Code  Gb  cli_registry.o [1]
initDataStructures()    0x08014f41    0x10  Code  Gb  algo.o [1]
initDodgeRam(TriggerShape *)
                        0x0801b251    0x76  Code  Gb  trigger_chrysler.o [1]
initEgoSensor(afr_sensor_s *, ego_sensor_e)
                        0x0800c981    0x7c  Code  Lc  ego.o [1]
initElectronicThrottle()
                        0x0800baf1    0x76  Code  Gb  electronic_throttle.o [1]
initEngineContoller(Logging *)
                        0x08006e45   0x148  Code  Gb  engine_controller.o [1]
initEngineEmulator(Logging *, Engine *)
                        0x08018269    0x24  Code  Gb  engine_emulator.o [1]
initErrorHandling       0x0800a39b    0x10  Code  Gb  error_handling.o [1]
initFlash(Logging *)    0x08005485    0x32  Code  Gb  flash_main.o [1]
initFsioImpl(Logging *, Engine *)
                        0x080118a5   0x138  Code  Gb  fsio_impl.o [1]
initGps                 0x0802021f    0x5e  Code  Gb  neo6m.o [1]
initHardware(Logging *)
                        0x08018095   0x15e  Code  Gb  hardware.o [1]
initHip9011(Logging *)  0x0801a961    0xfa  Code  Gb  HIP9011.o [1]
initInjectorCentral()   0x080159e1    0x7c  Code  Gb  injector_central.o [1]
initIntermediateLoggingBuffer
                        0x080029cf    0x1c  Code  Gb  datalogging.o [1]
initInterpolation(Logging *)
                        0x08009421    0x12  Code  Gb  interpolation.o [1]
initJoystick(Logging *)
                        0x080204e7    0xba  Code  Gb  joystick.o [1]
initLcdController()     0x0801741f    0x2c  Code  Gb  lcd_controller.o [1]
initLoggingCentral()    0x0800aec7    0x20  Code  Gb  loggingcentral.o [1]
initLoggingExt          0x08002743    0x1c  Code  Gb  datalogging.o [1]
initMainEventListener(Logging *, Engine *)
                        0x08016ad1    0x64  Code  Gb  main_trigger_callback.o [1]
initMalfunctionCentral  0x08014227     0x8  Code  Gb  malfunction_central.o [1]
initMalfunctionIndicator()
                        0x08015c1f    0x1e  Code  Gb  malfunction_indicator.o [1]
initMapAveraging(Logging *, Engine *)
                        0x0801603b    0x1e  Code  Gb  map_averaging.o [1]
initMapDecoder(Logging *)
                        0x08014815    0x4e  Code  Gb  map.o [1]
initMax31855(Logging *, SPIDriver *, brain_pin_e *)
                        0x0801db3f    0x50  Code  Gb  max31855.o [1]
initMicrosecondTimer    0x080258f3    0x28  Code  Gb  microsecond_timer.o [1]
initMmcCard             0x0801cee7    0x9e  Code  Gb  mmc_card.o [1]
initOutputPinExt(char const *, OutputPin *, GPIO_TypeDef *, unsigned int, unsigned int)
                        0x080182fd    0x3e  Code  Gb  gpio_helper.o [1]
initOutputPins()        0x080095a1    0x8c  Code  Gb  io_pins.o [1]
initPeriodicEvents()    0x0800687f     0xc  Code  Gb  engine_controller.o [1]
initPinRepository()     0x08003427    0x30  Code  Gb  pin_repository.o [1]
initPotentiometer(Mcp42010Driver *, SPIDriver *, brain_pin_e)
                        0x08020629    0x1a  Code  Gb  poten.o [1]
initPotentiometers(Logging *, board_configuration_s *)
                        0x08020701    0x7c  Code  Gb  poten.o [1]
initPrimaryPins()       0x08009591    0x10  Code  Gb  io_pins.o [1]
initPwmGenerator()      0x08014e31     0x2  Code  Gb  pwm_generator.o [1]
initRpmCalculator(Logging *, Engine *)
                        0x080130f5    0x20  Code  Gb  rpm_calculator.o [1]
initRtc()               0x0800979f     0xc  Code  Gb  rtc_helper.o [1]
initSensorChart()       0x08014f03    0x12  Code  Gb  sensor_chart.o [1]
initSensors(Logging *)  0x08014c65    0x12  Code  Gb  allsensors.o [1]
initSettings(engine_configuration_s *)
                        0x080020ed   0x23c  Code  Gb  settings.o [1]
initSignalExecutor()    0x0801efed    0x3e  Code  Gb  signal_executor.o [1]
initSignalExecutorImpl()
                        0x0801de2f     0xe  Code  Gb  SingleTimerExecutor.o [1]
initSpeedDensity()      0x0800c5b5    0x6a  Code  Gb  speed_density.o [1]
initSpiCs               0x0800a5ab    0x2c  Code  Gb  mpu_util.o [1]
initSpiModule           0x0800a563    0x48  Code  Gb  mpu_util.o [1]
initSpiModules(board_configuration_s *)
                        0x08017f13    0x32  Code  Lc  hardware.o [1]
initStatisLeds()        0x08012599    0x36  Code  Lc  status_loop.o [1]
initStatusLoop(Engine *)
                        0x08012af1    0x72  Code  Gb  status_loop.o [1]
initTemperatureCurve(int, float *, float *)
                        0x080037e5    0x30  Code  Lc  engine_configuration.o [1]
initThermistors(Logging *)
                        0x0800647d    0x3a  Code  Gb  thermistors.o [1]
initTriggerCentral(Logging *, Engine *)
                        0x0801d80f    0x32  Code  Gb  trigger_central.o [1]
initTriggerDecoder()    0x08010db9    0x1c  Code  Gb  trigger_decoder.o [1]
initTriggerDecoderLogger(Logging *)
                        0x08010db3     0x6  Code  Gb  trigger_decoder.o [1]
initTriggerEmulator(Logging *, Engine *)
                        0x080207ad    0x6c  Code  Gb  trigger_emulator.o [1]
initTriggerEmulatorLogic(Logging *, Engine *)
                        0x08026c9b    0x7c  Code  Gb  trigger_emulator_algo.o [1]
initVehicleSpeed(Logging *)
                        0x0801c539    0x42  Code  Gb  vehicle_speed.o [1]
initWave(char const *, int)
                        0x0801507f    0x92  Code  Lc  wave_analyzer.o [1]
initWaveAnalyzer(Logging *)
                        0x0801537f    0x36  Code  Gb  wave_analyzer.o [1]
initWaveAnalyzerDriver(char const *, brain_pin_e)
                        0x0801ee29    0x24  Code  Gb  digital_input_hw.o [1]
initWaveChart(WaveChart *)
                        0x080051db    0x3c  Code  Gb  wave_chart.o [1]
initWboController()     0x08020625     0x2  Code  Gb  wbo.o [1]
initgpio                0x0800b4b9    0x1e  Code  Lc  pal_lld.o [1]
initialLedsBlink()      0x080125cf    0x3c  Code  Lc  status_loop.o [1]
initializeConsole       0x0800b3ab    0x44  Code  Gb  eficonsole.o [1]
initializeIgnitionActions(float, float, ArrayList<IgnitionEvent, (int)80> *)
                        0x080074e5    0x98  Code  Gb  engine_math.o [1]
initializeMazdaMiataNaShape(TriggerShape *)
                        0x0801adfd    0xcc  Code  Gb  trigger_mazda.o [1]
initializeMazdaMiataNbShape(TriggerShape *)
                        0x0801aec9   0x154  Code  Gb  trigger_mazda.o [1]
initializeMitsubishi4g18(TriggerShape *)
                        0x0801b829   0x142  Code  Gb  trigger_mitsubishi.o [1]
initializeSkippedToothTriggerShapeExt(TriggerShape *, int, int, operation_mode_e)
                        0x08010779    0x78  Code  Gb  trigger_decoder.o [1]
initialized             0x200147d0     0x4  Data  Lc  pin_repository.o [1]
initialized             0x200169b8     0x4  Data  Lc  sensor_chart.o [1]
initialized             0x2001c65f     0x1  Data  Lc  thermistors.o [1]
injectorNames           0x20001794    0x30  Data  Lc  signal_executor.o [1]
inotify                 0x08020d41    0x9a  Code  Lc  serial_usb.o [1]
instance                0x20001bd8    0x18  Data  Lc  SingleTimerExecutor.o [1]
intHold                 0x2000a8b8    0x14  Data  Lc  HIP9011.o [1]
intHoldCallback(trigger_event_e, unsigned int)
                        0x0801a44d    0xc6  Code  Lc  HIP9011.o [1]
integratorValues        0x0802dc18    0x80  Data  Gb  hip9011_lookup.o [1]
intermediateLoggingBuffer
                        0x2000e3b0    0x14  Data  Lc  datalogging.o [1]
intermediateLoggingBufferData
                        0x1000e7fc   0x7d0  Data  Lc  datalogging.o [1]
intermediateLoggingBufferInited
                        0x2001c655     0x1  Data  Lc  datalogging.o [1]
interpolate(float, float, float, float, float)
                        0x08008fed    0x74  Code  Gb  interpolation.o [1]
interpolate2d(float, float *, float *, int)
                        0x08009175    0x6a  Code  Gb  interpolation.o [1]
interpolate3d(float, float *, int, float, float *, int, float **)
                        0x080091e1   0x208  Code  Gb  interpolation.o [1]
invokeEnginePreCalculate(Engine *)
                        0x08013a2b     0xc  Code  Lc  engine.o [1]
isAveraging             0x2001c65a     0x1  Data  Lc  map_averaging.o [1]
isBoardTestMode         0x08018bc9     0x6  Code  Gb  board_test.o [1]
isConsoleReady()        0x0800ab6f    0x16  Code  Gb  console_io.o [1]
isCranking()            0x08012ebd     0xc  Code  Gb  rpm_calculator.o [1]
isCrankingE(Engine *)   0x08012e9b    0x22  Code  Gb  rpm_calculator.o [1]
isEmulating             0x20001834     0x1  Data  Lc  trigger_emulator_algo.o [1]
isIgnitionTimingError()
                        0x08016b35    0x18  Code  Gb  main_trigger_callback.o [1]
isInjectionEnabled(engine_configuration_s *)
                        0x08007cab     0xa  Code  Gb  engine_math.o [1]
isInjectorEnabled(int)  0x0801549d    0x1c  Code  Gb  injector_central.o [1]
isInsideTriggerHandler  0x2001c656     0x1  Data  Gb  error_handling.o [1]
isKnownCommand(char)    0x0800f843    0x4c  Code  Lc  tunerstudio.o [1]
isNumeric(char const *)
                        0x0801c2c1    0x16  Code  Gb  fsio_core.o [1]
isRunningBench          0x2001c658     0x1  Data  Lc  injector_central.o [1]
isRunningBenchTest()    0x08015459     0x8  Code  Gb  injector_central.o [1]
isSameF                 0x08002c61    0x32  Code  Gb  efilib.o [1]
isSdCardAlive           0x0801cee1     0x6  Code  Gb  mmc_card.o [1]
isSerialConsoleStarted  0x2001c652     0x1  Data  Lc  console_io.o [1]
isSerialOverUart()      0x0800ab57     0x6  Code  Gb  console_io.o [1]
isSpiInitialized        0x2001427c     0x8  Data  Lc  mpu_util.o [1]
isStep1Condition(int)   0x0800c69d    0x2a  Code  Gb  advance_map.o [1]
isTimeForNextStep(int)  0x08018a85    0x12  Code  Lc  board_test.o [1]
isTimerPending          0x2001c65b     0x1  Data  Lc  microsecond_timer.o [1]
isTriggerDecoderError()
                        0x08010171    0x1a  Code  Gb  trigger_decoder.o [1]
isTriggerErrorNow()     0x08012625    0x46  Code  Lc  status_loop.o [1]
isUpEvent               0x200017f8     0x8  Data  Lc  trigger_central.o [1]
isUpEvent               0x20001828     0x8  Data  Lc  trigger_emulator_algo.o [1]
isValidCoolantTemperature(float)
                        0x08005fe1    0x40  Code  Gb  thermistors.o [1]
isValidCrc(persistent_config_container_s *)
                        0x08005357    0x46  Code  Lc  flash_main.o [1]
isValidIntakeAirTemperature(float)
                        0x08006021    0x40  Code  Gb  thermistors.o [1]
is_board_test_mode      0x2001c651     0x1  Data  Lc  board_test.o [1]
is_injector_enabled     0x200111b8    0x30  Data  Lc  injector_central.o [1]
is_serial_over_uart     0x2001c653     0x1  Data  Lc  console_io.o [1]
is_usb_serial_ready     0x08019819    0x18  Code  Gb  usbconsole.o [1]
itoa10                  0x08002c4d    0x12  Code  Gb  efilib.o [1]
itoa_signed(char *, int, unsigned int)
                        0x08002c1b    0x32  Code  Lc  efilib.o [1]
ivThread(int)           0x08018b9f    0x2a  Code  Lc  board_test.o [1]
ivThread(int)           0x08016ecf    0xf4  Code  Lc  idle_thread.o [1]
ivThreadStack           0x20006108   0x2c8  Data  Lc  idle_thread.o [1]
joyA                    0x20011324     0x4  Data  Lc  joystick.o [1]
joyB                    0x20011328     0x4  Data  Lc  joystick.o [1]
joyC                    0x2001132c     0x4  Data  Lc  joystick.o [1]
joyCenter               0x20011320     0x4  Data  Lc  joystick.o [1]
joyD                    0x20011330     0x4  Data  Lc  joystick.o [1]
joyTotal                0x2001131c     0x4  Data  Lc  joystick.o [1]
joystickInfo()          0x080203d3    0x94  Code  Lc  joystick.o [1]
knockVolts              0x2000a8f0     0x4  Data  Lc  HIP9011.o [1]
lastDecodingErrorTime   0x20001818     0x8  Data  Gb  trigger_decoder.o [1]
lastEventQueueTime      0x2000f4a0     0x4  Data  Gb  event_queue.o [1]
lastEventTime           0x200069f8     0x8  Data  Lc  joystick.o [1]
lastExecutionCount      0x2000a91c     0x4  Data  Gb  SingleTimerExecutor.o [1]
lastGoodValue           0x200016a0     0x4  Data  Lc  idle_controller.o [1]
lastSetTimerTimeNt      0x20007b50     0x8  Data  Lc  microsecond_timer.o [1]
lastSetTimerValue       0x20013a80     0x4  Data  Lc  microsecond_timer.o [1]
lastSignalTimeNt        0x2000a420     0x8  Data  Lc  vehicle_speed.o [1]
lastWriteActual         0x2000c320     0x4  Data  Gb  console_io.o [1]
lastWriteSize           0x2000c31c     0x4  Data  Gb  console_io.o [1]
lcdInfo()               0x08019189    0x94  Code  Lc  lcd_HD44780.o [1]
lcdLineBuffer           0x200118b4    0x20  Data  Lc  lcd_controller.o [1]
lcdLineStream           0x200118d4    0x14  Data  Lc  lcd_controller.o [1]
lcdPrintf(char const *, ...)
                        0x0801744b    0x3c  Code  Lc  lcd_controller.o [1]
lcdShowFatalMessage     0x08019493    0x20  Code  Gb  lcd_HD44780.o [1]
lcdSleep(int)           0x08018e45    0x4a  Code  Lc  lcd_HD44780.o [1]
lcdThread(void *)       0x08012711    0x38  Code  Lc  status_loop.o [1]
lcdThreadStack          0x200083f0   0x2c8  Data  Lc  status_loop.o [1]
lcd_HD44780_init        0x0801921d   0x276  Code  Gb  lcd_HD44780.o [1]
lcd_HD44780_print_char  0x08019147    0x2c  Code  Gb  lcd_HD44780.o [1]
lcd_HD44780_print_string
                        0x08019173    0x16  Code  Gb  lcd_HD44780.o [1]
lcd_HD44780_set_position
                        0x080190f9    0x46  Code  Gb  lcd_HD44780.o [1]
lcd_HD44780_write(unsigned char)
                        0x08018e8f   0x1be  Code  Lc  lcd_HD44780.o [1]
lcd_HD44780_write_command(unsigned char)
                        0x0801904d    0x3c  Code  Gb  lcd_HD44780.o [1]
lcd_HD44780_write_data(unsigned char)
                        0x08019089    0x70  Code  Gb  lcd_HD44780.o [1]
leAcToggle              0x2000f600     0xc  Data  Lc  fsio_impl.o [1]
leAdd                   0x2000f4f4     0xc  Data  Lc  fsio_core.o [1]
leAnd                   0x2000f4b8     0xc  Data  Lc  fsio_core.o [1]
leAnd2                  0x2000f4c4     0xc  Data  Lc  fsio_core.o [1]
leCoolant               0x2000f5f4     0xc  Data  Lc  fsio_impl.o [1]
leDiv                   0x2000f518     0xc  Data  Lc  fsio_core.o [1]
leFan                   0x2000f5e8     0xc  Data  Lc  fsio_impl.o [1]
leFanOffSetting         0x2000f618     0xc  Data  Lc  fsio_impl.o [1]
leFanOnSetting          0x2000f60c     0xc  Data  Lc  fsio_impl.o [1]
leFsioSetting           0x2000f630     0xc  Data  Lc  fsio_impl.o [1]
leIf                    0x2000f56c     0xc  Data  Lc  fsio_core.o [1]
leKnock                 0x2000f63c     0xc  Data  Lc  fsio_impl.o [1]
leLess                  0x2000f53c     0xc  Data  Lc  fsio_core.o [1]
leLessOrEquals          0x2000f548     0xc  Data  Lc  fsio_core.o [1]
leMaf                   0x2000f5d0     0xc  Data  Lc  fsio_impl.o [1]
leMax                   0x2000f554     0xc  Data  Lc  fsio_core.o [1]
leMin                   0x2000f560     0xc  Data  Lc  fsio_core.o [1]
leMore                  0x2000f524     0xc  Data  Lc  fsio_core.o [1]
leMoreOrEqual           0x2000f530     0xc  Data  Lc  fsio_core.o [1]
leMul                   0x2000f50c     0xc  Data  Lc  fsio_core.o [1]
leNot                   0x2000f4e8     0xc  Data  Lc  fsio_core.o [1]
leOr                    0x2000f4d0     0xc  Data  Lc  fsio_core.o [1]
leOr2                   0x2000f4dc     0xc  Data  Lc  fsio_core.o [1]
leRpm                   0x2000f5b8     0xc  Data  Lc  fsio_impl.o [1]
leSub                   0x2000f500     0xc  Data  Lc  fsio_core.o [1]
leTimeSinceBoot         0x2000f624     0xc  Data  Lc  fsio_impl.o [1]
leTps                   0x2000f5c4     0xc  Data  Lc  fsio_impl.o [1]
leVBatt                 0x2000f5dc     0xc  Data  Lc  fsio_impl.o [1]
leds                    0x200017d8    0x14  Data  Lc  status_loop.o [1]
lineStart               0x08033960    0x10  Data  Lc  lcd_HD44780.o [1]
linecoding              0x2000175c     0x8  Data  Lc  serial_usb.o [1]
listDirectory(char const *)
                        0x0801ccd3    0xaa  Code  Lc  mmc_card.o [1]
lmos                    0x0802712c    0x18  Data  Lc  xttotm.o [3]
lockAnyContext          0x0800acdd    0x3c  Code  Gb  console_io.o [1]
lockOutputBuffer        0x0800ad19     0x8  Code  Gb  console_io.o [1]
lockSpi(spi_device_e)   0x08017ee5    0x26  Code  Gb  hardware.o [1]
logFileIndex            0x20001730     0x4  Data  Lc  mmc_card.o [1]
logFileLineIndex        0x200177b0     0x4  Data  Lc  status_loop.o [1]
logName                 0x20014264    0x10  Data  Lc  mmc_card.o [1]
logf                    0x0801389d     0x6  Code  Gb  logf.o [5]
logger                  0x2000a910     0x4  Data  Lc  HIP9011.o [1]
logger                  0x2000a920     0x4  Data  Lc  accel_enrichment.o [1]
logger                  0x2000ab98    0x3c  Data  Lc  adc_inputs.o [1]
logger                  0x2000aec8     0x4  Data  Lc  alternatorController.o [1]
logger                  0x2000af10   0x104  Data  Lc  can_hw.o [1]
logger                  0x2000e3ac     0x4  Data  Lc  console_io.o [1]
logger                  0x2000ee1c   0x104  Data  Lc  eficonsole.o [1]
logger                  0x2000ef84   0x104  Data  Lc  electronic_throttle.o [1]
logger                  0x2000f0d8   0x104  Data  Lc  engine.o [1]
logger                  0x2000f208   0x104  Data  Lc  engine_controller.o [1]
logger                  0x2000f320   0x104  Data  Lc  error_handling.o [1]
logger                  0x2000f4b0     0x4  Data  Lc  flash_main.o [1]
logger                  0x20010b08     0x4  Data  Lc  fsio_impl.o [1]
logger                  0x2001108c     0x4  Data  Lc  idle_thread.o [1]
logger                  0x200110b4   0x104  Data  Lc  injector_central.o [1]
logger                  0x20011200     0x4  Data  Gb  interpolation.o [1]
logger                  0x20011204   0x104  Data  Lc  io_pins.o [1]
logger                  0x200113f0     0x4  Data  Lc  lcd_HD44780.o [1]
logger                  0x20013964     0x4  Data  Lc  main_trigger_callback.o [1]
logger                  0x20013994     0x4  Data  Lc  map.o [1]
logger                  0x200139d8     0x4  Data  Lc  map_averaging.o [1]
logger                  0x20013a1c     0x4  Data  Lc  max31855.o [1]
logger                  0x20013d18   0x104  Data  Lc  mmc_card.o [1]
logger                  0x2001450c   0x104  Data  Lc  obd2.o [1]
logger                  0x200147d4   0x104  Data  Lc  pin_repository.o [1]
logger                  0x20014904     0x4  Data  Lc  poten.o [1]
logger                  0x20014970     0x4  Data  Lc  rpm_calculator.o [1]
logger                  0x20014980   0x104  Data  Lc  rtc_helper.o [1]
logger                  0x20016f0c    0x3c  Data  Lc  settings.o [1]
logger                  0x20017670    0x3c  Data  Lc  status_loop.o [1]
logger                  0x20017980     0x4  Data  Lc  thermistors.o [1]
logger                  0x200179b4     0x4  Data  Lc  trigger_central.o [1]
logger                  0x20017af8     0x4  Data  Lc  trigger_decoder.o [1]
logger                  0x20018228     0x4  Data  Lc  trigger_emulator_algo.o [1]
logger                  0x20018238     0x4  Data  Lc  trigger_input.o [1]
logger                  0x2001c508     0x4  Data  Lc  vehicle_speed.o [1]
logger                  0x2001c514     0x4  Data  Lc  wave_analyzer.o [1]
logger                  0x2001c51c   0x104  Data  Lc  wave_chart.o [1]
logger2                 0x200177b8   0x104  Data  Lc  status_loop.o [1]
logging                 0x2000b544     0x4  Data  Lc  cli_registry.o [1]
logging                 0x20014284   0x104  Data  Lc  neo6m.o [1]
logging                 0x20016978    0x3c  Data  Lc  sensor_chart.o [1]
longScheduling          0x2000f498     0x4  Data  Lc  event_queue.o [1]
long_to_string_with_divisor
                        0x0800a62d    0x56  Code  Lc  chprintf.o [1]
ls_spicfg               0x20001718     0xc  Data  Lc  mmc_card.o [1]
ltoa                    0x0800a683    0x16  Code  Lc  chprintf.o [1]
ltoa_internal(char *, long, unsigned int)
                        0x08002bdb    0x40  Code  Lc  efilib.o [1]
main                    0x0802f925    0x16  Code  Gb  main.o [1]
mainLoopHisto           0x20006a00   0xe20  Data  Lc  main_trigger_callback.o [1]
mainTriggerCallback(trigger_event_e, unsigned int)
                        0x080166ad   0x390  Code  Gb  main_trigger_callback.o [1]
mainTriggerCallbackInstance
                        0x20013850     0x4  Data  Lc  main_trigger_callback.o [1]
main_loop_started       0x2001c65d     0x1  Data  Gb  rusefi.o [1]
malloc                  0x08029f89    0xac  Code  Gb  xxmemxmalloc.o [3]
mapAccumulator          0x20013a0c     0x4  Data  Lc  map_averaging.o [1]
mapAveragingCallback(trigger_event_e, unsigned int)
                        0x08015e59   0x18a  Code  Lc  map_averaging.o [1]
mapAveragingCallback(unsigned short)
                        0x08015cdd   0x11c  Code  Gb  map_averaging.o [1]
mapAveragingPin         0x200139dc    0x14  Data  Lc  map_averaging.o [1]
mapDecoder              0x200139d4     0x4  Data  Lc  map.o [1]
mapFreq                 0x200139a0     0x4  Data  Lc  map.o [1]
mapMeasurementsCounter  0x20013a10     0x4  Data  Lc  map_averaging.o [1]
markUsed(int, char const *)
                        0x08003457    0x12  Code  Lc  pin_repository.o [1]
maxEventQueueTime       0x2000f49c     0x4  Data  Gb  event_queue.o [1]
maxF                    0x08002b01    0x10  Code  Gb  efilib.o [1]
maxHowFarOff            0x2000f494     0x4  Data  Gb  event_queue.o [1]
maxI                    0x08002af9     0x8  Code  Gb  efilib.o [1]
maxLockTime             0x2000f490     0x4  Data  Gb  error_handling.o [1]
maxNesting              0x20010f60     0x4  Data  Gb  hardware.o [1]
maxTriggerReentraint    0x200179c0     0x4  Data  Gb  trigger_central.o [1]
mem_cmp                 0x08022c6f    0x24  Code  Lc  ff.o [1]
mem_cpy                 0x08022c3d    0x1c  Code  Lc  ff.o [1]
mem_set                 0x08022c59    0x16  Code  Lc  ff.o [1]
memchr                  0x08029cd5          Code  Gb  memchr.o [6]
memcmp                  0x080138dd          Code  Gb  memcmp.o [6]
memcpy                  0x0801393f    0x16  Code  Gb  usb_lld.o [1]
memset                  0x0800b871    0x16  Code  Gb  usb.o [1]
mfiThread()             0x08015bd5    0x3a  Code  Lc  malfunction_indicator.o [1]
mfiThreadStack          0x20007820   0x2c8  Data  Lc  malfunction_indicator.o [1]
miAbout                 0x200114a0    0x24  Data  Lc  lcd_controller.o [1]
miAfr                   0x200115c0    0x24  Data  Lc  lcd_controller.o [1]
miAlgo                  0x20011824    0x24  Data  Lc  lcd_controller.o [1]
miBaro                  0x200115e4    0x24  Data  Lc  lcd_controller.o [1]
miBench                 0x2001147c    0x24  Data  Lc  lcd_controller.o [1]
miClt                   0x2001150c    0x24  Data  Lc  lcd_controller.o [1]
miConfig                0x20011800    0x24  Data  Lc  lcd_controller.o [1]
miIat                   0x20011530    0x24  Data  Lc  lcd_controller.o [1]
miIgnition              0x2001186c    0x24  Data  Lc  lcd_controller.o [1]
miInjFlow               0x20011890    0x24  Data  Lc  lcd_controller.o [1]
miInjection             0x20011848    0x24  Data  Lc  lcd_controller.o [1]
miMap                   0x2001159c    0x24  Data  Lc  lcd_controller.o [1]
miMapKgHr               0x2001162c    0x24  Data  Lc  lcd_controller.o [1]
miMapV                  0x20011608    0x24  Data  Lc  lcd_controller.o [1]
miRpm                   0x20011434    0x24  Data  Lc  lcd_controller.o [1]
miSensors               0x20011458    0x24  Data  Lc  lcd_controller.o [1]
miStopEngine            0x20011650    0x24  Data  Lc  lcd_controller.o [1]
miTestFan               0x20011674    0x24  Data  Lc  lcd_controller.o [1]
miTestFuelPump          0x20011698    0x24  Data  Lc  lcd_controller.o [1]
miTestInj1              0x2001174c    0x24  Data  Lc  lcd_controller.o [1]
miTestInj2              0x20011770    0x24  Data  Lc  lcd_controller.o [1]
miTestInj3              0x20011794    0x24  Data  Lc  lcd_controller.o [1]
miTestInj4              0x200117b8    0x24  Data  Lc  lcd_controller.o [1]
miTestSpark1            0x200116bc    0x24  Data  Lc  lcd_controller.o [1]
miTestSpark2            0x200116e0    0x24  Data  Lc  lcd_controller.o [1]
miTestSpark3            0x20011704    0x24  Data  Lc  lcd_controller.o [1]
miTestSpark4            0x20011728    0x24  Data  Lc  lcd_controller.o [1]
miTps                   0x20011554    0x24  Data  Lc  lcd_controller.o [1]
miTriggerDuty           0x200114e8    0x24  Data  Lc  lcd_controller.o [1]
miTriggerErrors         0x200114c4    0x24  Data  Lc  lcd_controller.o [1]
miVBatt                 0x20011578    0x24  Data  Lc  lcd_controller.o [1]
miVersion               0x200117dc    0x24  Data  Lc  lcd_controller.o [1]
miata_maf_advance_table
                        0x0802cb14   0x400  Data  Lc  mazda_miata.o [1]
miata_maf_fuel_table    0x0802c714   0x400  Data  Lc  mazda_miata.o [1]
milBench()              0x08015761    0x26  Code  Gb  injector_central.o [1]
minF                    0x08002b11    0x10  Code  Gb  efilib.o [1]
minI                    0x08002ac3     0x8  Code  Gb  efilib.o [1]
mmcConnect              0x080252b5   0x162  Code  Gb  mmc_spi.o [1]
mmcDisconnect           0x08025417    0x7a  Code  Gb  mmc_spi.o [1]
mmcGetInfo              0x08025741    0x32  Code  Gb  mmc_spi.o [1]
mmcInit                 0x08025229     0x2  Code  Gb  mmc_spi.o [1]
mmcObjectInit           0x0802522b    0x16  Code  Gb  mmc_spi.o [1]
mmcSequentialRead       0x08025511    0x7a  Code  Gb  mmc_spi.o [1]
mmcSequentialWrite      0x08025649    0x82  Code  Gb  mmc_spi.o [1]
mmcStart                0x08025241    0x3a  Code  Gb  mmc_spi.o [1]
mmcStartSequentialRead  0x08025491    0x80  Code  Gb  mmc_spi.o [1]
mmcStartSequentialWrite
                        0x080255cd    0x7c  Code  Gb  mmc_spi.o [1]
mmcStop                 0x0802527b    0x3a  Code  Gb  mmc_spi.o [1]
mmcStopSequentialRead   0x0802558b    0x42  Code  Gb  mmc_spi.o [1]
mmcStopSequentialWrite  0x080256cb    0x3a  Code  Gb  mmc_spi.o [1]
mmcSync                 0x08025705    0x3c  Code  Gb  mmc_spi.o [1]
mmcThreadStack          0x20007e20   0x2c8  Data  Lc  mmc_card.o [1]
mmc_lld_is_card_inserted
                        0x0802961d     0x6  Code  Gb  board.o [1]
mmc_lld_is_write_protected
                        0x08029623     0x6  Code  Gb  board.o [1]
mmc_read                0x08024f3d    0x48  Code  Lc  mmc_spi.o [1]
mmc_vmt                 0x080303c0    0x20  Data  Lc  mmc_spi.o [1]
mmc_write               0x08024f85    0x48  Code  Lc  mmc_spi.o [1]
mmccfg                  0x20001724     0xc  Data  Lc  mmc_card.o [1]
mmcsdGetCapacity        0x08028489    0x5c  Code  Gb  mmcsd.o [1]
mmcsd_get_slice         0x0802840d    0x74  Code  Lc  mmcsd.o [1]
mos                     0x08027144    0x18  Data  Lc  xttotm.o [3]
move_window             0x08022ca7    0x78  Code  Lc  ff.o [1]
mpx4250                 0x200139c4     0x8  Data  Lc  map.o [1]
msObjectInit            0x0800afc1    0x14  Code  Gb  memstreams.o [1]
msg                     0x20013a90     0x4  Data  Lc  microsecond_timer.o [1]
multi_wave_s::baseConstructor()
                        0x08017d23    0x14  Code  Gb  EfiWave.o [1]
multi_wave_s::checkSwitchTimes(int)
                        0x08008533    0x10  Code  Gb  trigger_structure.o [1]
multi_wave_s::findAngleMatch(float, int) const
                        0x0800809f    0x3c  Code  Gb  trigger_structure.o [1]
multi_wave_s::getChannelState(int, int) const
                        0x0800806d     0xa  Code  Gb  trigger_structure.o [1]
multi_wave_s::getSwitchTime(int) const
                        0x08017d6d     0xc  Code  Gb  EfiWave.o [1]
multi_wave_s::init(float *, single_wave_s *)
                        0x08017d61     0x6  Code  Gb  EfiWave.o [1]
multi_wave_s::multi_wave_s()
                        0x08017d37     0xe  Code  Gb  EfiWave.o [1]
multi_wave_s::multi_wave_s(float *, single_wave_s *)
                        0x08017d45    0x1c  Code  Gb  EfiWave.o [1]
multi_wave_s::reset()   0x08017d67     0x6  Code  Gb  EfiWave.o [1]
multi_wave_s::setSwitchTime(int, float)
                        0x080080db     0xc  Code  Gb  trigger_structure.o [1]
multi_wave_s::waveIndertionAngle(float, int) const
                        0x08008077    0x28  Code  Gb  trigger_structure.o [1]
mwThread(int)           0x080258d9    0x1a  Code  Lc  microsecond_timer.o [1]
mwThreadStack           0x20007b58   0x2c8  Data  Lc  microsecond_timer.o [1]
mySetPadMode(char const *, GPIO_TypeDef *, unsigned int, unsigned int)
                        0x080034f9    0xa4  Code  Gb  pin_repository.o [1]
mySetPadMode2(char const *, brain_pin_e, unsigned int)
                        0x0800347d    0x24  Code  Gb  pin_repository.o [1]
myerror()               0x0800b227    0x10  Code  Lc  eficonsole.o [1]
myfatal()               0x0800b219     0xe  Code  Lc  eficonsole.o [1]
ndigs                   0x08029360    0x28  Data  Lc  xstoul.o [3]
needToInit              0x20001018     0x1  Data  Lc  HIP9011.o [1]
needToReportStatus      0x200177b4     0x4  Data  Gb  status_loop.o [1]
needToRunBench          0x2001c659     0x1  Data  Lc  injector_central.o [1]
needToWriteConfiguration
                        0x2001c657     0x1  Data  Lc  flash_main.o [1]
nextEventTimeNt         0x20001bf0     0x8  Data  Lc  SingleTimerExecutor.o [1]
nextStep()              0x08018b55     0xc  Code  Lc  board_test.o [1]
next_abi_dtor_rec       0x2001c630     0x4  Data  Lc  cppinit.o [3]
nextmem                 0x2000b4c4     0x4  Data  Lc  chmemcore.o [1]
nmea_get_message_type   0x08026865    0x3a  Code  Gb  nmea.o [1]
nmea_parse_gpgga        0x080265a3   0x124  Code  Gb  nmea.o [1]
nmea_parse_gprmc        0x080266c7   0x19e  Code  Gb  nmea.o [1]
nmea_valid_checksum     0x080268b5    0x4a  Code  Gb  nmea.o [1]
nonZeroResponse         0x2000a8f8     0x4  Data  Lc  HIP9011.o [1]
notRunningPrev          0x200083b8     0x8  Data  Gb  rpm_calculator.o [1]
notRunnintNow           0x200083b0     0x8  Data  Gb  rpm_calculator.o [1]
notify1                 0x08021ecd     0xe  Code  Lc  serial_lld.o [1]
notify2                 0x08021edb     0xe  Code  Lc  serial_lld.o [1]
notify3                 0x08021ee9     0xe  Code  Lc  serial_lld.o [1]
nvicDisableVector       0x080221ad    0x32  Code  Gb  nvic.o [1]
nvicEnableVector        0x08022165    0x48  Code  Gb  nvic.o [1]
nvicSetSystemHandlerPriority
                        0x080221df    0x28  Code  Gb  nvic.o [1]
obdOnCanPacketRx(CANRxFrame *)
                        0x0802630d    0x46  Code  Gb  obd2.o [1]
offTime                 0x200111ec     0x4  Data  Lc  injector_central.o [1]
onFindIndex(TriggerState *)
                        0x08010c5b    0x18  Code  Lc  trigger_decoder.o [1]
onGpsMessage(char *)    0x0802018f    0x40  Code  Lc  neo6m.o [1]
onJoystick(joystick_button_e)
                        0x080173eb    0x34  Code  Gb  lcd_controller.o [1]
onTdcCallback()         0x08012ff7    0x1e  Code  Lc  rpm_calculator.o [1]
onTime                  0x200111e8     0x4  Data  Lc  injector_central.o [1]
onotify                 0x08020ddb    0x7c  Code  Lc  serial_usb.o [1]
order_1_2               0x20001694     0x8  Data  Lc  engine_math.o [1]
order_1_2_4_5_3         0x20001630    0x14  Data  Lc  engine_math.o [1]
order_1_8_4_3_6_5_7_2   0x20001674    0x20  Data  Lc  engine_math.o [1]
order_1_THEN_2_THEN_4_THEN3
                        0x20001610    0x10  Data  Lc  engine_math.o [1]
order_1_THEN_3_THEN_2_THEN4
                        0x20001620    0x10  Data  Lc  engine_math.o [1]
order_1_THEN_3_THEN_4_THEN2
                        0x20001600    0x10  Data  Lc  engine_math.o [1]
order_1_THEN_4_THEN_2_THEN_5_THEN_3_THEN_6
                        0x2000165c    0x18  Data  Lc  engine_math.o [1]
order_1_THEN_5_THEN_3_THEN_6_THEN_2_THEN_4
                        0x20001644    0x18  Data  Lc  engine_math.o [1]
otg_core_reset          0x08027283    0x24  Code  Lc  usb_lld.o [1]
otg_disable_ep          0x080272a7    0xac  Code  Lc  usb_lld.o [1]
otg_do_pop              0x080274ad    0x14  Code  Lc  usb_lld.o [1]
otg_do_push             0x080273b7    0x14  Code  Lc  usb_lld.o [1]
otg_epin_handler        0x08027781    0xe0  Code  Lc  usb_lld.o [1]
otg_epout_handler       0x08027861    0xbe  Code  Lc  usb_lld.o [1]
otg_fifo_read_to_buffer
                        0x080274c1    0x22  Code  Lc  usb_lld.o [1]
otg_fifo_read_to_queue  0x080274e3    0xc8  Code  Lc  usb_lld.o [1]
otg_fifo_write_from_buffer
                        0x080273cb    0x16  Code  Lc  usb_lld.o [1]
otg_fifo_write_from_queue
                        0x080273e1    0xcc  Code  Lc  usb_lld.o [1]
otg_ram_alloc           0x08027391    0x26  Code  Lc  usb_lld.o [1]
otg_ram_reset           0x08027389     0x8  Code  Lc  usb_lld.o [1]
otg_rxfifo_flush        0x08027353    0x18  Code  Lc  usb_lld.o [1]
otg_rxfifo_handler      0x080275ab    0xd4  Code  Lc  usb_lld.o [1]
otg_txfifo_flush        0x0802736b    0x1e  Code  Lc  usb_lld.o [1]
otg_txfifo_handler      0x0802767f   0x102  Code  Lc  usb_lld.o [1]
output1                 0x2000f088    0x10  Data  Lc  electronic_throttle.o [1]
output2                 0x2000f098    0x10  Data  Lc  electronic_throttle.o [1]
outputBuffer            0x20013848     0x4  Data  Lc  loggingcentral.o [1]
outputPinRegister(char const *, OutputPin *, GPIO_TypeDef *, unsigned int)
                        0x08009575    0x1c  Code  Gb  io_pins.o [1]
outputPinRegisterExt(char const *, OutputPin *, GPIO_TypeDef *, unsigned int, pin_output_mode_e *)
                        0x08009487    0x5e  Code  Lc  io_pins.o [1]
outputPinRegisterExt2(char const *, OutputPin *, brain_pin_e, pin_output_mode_e *)
                        0x08009543    0x32  Code  Gb  io_pins.o [1]
pageIn                  0x2001c64a     0x2  Data  Lc  tunerstudio.o [1]
pal_default_config      0x0802d894    0xfc  Data  Gb  board.o [1]
parseAction(char const *)
                        0x0801c333    0x24  Code  Gb  fsio_core.o [1]
parseBrainPin(char const *)
                        0x08003375    0x66  Code  Gb  pin_repository.o [1]
parsingBuffer           0x2000f578    0x40  Data  Lc  fsio_core.o [1]
pendingBuffers0         0x1000a724  0x1f40  Data  Lc  loggingcentral.o [1]
pendingBuffers1         0x20011904  0x1f40  Data  Lc  loggingcentral.o [1]
pendingData             0x200169b4     0x4  Data  Lc  sensor_chart.o [1]
perRevolution           0x200139f4     0x4  Data  Lc  map_averaging.o [1]
perRevolutionCounter    0x200139f0     0x4  Data  Lc  map_averaging.o [1]
periodicFastCallback()  0x08006753    0xac  Code  Lc  engine_controller.o [1]
periodicFastTimer       0x2000f1f4    0x14  Data  Lc  engine_controller.o [1]
periodicSlowCallback(Engine *)
                        0x08006801    0x7e  Code  Lc  engine_controller.o [1]
periodicSlowTimer       0x2000f1e0    0x14  Data  Lc  engine_controller.o [1]
persistentState         0x10006b60  0x3bc4  Data  Gb  engine_controller.o [1]
pick_lfn                0x08023455    0x78  Code  Lc  ff.o [1]
pid                     0x2000f0a8    0x1c  Data  Lc  electronic_throttle.o [1]
pinNameBuffer           0x2000a8fc    0x10  Data  Lc  HIP9011.o [1]
pinNameBuffer           0x2000f310    0x10  Data  Lc  engine_controller.o [1]
pinNameBuffer           0x20016f48    0x10  Data  Lc  settings.o [1]
pinStates1              0x20017b2c    0xfc  Data  Lc  trigger_emulator_algo.o [1]
pinStates2              0x20017c28    0xfc  Data  Lc  trigger_emulator_algo.o [1]
pinStates3              0x20017d24    0xfc  Data  Lc  trigger_emulator_algo.o [1]
pinX                    0x200111fc     0x4  Data  Lc  injector_central.o [1]
pinbench(char const *, char const *, char const *, char const *, OutputPin *, brain_pin_e)
                        0x08015669    0x66  Code  Lc  injector_central.o [1]
pinsCount               0x20001130     0x4  Data  Gb  board_test.o [1]
pokeAdcInputs()         0x08005d9f    0x10  Code  Gb  adc_inputs.o [1]
portNameBuffer          0x200148f0    0x14  Data  Lc  pin_repository.o [1]
portNameStream          0x200148dc    0x14  Data  Lc  pin_repository.o [1]
port_halt               0x08019525     0x4  Code  Wk  chcore.o [1]
portname(GPIO_TypeDef *)
                        0x08003259    0x5c  Code  Gb  pin_repository.o [1]
ports                   0x20001740    0x1c  Data  Lc  pin_repository.o [1]
potConfig               0x20014908    0x40  Data  Lc  poten.o [1]
prepareFuelMap()        0x0801c831    0x4c  Code  Gb  fuel_math.o [1]
prepareHip9011RpmLookup(float)
                        0x080226ed    0x36  Code  Gb  hip9011_lookup.o [1]
prepareOutputSignals()  0x08007b3d    0xbe  Code  Gb  engine_math.o [1]
prepareShapes()         0x08004da5    0x20  Code  Gb  engine_configuration.o [1]
prepareThermistorCurve(thermistor_conf_s *, thermistor_curve_s *)
                        0x08006115   0x236  Code  Lc  thermistors.o [1]
prepareTimingMap()      0x0800c89f    0x4c  Code  Gb  advance_map.o [1]
prepareTunerStudioOutputs()
                        0x08012abf     0xa  Code  Gb  status_loop.o [1]
prepareVoidConfiguration(engine_configuration_s *)
                        0x08003815    0xf4  Code  Gb  engine_configuration.o [1]
prevCkpEventCounter     0x200017cc     0x4  Data  Lc  status_loop.o [1]
prevWidthTimeNt         0x20007ae8     0x8  Data  Lc  map.o [1]
previousEngineCycleTimeUs
                        0x2000a430     0x8  Data  Lc  wave_analyzer.o [1]
previousShaftEventTimeNt
                        0x200017f0     0x8  Data  Lc  trigger_central.o [1]
previousWriteReportMs   0x20018340     0x4  Data  Lc  tunerstudio.o [1]
primaryCrankDriver      0x20018234     0x4  Data  Lc  trigger_input.o [1]
print                   0x0800b387    0x24  Code  Gb  eficonsole.o [1]
printAdcValue(adc_channel_e)
                        0x08005a69    0x4c  Code  Lc  adc_inputs.o [1]
printAllCallbacksHistogram()
                        0x0801d39d    0x12  Code  Gb  trigger_central.o [1]
printAllInfo()          0x08001ea9    0x7e  Code  Lc  settings.o [1]
printAnalogChannelInfo(char const *, adc_channel_e)
                        0x08006969    0x34  Code  Lc  engine_controller.o [1]
printAnalogChannelInfoExt(char const *, adc_channel_e, float, float)
                        0x080068b5    0xb2  Code  Lc  engine_controller.o [1]
printAnalogInfo()       0x080069a1   0x182  Code  Lc  engine_controller.o [1]
printBoardTestState     0x08018bcf    0x44  Code  Gb  board_test.o [1]
printConfiguration(engine_configuration_s *)
                        0x080004d5   0x368  Code  Gb  settings.o [1]
printDateTime()         0x080096f1    0x6e  Code  Gb  rtc_helper.o [1]
printError(char const *, FRESULT)
                        0x0801ca65    0x1a  Code  Lc  mmc_card.o [1]
printErrorCounters()    0x0800f2f7    0x6e  Code  Lc  tunerstudio.o [1]
printFullAdcReport()    0x08005ac1    0xac  Code  Lc  adc_inputs.o [1]
printGpsInfo()          0x080200d5    0xba  Code  Lc  neo6m.o [1]
printHistogram(Logging *, histogram_s *)
                        0x08002e95     0x2  Code  Gb  efilib.o [1]
printInfo(unsigned int)
                        0x080121d5    0xd8  Code  Lc  status_loop.o [1]
printLine               0x080028e5    0x12  Code  Gb  datalogging.o [1]
printMAPInfo()          0x080146ed   0x128  Code  Lc  map.o [1]
printMmcPinout()        0x0801ca7f    0x20  Code  Lc  mmc_card.o [1]
printMsg                0x08002931    0x44  Code  Gb  datalogging.o [1]
printOutPin(char const *, brain_pin_e)
                        0x08012195    0x26  Code  Lc  status_loop.o [1]
printOutputs(engine_configuration_s *)
                        0x080001e9   0x1b4  Code  Lc  settings.o [1]
printPacket(CANRxFrame *)
                        0x0801fa59    0xa6  Code  Lc  can_hw.o [1]
printPending            0x0800aea5    0x22  Code  Gb  loggingcentral.o [1]
printSensors(Logging *, bool)
                        0x08011da5   0x24a  Code  Lc  status_loop.o [1]
printSpiState(Logging *, board_configuration_s *)
                        0x080001a1    0x48  Code  Gb  settings.o [1]
printState()            0x08012071   0x114  Code  Lc  status_loop.o [1]
printStatus()           0x08005b6d    0x10  Code  Lc  adc_inputs.o [1]
printStatus()           0x080154b9    0x2c  Code  Lc  injector_central.o [1]
printStatus()           0x08012185     0xa  Code  Lc  status_loop.o [1]
printStatus()           0x08004fc7    0x32  Code  Lc  wave_chart.o [1]
printTPSInfo()          0x08000b17    0xca  Code  Lc  settings.o [1]
printTemperatureInfo()  0x08000be9    0xc4  Code  Lc  settings.o [1]
printThermistor(char const *, ThermistorConf *, ThermistorMath *)
                        0x080009e1   0x136  Code  Lc  settings.o [1]
printTsStats()          0x0800f365    0x46  Code  Gb  tunerstudio.o [1]
printWave(Logging *)    0x08015369    0x16  Code  Gb  wave_analyzer.o [1]
printWithLength         0x08002883    0x62  Code  Gb  datalogging.o [1]
prio_insert             0x0801e2f5    0x22  Code  Lc  chmtx.o [1]
processAdcPin(AdcDevice *, int)
                        0x08018a99    0x9c  Code  Lc  board_test.o [1]
put                     0x0800af6d    0x28  Code  Lc  memstreams.o [1]
put                     0x08019875    0x18  Code  Lc  serial.o [1]
put                     0x08020cb9    0x18  Code  Lc  serial_usb.o [1]
put_fat                 0x08022f0f   0x164  Code  Gb  ff.o [1]
putt                    0x0801989f    0x18  Code  Lc  serial.o [1]
putt                    0x08020ce3    0x18  Code  Lc  serial_usb.o [1]
pwmInit                 0x0801382d     0x8  Code  Gb  pwm.o [1]
pwmObjectInit           0x08013835     0xa  Code  Gb  pwm.o [1]
pwmStart                0x0801383f    0x50  Code  Gb  pwm.o [1]
pwm_lld_init            0x0801e59b    0x1c  Code  Gb  pwm_lld.o [1]
pwm_lld_serve_interrupt
                        0x0801e4ad    0x58  Code  Lc  pwm_lld.o [1]
pwm_lld_start           0x0801e5b7   0x18c  Code  Gb  pwm_lld.o [1]
pwmcfg_fast             0x200010a0    0x34  Data  Lc  adc_inputs.o [1]
pwmcfg_slow             0x2000106c    0x34  Data  Lc  adc_inputs.o [1]
pwmpcb_fast(PWMDriver *)
                        0x08005657    0x8a  Code  Lc  adc_inputs.o [1]
pwmpcb_slow(PWMDriver *)
                        0x080055cd    0x8a  Code  Lc  adc_inputs.o [1]
queue_insert            0x08021991     0xe  Code  Lc  chqueues.o [1]
queue_insert            0x08028d15     0xe  Code  Lc  chsem.o [1]
qwait                   0x080219ab    0x2a  Code  Lc  chqueues.o [1]
radiatorFanLogic        0x20010b00     0x4  Data  Lc  fsio_impl.o [1]
rand                    0x20001134     0x4  Data  Lc  can_hw.o [1]
read                    0x0801985b    0x1a  Code  Lc  serial.o [1]
read                    0x08020c9f    0x1a  Code  Lc  serial_usb.o [1]
readEgtPacket(int)      0x0801da0f    0x6c  Code  Lc  max31855.o [1]
readFromFlash()         0x080053c7    0xb2  Code  Gb  flash_main.o [1]
readIndex               0x200139f8     0x4  Data  Lc  map_averaging.o [1]
readRequest             0x20018478     0x8  Data  Lc  tunerstudio.o [1]
read_CxD                0x08025137    0xbc  Code  Lc  mmc_spi.o [1]
readers                 0x2000a438   0x1b8  Data  Lc  wave_analyzer.o [1]
reads                   0x0800af39    0x34  Code  Lc  memstreams.o [1]
readt                   0x080198e3    0x1a  Code  Lc  serial.o [1]
readt                   0x08020d27    0x1a  Code  Lc  serial_usb.o [1]
rebootNow()             0x08008c47     0x8  Code  Lc  rusefi.o [1]
recvr1                  0x0802507d    0x2e  Code  Lc  mmc_spi.o [1]
recvr3                  0x080250ab    0x20  Code  Lc  mmc_spi.o [1]
registeredIcus          0x2000e3d4   0x804  Data  Lc  digital_input_hw.o [1]
remainingSize           0x080029c3     0xc  Code  Gb  datalogging.o [1]
rememberCurrentConfiguration()
                        0x08008c73    0x12  Code  Lc  rusefi.o [1]
rememberPrimaryChannel()
                        0x0801f967    0x14  Code  Lc  trigger_input.o [1]
removeError             0x0801425f    0x42  Code  Gb  malfunction_central.o [1]
removeFile(char const *)
                        0x0801cca9    0x2a  Code  Lc  mmc_card.o [1]
remove_chain            0x08023073    0x72  Code  Lc  ff.o [1]
reportEventToWaveChart(trigger_event_e, int)
                        0x0801d1c5    0x80  Code  Lc  trigger_central.o [1]
reportPins()            0x0800331b    0x5a  Code  Lc  pin_repository.o [1]
reportSensorF(Logging *, bool, char const *, char const *, float, int)
                        0x08011cb1    0x82  Code  Lc  status_loop.o [1]
reportSensorI(Logging *, bool, char const *, char const *, int)
                        0x08011d33    0x6c  Code  Lc  status_loop.o [1]
reportWave(Logging *, int)
                        0x080151cd   0x19c  Code  Lc  wave_analyzer.o [1]
requestBurn()           0x0800f7a9     0xc  Code  Gb  tunerstudio.o [1]
resetAccel()            0x08006dc1    0x1a  Code  Lc  engine_controller.o [1]
resetConfigurationExt(Logging *, engine_type_e)
                        0x08004b41   0x1a8  Code  Gb  engine_configuration.o [1]
resetLogging            0x08002913    0x1e  Code  Gb  datalogging.o [1]
resetRunningTriggerCounters()
                        0x0801d801     0xe  Code  Lc  trigger_central.o [1]
resetTimer              0x20014c6c    0x14  Data  Lc  rusefi.o [1]
resetTs()               0x0800f2e7    0x10  Code  Lc  tunerstudio.o [1]
resumeStimulator(Engine *)
                        0x08026c8d     0xe  Code  Lc  trigger_emulator_algo.o [1]
rewriteConfig()         0x08005479     0xc  Code  Lc  flash_main.o [1]
rlist                   0x2000b4cc    0x1c  Data  Gb  chschd.o [1]
rpmBuffer               0x20014974     0xc  Data  Lc  rpm_calculator.o [1]
rpmLookup               0x20010f74    0x80  Data  Gb  hip9011_lookup.o [1]
rpmShaftPositionCallback(trigger_event_e, unsigned int)
                        0x08012ec9   0x12e  Code  Gb  rpm_calculator.o [1]
rtcGetTime              0x08020883    0x36  Code  Gb  rtc.o [1]
rtcGetTimeFat           0x080208b9    0x1a  Code  Gb  rtc.o [1]
rtcGetTimeTm            0x08018533    0x24  Code  Gb  chrtclib.o [1]
rtcGetTimeUnixSec       0x0801857b    0x2a  Code  Gb  chrtclib.o [1]
rtcInit                 0x08020845     0x8  Code  Gb  rtc.o [1]
rtcSetTime              0x0802084d    0x36  Code  Gb  rtc.o [1]
rtcSetTimeTm            0x08018557    0x24  Code  Gb  chrtclib.o [1]
rtcSetTimeUnixSec       0x080185a5    0x36  Code  Gb  chrtclib.o [1]
rtc_lld_get_time        0x08026ebd    0x4c  Code  Gb  rtc_lld.o [1]
rtc_lld_get_time_fat    0x08026f19    0xba  Code  Gb  rtc_lld.o [1]
rtc_lld_init            0x08026dd1    0x78  Code  Gb  rtc_lld.o [1]
rtc_lld_set_time        0x08026e49    0x74  Code  Gb  rtc_lld.o [1]
runBench(brain_pin_e, OutputPin *, float, float, float, int)
                        0x08015515   0x154  Code  Lc  injector_central.o [1]
runBinaryProtocolLoop(ts_channel_s *, bool)
                        0x0800f88f   0x21e  Code  Gb  tunerstudio.o [1]
runFsio()               0x08011779    0xa2  Code  Gb  fsio_impl.o [1]
runRusEfi               0x08008c91    0xb4  Code  Gb  rusefi.o [1]
runningPin              0x200178ec    0x10  Data  Gb  status_loop.o [1]
rxBuffer                0x2000b014    0x14  Data  Lc  can_hw.o [1]
rx_buff                 0x2001c64f     0x1  Data  Lc  HIP9011.o [1]
sayHello()              0x0800b239   0x102  Code  Lc  eficonsole.o [1]
sayNothing()            0x0800b237     0x2  Code  Lc  eficonsole.o [1]
scAddData(float, float)
                        0x08014e47    0xb2  Code  Gb  sensor_chart.o [1]
scheduleByAngle(int, scheduling_s *, float, void (*)(void *), void *, RpmCalculator *)
                        0x08013115    0x68  Code  Gb  rpm_calculator.o [1]
scheduleByTime(char const *, scheduling_s *, long long, void (*)(void *), void *)
                        0x0801de01    0x2e  Code  Gb  SingleTimerExecutor.o [1]
scheduleLogging         0x0800adf5    0x60  Code  Gb  loggingcentral.o [1]
scheduleMsg             0x08002975    0x4e  Code  Gb  datalogging.o [1]
scheduleNextSlowInvocation()
                        0x08006729    0x2a  Code  Lc  engine_controller.o [1]
scheduleOutput(OutputSignal_struct *, long long, float, float)
                        0x0801f13f    0xda  Code  Gb  signal_executor.o [1]
scheduleReboot()        0x08008c4f    0x22  Code  Lc  rusefi.o [1]
scheduleTask(char const *, scheduling_s *, int, void (*)(void *), void *)
                        0x0801ddd7    0x2a  Code  Gb  SingleTimerExecutor.o [1]
scheduling_s::scheduling_s()
                        0x08020a71    0x1a  Code  Gb  event_queue.o [1]
sdCsPin                 0x20011308    0x10  Data  Lc  io_pins.o [1]
sdIncomingDataI         0x08019989    0x40  Code  Gb  serial.o [1]
sdInit                  0x080198fd     0x8  Code  Gb  serial.o [1]
sdMath(engine_configuration_s *, float, float, float, float)
                        0x0800c445    0xae  Code  Gb  speed_density.o [1]
sdObjectInit            0x08019905    0x3c  Code  Gb  serial.o [1]
sdStart                 0x08019941    0x48  Code  Gb  serial.o [1]
sdStatistics()          0x0801ca9f    0x50  Code  Lc  mmc_card.o [1]
sd_lld_init             0x08021f39    0x34  Code  Gb  serial_lld.o [1]
sd_lld_start            0x08021f6d    0x6c  Code  Gb  serial_lld.o [1]
sduConfigureHookI       0x08020ef3    0x4e  Code  Gb  serial_usb.o [1]
sduDataReceived         0x0802107f    0x92  Code  Gb  serial_usb.o [1]
sduDataTransmitted      0x08020fb5    0xca  Code  Gb  serial_usb.o [1]
sduInit                 0x08020e57     0x2  Code  Gb  serial_usb.o [1]
sduInterruptTransmitted
                        0x08021111     0x2  Code  Gb  serial_usb.o [1]
sduObjectInit           0x08020e59    0x3c  Code  Gb  serial_usb.o [1]
sduRequestsHook         0x08020f41    0x56  Code  Gb  serial_usb.o [1]
sduStart                0x08020e95    0x5e  Code  Gb  serial_usb.o [1]
secondByte              0x2001c661     0x1  Data  Lc  tunerstudio.o [1]
sendErrorCode(ts_channel_s *)
                        0x0800f6d5    0x12  Code  Lc  tunerstudio.o [1]
sendI2Cbyte(int, int)   0x08017f75     0x2  Code  Lc  hardware.o [1]
sendMessage()           0x0801fbc7     0xa  Code  Gb  can_hw.o [1]
sendMessage2(int)       0x0801fb7b    0x4c  Code  Gb  can_hw.o [1]
sendOutConfirmation(char const *, int)
                        0x0800a1dd    0x16  Code  Lc  cli_registry.o [1]
sendResponseCode(ts_response_format_e, ts_channel_s *, unsigned char)
                        0x0800f7b5    0x1e  Code  Lc  tunerstudio.o [1]
sendToPot(Mcp42010Driver *, int, int)
                        0x08020659    0x48  Code  Lc  poten.o [1]
send_command_R1         0x080250cb    0x32  Code  Lc  mmc_spi.o [1]
send_command_R3         0x080250fd    0x3a  Code  Lc  mmc_spi.o [1]
send_hdr                0x0802502d    0x50  Code  Lc  mmc_spi.o [1]
serialConfig            0x20001188     0xc  Data  Lc  console_io.o [1]
serusbcfg               0x08035494     0x8  Data  Gb  usbcfg.o [1]
serve_interrupt         0x08021dc5   0x108  Code  Lc  serial_lld.o [1]
setACPin(char const *)  0x080012b9    0x18  Code  Lc  settings.o [1]
setAcuraRSX(engine_configuration_s *)
                        0x0800ccd5    0x10  Code  Gb  acura_rsx.o [1]
setAdcDebugReporting(int)
                        0x08005b7d     0xe  Code  Lc  adc_inputs.o [1]
setAlgorithm(engine_load_mode_e)
                        0x08007cb5    0x30  Code  Gb  engine_math.o [1]
setAlgorithmInt(int)    0x08000cd1    0x16  Code  Lc  settings.o [1]
setAltPFactor(float)    0x080099e1    0x3a  Code  Gb  alternatorController.o [1]
setAlternatorPin(char const *)
                        0x08001295    0x1a  Code  Lc  settings.o [1]
setAnalogInputPin(char const *, char const *)
                        0x08001505    0xe6  Code  Lc  settings.o [1]
setBand(float)          0x0801a563    0x1e  Code  Lc  HIP9011.o [1]
setBit(char const *, char const *, char const *)
                        0x08006b53    0xe0  Code  Lc  engine_controller.o [1]
setBlinkingPeriod(int)  0x0801260b     0xc  Code  Lc  status_loop.o [1]
setBmwE34()             0x0800e9c9   0x368  Code  Gb  bmw_e34.o [1]
setBosch0280218037(persistent_config_s *)
                        0x0800bcdd    0xac  Code  Gb  maf.o [1]
setChartActive(int)     0x08004ff9    0x2e  Code  Lc  wave_chart.o [1]
setChartSize(int)       0x08005027    0x16  Code  Gb  wave_chart.o [1]
setCitroenBerlingoTU3JPConfiguration()
                        0x0800e6cd   0x256  Code  Gb  citroenBerlingoTU3JP.o [1]
setCltBias(float)       0x08000f21     0xc  Code  Lc  settings.o [1]
setCommonNTCSensor(ThermistorConf *)
                        0x080063f9    0x24  Code  Gb  thermistors.o [1]
setConstantDwell(float)
                        0x0800368f    0x34  Code  Gb  engine_configuration.o [1]
setCrankingChargeAngle(float)
                        0x08000e85    0x28  Code  Lc  settings.o [1]
setCrankingFuel(float)  0x08000d2d    0x1e  Code  Lc  settings.o [1]
setCrankingInjectionMode(int)
                        0x08000dad    0x1e  Code  Lc  settings.o [1]
setCrankingRpm(int)     0x08000cad    0x1a  Code  Lc  settings.o [1]
setCrankingTimingAngle(float)
                        0x08000d7d    0x28  Code  Lc  settings.o [1]
setCurrentPinValue(bool)
                        0x08018b6f    0x30  Code  Lc  board_test.o [1]
setCustomEngineConfiguration()
                        0x0800cb99   0x13c  Code  Gb  custom_engine.o [1]
setDateTime(char const *)
                        0x0800975f    0x40  Code  Gb  rtc_helper.o [1]
setDecelMult(float)     0x08014b21    0x20  Code  Lc  accel_enrichment.o [1]
setDecelThr(float)      0x08014b01    0x20  Code  Lc  accel_enrichment.o [1]
setDefault139qmbMaps()  0x0800da5d    0x44  Code  Lc  GY6_139QMB.o [1]
setDefaultAlternatorParameters()
                        0x08009a71    0x48  Code  Gb  alternatorController.o [1]
setDefaultAspireMaps()  0x0800d24d    0x54  Code  Lc  ford_aspire.o [1]
setDefaultConfiguration()
                        0x08003909  0x120e  Code  Gb  engine_configuration.o [1]
setDefaultCrankingFuel(engine_configuration_s *)
                        0x0800dee5     0x8  Code  Lc  mazda_miata.o [1]
setDefaultEtbParameters()
                        0x0800baa9    0x2a  Code  Gb  electronic_throttle.o [1]
setDefaultIatTimingCorrection()
                        0x0800c85d    0x42  Code  Gb  advance_map.o [1]
setDefaultVETable()     0x0800c545    0x70  Code  Gb  speed_density.o [1]
setDensoTODO(persistent_config_s *)
                        0x0800bd89    0xa2  Code  Gb  maf.o [1]
setDodgeNeon1995EngineConfiguration()
                        0x0800cce5   0x18e  Code  Gb  dodge_neon.o [1]
setDodgeNeonNGCEngineConfiguration()
                        0x0800ce89   0x350  Code  Gb  dodge_neon.o [1]
setDodgeRam1996()       0x0800ed65   0x1c0  Code  Gb  dodge_ram.o [1]
setDodgeSensor(ThermistorConf *)
                        0x080063d1    0x24  Code  Gb  thermistors.o [1]
setEgoSensor(ego_sensor_e)
                        0x0800c9fd    0x1c  Code  Gb  ego.o [1]
setEgtCSPin(char const *, char const *, board_configuration_s *)
                        0x0800140d    0x74  Code  Lc  settings.o [1]
setEgtSpi(int)          0x0800118d     0xc  Code  Lc  settings.o [1]
setEmulatorAtIndex(int, Engine *)
                        0x08026c87     0x6  Code  Lc  trigger_emulator_algo.o [1]
setEngineType(int)      0x08000897    0x40  Code  Gb  settings.o [1]
setError                0x080142a1    0x1c  Code  Gb  malfunction_central.o [1]
setEtbIFactor(float)    0x0800ba83    0x20  Code  Lc  electronic_throttle.o [1]
setEtbPFactor(float)    0x0800ba63    0x20  Code  Lc  electronic_throttle.o [1]
setFanSetting(float, float)
                        0x08000f61    0x5a  Code  Lc  settings.o [1]
setFiringOrder(int)     0x08000ced    0x1a  Code  Lc  settings.o [1]
setFixedModeTiming(int)
                        0x0800084d    0x2c  Code  Lc  settings.o [1]
setFloat(char const *, char const *)
                        0x08006d49    0x78  Code  Lc  engine_controller.o [1]
setFordAspireEngineConfiguration()
                        0x0800d2a1   0x15c  Code  Gb  ford_aspire.o [1]
setFordEscortGt()       0x0800e091   0x2c2  Code  Gb  mazda_miata.o [1]
setFordFiestaDefaultEngineConfiguration()
                        0x0800d459    0x8c  Code  Gb  ford_fiesta.o [1]
setFordInline6()        0x0800d855   0x208  Code  Gb  ford_1995_inline_6.o [1]
setFrankenso0_1_joystick(engine_configuration_s *)
                        0x08004e59    0x30  Code  Gb  engine_configuration.o [1]
setFrankenso_01_LCD(board_configuration_s *)
                        0x0800d4ed    0x26  Code  Gb  honda_accord.o [1]
setFrankenstein_01_LCD(board_configuration_s *)
                        0x0800ca61    0x26  Code  Gb  rover_v8.o [1]
setFsio(int, brain_pin_e, char const *)
                        0x0801117b    0x16  Code  Gb  fsio_impl.o [1]
setFsioExpression(char const *, char const *, Engine *)
                        0x08011679    0x82  Code  Lc  fsio_impl.o [1]
setFsioExt(int, brain_pin_e, char const *, int)
                        0x0801112b    0x50  Code  Gb  fsio_impl.o [1]
setFsioFrequency(int, int)
                        0x08011629    0x44  Code  Lc  fsio_impl.o [1]
setFsioInputPin(char const *, char const *)
                        0x08011049    0x6e  Code  Lc  fsio_impl.o [1]
setFsioOutputPin(char const *, char const *)
                        0x080110bd    0x6e  Code  Lc  fsio_impl.o [1]
setFsioSetting(float, float)
                        0x080115dd    0x4c  Code  Lc  fsio_impl.o [1]
setFuelLoadBin(float, float)
                        0x08007c27    0x2c  Code  Gb  engine_math.o [1]
setFuelMap(char const *, char const *, char const *)
                        0x08001759    0xb2  Code  Lc  settings.o [1]
setFuelPumpPin(char const *)
                        0x080012d9    0x1a  Code  Lc  settings.o [1]
setFuelPumpPinMode(int)
                        0x0800097b    0x18  Code  Lc  settings.o [1]
setFuelRpmBin(float, float)
                        0x08007bfb    0x2c  Code  Gb  engine_math.o [1]
setFuelTablesLoadBin(float, float)
                        0x08003709    0x68  Code  Gb  engine_configuration.o [1]
setFullLog(int)         0x08012ba9    0x38  Code  Gb  status_loop.o [1]
setGain(float)          0x0801a581    0x1e  Code  Lc  HIP9011.o [1]
setGlobalFuelCorrection(float)
                        0x08000ec9    0x50  Code  Lc  settings.o [1]
setGlobalTriggerAngleOffset(float)
                        0x08000d51    0x28  Code  Lc  settings.o [1]
setGm2_2()              0x0800ed31    0x34  Code  Gb  gm_2_2.o [1]
setGy6139qmbDefaultEngineConfiguration()
                        0x0800daa1    0xb2  Code  Gb  GY6_139QMB.o [1]
setHardwareUsTimer      0x080257d9    0x5c  Code  Gb  microsecond_timer.o [1]
setHip9011FrankensoPinout()
                        0x0801a371    0x96  Code  Gb  HIP9011.o [1]
setHondaAccordConfiguration1_24()
                        0x0800d6f7    0x1a  Code  Gb  honda_accord.o [1]
setHondaAccordConfigurationCommon()
                        0x0800d515   0x1ae  Code  Lc  honda_accord.o [1]
setHondaAccordConfigurationDip()
                        0x0800d6dd    0x1a  Code  Gb  honda_accord.o [1]
setHondaAccordConfigurationThreeWires()
                        0x0800d6c3    0x1a  Code  Gb  honda_accord.o [1]
setIatBias(float)       0x08000fc5     0xa  Code  Lc  settings.o [1]
setIdleControlEnabled(int)
                        0x08016d89    0x1e  Code  Lc  idle_thread.o [1]
setIdlePin(char const *)
                        0x08001257    0x16  Code  Lc  settings.o [1]
setIdlePinMode(int)     0x08000913    0x18  Code  Lc  settings.o [1]
setIdleRpmAction(int)   0x08016fc3    0x1a  Code  Lc  idle_thread.o [1]
setIdleSolenoidFrequency(int)
                        0x080008d7     0xa  Code  Lc  settings.o [1]
setIdleValvePosition(int)
                        0x08016ea9    0x26  Code  Lc  idle_thread.o [1]
setIdleValvePwm(float)  0x08016da9    0x20  Code  Lc  idle_thread.o [1]
setIgnitionMode(int)    0x08000df5    0x1e  Code  Lc  settings.o [1]
setIgnitionOffset(float)
                        0x08000953    0x28  Code  Lc  settings.o [1]
setIgnitionPin(char const *, char const *)
                        0x080011b9    0x58  Code  Lc  settings.o [1]
setIgnitionPinMode(int)
                        0x080008f9    0x1a  Code  Lc  settings.o [1]
setIndex(int)           0x08018b61     0xe  Code  Lc  board_test.o [1]
setIndividualPin(char const *, brain_pin_e *, char const *)
                        0x08001215    0x42  Code  Lc  settings.o [1]
setInjectionMode(int)   0x08000dd1    0x1e  Code  Lc  settings.o [1]
setInjectionOffset(float)
                        0x0800092b    0x28  Code  Lc  settings.o [1]
setInjectionPin(char const *, char const *)
                        0x080012fd    0x58  Code  Lc  settings.o [1]
setInjectionPinMode(int)
                        0x080008e1    0x18  Code  Lc  settings.o [1]
setInjectorEnabled(int, int)
                        0x080154e5    0x30  Code  Lc  injector_central.o [1]
setInjectorLag(float)   0x08001f27     0xa  Code  Lc  settings.o [1]
setInt(int, int)        0x08006cd5    0x28  Code  Lc  engine_controller.o [1]
setKnockThresh(float)   0x0801a535    0x22  Code  Lc  HIP9011.o [1]
setLCD(board_configuration_s *)
                        0x0800e6a5    0x26  Code  Gb  citroenBerlingoTU3JP.o [1]
setLogicInputPin(char const *, char const *)
                        0x080015f5    0x58  Code  Lc  settings.o [1]
setMainRelayPin(char const *)
                        0x08001275    0x1a  Code  Lc  settings.o [1]
setMalfunctionIndicatorPinMode(int)
                        0x08000993    0x1a  Code  Lc  settings.o [1]
setMap(float (*)[16], float)
                        0x080036c3    0x24  Code  Gb  engine_configuration.o [1]
setMapAccelLen(int)     0x08014b69    0x26  Code  Lc  accel_enrichment.o [1]
setMapAccelMult(float)  0x08014aa1    0x20  Code  Lc  accel_enrichment.o [1]
setMapAccelThr(float)   0x08014a81    0x20  Code  Lc  accel_enrichment.o [1]
setMaxKnockSubDeg(int)  0x0801a513    0x22  Code  Lc  HIP9011.o [1]
setMazda323EngineConfiguration(engine_configuration_s *)
                        0x0800dd55    0x18  Code  Gb  mazda_323.o [1]
setMazda626EngineConfiguration()
                        0x0800dd6d   0x168  Code  Gb  mazda_626.o [1]
setMazdaMiataNAMaf(persistent_config_s *)
                        0x0800be65   0x43c  Code  Gb  maf.o [1]
setMazdaMiataNbEngineConfiguration()
                        0x0800db7d   0x1d8  Code  Gb  mazda_miata_nb.o [1]
setMiata1990()          0x0800e021    0x5e  Code  Gb  mazda_miata.o [1]
setMiata1994_common()   0x0800e365    0xec  Code  Lc  mazda_miata.o [1]
setMiata1994_d()        0x0800e451    0x3a  Code  Gb  mazda_miata.o [1]
setMiata1994_s()        0x0800e48b    0xe6  Code  Gb  mazda_miata.o [1]
setMiata1996()          0x0800e571    0xea  Code  Gb  mazda_miata.o [1]
setMiniCooperR50(engine_configuration_s *)
                        0x0800dedd     0x8  Code  Gb  MiniCooperR50.o [1]
setMitsubishiConfiguration()
                        0x0800d741   0x114  Code  Gb  mitsubishi.o [1]
setNeedToWriteConfiguration()
                        0x08005287    0x14  Code  Gb  flash_main.o [1]
setNewValue(IdleValveState *, int, unsigned int, char const *, float)
                        0x0801f4f1    0x5c  Code  Lc  idle_controller.o [1]
setNissanPrimeraEngineConfiguration(engine_configuration_s *)
                        0x0800d4e5     0x8  Code  Gb  nissan_primera.o [1]
setOM(int)              0x080009c7    0x1a  Code  Lc  settings.o [1]
setOperationMode(engine_configuration_s *, operation_mode_e)
                        0x08004e4b     0x6  Code  Gb  engine_configuration.o [1]
setPinState(char const *, OutputPin *, LEElement *, Engine *)
                        0x08011369    0xc2  Code  Lc  fsio_impl.o [1]
setPotResistance(Mcp42010Driver *, int, int)
                        0x080206a1    0x2c  Code  Gb  poten.o [1]
setPotResistanceCommand(int, int)
                        0x080206cd    0x24  Code  Lc  poten.o [1]
setPotSpi(int)          0x080011a1     0xc  Code  Lc  settings.o [1]
setPotValue1(int)       0x080206f1    0x10  Code  Lc  poten.o [1]
setPrescalerAndSDO(int)
                        0x0801a557     0xc  Code  Lc  HIP9011.o [1]
setRoverv8()            0x0800ca87   0x106  Code  Gb  rover_v8.o [1]
setRpmHardLimit(int)    0x08000d0d    0x1a  Code  Lc  settings.o [1]
setRpmTableBin(float *, int)
                        0x0800b845    0x1c  Code  Gb  table_helper.o [1]
setSachs()              0x0800f0d5   0x1e8  Code  Gb  sachs.o [1]
setSaturnIonEngineConfiguration
                        0x0800ded5     0x8  Code  Gb  saturn_ion.o [1]
setSensorChartFrequency(int)
                        0x08014ef9     0xa  Code  Lc  sensor_chart.o [1]
setSensorChartMode(int)
                        0x080009ad    0x1a  Code  Lc  settings.o [1]
setShort(int, int)      0x08006c33    0x2a  Code  Lc  engine_controller.o [1]
setShortValue(CANTxFrame *, int, int)
                        0x0801faff    0x10  Code  Lc  can_hw.o [1]
setSingleCoilDwell(engine_configuration_s *)
                        0x0800748b    0x5a  Code  Gb  engine_math.o [1]
setSpiMode(int, bool)   0x0800181d    0x82  Code  Lc  settings.o [1]
setSubaru2003Wrx()      0x0800e985    0x44  Code  Gb  subaru.o [1]
setTableBin(float *, int, float, float)
                        0x0800b819    0x2c  Code  Gb  table_helper.o [1]
setTableBin2(float *, int, float, float, float)
                        0x0800b7b9    0x60  Code  Gb  table_helper.o [1]
setTableValue(float *, float *, int, float, float)
                        0x080093e9    0x38  Code  Gb  interpolation.o [1]
setTestEngineConfiguration()
                        0x0800effd    0xd8  Code  Gb  test_engine.o [1]
setThermistorConfiguration(ThermistorConf *, float, float, float, float, float, float)
                        0x080060f9    0x1a  Code  Gb  thermistors.o [1]
setThrottleConsole(int)
                        0x0800b931    0x58  Code  Lc  electronic_throttle.o [1]
setTimingLoadBin(float, float)
                        0x08007c7f    0x2c  Code  Gb  engine_math.o [1]
setTimingMap(char const *, char const *, char const *)
                        0x08001699    0xb2  Code  Lc  settings.o [1]
setTimingMap(float (*)[16], float)
                        0x08003771    0x24  Code  Gb  engine_configuration.o [1]
setTimingMode(int)      0x08000879    0x1e  Code  Lc  settings.o [1]
setTimingRpmBin(float, float)
                        0x08007c53    0x2c  Code  Gb  engine_math.o [1]
setToothedWheel(int, int)
                        0x08000e41    0x40  Code  Lc  settings.o [1]
setToothedWheelConfiguration(TriggerShape *, int, int, operation_mode_e)
                        0x08008629    0x1e  Code  Gb  trigger_structure.o [1]
setTpsAccelLen(int)     0x08014b41    0x28  Code  Lc  accel_enrichment.o [1]
setTpsAccelMult(float)  0x08014ae1    0x20  Code  Lc  accel_enrichment.o [1]
setTpsAccelThr(float)   0x08014ac1    0x20  Code  Lc  accel_enrichment.o [1]
setTriggerEmulatorRPM(int, Engine *)
                        0x08026b31    0xa0  Code  Gb  trigger_emulator_algo.o [1]
setTriggerInputPin(char const *, char const *)
                        0x0800135d    0x5e  Code  Lc  settings.o [1]
setTriggerSimulatorMode(char const *, char const *)
                        0x080013c1    0x4c  Code  Lc  settings.o [1]
setTriggerSimulatorPin(char const *, char const *)
                        0x08001481    0x6c  Code  Lc  settings.o [1]
setTriggerType(int)     0x08000e1d    0x1e  Code  Lc  settings.o [1]
setTsSpeed(int)         0x0800f3ab    0x14  Code  Lc  tunerstudio.o [1]
setTxBit(int, int)      0x0801fb0f    0x18  Code  Gb  can_hw.o [1]
setVBattDivider(float)  0x08000fd9     0xa  Code  Lc  settings.o [1]
setValue(char const *, char const *)
                        0x08001f71    0xf6  Code  Lc  settings.o [1]
setVwAba()              0x0800ef25    0xd8  Code  Gb  vw.o [1]
setVwConfiguration(TriggerShape *)
                        0x08008545    0xd6  Code  Gb  trigger_structure.o [1]
setWarningEnabled(int)  0x08011ca9     0x8  Code  Lc  status_loop.o [1]
setWaveModeSilent(int, int)
                        0x0801505d    0x22  Code  Lc  wave_analyzer.o [1]
setWholeFuelMap(float)  0x080036e7    0x22  Code  Gb  engine_configuration.o [1]
setWholeFuelMapCmd(float)
                        0x08001141    0x48  Code  Lc  settings.o [1]
setWholeIatCorrTimingTable(float)
                        0x08003795    0x22  Code  Gb  engine_configuration.o [1]
setWholePhaseMapCmd(float)
                        0x08001061    0x3a  Code  Lc  settings.o [1]
setWholeTimingMap(float)
                        0x08001001    0x54  Code  Lc  settings.o [1]
setWholeTimingMapCmd(float)
                        0x080010a5    0x2e  Code  Lc  settings.o [1]
setWholeTimingTable(float)
                        0x080037b7    0x22  Code  Gb  engine_configuration.o [1]
setWholeVeCmd(float)    0x080010e5    0x50  Code  Lc  settings.o [1]
set_address             0x08021115    0x2a  Code  Lc  usb.o [1]
set_error               0x08021d93    0x32  Code  Lc  serial_lld.o [1]
settingUpdateCount      0x2000a8e4     0x4  Data  Lc  HIP9011.o [1]
shaft_icu_period_callback(ICUDriver *)
                        0x0801f86f    0x6a  Code  Lc  trigger_input.o [1]
shaft_icu_width_callback(ICUDriver *)
                        0x0801f805    0x6a  Code  Lc  trigger_input.o [1]
shaft_icucfg            0x20001838    0x1c  Data  Lc  trigger_input.o [1]
shaft_signal_msg_index  0x200179cc    0x10  Data  Lc  trigger_central.o [1]
sharedLogger            0x20010f64     0x4  Data  Lc  hardware.o [1]
sharedLogger            0x20011334     0x4  Data  Lc  joystick.o [1]
sharedLogger            0x20014a8c   0x104  Data  Lc  rusefi.o [1]
showAltInfo()           0x0800992b    0xb6  Code  Gb  alternatorController.o [1]
showEgtInfo()           0x0801d961    0x5a  Code  Lc  max31855.o [1]
showEthInfo()           0x0800b989    0xbc  Code  Lc  electronic_throttle.o [1]
showFsio(char const *, LEElement *)
                        0x0801142b    0x4e  Code  Lc  fsio_impl.o [1]
showFsioInfo()          0x08011481   0x158  Code  Lc  fsio_impl.o [1]
showFuelInfo()          0x0801256b    0x2e  Code  Lc  status_loop.o [1]
showFuelInfo2(float, float)
                        0x0801235d   0x20e  Code  Lc  status_loop.o [1]
showHipInfo()           0x0801a16d   0x200  Code  Lc  HIP9011.o [1]
showIdleInfo()          0x08016c8b    0xfe  Code  Lc  idle_thread.o [1]
showLine(lcd_line_e, int)
                        0x08017487   0x25c  Code  Lc  lcd_controller.o [1]
showMainHistogram       0x08016635    0x12  Code  Gb  main_trigger_callback.o [1]
showMainInfo(Engine *)  0x08016a63    0x68  Code  Lc  main_trigger_callback.o [1]
showMapStats()          0x08015fe3    0x12  Code  Lc  map_averaging.o [1]
showPinFunction(char const *)
                        0x08001655    0x36  Code  Lc  settings.o [1]
showTriggerHistogram()  0x08016a3d    0x10  Code  Lc  main_trigger_callback.o [1]
showWaveChartHistogram()
                        0x080051d9     0x2  Code  Gb  wave_chart.o [1]
single_wave_s::init(signed char *)
                        0x08017d1f     0x4  Code  Gb  EfiWave.o [1]
single_wave_s::single_wave_s()
                        0x08017cfd    0x10  Code  Gb  EfiWave.o [1]
single_wave_s::single_wave_s(signed char *)
                        0x08017d0d    0x12  Code  Gb  EfiWave.o [1]
skipUntilEngineCycle    0x2001c620     0x4  Data  Gb  wave_chart.o [1]
slowAdc                 0x2000abdc    0xf0  Data  Gb  adc_inputs.o [1]
sparkNames              0x20001764    0x30  Data  Lc  signal_executor.o [1]
sparkbench(char const *, char const *, char const *)
                        0x08015829    0x1a  Code  Lc  injector_central.o [1]
sparkbench2(char const *, char const *, char const *, char const *, char const *)
                        0x080157c5    0x64  Code  Lc  injector_central.o [1]
speedInfo()             0x0801c4d5    0x64  Code  Lc  vehicle_speed.o [1]
spiConfig               0x20013a20    0x60  Data  Lc  max31855.o [1]
spiCount                0x2000a8f4     0x4  Data  Lc  HIP9011.o [1]
spiExchange             0x08022997    0x7e  Code  Gb  spi.o [1]
spiIgnore               0x08022929    0x6e  Code  Gb  spi.o [1]
spiInit                 0x080227e5     0x8  Code  Gb  spi.o [1]
spiMtx                  0x20010f50    0x10  Data  Lc  hardware.o [1]
spiObjectInit           0x080227ed    0x1a  Code  Gb  spi.o [1]
spiReceive              0x08022a8b    0x76  Code  Gb  spi.o [1]
spiSelect               0x080228a9    0x40  Code  Gb  spi.o [1]
spiSend                 0x08022a15    0x76  Code  Gb  spi.o [1]
spiStart                0x08022807    0x52  Code  Gb  spi.o [1]
spiStop                 0x08022859    0x50  Code  Gb  spi.o [1]
spiUnselect             0x080228e9    0x40  Code  Gb  spi.o [1]
spi_lld_exchange        0x0802257f    0x56  Code  Gb  spi_lld.o [1]
spi_lld_ignore          0x08022531    0x4e  Code  Gb  spi_lld.o [1]
spi_lld_init            0x080222d3    0xa0  Code  Gb  spi_lld.o [1]
spi_lld_receive         0x08022629    0x54  Code  Gb  spi_lld.o [1]
spi_lld_select          0x08022511    0x10  Code  Gb  spi_lld.o [1]
spi_lld_send            0x080225d5    0x54  Code  Gb  spi_lld.o [1]
spi_lld_serve_rx_interrupt
                        0x0802221d    0xb0  Code  Lc  spi_lld.o [1]
spi_lld_serve_tx_interrupt
                        0x080222cd     0x6  Code  Lc  spi_lld.o [1]
spi_lld_start           0x08022373   0x144  Code  Gb  spi_lld.o [1]
spi_lld_stop            0x080224b7    0x5a  Code  Gb  spi_lld.o [1]
spi_lld_unselect        0x08022521    0x10  Code  Gb  spi_lld.o [1]
spicfg                  0x20001008     0xc  Data  Lc  HIP9011.o [1]
sr                      0x20017e2c     0xc  Data  Lc  trigger_emulator_algo.o [1]
stThread(StepperMotor *)
                        0x0801f2a5    0x8a  Code  Lc  stepper.o [1]
startAveraging(void *)  0x08015c87    0x54  Code  Lc  map_averaging.o [1]
startConsole(Logging *, void (*)(char *))
                        0x0800ac59    0x84  Code  Gb  console_io.o [1]
startIdleThread(Logging *, Engine *)
                        0x08017029   0x120  Code  Gb  idle_thread.o [1]
startIgnitionPins()     0x08015931    0x54  Code  Gb  injector_central.o [1]
startInjectionPins()    0x08015985    0x56  Code  Gb  injector_central.o [1]
startInputDriver(digital_input_s *, bool)
                        0x0801ee4d    0x48  Code  Gb  digital_input_hw.o [1]
startIntegration()      0x0801a411    0x1e  Code  Lc  HIP9011.o [1]
startSimplePwm(PwmConfig *, char const *, OutputPin *, float, float, void (*)(PwmConfig *, int))
                        0x08014d19    0xa6  Code  Gb  pwm_generator.o [1]
startSimplePwmExt(PwmConfig *, char const *, brain_pin_e, OutputPin *, float, float, void (*)(PwmConfig *, int))
                        0x08014ddd    0x54  Code  Gb  pwm_generator.o [1]
startSimultaniousInjection(Engine *)
                        0x08016101    0x26  Code  Lc  main_trigger_callback.o [1]
startStatusThreads(Engine *)
                        0x08012b63    0x2e  Code  Gb  status_loop.o [1]
startTimer              0x200018b0    0x30  Data  Lc  HIP9011.o [1]
startTimer              0x20007af0    0x30  Data  Lc  map_averaging.o [1]
startTsPort()           0x0801ab59    0x5e  Code  Gb  tunerstudio_io.o [1]
startTunerStudioConnectivity()
                        0x0800ff8d    0x6a  Code  Gb  tunerstudio.o [1]
state                   0x2001c650     0x1  Data  Lc  HIP9011.o [1]
states                  0x20017984    0x28  Data  Lc  tps.o [1]
stepCoutner             0x2000aefc     0x4  Data  Lc  board_test.o [1]
stm32_clock_init        0x08029e2b    0xde  Code  Gb  hal_lld.o [1]
stm32_rtc_bcd2tm        0x08018341    0xd6  Code  Lc  chrtclib.o [1]
stm32_rtc_tm2bcd        0x08018417   0x11c  Code  Lc  chrtclib.o [1]
stopEmulationAtIndex    0x20001830     0x4  Data  Lc  trigger_emulator_algo.o [1]
stopEngine()            0x08001e81    0x12  Code  Gb  settings.o [1]
stopIgnitionPins()      0x080158b1    0x3c  Code  Gb  injector_central.o [1]
stopInjectionPins()     0x080158ed    0x3c  Code  Gb  injector_central.o [1]
stopPin(NamedOutputPin *)
                        0x08013bfb    0x36  Code  Lc  engine.o [1]
stopTriggerInputPins()  0x0801f9a3    0x36  Code  Gb  trigger_input.o [1]
str2int                 0x080263d3    0x24  Code  Gb  nmea.o [1]
strEqual                0x08002e5d    0x38  Code  Gb  efilib.o [1]
strEqualCaseInsensitive
                        0x08002e01    0x5c  Code  Gb  efilib.o [1]
str_till_comma          0x0802656d    0x36  Code  Gb  nmea.o [1]
strcat                  0x08018e27    0x1c  Code  Gb  strcat.o [3]
strchr                  0x08028f39          Code  Gb  strchr.o [6]
strcpy                  0x0800a3e5          Code  Gb  strcpy.o [6]
strlen                  0x0800adbd          Code  Gb  strlen.o [6]
strncmp                 0x08018dfd    0x2a  Code  Gb  strncmp.o [3]
strncpy                 0x08018291          Code  Gb  strncpy.o [6]
strrchr                 0x08028f5f    0x10  Code  Gb  nmea.o [1]
strstr                  0x08028f4f    0x10  Code  Gb  nmea.o [1]
subscribe(int)          0x08012ac9     0x8  Code  Lc  status_loop.o [1]
subscription            0x200170e8    0x10  Data  Lc  status_loop.o [1]
subyDenso               0x200139b4     0x8  Data  Lc  map.o [1]
sum_sfn                 0x0802360d    0x1e  Code  Lc  ff.o [1]
swapOutputBuffers(int *)
                        0x0800ae55    0x50  Code  Gb  loggingcentral.o [1]
switchToBinaryProtocol()
                        0x0800ac45    0x14  Code  Lc  console_io.o [1]
swo_init()              0x08008c71     0x2  Code  Gb  rusefi.o [1]
swtchTms                0x20017e38   0x3f0  Data  Lc  trigger_emulator_algo.o [1]
sync                    0x08022d1f    0xd8  Code  Lc  ff.o [1]
sync                    0x080251f3    0x36  Code  Lc  mmc_spi.o [1]
syncTunerStudioCopy()   0x0800fad1    0x14  Code  Gb  tunerstudio.o [1]
sysElements             0x2000fae0   0x800  Data  Lc  fsio_impl.o [1]
sysPool                 0x200102e0     0xc  Data  Gb  fsio_impl.o [1]
tdcMarkCallback(trigger_event_e, unsigned int)
                        0x08013015    0x7e  Code  Lc  rpm_calculator.o [1]
tdcScheduler            0x200083c0    0x30  Data  Lc  rpm_calculator.o [1]
testBinary()            0x08008e35    0xe4  Code  Lc  interpolation.o [1]
testCltByR(float)       0x08006421    0x5c  Code  Lc  thermistors.o [1]
testMil()               0x08015c0f    0x10  Code  Lc  malfunction_indicator.o [1]
timeBuffer              0x2001c624     0xc  Data  Lc  wave_chart.o [1]
timeOfPreviousPrintVersion
                        0x200017d0     0x4  Data  Lc  status_loop.o [1]
timeOfPreviousReport    0x200017d4     0x4  Data  Lc  status_loop.o [1]
timeOfPreviousWarning   0x2000169c     0x4  Data  Lc  error_handling.o [1]
timerCallback(PwmConfig *)
                        0x080187f9    0x3e  Code  Lc  pwm_generator_logic.o [1]
timerCallbackCounter    0x20013a84     0x4  Data  Lc  microsecond_timer.o [1]
timerRestartCounter     0x20013a88     0x4  Data  Lc  microsecond_timer.o [1]
todofixthismesswithcopy
                        0x2000ef20    0x64  Data  Lc  efilib.o [1]
togglePwmState(PwmConfig *)
                        0x0801879d    0x5c  Code  Lc  pwm_generator_logic.o [1]
tokenLength             0x0800a085    0x1a  Code  Gb  cli_registry.o [1]
totalLoggedBytes        0x20014274     0x4  Data  Lc  mmc_card.o [1]
totalPinsUsed           0x200148d8     0x4  Data  Lc  pin_repository.o [1]
tpsFastAdc              0x200179ac     0x4  Data  Gb  tps.o [1]
tpsRocIndex             0x200179b0     0x4  Data  Lc  tps.o [1]
tpsSampleIndex          0x20010f70     0x4  Data  Lc  hardware.o [1]
tps_advance_table       0x0802af14   0x400  Data  Lc  citroenBerlingoTU3JP.o [1]
tps_fuel_table          0x0802ab14   0x400  Data  Lc  citroenBerlingoTU3JP.o [1]
tree                    0x20011424    0x10  Data  Lc  lcd_controller.o [1]
triggerCallback         0x200088c0   0xe20  Data  Lc  trigger_central.o [1]
triggerCentral          0x200096e0   0x158  Data  Gb  trigger_central.o [1]
triggerDecoderErrorPin  0x200179dc    0x10  Data  Lc  trigger_decoder.o [1]
triggerDuration         0x200179c4     0x4  Data  Gb  trigger_central.o [1]
triggerHanlderEntryTime
                        0x200179b8     0x4  Data  Gb  trigger_central.o [1]
triggerInfo()           0x0801d42d   0x3d4  Code  Gb  trigger_central.o [1]
triggerMaxDuration      0x200179c8     0x4  Data  Gb  trigger_central.o [1]
triggerReentraint       0x200179bc     0x4  Data  Gb  trigger_central.o [1]
triggerShapeInfo()      0x0801d3af    0x7e  Code  Lc  trigger_central.o [1]
triggerSignal           0x20009838    0x60  Data  Gb  trigger_emulator_algo.o [1]
triggerVersion          0x2001384c     0x4  Data  Lc  main_trigger_callback.o [1]
trigger_shape_helper::trigger_shape_helper()
                        0x08007d89    0x40  Code  Gb  trigger_structure.o [1]
tsChannel               0x20018344   0x134  Data  Gb  tunerstudio.o [1]
tsCrcWriteBuffer        0x2001c12c   0x12c  Data  Lc  tunerstudio.o [1]
tsLogger                0x2001823c   0x104  Data  Gb  tunerstudio.o [1]
tsOutputChannels        0x200184b0    0xc4  Data  Gb  tunerstudio.o [1]
tsSendResponse(ts_channel_s *, ts_response_format_e, unsigned char const *, int)
                        0x0801acb7    0x30  Code  Gb  tunerstudio_io.o [1]
tsSerialConfig          0x20001858     0xc  Data  Lc  tunerstudio_io.o [1]
tsState                 0x20018488    0x28  Data  Gb  tunerstudio.o [1]
tsThreadEntryPoint(void *)
                        0x0800fab1    0x20  Code  Lc  tunerstudio.o [1]
tsThreadStack           0x20009898   0x5e8  Data  Lc  tunerstudio.o [1]
ts_serial_ready(bool)   0x0800f2cd    0x1a  Code  Lc  tunerstudio.o [1]
tunerStudioDebug(char const *)
                        0x0800f3bf    0x12  Code  Gb  tunerstudio.o [1]
tunerStudioError(char const *)
                        0x0800fae5    0x1e  Code  Gb  tunerstudio.o [1]
tunerStudioHandleCrcCommand(ts_channel_s *, char *, int)
                        0x0800fdfd   0x17c  Code  Gb  tunerstudio.o [1]
tunerStudioWriteCrcPacket(ts_channel_s *, unsigned char, void const *, unsigned short)
                        0x0801ac3d    0x7a  Code  Gb  tunerstudio_io.o [1]
tunerStudioWriteData(ts_channel_s *, unsigned char const *, int)
                        0x0801abc9    0x3e  Code  Gb  tunerstudio_io.o [1]
turnAllPinsOff()        0x0800962d    0x3a  Code  Gb  io_pins.o [1]
turnOffTriggerInputPin(brain_pin_e)
                        0x0801f931    0x36  Code  Lc  trigger_input.o [1]
turnOnCapturePin(char const *, brain_pin_e)
                        0x0801ede7    0x42  Code  Gb  digital_input_hw.o [1]
turnOnHardware(Logging *)
                        0x08018071     0xc  Code  Gb  hardware.o [1]
turnOnSpi(spi_device_e)
                        0x0800a4e9    0x7a  Code  Gb  mpu_util.o [1]
turnOnTriggerInputPin(brain_pin_e)
                        0x0801f8d9    0x58  Code  Lc  trigger_input.o [1]
turnOnTriggerInputPins(Logging *)
                        0x0801f97b    0x28  Code  Gb  trigger_input.o [1]
turnPinHigh(NamedOutputPin *)
                        0x0801f02b    0x8a  Code  Gb  signal_executor.o [1]
turnPinLow(NamedOutputPin *)
                        0x0801f0b5    0x8a  Code  Gb  signal_executor.o [1]
tx_buff                 0x2001c64e     0x1  Data  Lc  HIP9011.o [1]
txmsg                   0x2000b028    0x10  Data  Gb  can_hw.o [1]
uartErrors              0x200143dc     0x4  Data  Lc  neo6m.o [1]
unlockAnyContext        0x0800ad21    0x22  Code  Gb  console_io.o [1]
unlockOutputBuffer      0x0800adb5     0x8  Code  Gb  console_io.o [1]
unlockSpi()             0x08017f0b     0x8  Code  Gb  hardware.o [1]
unmarkPin(brain_pin_e)  0x0800359d    0x3a  Code  Gb  pin_repository.o [1]
unquote                 0x08009d97    0x2c  Code  Gb  cli_registry.o [1]
unregister(brain_pin_e, OutputPin *)
                        0x08015889    0x28  Code  Lc  injector_central.o [1]
unsubscribe(int)        0x08012ad5     0x8  Code  Lc  status_loop.o [1]
updateAndSet(State64 *, unsigned int)
                        0x08013fdf    0x18  Code  Gb  efilib2.o [1]
updateDevConsoleState(Engine *)
                        0x080122b1    0x9c  Code  Gb  status_loop.o [1]
updateErrorCodes()      0x08006657    0x2c  Code  Lc  engine_controller.o [1]
updateHD44780lcd(Engine *)
                        0x080176fd    0xc8  Code  Gb  lcd_controller.o [1]
updateTriggerShapeIfNeeded(PwmConfig *)
                        0x08026bd1    0x76  Code  Lc  trigger_emulator_algo.o [1]
updateTunerStudioState(TunerStudioOutputChannels *)
                        0x08012795   0x32a  Code  Gb  status_loop.o [1]
usTimerWatchDog()       0x08025863    0x76  Code  Lc  microsecond_timer.o [1]
usart_init              0x08021d41    0x52  Code  Lc  serial_lld.o [1]
usbInit                 0x080213f1     0x8  Code  Gb  usb.o [1]
usbInitEndpointI        0x08021489    0x72  Code  Gb  usb.o [1]
usbObjectInit           0x080213f9    0x2e  Code  Gb  usb.o [1]
usbPrepareQueuedReceive
                        0x0802156f    0x3a  Code  Gb  usb.o [1]
usbPrepareQueuedTransmit
                        0x080215a9    0x3a  Code  Gb  usb.o [1]
usbPrepareReceive       0x080214fb    0x3a  Code  Gb  usb.o [1]
usbPrepareTransmit      0x08021535    0x3a  Code  Gb  usb.o [1]
usbStart                0x08021427    0x62  Code  Gb  usb.o [1]
usbStartReceiveI        0x080215e3    0x40  Code  Gb  usb.o [1]
usbStartTransmitI       0x08021623    0x40  Code  Gb  usb.o [1]
usb_event               0x0802da83    0x5a  Code  Lc  usbcfg.o [1]
usb_lld_clear_in        0x0802809b    0x1e  Code  Gb  usb_lld.o [1]
usb_lld_clear_out       0x0802807d    0x1e  Code  Gb  usb_lld.o [1]
usb_lld_get_status_in   0x08027ee9    0x24  Code  Gb  usb_lld.o [1]
usb_lld_get_status_out  0x08027ec5    0x24  Code  Gb  usb_lld.o [1]
usb_lld_init            0x08027b03    0x48  Code  Gb  usb_lld.o [1]
usb_lld_init_endpoint   0x08027cfb   0x184  Code  Gb  usb_lld.o [1]
usb_lld_prepare_receive
                        0x08027f29    0x5c  Code  Gb  usb_lld.o [1]
usb_lld_prepare_transmit
                        0x08027f85    0x6e  Code  Gb  usb_lld.o [1]
usb_lld_pump            0x080279fd    0xee  Code  Lc  usb_lld.o [1]
usb_lld_read_setup      0x08027f0d    0x1c  Code  Gb  usb_lld.o [1]
usb_lld_reset           0x08027c01    0xe2  Code  Gb  usb_lld.o [1]
usb_lld_serve_interrupt
                        0x0802791f    0xde  Code  Lc  usb_lld.o [1]
usb_lld_set_address     0x08027ce3    0x18  Code  Gb  usb_lld.o [1]
usb_lld_stall_in        0x0802805f    0x1e  Code  Gb  usb_lld.o [1]
usb_lld_stall_out       0x08028041    0x1e  Code  Gb  usb_lld.o [1]
usb_lld_start           0x08027b4b    0xb6  Code  Gb  usb_lld.o [1]
usb_lld_start_in        0x08028011    0x30  Code  Gb  usb_lld.o [1]
usb_lld_start_out       0x08027ff3    0x1e  Code  Gb  usb_lld.o [1]
usb_lld_wakeup_pump     0x0802726d    0x16  Code  Lc  usb_lld.o [1]
usb_serial_start        0x080197c5    0x54  Code  Gb  usbconsole.o [1]
usbcfg                  0x080340b0    0x10  Data  Gb  usbcfg.o [1]
userElements            0x200102ec   0x800  Data  Lc  fsio_impl.o [1]
userPool                0x20010aec     0xc  Data  Gb  fsio_impl.o [1]
v_averagedMapValue      0x20013a14     0x4  Data  Lc  map_averaging.o [1]
validate                0x080243cf    0x2e  Code  Lc  ff.o [1]
validateBuffer(Logging *, unsigned int)
                        0x080025e1    0x3c  Code  Lc  datalogging.o [1]
validateSecureLine      0x0800a0b9    0x6a  Code  Gb  cli_registry.o [1]
vappendPrintf           0x080026cd    0x46  Code  Gb  datalogging.o [1]
vappendPrintfI(Logging *, char const *, _VA_LIST)
                        0x08002685    0x48  Code  Lc  datalogging.o [1]
vcom_configuration_descriptor
                        0x08035484     0x8  Data  Lc  usbcfg.o [1]
vcom_configuration_descriptor_data
                        0x0802e3c4    0x44  Data  Lc  usbcfg.o [1]
vcom_device_descriptor  0x0803547c     0x8  Data  Lc  usbcfg.o [1]
vcom_device_descriptor_data
                        0x08033264    0x14  Data  Lc  usbcfg.o [1]
vcom_string0            0x08035528     0x4  Data  Lc  usbcfg.o [1]
vcom_string1            0x0802f84c    0x28  Data  Lc  usbcfg.o [1]
vcom_string2            0x0802eab4    0x38  Data  Lc  usbcfg.o [1]
vcom_string3            0x0803548c     0x8  Data  Lc  usbcfg.o [1]
vcom_strings            0x080307a0    0x20  Data  Lc  usbcfg.o [1]
ve2Map                  0x20016fa4    0x4c  Data  Gb  speed_density.o [1]
veDefaultTable          0x0802bb14   0x400  Data  Lc  dodge_neon.o [1]
veMap                   0x20016f58    0x4c  Data  Gb  speed_density.o [1]
versionForConfigurationListeners
                        0x2000f30c     0x4  Data  Lc  engine_controller.o [1]
vmt                     0x08033a60    0x10  Data  Lc  memstreams.o [1]
vmt                     0x08030440    0x20  Data  Lc  serial.o [1]
vmt                     0x08030460    0x20  Data  Lc  serial_usb.o [1]
vsAnaWidthCallback()    0x0801c4ab    0x2a  Code  Lc  vehicle_speed.o [1]
vssCounter              0x2001c50c     0x4  Data  Lc  vehicle_speed.o [1]
vssDiff                 0x2000a428     0x8  Data  Lc  vehicle_speed.o [1]
vtlist                  0x2000b534    0x10  Data  Gb  chvt.o [1]
waAnaWidthCallback(WaveReader *)
                        0x08014f91    0x42  Code  Lc  wave_analyzer.o [1]
waIcuPeriodCallback(WaveReader *)
                        0x08015051     0xc  Code  Lc  wave_analyzer.o [1]
waThread(void *)        0x0801511f    0x1c  Code  Lc  wave_analyzer.o [1]
waThreadStack           0x2000a5f0   0x2c8  Data  Lc  wave_analyzer.o [1]
wait                    0x08024feb    0x42  Code  Lc  mmc_spi.o [1]
waitForKey()            0x08018b35    0x20  Code  Lc  board_test.o [1]
wakeup                  0x0801eabf    0x56  Code  Lc  chschd.o [1]
warning                 0x0800a319    0x7e  Code  Gb  error_handling.o [1]
warningBuffer           0x2000f42c    0x50  Data  Lc  error_handling.o [1]
warningEnabled          0x200017c8     0x4  Data  Gb  status_loop.o [1]
warningPin              0x200178dc    0x10  Data  Gb  status_loop.o [1]
warningStream           0x2000f47c    0x14  Data  Lc  error_handling.o [1]
waveChart               0x20008870    0x50  Data  Gb  trigger_central.o [1]
waveChartUsedSize       0x2001c518     0x4  Data  Gb  wave_chart.o [1]
waveReaderCount         0x2001c510     0x4  Data  Lc  wave_analyzer.o [1]
wave_icucfg             0x20001594    0x1c  Data  Lc  digital_input_hw.o [1]
waves                   0x20017e20     0xc  Data  Lc  trigger_emulator_algo.o [1]
write                   0x08019841    0x1a  Code  Lc  serial.o [1]
write                   0x08020c85    0x1a  Code  Lc  serial_usb.o [1]
writeChunkRequest       0x20018480     0x8  Data  Lc  tunerstudio.o [1]
writeLogLine()          0x08011ff5    0x4a  Code  Gb  status_loop.o [1]
writeStateToCan()       0x0801fe6f    0x22  Code  Lc  can_hw.o [1]
writeToFlashIfPending()
                        0x080052a1    0x20  Code  Gb  flash_main.o [1]
writeToFlashNow()       0x080052c1    0x96  Code  Gb  flash_main.o [1]
writes                  0x0800af05    0x34  Code  Lc  memstreams.o [1]
writet                  0x080198c9    0x1a  Code  Lc  serial.o [1]
writet                  0x08020d0d    0x1a  Code  Lc  serial_usb.o [1]
yellowMagic(int, int, int)
                        0x0800f431    0x36  Code  Gb  tunerstudio.o [1]
zero_status             0x0800b17a     0x2  Data  Lc  usb.o [1]


[1] = F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj
[2] = command line
[3] = dl7M_tln.a
[4] = dlpp7M_tl_ne.a
[5] = m7M_tlv.a
[6] = rt7M_tl.a
[7] = shb_l.a

  173 882 bytes of readonly  code memory
   46 158 bytes of readonly  data memory
  182 038 bytes of readwrite data memory

Errors: none
Warnings: 3
