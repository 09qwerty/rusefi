###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:39 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\chibios\boards\S #
#                       T_STM32F4_DISCOVERY\board.c                           #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\chibios\boards\S #
#                       T_STM32F4_DISCOVERY\board.c -lCN                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\  #
#                       -lA F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Li #
#                       st\ -o F:\stuff\rusefi_sourceforge\firmware\iar\Debug #
#                       \Obj\ --no_cse --no_unroll --no_inline                #
#                       --no_code_motion --no_tbaa --no_clustering            #
#                       --no_scheduling --debug --endian=little               #
#                       --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config       #
#                       "C:\Program Files (x86)\IAR Systems\Embedded          #
#                       Workbench 6.5\arm\INC\c\DLib_Config_Normal.h"         #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\ -On #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\b #
#                       oard.lst                                              #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\bo #
#                       ard.o                                                 #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\chibios\boards\ST_STM32F4_DISCOVERY\board.c
      1          /*
      2              ChibiOS/RT - Copyright (C) 2006-2013 Giovanni Di Sirio
      3          
      4              Licensed under the Apache License, Version 2.0 (the "License");
      5              you may not use this file except in compliance with the License.
      6              You may obtain a copy of the License at
      7          
      8                  http://www.apache.org/licenses/LICENSE-2.0
      9          
     10              Unless required by applicable law or agreed to in writing, software
     11              distributed under the License is distributed on an "AS IS" BASIS,
     12              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     13              See the License for the specific language governing permissions and
     14              limitations under the License.
     15          */
     16          
     17          #include "ch.h"
     18          #include "hal.h"
     19          
     20          #if HAL_USE_PAL || defined(__DOXYGEN__)
     21          /**
     22           * @brief   PAL setup.
     23           * @details Digital I/O ports static configuration as defined in @p board.h.
     24           *          This variable is used by the HAL when initializing the PAL driver.
     25           */

   \                                 In section .rodata, align 4
     26          const PALConfig pal_default_config =
   \                     pal_default_config:
   \   00000000   0x2AA0AA00         DC32 715172352, 0, 4294945791, 1073807444, 65535, 1431699456, 698880
   \              0x00000000   
   \              0xFFFFABFF   
   \              0x40010054   
   \              0x0000FFFF   
   \              0x55560000   
   \              0x000AAA00   
   \   0000001C   0x00082080         DC32 532608, 576, 4294967295, 1431389461, 65535, 67108864, 64, 35684353
   \              0x00000240   
   \              0xFFFFFFFF   
   \              0x55514515   
   \              0x0000FFFF   
   \              0x04000000   
   \              0x00000040   
   \              0x02208001   
   \   0000003C   0x00000000         DC32 0, 4294967295, 1413813588, 65535, 1610612736, 394752, 1426063616
   \              0xFFFFFFFF   
   \              0x54451554   
   \              0x0000FFFF   
   \              0x60000000   
   \              0x00060600   
   \              0x55000100   
   \   00000058   0x00000000         DC32 0, 4294967295, 5591125, 4095, 0, 0, 64, 0, 4294967295, 0, 65535, 0
   \              0xFFFFFFFF   
   \              0x00555055   
   \              0x00000FFF   
   \              0x00000000   
   \              0x00000000   
   \              0x00000040   
   \              0x00000000   
   \              0xFFFFFFFF   
   \              0x00000000   
   \              0x0000FFFF   
   \              0x00000000   
   \   00000088   0x00000000         DC32 0, 0, 0, 4294967295, 0, 65535, 0, 0, 0, 0, 4294967295, 0, 65535, 0
   \              0x00000000   
   \              0x00000000   
   \              0xFFFFFFFF   
   \              0x00000000   
   \              0x0000FFFF   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0xFFFFFFFF   
   \              0x00000000   
   \              0x0000FFFF   
   \              0x00000000   
   \   000000C0   0x00000000         DC32 0, 0, 0, 4294967295, 0, 65535, 0, 0, 0, 0, 4294967295, 0, 65535, 0
   \              0x00000000   
   \              0x00000000   
   \              0xFFFFFFFF   
   \              0x00000000   
   \              0x0000FFFF   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0xFFFFFFFF   
   \              0x00000000   
   \              0x0000FFFF   
   \              0x00000000   
   \   000000F8   0x00000000         DC32 0
     27          {
     28            {VAL_GPIOA_MODER, VAL_GPIOA_OTYPER, VAL_GPIOA_OSPEEDR, VAL_GPIOA_PUPDR,
     29             VAL_GPIOA_ODR,   VAL_GPIOA_AFRL,   VAL_GPIOA_AFRH},
     30            {VAL_GPIOB_MODER, VAL_GPIOB_OTYPER, VAL_GPIOB_OSPEEDR, VAL_GPIOB_PUPDR,
     31             VAL_GPIOB_ODR,   VAL_GPIOB_AFRL,   VAL_GPIOB_AFRH},
     32            {VAL_GPIOC_MODER, VAL_GPIOC_OTYPER, VAL_GPIOC_OSPEEDR, VAL_GPIOC_PUPDR,
     33             VAL_GPIOC_ODR,   VAL_GPIOC_AFRL,   VAL_GPIOC_AFRH},
     34            {VAL_GPIOD_MODER, VAL_GPIOD_OTYPER, VAL_GPIOD_OSPEEDR, VAL_GPIOD_PUPDR,
     35             VAL_GPIOD_ODR,   VAL_GPIOD_AFRL,   VAL_GPIOD_AFRH},
     36            {VAL_GPIOE_MODER, VAL_GPIOE_OTYPER, VAL_GPIOE_OSPEEDR, VAL_GPIOE_PUPDR,
     37             VAL_GPIOE_ODR,   VAL_GPIOE_AFRL,   VAL_GPIOE_AFRH},
     38            {VAL_GPIOF_MODER, VAL_GPIOF_OTYPER, VAL_GPIOF_OSPEEDR, VAL_GPIOF_PUPDR,
     39             VAL_GPIOF_ODR,   VAL_GPIOF_AFRL,   VAL_GPIOF_AFRH},
     40            {VAL_GPIOG_MODER, VAL_GPIOG_OTYPER, VAL_GPIOG_OSPEEDR, VAL_GPIOG_PUPDR,
     41             VAL_GPIOG_ODR,   VAL_GPIOG_AFRL,   VAL_GPIOG_AFRH},
     42            {VAL_GPIOH_MODER, VAL_GPIOH_OTYPER, VAL_GPIOH_OSPEEDR, VAL_GPIOH_PUPDR,
     43             VAL_GPIOH_ODR,   VAL_GPIOH_AFRL,   VAL_GPIOH_AFRH},
     44            {VAL_GPIOI_MODER, VAL_GPIOI_OTYPER, VAL_GPIOI_OSPEEDR, VAL_GPIOI_PUPDR,
     45             VAL_GPIOI_ODR,   VAL_GPIOI_AFRL,   VAL_GPIOI_AFRH}
     46          };
     47          #endif
     48          
     49          /**
     50           * @brief   Early initialization code.
     51           * @details This initialization must be performed just after stack setup
     52           *          and before any other initialization.
     53           */

   \                                 In section .text, align 2, keep-with-next
     54          void __early_init(void) {
   \                     __early_init:
   \   00000000   0xB580             PUSH     {R7,LR}
     55          
     56            stm32_clock_init();
   \   00000002   0x.... 0x....      BL       stm32_clock_init
     57          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
     58          
     59          #if HAL_USE_SDC || defined(__DOXYGEN__)
     60          /**
     61           * @brief   SDC card detection.
     62           */
     63          bool_t sdc_lld_is_card_inserted(SDCDriver *sdcp) {
     64          
     65            (void)sdcp;
     66            /* TODO: Fill the implementation.*/
     67            return TRUE;
     68          }
     69          
     70          /**
     71           * @brief   SDC card write protection detection.
     72           */
     73          bool_t sdc_lld_is_write_protected(SDCDriver *sdcp) {
     74          
     75            (void)sdcp;
     76            /* TODO: Fill the implementation.*/
     77            return FALSE;
     78          }
     79          #endif /* HAL_USE_SDC */
     80          
     81          #if HAL_USE_MMC_SPI || defined(__DOXYGEN__)
     82          /**
     83           * @brief   MMC_SPI card detection.
     84           */

   \                                 In section .text, align 2, keep-with-next
     85          bool_t mmc_lld_is_card_inserted(MMCDriver *mmcp) {
   \                     mmc_lld_is_card_inserted:
   \   00000000   0x0001             MOVS     R1,R0
     86          
     87            (void)mmcp;
     88            /* TODO: Fill the implementation.*/
     89            return TRUE;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x4770             BX       LR               ;; return
     90          }
     91          
     92          /**
     93           * @brief   MMC_SPI card write protection detection.
     94           */

   \                                 In section .text, align 2, keep-with-next
     95          bool_t mmc_lld_is_write_protected(MMCDriver *mmcp) {
   \                     mmc_lld_is_write_protected:
   \   00000000   0x0001             MOVS     R1,R0
     96          
     97            (void)mmcp;
     98            /* TODO: Fill the implementation.*/
     99            return FALSE;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x4770             BX       LR               ;; return
    100          }
    101          #endif
    102          
    103          /**
    104           * @brief   Board-specific initialization code.
    105           * @todo    Add your board-specific code, if any.
    106           */

   \                                 In section .text, align 2, keep-with-next
    107          void boardInit(void) {
    108          }
   \                     boardInit:
   \   00000000   0x4770             BX       LR               ;; return

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   __early_init
         8   -> stm32_clock_init
       0   boardInit
       0   mmc_lld_is_card_inserted
       0   mmc_lld_is_write_protected


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  __early_init
       2  boardInit
       6  mmc_lld_is_card_inserted
       6  mmc_lld_is_write_protected
     252  pal_default_config

 
 252 bytes in section .rodata
  22 bytes in section .text
 
  22 bytes of CODE  memory
 252 bytes of CONST memory

Errors: none
Warnings: none
