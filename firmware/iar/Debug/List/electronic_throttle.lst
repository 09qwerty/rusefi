###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:25:45 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\controllers\elec #
#                       tronic_throttle.cpp                                   #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\controllers\elec #
#                       tronic_throttle.cpp -lCN F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\Debug\List\ -lA                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\  #
#                       -o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj #
#                       \ --no_cse --no_unroll --no_inline --no_code_motion   #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\e #
#                       lectronic_throttle.lst                                #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\el #
#                       ectronic_throttle.o                                   #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\controllers\electronic_throttle.cpp
      1          /**
      2           * @file	electronic_throttle.cpp
      3           * @brief	Electronic Throttle Module driver L298N
      4           *
      5           * todo: make this more universal if/when we get other hardware options
      6           *
      7           * @date Dec 7, 2013
      8           * @author Andrey Belomutskiy, (c) 2012-2015
      9           *
     10           * This file is part of rusEfi - see http://rusefi.com
     11           *
     12           * rusEfi is free software; you can redistribute it and/or modify it under the terms of
     13           * the GNU General Public License as published by the Free Software Foundation; either
     14           * version 3 of the License, or (at your option) any later version.
     15           *
     16           * rusEfi is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
     17           * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     18           * GNU General Public License for more details.
     19           *
     20           * You should have received a copy of the GNU General Public License along with this program.
     21           * If not, see <http://www.gnu.org/licenses/>.
     22           */
     23          
     24          #include "main.h"
     25          #include "electronic_throttle.h"
     26          #include "pin_repository.h"
     27          #include "idle_controller.h"
     28          #include "tps.h"
     29          #include "io_pins.h"
     30          #include "engine_configuration.h"
     31          #include "pwm_generator.h"
     32          #include "pwm_generator_logic.h"
     33          #include "pid.h"
     34          #include "engine_controller.h"
     35          
     36          #if EFI_ELECTRONIC_THROTTLE_BODY || defined(__DOXYGEN__)
     37          
     38          #define ETB_FREQ 400
     39          

   \                                 In section .text, align 4, keep-with-next
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine:
   \   00000000   0xB580             PUSH     {R7,LR}
     40          static LoggingWithStorage logger("ETB");
   \   00000002   0x....             ADR.N    R1,??DataTable6  ;; "ETB"
   \   00000004   0x....             LDR.N    R0,??DataTable8_3
   \   00000006   0x.... 0x....      BL       _ZN18LoggingWithStorageC1EPKc
     41          /**
     42           * @brief Control Thread stack
     43           */
     44          static THD_WORKING_AREA(etbTreadStack, UTILITY_THREAD_STACK_SIZE);
     45          /**
     46           * @brief Pulse-Width Modulation state
     47           */
     48          static SimplePwm etbPwmUp;
   \   0000000A   0x....             LDR.N    R0,??DataTable8_4
   \   0000000C   0x.... 0x....      BL       _ZN9SimplePwmC1Ev
     49          static OutputPin output1;
   \   00000010   0x....             LDR.N    R0,??DataTable8_5
   \   00000012   0x.... 0x....      BL       _ZN9OutputPinC1Ev
     50          static SimplePwm etbPwmDown;
   \   00000016   0x....             LDR.N    R0,??DataTable8_6
   \   00000018   0x.... 0x....      BL       _ZN9SimplePwmC1Ev
     51          static OutputPin output2;
   \   0000001C   0x....             LDR.N    R0,??DataTable8_7
   \   0000001E   0x.... 0x....      BL       _ZN9OutputPinC1Ev
     52          
     53          static Pid pid(10, 0, 0, 1, 90);
   \   00000022   0xED9F 0x....      VLDR.W   S4,??DataTable7  ;; 0x42b40000
   \   00000026   0xEEF7 0x1A00      VMOV.F32 S3,#1.0
   \   0000002A   0xED9F 0x....      VLDR.W   S2,??DataTable7_1  ;; 0x0
   \   0000002E   0xEDDF 0x....      VLDR.W   S1,??DataTable7_1  ;; 0x0
   \   00000032   0xEEB2 0x0A04      VMOV.F32 S0,#10.0
   \   00000036   0x....             LDR.N    R0,??DataTable8_8
   \   00000038   0x.... 0x....      BL       _ZN3PidC1Efffff
   \   0000003C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     logger:
   \   00000000                      DS8 260

   \                                 In section .bss, align 8
   \                     etbTreadStack:
   \   00000000                      DS8 712

   \                                 In section .bss, align 8
   \                     etbPwmUp:
   \   00000000                      DS8 112

   \                                 In section .bss, align 4
   \                     output1:
   \   00000000                      DS8 16

   \                                 In section .bss, align 8
   \                     etbPwmDown:
   \   00000000                      DS8 112

   \                                 In section .bss, align 4
   \                     output2:
   \   00000000                      DS8 16

   \                                 In section .bss, align 4
   \                     pid:
   \   00000000                      DS8 28
     54          
     55          static float prevTps;
     56          

   \                                 In section .bss, align 4
     57          static float currentEtbDuty;
   \                     currentEtbDuty:
   \   00000000                      DS8 4
     58          
     59          EXTERN_ENGINE;
     60          

   \                                 In section .text, align 4, keep-with-next
     61          static msg_t etbThread(void *arg) {
   \                     _Z9etbThreadPv:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0x0004             MOVS     R4,R0
     62                  UNUSED(arg);
     63          	while (true) {
     64          		float pedal = getPedalPosition(PASS_ENGINE_PARAMETER_F);
   \                     ??etbThread_0:
   \   00000008   0x.... 0x....      BL       _Z16getPedalPositionv
   \   0000000C   0xEEB0 0x8A40      VMOV.F32 S16,S0
     65          		float tps = getTPS();
   \   00000010   0x.... 0x....      BL       _Z6getTPSv
   \   00000014   0xEEF0 0x8A40      VMOV.F32 S17,S0
     66          
     67          		currentEtbDuty = pid.getValue(pedal, getTPS(), 1);
   \   00000018   0x.... 0x....      BL       _Z6getTPSv
   \   0000001C   0xEEF0 0x0A40      VMOV.F32 S1,S0
   \   00000020   0xEEB7 0x1A00      VMOV.F32 S2,#1.0
   \   00000024   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   00000028   0x....             LDR.N    R0,??DataTable8_8
   \   0000002A   0x.... 0x....      BL       _ZN3Pid8getValueEfff
   \   0000002E   0x....             LDR.N    R0,??DataTable8_9
   \   00000030   0xED80 0x0A00      VSTR     S0,[R0, #0]
     68          
     69          		etbPwmUp.setSimplePwmDutyCycle(currentEtbDuty / 100);
   \   00000034   0x....             LDR.N    R0,??DataTable8_9
   \   00000036   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   0000003A   0xEDDF 0x....      VLDR.W   S1,??DataTable7_2  ;; 0x42c80000
   \   0000003E   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   00000042   0x....             LDR.N    R0,??DataTable8_4
   \   00000044   0x.... 0x....      BL       _ZN9SimplePwm21setSimplePwmDutyCycleEf
     70          
     71          
     72          //		if (tps != prevTps) {
     73          //			prevTps = tps;
     74          //			scheduleMsg(&logger, "tps=%d", (int) tps);
     75          //		}
     76          
     77          		// this thread is activated 10 times per second
     78          		chThdSleepMilliseconds(boardConfiguration->etbDT);
   \   00000048   0x....             LDR.N    R0,??DataTable8_10
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF8D0 0x0118      LDR      R0,[R0, #+280]
   \   00000050   0xF44F 0x717A      MOV      R1,#+1000
   \   00000054   0x4348             MULS     R0,R1,R0
   \   00000056   0x1E40             SUBS     R0,R0,#+1
   \   00000058   0xF44F 0x717A      MOV      R1,#+1000
   \   0000005C   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000060   0x1C40             ADDS     R0,R0,#+1
   \   00000062   0x.... 0x....      BL       chThdSleep
   \   00000066   0xE7CF             B.N      ??etbThread_0
     79          	}
     80          #if defined __GNUC__
     81          	return -1;
     82          #endif
     83          }
     84          

   \                                 In section .text, align 2, keep-with-next
     85          static void setThrottleConsole(int level) {
   \                     _Z18setThrottleConsolei:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0x0004             MOVS     R4,R0
     86          	scheduleMsg(&logger, "setting throttle=%d", level);
   \   00000008   0x0022             MOVS     R2,R4
   \   0000000A   0x....             LDR.N    R1,??DataTable8_11
   \   0000000C   0x....             LDR.N    R0,??DataTable8_3
   \   0000000E   0x.... 0x....      BL       scheduleMsg
     87          
     88          	float dc = 0.01 + (minI(level, 98)) / 100.0;
   \   00000012   0x2162             MOVS     R1,#+98
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0x.... 0x....      BL       minI
   \   0000001A   0x.... 0x....      BL       __aeabi_i2d
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x....             LDR.N    R3,??DataTable8_12  ;; 0x40590000
   \   00000022   0x.... 0x....      BL       __aeabi_ddiv
   \   00000026   0x....             LDR.N    R2,??DataTable8_13  ;; 0x47ae147b
   \   00000028   0x....             LDR.N    R3,??DataTable8_14  ;; 0x3f847ae1
   \   0000002A   0x.... 0x....      BL       __aeabi_dadd
   \   0000002E   0x.... 0x....      BL       __aeabi_d2f
   \   00000032   0xEE08 0x0A10      VMOV     S16,R0
     89          	etbPwmUp.setSimplePwmDutyCycle(dc);
   \   00000036   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   0000003A   0x....             LDR.N    R0,??DataTable8_4
   \   0000003C   0x.... 0x....      BL       _ZN9SimplePwm21setSimplePwmDutyCycleEf
     90          	print("st = %f\r\n", dc);
   \   00000040   0xEE18 0x0A10      VMOV     R0,S16
   \   00000044   0x.... 0x....      BL       __aeabi_f2d
   \   00000048   0x0002             MOVS     R2,R0
   \   0000004A   0x000B             MOVS     R3,R1
   \   0000004C   0x....             LDR.N    R0,??DataTable8_15
   \   0000004E   0x.... 0x....      BL       print
     91          }
   \   00000052   0xECBD 0x8B02      VPOP     {D8}
   \   00000056   0xBD10             POP      {R4,PC}          ;; return
     92          

   \                                 In section .text, align 2, keep-with-next
     93          static void showEthInfo(void) {
   \                     _Z11showEthInfov:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
     94          	static char pinNameBuffer[16];
     95          
     96          	scheduleMsg(&logger, "pedal=%f %d/%d @", getPedalPosition(), engineConfiguration->pedalPositionMin, engineConfiguration->pedalPositionMax,
     97          			getPinNameByAdcChannel(engineConfiguration->pedalPositionChannel, pinNameBuffer));
   \   00000004   0x....             LDR.N    R1,??DataTable8_16
   \   00000006   0x....             LDR.N    R0,??DataTable8_17
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8D0 0x025C      LDR      R0,[R0, #+604]
   \   0000000E   0x.... 0x....      BL       _Z22getPinNameByAdcChannel13adc_channel_ePc
   \   00000012   0x0004             MOVS     R4,R0
   \   00000014   0x.... 0x....      BL       _Z16getPedalPositionv
   \   00000018   0x9402             STR      R4,[SP, #+8]
   \   0000001A   0x....             LDR.N    R0,??DataTable8_17
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF9B0 0x023E      LDRSH    R0,[R0, #+574]
   \   00000022   0x9001             STR      R0,[SP, #+4]
   \   00000024   0x....             LDR.N    R0,??DataTable8_17
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF9B0 0x023C      LDRSH    R0,[R0, #+572]
   \   0000002C   0x9000             STR      R0,[SP, #+0]
   \   0000002E   0xEE10 0x0A10      VMOV     R0,S0
   \   00000032   0x.... 0x....      BL       __aeabi_f2d
   \   00000036   0x0002             MOVS     R2,R0
   \   00000038   0x000B             MOVS     R3,R1
   \   0000003A   0x....             LDR.N    R1,??DataTable8_18
   \   0000003C   0x....             LDR.N    R0,??DataTable8_3
   \   0000003E   0x.... 0x....      BL       scheduleMsg
     98          
     99          	scheduleMsg(&logger, "tsp=%f", getTPS());
   \   00000042   0x.... 0x....      BL       _Z6getTPSv
   \   00000046   0xEE10 0x0A10      VMOV     R0,S0
   \   0000004A   0x.... 0x....      BL       __aeabi_f2d
   \   0000004E   0x0002             MOVS     R2,R0
   \   00000050   0x000B             MOVS     R3,R1
   \   00000052   0x....             LDR.N    R1,??DataTable8_19
   \   00000054   0x....             LDR.N    R0,??DataTable8_3
   \   00000056   0x.... 0x....      BL       scheduleMsg
    100          
    101          	scheduleMsg(&logger, "etbControlPin1=%s duty=%f", hwPortname(boardConfiguration->etbControlPin1),
    102          			currentEtbDuty);
   \   0000005A   0x....             LDR.N    R0,??DataTable8_10
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0xF8D0 0x00F0      LDR      R0,[R0, #+240]
   \   00000062   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000066   0x0004             MOVS     R4,R0
   \   00000068   0x....             LDR.N    R0,??DataTable8_9
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0x.... 0x....      BL       __aeabi_f2d
   \   00000070   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000074   0x0022             MOVS     R2,R4
   \   00000076   0x....             LDR.N    R1,??DataTable8_20
   \   00000078   0x....             LDR.N    R0,??DataTable8_3
   \   0000007A   0x.... 0x....      BL       scheduleMsg
    103          	scheduleMsg(&logger, "etb P=%f I=%f D=%f dT=%d", boardConfiguration->etbPFactor,
    104          			boardConfiguration->etbIFactor,
    105          			0.0,
    106          			boardConfiguration->etbDT);
   \   0000007E   0x....             LDR.N    R0,??DataTable8_10
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0xF8D0 0x0118      LDR      R0,[R0, #+280]
   \   00000086   0x9004             STR      R0,[SP, #+16]
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x2100             MOVS     R1,#+0
   \   0000008C   0xE9CD 0x0102      STRD     R0,R1,[SP, #+8]
   \   00000090   0x....             LDR.N    R0,??DataTable8_10
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0xF8D0 0x0100      LDR      R0,[R0, #+256]
   \   00000098   0x.... 0x....      BL       __aeabi_f2d
   \   0000009C   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   000000A0   0x....             LDR.N    R0,??DataTable8_10
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0xF8D0 0x00FC      LDR      R0,[R0, #+252]
   \   000000A8   0x.... 0x....      BL       __aeabi_f2d
   \   000000AC   0x0002             MOVS     R2,R0
   \   000000AE   0x000B             MOVS     R3,R1
   \   000000B0   0x....             LDR.N    R1,??DataTable8_21
   \   000000B2   0x....             LDR.N    R0,??DataTable8_3
   \   000000B4   0x.... 0x....      BL       scheduleMsg
    107          }
   \   000000B8   0xB006             ADD      SP,SP,#+24
   \   000000BA   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??pinNameBuffer:
   \   00000000                      DS8 16
    108          

   \                                 In section .text, align 4, keep-with-next
    109          static void apply(void) {
   \                     _Z5applyv:
   \   00000000   0xB580             PUSH     {R7,LR}
    110          	pid.updateFactors(boardConfiguration->etbPFactor, boardConfiguration->etbIFactor, 0);
   \   00000002   0xED9F 0x....      VLDR.W   S2,??DataTable7_1  ;; 0x0
   \   00000006   0x....             LDR.N    R0,??DataTable8_10
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xEDD0 0x0A40      VLDR     S1,[R0, #+256]
   \   0000000E   0x....             LDR.N    R0,??DataTable8_10
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xED90 0x0A3F      VLDR     S0,[R0, #+252]
   \   00000016   0x....             LDR.N    R0,??DataTable8_8
   \   00000018   0x.... 0x....      BL       _ZN3Pid13updateFactorsEfff
    111          }
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return
    112          

   \                                 In section .text, align 2, keep-with-next
    113          static void setEtbPFactor(float value) {
   \                     _Z13setEtbPFactorf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    114          	boardConfiguration->etbPFactor = value;
   \   0000000A   0x....             LDR.N    R0,??DataTable8_10
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xED80 0x8A3F      VSTR     S16,[R0, #+252]
    115          	apply();
   \   00000012   0x.... 0x....      BL       _Z5applyv
    116          	showEthInfo();
   \   00000016   0x.... 0x....      BL       _Z11showEthInfov
    117          }
   \   0000001A   0xECBD 0x8B02      VPOP     {D8}
   \   0000001E   0xBD01             POP      {R0,PC}          ;; return
    118          

   \                                 In section .text, align 2, keep-with-next
    119          static void setEtbIFactor(float value) {
   \                     _Z13setEtbIFactorf:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
    120          	boardConfiguration->etbIFactor = value;
   \   0000000A   0x....             LDR.N    R0,??DataTable8_10
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xED80 0x8A40      VSTR     S16,[R0, #+256]
    121          	apply();
   \   00000012   0x.... 0x....      BL       _Z5applyv
    122          	showEthInfo();
   \   00000016   0x.... 0x....      BL       _Z11showEthInfov
    123          }
   \   0000001A   0xECBD 0x8B02      VPOP     {D8}
   \   0000001E   0xBD01             POP      {R0,PC}          ;; return
    124          

   \                                 In section .text, align 2, keep-with-next
    125          void setDefaultEtbParameters(void) {
    126          	engineConfiguration->pedalPositionMax = 6;
   \                     _Z23setDefaultEtbParametersv:
   \   00000000   0x....             LDR.N    R0,??DataTable8_17
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x2106             MOVS     R1,#+6
   \   00000006   0xF8A0 0x123E      STRH     R1,[R0, #+574]
    127          	boardConfiguration->etbPFactor = 10;
   \   0000000A   0x....             LDR.N    R0,??DataTable8_10
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x....             LDR.N    R1,??DataTable8_22  ;; 0x41200000
   \   00000010   0xF8C0 0x10FC      STR      R1,[R0, #+252]
    128          	boardConfiguration->etbIFactor = 0;
   \   00000014   0x....             LDR.N    R0,??DataTable8_10
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0xF8C0 0x1100      STR      R1,[R0, #+256]
    129          	boardConfiguration->etbDT = 100;
   \   0000001E   0x....             LDR.N    R0,??DataTable8_10
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x2164             MOVS     R1,#+100
   \   00000024   0xF8C0 0x1118      STR      R1,[R0, #+280]
    130          }
   \   00000028   0x4770             BX       LR               ;; return
    131          

   \                                 In section .text, align 2, keep-with-next
    132          void applyPinState2(PwmConfig *state, int stateIndex) {
   \                     _Z14applyPinState2P9PwmConfigi:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    133          	applyPinState(state, stateIndex);
   \   00000006   0x0029             MOVS     R1,R5
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       _Z13applyPinStateP9PwmConfigi
    134          }
   \   0000000E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    135          

   \                                 In section .text, align 4, keep-with-next
    136          void initElectronicThrottle(void) {
   \                     _Z22initElectronicThrottlev:
   \   00000000   0xB580             PUSH     {R7,LR}
    137          	// these two lines are controlling direction
    138          //	outputPinRegister("etb1", ELECTRONIC_THROTTLE_CONTROL_1, ETB_CONTROL_LINE_1_PORT, ETB_CONTROL_LINE_1_PIN);
    139          //	outputPinRegister("etb2", ELECTRONIC_THROTTLE_CONTROL_2, ETB_CONTROL_LINE_2_PORT, ETB_CONTROL_LINE_2_PIN);
    140          
    141          	// this line used for PWM
    142          	startSimplePwmExt(&etbPwmUp, "etb1",
    143          			boardConfiguration->etbControlPin1,
    144          			&output1,
    145          			ETB_FREQ,
    146          			0.80,
    147          			applyPinState2);
   \   00000002   0x....             LDR.N    R0,??DataTable8_23
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0xEDDF 0x....      VLDR.W   S1,??DataTable8  ;; 0x3f4ccccd
   \   0000000A   0xED9F 0x....      VLDR.W   S0,??DataTable8_1  ;; 0x43c80000
   \   0000000E   0x....             LDR.N    R3,??DataTable8_5
   \   00000010   0x....             LDR.N    R0,??DataTable8_10
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF8D0 0x20F0      LDR      R2,[R0, #+240]
   \   00000018   0x....             LDR.N    R1,??DataTable8_24
   \   0000001A   0x....             LDR.N    R0,??DataTable8_4
   \   0000001C   0x.... 0x....      BL       _Z17startSimplePwmExtP9PwmConfigPKc11brain_pin_eP9OutputPinffPFvS0_iE
    148          	startSimplePwmExt(&etbPwmUp, "etb2",
    149          			boardConfiguration->etbControlPin2,
    150          			&output2,
    151          			ETB_FREQ,
    152          			0.80,
    153          			applyPinState);
   \   00000020   0x....             LDR.N    R0,??DataTable8_25
   \   00000022   0x9000             STR      R0,[SP, #+0]
   \   00000024   0xEDDF 0x....      VLDR.W   S1,??DataTable8  ;; 0x3f4ccccd
   \   00000028   0xED9F 0x....      VLDR.W   S0,??DataTable8_1  ;; 0x43c80000
   \   0000002C   0x....             LDR.N    R3,??DataTable8_7
   \   0000002E   0x....             LDR.N    R0,??DataTable8_10
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF8D0 0x20F4      LDR      R2,[R0, #+244]
   \   00000036   0x....             LDR.N    R1,??DataTable8_26
   \   00000038   0x....             LDR.N    R0,??DataTable8_4
   \   0000003A   0x.... 0x....      BL       _Z17startSimplePwmExtP9PwmConfigPKc11brain_pin_eP9OutputPinffPFvS0_iE
    154          
    155          	addConsoleActionI("e", setThrottleConsole);
   \   0000003E   0x....             LDR.N    R1,??DataTable8_27
   \   00000040   0x....             ADR.N    R0,??DataTable8_2  ;; "e"
   \   00000042   0x.... 0x....      BL       addConsoleActionI
    156          
    157          	addConsoleAction("ethinfo", showEthInfo);
   \   00000046   0x....             LDR.N    R1,??DataTable8_28
   \   00000048   0x....             LDR.N    R0,??DataTable8_29
   \   0000004A   0x.... 0x....      BL       addConsoleAction
    158          
    159          	addConsoleActionF("set_etb_p", setEtbPFactor);
   \   0000004E   0x....             LDR.N    R1,??DataTable8_30
   \   00000050   0x....             LDR.N    R0,??DataTable8_31
   \   00000052   0x.... 0x....      BL       addConsoleActionF
    160          	addConsoleActionF("set_etb_i", setEtbIFactor);
   \   00000056   0x....             LDR.N    R1,??DataTable8_32
   \   00000058   0x....             LDR.N    R0,??DataTable8_33
   \   0000005A   0x.... 0x....      BL       addConsoleActionF
    161          
    162          	apply();
   \   0000005E   0x.... 0x....      BL       _Z5applyv
    163          
    164          	chThdCreateStatic(etbTreadStack, sizeof(etbTreadStack), NORMALPRIO, (tfunc_t) etbThread, NULL);
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x9000             STR      R0,[SP, #+0]
   \   00000066   0x....             LDR.N    R3,??DataTable8_34
   \   00000068   0x2240             MOVS     R2,#+64
   \   0000006A   0xF44F 0x7132      MOV      R1,#+712
   \   0000006E   0x....             LDR.N    R0,??DataTable8_35
   \   00000070   0x.... 0x....      BL       chThdCreateStatic
    165          }
   \   00000074   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x45 0x54          DC8      "ETB"
   \              0x42 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x42B40000         DC32     0x42b40000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x00000000         DC32     0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x3F4CCCCD         DC32     0x3f4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x43C80000         DC32     0x43c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x65 0x00          DC8      "e",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     logger

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     etbPwmUp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x........         DC32     output1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x........         DC32     etbPwmDown

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x........         DC32     output2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x........         DC32     pid

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x........         DC32     currentEtbDuty

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x........         DC32     `?<Constant "setting throttle=%d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x40590000         DC32     0x40590000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x47AE147B         DC32     0x47ae147b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x3F847AE1         DC32     0x3f847ae1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0x........         DC32     `?<Constant "st = %f\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \   00000000   0x........         DC32     ??pinNameBuffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \   00000000   0x........         DC32     engineConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \   00000000   0x........         DC32     `?<Constant "pedal=%f %d/%d @">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \   00000000   0x........         DC32     `?<Constant "tsp=%f">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_20:
   \   00000000   0x........         DC32     `?<Constant "etbControlPin1=%s dut...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_21:
   \   00000000   0x........         DC32     `?<Constant "etb P=%f I=%f D=%f dT=%d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_22:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_23:
   \   00000000   0x........         DC32     _Z14applyPinState2P9PwmConfigi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_24:
   \   00000000   0x........         DC32     `?<Constant "etb1">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_25:
   \   00000000   0x........         DC32     _Z13applyPinStateP9PwmConfigi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_26:
   \   00000000   0x........         DC32     `?<Constant "etb2">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_27:
   \   00000000   0x........         DC32     _Z18setThrottleConsolei

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_28:
   \   00000000   0x........         DC32     _Z11showEthInfov

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_29:
   \   00000000   0x........         DC32     `?<Constant "ethinfo">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_30:
   \   00000000   0x........         DC32     _Z13setEtbPFactorf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_31:
   \   00000000   0x........         DC32     `?<Constant "set_etb_p">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_32:
   \   00000000   0x........         DC32     _Z13setEtbIFactorf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_33:
   \   00000000   0x........         DC32     `?<Constant "set_etb_i">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_34:
   \   00000000   0x........         DC32     _Z9etbThreadPv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_35:
   \   00000000   0x........         DC32     etbTreadStack

   \                                 In section .init_array, align 4, keep-with-next, root
   \   00000000   0x........         DC32    RELOC_ARM_TARGET1 __sti__routine

   \                                 In section .rodata, align 4
   \                     `?<Constant "setting throttle=%d">`:
   \   00000000   0x73 0x65          DC8 "setting throttle=%d"
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x74 0x68    
   \              0x72 0x6F    
   \              0x74 0x74    
   \              0x6C 0x65    
   \              0x3D 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "st = %f\\r\\n">`:
   \   00000000   0x73 0x74          DC8 "st = %f\015\012"
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x66 0x0D    
   \              0x0A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "pedal=%f %d/%d @">`:
   \   00000000   0x70 0x65          DC8 "pedal=%f %d/%d @"
   \              0x64 0x61    
   \              0x6C 0x3D    
   \              0x25 0x66    
   \              0x20 0x25    
   \              0x64 0x2F    
   \              0x25 0x64    
   \              0x20 0x40    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "tsp=%f">`:
   \   00000000   0x74 0x73          DC8 "tsp=%f"
   \              0x70 0x3D    
   \              0x25 0x66    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "etbControlPin1=%s dut...">`:
   \   00000000   0x65 0x74          DC8 "etbControlPin1=%s duty=%f"
   \              0x62 0x43    
   \              0x6F 0x6E    
   \              0x74 0x72    
   \              0x6F 0x6C    
   \              0x50 0x69    
   \              0x6E 0x31    
   \              0x3D 0x25    
   \              0x73 0x20    
   \              0x64 0x75    
   \              0x74 0x79    
   \              0x3D 0x25    
   \              0x66 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "etb P=%f I=%f D=%f dT=%d">`:
   \   00000000   0x65 0x74          DC8 "etb P=%f I=%f D=%f dT=%d"
   \              0x62 0x20    
   \              0x50 0x3D    
   \              0x25 0x66    
   \              0x20 0x49    
   \              0x3D 0x25    
   \              0x66 0x20    
   \              0x44 0x3D    
   \              0x25 0x66    
   \              0x20 0x64    
   \              0x54 0x3D    
   \              0x25 0x64    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "etb1">`:
   \   00000000   0x65 0x74          DC8 "etb1"
   \              0x62 0x31    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "etb2">`:
   \   00000000   0x65 0x74          DC8 "etb2"
   \              0x62 0x32    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2
   \   00000000   0x65 0x00          DC8 "e"

   \                                 In section .rodata, align 4
   \                     `?<Constant "ethinfo">`:
   \   00000000   0x65 0x74          DC8 "ethinfo"
   \              0x68 0x69    
   \              0x6E 0x66    
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_etb_p">`:
   \   00000000   0x73 0x65          DC8 "set_etb_p"
   \              0x74 0x5F    
   \              0x65 0x74    
   \              0x62 0x5F    
   \              0x70 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_etb_i">`:
   \   00000000   0x73 0x65          DC8 "set_etb_i"
   \              0x74 0x5F    
   \              0x65 0x74    
   \              0x62 0x5F    
   \              0x69 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x45 0x54          DC8 "ETB"
   \              0x42 0x00    
    166          
    167          #endif /* EFI_ELECTRONIC_THROTTLE_BODY */
    168          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   __sti__routine()
         8   -> LoggingWithStorage::LoggingWithStorage(char const *)
         8   -> OutputPin::OutputPin()
         8   -> Pid::Pid(float, float, float, float, float)
         8   -> SimplePwm::SimplePwm()
       8   apply()
         8   -> Pid::updateFactors(float, float, float)
      16   applyPinState2(PwmConfig *, int)
        16   -> applyPinState(PwmConfig *, int)
      16   etbThread(void *)
        16   -> Pid::getValue(float, float, float)
        16   -> SimplePwm::setSimplePwmDutyCycle(float)
        16   -> chThdSleep
        16   -> getPedalPosition()
        16   -> getTPS()
       8   initElectronicThrottle()
         8   -> addConsoleAction
         8   -> addConsoleActionF
         8   -> addConsoleActionI
         8   -> apply()
         8   -> chThdCreateStatic
         8   -> startSimplePwmExt(PwmConfig *, char const *, brain_pin_e, OutputPin *, float, float, pwm_gen_callback *)
       0   setDefaultEtbParameters()
      16   setEtbIFactor(float)
        16   -> apply()
        16   -> showEthInfo()
      16   setEtbPFactor(float)
        16   -> apply()
        16   -> showEthInfo()
      16   setThrottleConsole(int)
        16   -> SimplePwm::setSimplePwmDutyCycle(float)
        16   -> __aeabi_d2f
        16   -> __aeabi_dadd
        16   -> __aeabi_ddiv
        16   -> __aeabi_f2d
        16   -> __aeabi_i2d
        16   -> minI
        16   -> print
        16   -> scheduleMsg
      32   showEthInfo()
        32   -> __aeabi_f2d
        32   -> getPedalPosition()
        32   -> getPinNameByAdcChannel(adc_channel_e, char *)
        32   -> getTPS()
        32   -> hwPortname(brain_pin_e)
        32   -> scheduleMsg


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "ETB">
       2  ?<Constant "e">
      28  ?<Constant "etb P=%f I=%f D=%f dT=%d">
       8  ?<Constant "etb1">
       8  ?<Constant "etb2">
      28  ?<Constant "etbControlPin1=%s dut...">
       8  ?<Constant "ethinfo">
      20  ?<Constant "pedal=%f %d/%d @">
      12  ?<Constant "set_etb_i">
      12  ?<Constant "set_etb_p">
      20  ?<Constant "setting throttle=%d">
      12  ?<Constant "st = %f\r\n">
       8  ?<Constant "tsp=%f">
       4  ??DataTable6
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_20
       4  ??DataTable8_21
       4  ??DataTable8_22
       4  ??DataTable8_23
       4  ??DataTable8_24
       4  ??DataTable8_25
       4  ??DataTable8_26
       4  ??DataTable8_27
       4  ??DataTable8_28
       4  ??DataTable8_29
       4  ??DataTable8_3
       4  ??DataTable8_30
       4  ??DataTable8_31
       4  ??DataTable8_32
       4  ??DataTable8_33
       4  ??DataTable8_34
       4  ??DataTable8_35
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
      62  __sti__routine()
      30  apply()
      16  applyPinState2(PwmConfig *, int)
       4  currentEtbDuty
     112  etbPwmDown
     112  etbPwmUp
     104  etbThread(void *)
     712  etbTreadStack
     118  initElectronicThrottle()
     260  logger
      16  output1
      16  output2
      28  pid
      16  pinNameBuffer
      42  setDefaultEtbParameters()
      32  setEtbIFactor(float)
      32  setEtbPFactor(float)
      88  setThrottleConsole(int)
     188  showEthInfo()
       4  -- Other

 
 1 276 bytes in section .bss
     4 bytes in section .init_array
   170 bytes in section .rodata
   872 bytes in section .text
 
   876 bytes of CODE  memory
   170 bytes of CONST memory
 1 276 bytes of DATA  memory

Errors: none
Warnings: 2
