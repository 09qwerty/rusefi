###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:08:51 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\controllers\trig #
#                       ger\trigger_bmw.cpp                                   #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\controllers\trig #
#                       ger\trigger_bmw.cpp -lCN F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\Debug\List\ -lA                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\  #
#                       -o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj #
#                       \ --no_cse --no_unroll --no_inline --no_code_motion   #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\t #
#                       rigger_bmw.lst                                        #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\tr #
#                       igger_bmw.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\controllers\trigger\trigger_bmw.cpp
      1          /**
      2           * @file	trigger_bmw.cpp
      3           *
      4           * @date May 11, 2014
      5           * @author Andrey Belomutskiy, (c) 2012-2015
      6           */
      7          
      8          #include "trigger_bmw.h"
      9          

   \                                 In section .text, align 2, keep-with-next
     10          static inline float addPair(TriggerShape *s, float a, float w) {
   \                     _Z7addPairP12TriggerShapeff:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0xEEF0 0x8A40      VMOV.F32 S17,S0
   \   0000000C   0xEEB0 0x8A60      VMOV.F32 S16,S1
     11          	s->addEvent(a, T_SECONDARY, TV_HIGH);
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     12          	a += w;
   \   0000001E   0xEE78 0x8A88      VADD.F32 S17,S17,S16
     13          	s->addEvent(a, T_SECONDARY, TV_LOW);
   \   00000022   0x2200             MOVS     R2,#+0
   \   00000024   0x2101             MOVS     R1,#+1
   \   00000026   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     14          	a += w;
   \   00000030   0xEE78 0x8A88      VADD.F32 S17,S17,S16
     15          	return a;
   \   00000034   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   00000038   0xECBD 0x8B02      VPOP     {D8}
   \   0000003C   0xBD10             POP      {R4,PC}          ;; return
     16          }
     17          

   \                                 In section .text, align 4, keep-with-next
     18          void configureMiniCooperTriggerShape(TriggerShape *s) {
   \                     _Z31configureMiniCooperTriggerShapeP12TriggerShape:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0xED2D 0x8B04      VPUSH    {D8-D9}
   \   00000006   0x0004             MOVS     R4,R0
     19          	s->reset(FOUR_STROKE_CAM_SENSOR, true);
   \   00000008   0x2201             MOVS     R2,#+1
   \   0000000A   0x2102             MOVS     R1,#+2
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       _ZN12TriggerShape5resetE16operation_mode_eb
     20          
     21          //	s->initialState[0] = 1;
     22          
     23          	float w = 360.0 / 121;
   \   00000012   0xED9F 0x....      VLDR.W   S16,??DataTable0  ;; 0x403e69c9
     24          	float a = w / 2;
   \   00000016   0xEEB0 0x0A00      VMOV.F32 S0,#2.0
   \   0000001A   0xEEC8 0x8A00      VDIV.F32 S17,S16,S0
     25          	s->addEvent(a, T_SECONDARY, TV_LOW);
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     26          	a += w;
   \   0000002C   0xEE78 0x8A88      VADD.F32 S17,S17,S16
     27          
     28          	for (int i = 0; i <= 22; i++) {
   \   00000030   0x2500             MOVS     R5,#+0
   \                     ??configureMiniCooperTriggerShape_0:
   \   00000032   0x2D17             CMP      R5,#+23
   \   00000034   0xDA0A             BGE.N    ??configureMiniCooperTriggerShape_1
     29          		a = addPair(s, a, w);
   \   00000036   0xEEF0 0x0A48      VMOV.F32 S1,S16
   \   0000003A   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   0000003E   0x0020             MOVS     R0,R4
   \   00000040   0x.... 0x....      BL       _Z7addPairP12TriggerShapeff
   \   00000044   0xEEF0 0x8A40      VMOV.F32 S17,S0
     30          	}
   \   00000048   0x1C6D             ADDS     R5,R5,#+1
   \   0000004A   0xE7F2             B.N      ??configureMiniCooperTriggerShape_0
     31          
     32          	a += 3 * w;
   \                     ??configureMiniCooperTriggerShape_1:
   \   0000004C   0xEEB0 0x0A08      VMOV.F32 S0,#3.0
   \   00000050   0xEE48 0x8A00      VMLA.F32 S17,S16,S0
     33          
     34          	float firstGapAngle = a;
   \   00000054   0xEEB0 0x9A68      VMOV.F32 S18,S17
     35          
     36          	s->addEvent(a, T_SECONDARY, TV_HIGH);
   \   00000058   0x2201             MOVS     R2,#+1
   \   0000005A   0x2101             MOVS     R1,#+1
   \   0000005C   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   00000060   0x0020             MOVS     R0,R4
   \   00000062   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     37          	a += 3 * w;
   \   00000066   0xEEB0 0x0A08      VMOV.F32 S0,#3.0
   \   0000006A   0xEE48 0x8A00      VMLA.F32 S17,S16,S0
     38          	s->addEvent(a, T_SECONDARY, TV_LOW);
   \   0000006E   0x2200             MOVS     R2,#+0
   \   00000070   0x2101             MOVS     R1,#+1
   \   00000072   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   00000076   0x0020             MOVS     R0,R4
   \   00000078   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     39          	a += w;
   \   0000007C   0xEE78 0x8A88      VADD.F32 S17,S17,S16
     40          
     41          	for (int i = 0; i < 36; i++) {
   \   00000080   0x2500             MOVS     R5,#+0
   \                     ??configureMiniCooperTriggerShape_2:
   \   00000082   0x2D24             CMP      R5,#+36
   \   00000084   0xDA0A             BGE.N    ??configureMiniCooperTriggerShape_3
     42          		a = addPair(s, a, w);
   \   00000086   0xEEF0 0x0A48      VMOV.F32 S1,S16
   \   0000008A   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   0000008E   0x0020             MOVS     R0,R4
   \   00000090   0x.... 0x....      BL       _Z7addPairP12TriggerShapeff
   \   00000094   0xEEF0 0x8A40      VMOV.F32 S17,S0
     43          	}
   \   00000098   0x1C6D             ADDS     R5,R5,#+1
   \   0000009A   0xE7F2             B.N      ??configureMiniCooperTriggerShape_2
     44          
     45          	s->addEvent(376, T_PRIMARY, TV_HIGH);
   \                     ??configureMiniCooperTriggerShape_3:
   \   0000009C   0x2201             MOVS     R2,#+1
   \   0000009E   0x2100             MOVS     R1,#+0
   \   000000A0   0xED9F 0x....      VLDR.W   S0,??DataTable0_1  ;; 0x43bc0000
   \   000000A4   0x0020             MOVS     R0,R4
   \   000000A6   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     46          
     47          	for (int i = 0; i < 21; i++) {
   \   000000AA   0x2500             MOVS     R5,#+0
   \                     ??configureMiniCooperTriggerShape_4:
   \   000000AC   0x2D15             CMP      R5,#+21
   \   000000AE   0xDA0A             BGE.N    ??configureMiniCooperTriggerShape_5
     48          		a = addPair(s, a, w);
   \   000000B0   0xEEF0 0x0A48      VMOV.F32 S1,S16
   \   000000B4   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   000000B8   0x0020             MOVS     R0,R4
   \   000000BA   0x.... 0x....      BL       _Z7addPairP12TriggerShapeff
   \   000000BE   0xEEF0 0x8A40      VMOV.F32 S17,S0
     49          	}
   \   000000C2   0x1C6D             ADDS     R5,R5,#+1
   \   000000C4   0xE7F2             B.N      ??configureMiniCooperTriggerShape_4
     50          	a += 3 * w;
   \                     ??configureMiniCooperTriggerShape_5:
   \   000000C6   0xEEB0 0x0A08      VMOV.F32 S0,#3.0
   \   000000CA   0xEE48 0x8A00      VMLA.F32 S17,S16,S0
     51          
     52          	efiAssertVoid(absF(firstGapAngle + 360 - a) < 0.1, "shape constraint");
   \   000000CE   0xED9F 0x....      VLDR.W   S0,??DataTable0_2  ;; 0x43b40000
   \   000000D2   0xEE39 0x0A00      VADD.F32 S0,S18,S0
   \   000000D6   0xEE30 0x0A68      VSUB.F32 S0,S0,S17
   \   000000DA   0x.... 0x....      BL       absF
   \   000000DE   0xEDDF 0x....      VLDR.W   S1,??DataTable0_3  ;; 0x3dcccccd
   \   000000E2   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   000000E6   0xEEF1 0xFA10      FMSTAT   
   \   000000EA   0xD403             BMI.N    ??configureMiniCooperTriggerShape_6
   \   000000EC   0x....             LDR.N    R0,??DataTable0_5
   \   000000EE   0x.... 0x....      BL       firmwareError
   \   000000F2   0xE048             B.N      ??configureMiniCooperTriggerShape_7
     53          
     54          	s->addEvent(a, T_SECONDARY, TV_HIGH);
   \                     ??configureMiniCooperTriggerShape_6:
   \   000000F4   0x2201             MOVS     R2,#+1
   \   000000F6   0x2101             MOVS     R1,#+1
   \   000000F8   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   000000FC   0x0020             MOVS     R0,R4
   \   000000FE   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     55          	a += 3 * w;
   \   00000102   0xEEB0 0x0A08      VMOV.F32 S0,#3.0
   \   00000106   0xEE48 0x8A00      VMLA.F32 S17,S16,S0
     56          	s->addEvent(a, T_SECONDARY, TV_LOW);
   \   0000010A   0x2200             MOVS     R2,#+0
   \   0000010C   0x2101             MOVS     R1,#+1
   \   0000010E   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   00000112   0x0020             MOVS     R0,R4
   \   00000114   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     57          	a += w;
   \   00000118   0xEE78 0x8A88      VADD.F32 S17,S17,S16
     58          
     59          	for (int i = 0; i < 33; i++) {
   \   0000011C   0x2500             MOVS     R5,#+0
   \                     ??configureMiniCooperTriggerShape_8:
   \   0000011E   0x2D21             CMP      R5,#+33
   \   00000120   0xDA0A             BGE.N    ??configureMiniCooperTriggerShape_9
     60          		a = addPair(s, a, w);
   \   00000122   0xEEF0 0x0A48      VMOV.F32 S1,S16
   \   00000126   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   0000012A   0x0020             MOVS     R0,R4
   \   0000012C   0x.... 0x....      BL       _Z7addPairP12TriggerShapeff
   \   00000130   0xEEF0 0x8A40      VMOV.F32 S17,S0
     61          	}
   \   00000134   0x1C6D             ADDS     R5,R5,#+1
   \   00000136   0xE7F2             B.N      ??configureMiniCooperTriggerShape_8
     62          
     63          	efiAssertVoid(absF(720 - w / 2 - a) < 0.1, "shape constraint");
   \                     ??configureMiniCooperTriggerShape_9:
   \   00000138   0xEEB0 0x0A00      VMOV.F32 S0,#2.0
   \   0000013C   0xEE88 0x0A00      VDIV.F32 S0,S16,S0
   \   00000140   0xEDDF 0x....      VLDR.W   S1,??DataTable0_4  ;; 0x44340000
   \   00000144   0xEE30 0x0AC0      VSUB.F32 S0,S1,S0
   \   00000148   0xEE30 0x0A68      VSUB.F32 S0,S0,S17
   \   0000014C   0x.... 0x....      BL       absF
   \   00000150   0xEDDF 0x....      VLDR.W   S1,??DataTable0_3  ;; 0x3dcccccd
   \   00000154   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000158   0xEEF1 0xFA10      FMSTAT   
   \   0000015C   0xD403             BMI.N    ??configureMiniCooperTriggerShape_10
   \   0000015E   0x....             LDR.N    R0,??DataTable0_5
   \   00000160   0x.... 0x....      BL       firmwareError
   \   00000164   0xE00F             B.N      ??configureMiniCooperTriggerShape_7
     64          	s->addEvent(a, T_SECONDARY, TV_HIGH);
   \                     ??configureMiniCooperTriggerShape_10:
   \   00000166   0x2201             MOVS     R2,#+1
   \   00000168   0x2101             MOVS     R1,#+1
   \   0000016A   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   0000016E   0x0020             MOVS     R0,R4
   \   00000170   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     65          
     66          	s->addEvent(720.0, T_PRIMARY, TV_LOW);
   \   00000174   0x2200             MOVS     R2,#+0
   \   00000176   0x2100             MOVS     R1,#+0
   \   00000178   0xED9F 0x....      VLDR.W   S0,??DataTable0_4  ;; 0x44340000
   \   0000017C   0x0020             MOVS     R0,R4
   \   0000017E   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     67          
     68          	/**
     69          	 * With just one tooth on camshaft synchronization is not needed
     70          	 */
     71          	s->isSynchronizationNeeded = false;
   \   00000182   0x2000             MOVS     R0,#+0
   \   00000184   0x7020             STRB     R0,[R4, #+0]
     72          }
   \                     ??configureMiniCooperTriggerShape_7:
   \   00000186   0xECBD 0x8B04      VPOP     {D8-D9}
   \   0000018A   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x403E69C9         DC32     0x403e69c9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x43BC0000         DC32     0x43bc0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x43B40000         DC32     0x43b40000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x3DCCCCCD         DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x44340000         DC32     0x44340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_5:
   \   00000000   0x........         DC32     `?<Constant "shape constraint">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "shape constraint">`:
   \   00000000   0x73 0x68          DC8 "shape constraint"
   \              0x61 0x70    
   \              0x65 0x20    
   \              0x63 0x6F    
   \              0x6E 0x73    
   \              0x74 0x72    
   \              0x61 0x69    
   \              0x6E 0x74    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   addPair(TriggerShape *, float, float)
        16   -> TriggerShape::addEvent(float, trigger_wheel_e, trigger_value_e)
      32   configureMiniCooperTriggerShape(TriggerShape *)
        32   -> TriggerShape::addEvent(float, trigger_wheel_e, trigger_value_e)
        32   -> TriggerShape::reset(operation_mode_e, bool)
        32   -> absF
        32   -> addPair(TriggerShape *, float, float)
        32   -> firmwareError


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "shape constraint">
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
       4  ??DataTable0_5
      62  addPair(TriggerShape *, float, float)
     396  configureMiniCooperTriggerShape(TriggerShape *)

 
  20 bytes in section .rodata
 482 bytes in section .text
 
 482 bytes of CODE  memory
  20 bytes of CONST memory

Errors: none
Warnings: 1
