###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:28 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\controllers\syst #
#                       em\efiGpio.cpp                                        #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\controllers\syst #
#                       em\efiGpio.cpp -lCN F:\stuff\rusefi_sourceforge\firmw #
#                       are\iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\f #
#                       irmware\iar\Debug\List\ -o                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\   #
#                       --no_cse --no_unroll --no_inline --no_code_motion     #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\e #
#                       fiGpio.lst                                            #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ef #
#                       iGpio.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\controllers\system\efiGpio.cpp
      1          /**
      2           * @file	efiGpio.cpp
      3           *
      4           * @date Sep 26, 2014
      5           * @author Andrey Belomutskiy, (c) 2012-2015
      6           */
      7          
      8          #include "main.h"
      9          #if EFI_GPIO
     10          #include "efiGpio.h"

   \                                 In section .text, align 4
   \   __code __interwork __softfp engine_pins_s::<_ZN13engine_pins_sC1Ev>()
   \                     _ZN13engine_pins_sC1Ev:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN9OutputPinC1Ev
   \   0000000A   0xF114 0x0010      ADDS     R0,R4,#+16
   \   0000000E   0x.... 0x....      BL       _ZN9OutputPinC1Ev
   \   00000012   0xF114 0x0020      ADDS     R0,R4,#+32
   \   00000016   0x.... 0x....      BL       _ZN9OutputPinC1Ev
   \   0000001A   0xF114 0x0030      ADDS     R0,R4,#+48
   \   0000001E   0x.... 0x....      BL       _ZN9OutputPinC1Ev
   \   00000022   0xF114 0x0040      ADDS     R0,R4,#+64
   \   00000026   0x.... 0x....      BL       _ZN9OutputPinC1Ev
   \   0000002A   0xF114 0x0050      ADDS     R0,R4,#+80
   \   0000002E   0x.... 0x....      BL       _ZN9OutputPinC1Ev
   \   00000032   0x230C             MOVS     R3,#+12
   \   00000034   0x2214             MOVS     R2,#+20
   \   00000036   0x4907             LDR.N    R1,`?<Constructor (complete)>_0`
   \   00000038   0xF114 0x0060      ADDS     R0,R4,#+96
   \   0000003C   0x.... 0x....      BL       __aeabi_vec_ctor_nocookie_nodtor
   \   00000040   0x230C             MOVS     R3,#+12
   \   00000042   0x2214             MOVS     R2,#+20
   \   00000044   0x4903             LDR.N    R1,`?<Constructor (complete)>_0`
   \   00000046   0xF514 0x70A8      ADDS     R0,R4,#+336
   \   0000004A   0x.... 0x....      BL       __aeabi_vec_ctor_nocookie_nodtor
   \   0000004E   0x0020             MOVS     R0,R4
   \   00000050   0xBD10             POP      {R4,PC}          ;; return
   \   00000052   0xBF00             Nop      
   \                     `?<Constructor (complete)>_0`:
   \   00000054   0x........         DC32     _ZN14NamedOutputPinC1Ev
     11          #include "io_pins.h"
     12          #if EFI_PROD_CODE || defined(__DOXYGEN__)
     13          #include "gpio_helper.h"
     14          #endif
     15          

   \                                 In section .bss, align 4
     16          pin_output_mode_e OUTPUT_MODE_DEFAULT = OM_DEFAULT;
   \                     OUTPUT_MODE_DEFAULT:
   \   00000000                      DS8 4
     17          
     18          // todo: clean this mess, this should become 'static'/private

   \                                 In section .text, align 2, keep-with-next
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine:
   \   00000000   0xB580             PUSH     {R7,LR}
     19          engine_pins_s enginePins;
   \   00000002   0x....             LDR.N    R0,??DataTable3
   \   00000004   0x.... 0x....      BL       _ZN13engine_pins_sC1Ev
   \   00000008   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     enginePins:
   \   00000000                      DS8 576
     20          

   \                                 In section .text, align 2, keep-with-next
   \   __code __interwork __softfp NamedOutputPin::subobject NamedOutputPin()
   \                     _ZN14NamedOutputPinC2Ev:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN14NamedOutputPinC1Ev
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     21          NamedOutputPin::NamedOutputPin() : OutputPin() {
   \                     _ZN14NamedOutputPinC1Ev:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN9OutputPinC2Ev
     22          	name = NULL;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x6120             STR      R0,[R4, #+16]
     23          }
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0xBD10             POP      {R4,PC}          ;; return
     24          

   \                                 In section .text, align 2, keep-with-next
   \   __code __interwork __softfp NamedOutputPin::subobject NamedOutputPin(char const *)
   \                     _ZN14NamedOutputPinC2EPKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN14NamedOutputPinC1EPKc
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     25          NamedOutputPin::NamedOutputPin(const char *name) : OutputPin() {
   \                     _ZN14NamedOutputPinC1EPKc:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       _ZN9OutputPinC2Ev
     26          	this->name = name;
   \   0000000C   0x6125             STR      R5,[R4, #+16]
     27          }
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     28          

   \                                 In section .text, align 2, keep-with-next
   \   __code __interwork __softfp OutputPin::subobject OutputPin()
   \                     _ZN9OutputPinC2Ev:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN9OutputPinC1Ev
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     29          OutputPin::OutputPin() {
     30          	modePtr = &OUTPUT_MODE_DEFAULT;
   \                     _ZN9OutputPinC1Ev:
   \   00000000   0x....             LDR.N    R1,??DataTable3_1
   \   00000002   0x6081             STR      R1,[R0, #+8]
     31          #if EFI_PROD_CODE || defined(__DOXYGEN__)
     32          	port = NULL;
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x6001             STR      R1,[R0, #+0]
     33          	pin = 0;
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x6041             STR      R1,[R0, #+4]
     34          	currentLogicValue = INITIAL_PIN_STATE;
   \   0000000C   0xF05F 0x31FF      MOVS     R1,#-1
   \   00000010   0x60C1             STR      R1,[R0, #+12]
     35          #endif
     36          }
   \   00000012   0x4770             BX       LR               ;; return
     37          

   \                                 In section .text, align 2, keep-with-next
     38          bool_t OutputPin::isInitialized() {
     39          #if EFI_PROD_CODE || defined(__DOXYGEN__)
     40          	return port != NULL;
   \                     _ZN9OutputPin13isInitializedEv:
   \   00000000   0x6800             LDR      R0,[R0, #+0]
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD001             BEQ.N    ??isInitialized_0
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0xE000             B.N      ??isInitialized_1
   \                     ??isInitialized_0:
   \   0000000A   0x2000             MOVS     R0,#+0
   \                     ??isInitialized_1:
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x4770             BX       LR               ;; return
     41          #else
     42          	return false;
     43          #endif
     44          }
     45          

   \                                 In section .text, align 2, keep-with-next
     46          void OutputPin::setValue(int logicValue) {
   \                     _ZN9OutputPin8setValueEi:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     47          	doSetOutputPinValue2(this, logicValue);
   \   00000006   0x6820             LDR      R0,[R4, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD033             BEQ.N    ??setValue_0
   \   0000000C   0x68A0             LDR      R0,[R4, #+8]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD103             BNE.N    ??setValue_1
   \   00000012   0x....             LDR.N    R0,??DataTable3_2
   \   00000014   0x.... 0x....      BL       firmwareError
   \   00000018   0xE02C             B.N      ??setValue_2
   \                     ??setValue_1:
   \   0000001A   0x68A0             LDR      R0,[R4, #+8]
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x0006             MOVS     R6,R0
   \   00000020   0x2E04             CMP      R6,#+4
   \   00000022   0xDB03             BLT.N    ??setValue_3
   \   00000024   0x....             LDR.N    R0,??DataTable3_3
   \   00000026   0x.... 0x....      BL       firmwareError
   \   0000002A   0xE023             B.N      ??setValue_2
   \                     ??setValue_3:
   \   0000002C   0x2D00             CMP      R5,#+0
   \   0000002E   0xD008             BEQ.N    ??setValue_4
   \   00000030   0x2E00             CMP      R6,#+0
   \   00000032   0xD001             BEQ.N    ??setValue_5
   \   00000034   0x2E02             CMP      R6,#+2
   \   00000036   0xD101             BNE.N    ??setValue_6
   \                     ??setValue_5:
   \   00000038   0x2701             MOVS     R7,#+1
   \   0000003A   0xE000             B.N      ??setValue_7
   \                     ??setValue_6:
   \   0000003C   0x2700             MOVS     R7,#+0
   \                     ??setValue_7:
   \   0000003E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000040   0xE007             B.N      ??setValue_8
   \                     ??setValue_4:
   \   00000042   0x2E01             CMP      R6,#+1
   \   00000044   0xD001             BEQ.N    ??setValue_9
   \   00000046   0x2E03             CMP      R6,#+3
   \   00000048   0xD101             BNE.N    ??setValue_10
   \                     ??setValue_9:
   \   0000004A   0x2701             MOVS     R7,#+1
   \   0000004C   0xE000             B.N      ??setValue_11
   \                     ??setValue_10:
   \   0000004E   0x2700             MOVS     R7,#+0
   \                     ??setValue_11:
   \   00000050   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \                     ??setValue_8:
   \   00000052   0x68E0             LDR      R0,[R4, #+12]
   \   00000054   0x42A8             CMP      R0,R5
   \   00000056   0xD00D             BEQ.N    ??setValue_0
   \   00000058   0x43F8             MVNS     R0,R7
   \   0000005A   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000005E   0x6861             LDR      R1,[R4, #+4]
   \   00000060   0x3110             ADDS     R1,R1,#+16
   \   00000062   0x4088             LSLS     R0,R0,R1
   \   00000064   0xF017 0x0101      ANDS     R1,R7,#0x1
   \   00000068   0x6862             LDR      R2,[R4, #+4]
   \   0000006A   0x4091             LSLS     R1,R1,R2
   \   0000006C   0x4308             ORRS     R0,R1,R0
   \   0000006E   0x6821             LDR      R1,[R4, #+0]
   \   00000070   0x6188             STR      R0,[R1, #+24]
   \   00000072   0x60E5             STR      R5,[R4, #+12]
     48          }
   \                     ??setValue_0:
   \                     ??setValue_2:
   \   00000074   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
     49          

   \                                 In section .text, align 2, keep-with-next
     50          bool_t OutputPin::getLogicValue() {
     51          	return currentLogicValue;
   \                     _ZN9OutputPin13getLogicValueEv:
   \   00000000   0x68C0             LDR      R0,[R0, #+12]
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD001             BEQ.N    ??getLogicValue_0
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0xE000             B.N      ??getLogicValue_1
   \                     ??getLogicValue_0:
   \   0000000A   0x2000             MOVS     R0,#+0
   \                     ??getLogicValue_1:
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x4770             BX       LR               ;; return
     52          }
     53          

   \                                 In section .text, align 2, keep-with-next
     54          void OutputPin::unregister() {
     55          #if EFI_PROD_CODE || defined(__DOXYGEN__)
     56          	port = NULL;
   \                     _ZN9OutputPin10unregisterEv:
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x6001             STR      R1,[R0, #+0]
     57          #endif
     58          }
   \   00000004   0x4770             BX       LR               ;; return
     59          

   \                                 In section .text, align 2, keep-with-next
     60          void OutputPin::setDefaultPinState(pin_output_mode_e *outputMode) {
   \                     _ZN9OutputPin18setDefaultPinStateEP17pin_output_mode_e:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     61          #if EFI_GPIO || defined(__DOXYGEN__)
     62          	pin_output_mode_e mode = *outputMode;
   \   00000006   0x682E             LDR      R6,[R5, #+0]
     63          	assertOMode(mode);
   \   00000008   0x2E04             CMP      R6,#+4
   \   0000000A   0xDB03             BLT.N    ??setDefaultPinState_0
   \   0000000C   0x....             LDR.N    R0,??DataTable3_3
   \   0000000E   0x.... 0x....      BL       firmwareError
   \   00000012   0xE004             B.N      ??setDefaultPinState_1
     64          	this->modePtr = outputMode;
   \                     ??setDefaultPinState_0:
   \   00000014   0x60A5             STR      R5,[R4, #+8]
     65          #endif
     66          	setValue(false); // initial state
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x.... 0x....      BL       _ZN9OutputPin8setValueEi
     67          }
   \                     ??setDefaultPinState_1:
   \   0000001E   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     enginePins

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     OUTPUT_MODE_DEFAULT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     `?<Constant "pin mode not initialized">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     `?<Constant "invalid pin_output_mo...">`

   \                                 In section .init_array, align 4, keep-with-next, root
   \   00000000   0x........         DC32    RELOC_ARM_TARGET1 __sti__routine

   \                                 In section .rodata, align 4
   \                     `?<Constant "pin mode not initialized">`:
   \   00000000   0x70 0x69          DC8 "pin mode not initialized"
   \              0x6E 0x20    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x69    
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x61 0x6C    
   \              0x69 0x7A    
   \              0x65 0x64    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "invalid pin_output_mo...">`:
   \   00000000   0x69 0x6E          DC8 "invalid pin_output_mode_e"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x70 0x69    
   \              0x6E 0x5F    
   \              0x6F 0x75    
   \              0x74 0x70    
   \              0x75 0x74    
   \              0x5F 0x6D    
   \              0x6F 0x64    
   \              0x65 0x5F    
   \              0x65 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0
     68          
     69          #endif /* EFI_GPIO */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   NamedOutputPin::NamedOutputPin()
         8   -> OutputPin::subobject OutputPin()
      16   NamedOutputPin::NamedOutputPin(char const *)
        16   -> OutputPin::subobject OutputPin()
       8   NamedOutputPin::subobject NamedOutputPin()
         8   -> NamedOutputPin::NamedOutputPin()
       8   NamedOutputPin::subobject NamedOutputPin(char const *)
         8   -> NamedOutputPin::NamedOutputPin(char const *)
       0   OutputPin::OutputPin()
       0   OutputPin::getLogicValue()
       0   OutputPin::isInitialized()
      16   OutputPin::setDefaultPinState(pin_output_mode_e *)
        16   -> OutputPin::setValue(int)
        16   -> firmwareError
      24   OutputPin::setValue(int)
        24   -> firmwareError
       8   OutputPin::subobject OutputPin()
         8   -> OutputPin::OutputPin()
       0   OutputPin::unregister()
       8   __sti__routine()
         8   -> engine_pins_s::<_ZN13engine_pins_sC1Ev>()
       8   engine_pins_s::<_ZN13engine_pins_sC1Ev>()
         8   -> OutputPin::OutputPin()
         8   -> __aeabi_vec_ctor_nocookie_nodtor


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      28  ?<Constant "invalid pin_output_mo...">
      28  ?<Constant "pin mode not initialized">
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
      18  NamedOutputPin::NamedOutputPin()
      18  NamedOutputPin::NamedOutputPin(char const *)
      12  NamedOutputPin::subobject NamedOutputPin()
      12  NamedOutputPin::subobject NamedOutputPin(char const *)
       4  OUTPUT_MODE_DEFAULT
      20  OutputPin::OutputPin()
      16  OutputPin::getLogicValue()
      16  OutputPin::isInitialized()
      32  OutputPin::setDefaultPinState(pin_output_mode_e *)
     118  OutputPin::setValue(int)
      12  OutputPin::subobject OutputPin()
       6  OutputPin::unregister()
      10  __sti__routine()
     576  enginePins
      88  engine_pins_s::<_ZN13engine_pins_sC1Ev>()
       4  -- Other

 
 580 bytes in section .bss
   4 bytes in section .init_array
  56 bytes in section .rodata
 394 bytes in section .text
 
 310 bytes of CODE  memory (+ 88 bytes shared)
  56 bytes of CONST memory
 580 bytes of DATA  memory

Errors: none
Warnings: none
