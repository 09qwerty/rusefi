###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      24/May/2015  11:47:23 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\wave_an #
#                       alyzer_hw.cpp                                         #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\wave_an #
#                       alyzer_hw.cpp -lCN F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\Debug\List\ -o                             #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\   #
#                       --no_unroll --debug --endian=little --cpu=Cortex-M4   #
#                       -e --fpu=VFPv4_sp --dlib_config "C:\Program Files     #
#                       (x86)\IAR Systems\Embedded Workbench                  #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -Ohs --eec++                                          #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\w #
#                       ave_analyzer_hw.lst                                   #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\wa #
#                       ve_analyzer_hw.o                                      #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\hw_layer\wave_analyzer_hw.cpp
      1          /*
      2           * @file	wave_analyzer_hw.cpp
      3           * @brief	Helper methods related to Input Capture Unit (ICU)
      4           *
      5           * @date Jun 23, 2013
      6           * @author Andrey Belomutskiy, (c) 2012-2015
      7           */
      8          
      9          #include "wave_analyzer_hw.h"

   \                                 In section .text, align 2
   \   __code __interwork __softfp WaveReaderHw::<_ZN12WaveReaderHwC1Ev>()
   \                     _ZN12WaveReaderHwC1Ev:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0xF104 0x0008      ADD      R0,R4,#+8
   \   00000008   0x.... 0x....      BL       _ZN16IntListenerArrayC1Ev
   \   0000000C   0xF104 0x0084      ADD      R0,R4,#+132
   \   00000010   0x.... 0x....      BL       _ZN16IntListenerArrayC1Ev
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
     10          #include "mpu_util.h"
     11          #include "fl_stack.h"

   \                                 In section .text, align 4
   \   __code __interwork __softfp ArrayList<WaveReaderHw, 8>::ArrayList()
   \                     _ZN9ArrayListI12WaveReaderHwLi8EEC1Ev:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x2308             MOVS     R3,#+8
   \   00000006   0xF44F 0x7280      MOV      R2,#+256
   \   0000000A   0x4906             LDR.N    R1,??ArrayList_0
   \   0000000C   0x1D20             ADDS     R0,R4,#+4
   \   0000000E   0x.... 0x....      BL       __aeabi_vec_ctor_nocookie_nodtor
   \   00000012   0xF44F 0x6100      MOV      R1,#+2048
   \   00000016   0x1D20             ADDS     R0,R4,#+4
   \   00000018   0x.... 0x....      BL       __aeabi_memclr4
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x6020             STR      R0,[R4, #+0]
   \   00000020   0x4620             MOV      R0,R4
   \   00000022   0xBD10             POP      {R4,PC}          ;; return
   \                     ??ArrayList_0:
   \   00000024   0x........         DC32     _ZN12WaveReaderHwC1Ev

   \                                 In section .text, align 2
   \   __interwork __softfp void ArrayList<WaveReaderHw, 8>::reset()
   \                     _ZN9ArrayListI12WaveReaderHwLi8EE5resetEv:
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x6001             STR      R1,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4
   \   __interwork __softfp WaveReaderHw *ArrayList<WaveReaderHw, 8>::add()
   \                     _ZN9ArrayListI12WaveReaderHwLi8EE3addEv:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
   \   00000004   0x6801             LDR      R1,[R0, #+0]
   \   00000006   0x2908             CMP      R1,#+8
   \   00000008   0xDB05             BLT.N    ??add_0
   \   0000000A   0x4806             LDR.N    R0,??add_1
   \   0000000C   0x.... 0x....      BL       firmwareError
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xB001             ADD      SP,SP,#+4
   \   00000014   0xBD00             POP      {PC}
   \                     ??add_0:
   \   00000016   0x1C4A             ADDS     R2,R1,#+1
   \   00000018   0x6002             STR      R2,[R0, #+0]
   \   0000001A   0xEB00 0x2001      ADD      R0,R0,R1, LSL #+8
   \   0000001E   0x1D00             ADDS     R0,R0,#+4
   \   00000020   0xB001             ADD      SP,SP,#+4
   \   00000022   0xBD00             POP      {PC}             ;; return
   \                     ??add_1:
   \   00000024   0x........         DC32     _ZZN9ArrayListI12WaveReaderHwLi8EE3addEvEs
     12          
     13          #if EFI_WAVE_ANALYZER || defined(__DOXYGEN__)
     14          
     15          #include "eficonsole.h"
     16          #include "pin_repository.h"
     17          
     18          static void icuWidthCallback(ICUDriver *driver);
     19          static void icuPeriordCallBack(ICUDriver *driver);
     20          
     21          /*
     22           * 30ms seems like width maximum, at 16bit precision that means
     23           * CORE_CLOCK / 33.33333 = TICKS * 65536
     24           * 168000000 / 33.333333 / 65536 = 76.90
     25           */

   \                                 In section .data, align 4
     26          static ICUConfig wave_icucfg = { ICU_INPUT_ACTIVE_LOW, CORE_CLOCK / 100, icuWidthCallback, icuPeriordCallBack, 0,
   \                     wave_icucfg:
   \   00000000   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0x0019A280         DC32 1680000, _Z16icuWidthCallbackP9ICUDriver
   \              0x........   
   \   0000000C   0x........         DC32 _Z18icuPeriordCallBackP9ICUDriver, 0H
   \              0x00000000   
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000018   0x00000000         DC32 0
     27          		ICU_CHANNEL_1, 0 };
     28          

   \                                 In section .bss, align 4
     29          static ArrayList<WaveReaderHw, 8> registeredIcus;
   \                     registeredIcus:
   \   00000000                      DS8 2052
     30          
     31          static WaveReaderHw * findWaveReaderHw(ICUDriver *driver) {
     32          	for (int i = 0; i < registeredIcus.size; i++) {
     33          		if (registeredIcus.elements[i].driver == driver) {
     34          			return &registeredIcus.elements[i];
     35          		}
     36          	}
     37          	firmwareError("reader not found");
     38          	return (WaveReaderHw *) NULL;
     39          }
     40          

   \                                 In section .text, align 2, keep-with-next
     41          static void icuWidthCallback(ICUDriver *driver) {
   \                     _Z16icuWidthCallbackP9ICUDriver:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
     42          	/*
     43          	 * see comment in icuPeriordCallBack
     44          	 int rowWidth = icuGetWidth(driver);
     45          	 */
     46          	WaveReaderHw * hw = findWaveReaderHw(driver);
   \   00000002   0x....             LDR.N    R2,??DataTable11
   \   00000004   0x6814             LDR      R4,[R2, #+0]
   \   00000006   0xB081             SUB      SP,SP,#+4
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x4613             MOV      R3,R2
   \   0000000C   0xE002             B.N      ??icuWidthCallback_0
   \                     ??icuWidthCallback_1:
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
   \   00000010   0xF503 0x7380      ADD      R3,R3,#+256
   \                     ??icuWidthCallback_0:
   \   00000014   0x42A1             CMP      R1,R4
   \   00000016   0xDA0B             BGE.N    ??icuWidthCallback_2
   \   00000018   0x685D             LDR      R5,[R3, #+4]
   \   0000001A   0x4285             CMP      R5,R0
   \   0000001C   0xD1F7             BNE.N    ??icuWidthCallback_1
   \   0000001E   0xB001             ADD      SP,SP,#+4
   \   00000020   0xE8BD 0x4030      POP      {R4,R5,LR}
   \   00000024   0xEB02 0x2001      ADD      R0,R2,R1, LSL #+8
   \   00000028   0x1D00             ADDS     R0,R0,#+4
   \   0000002A   0x3008             ADDS     R0,R0,#+8
   \   0000002C   0x.... 0x....      B.W      _ZN16IntListenerArray22invokeJustArgCallbacksEv
   \                     ??icuWidthCallback_2:
   \   00000030   0x.... 0x....      ADR.W    R0,`?<Constant "reader not found">`
   \   00000034   0x.... 0x....      BL       firmwareError
     47          	hw->widthListeners.invokeJustArgCallbacks();
   \   00000038   0xB001             ADD      SP,SP,#+4
   \   0000003A   0xE8BD 0x4030      POP      {R4,R5,LR}
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x3008             ADDS     R0,R0,#+8
   \   00000042   0x.... 0x....      B.W      _ZN16IntListenerArray22invokeJustArgCallbacksEv
     48          }
     49          

   \                                 In section .text, align 2, keep-with-next
     50          static void icuPeriordCallBack(ICUDriver *driver) {
   \                     _Z18icuPeriordCallBackP9ICUDriver:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
     51          	/*
     52          	 * 	we do not use timer period at all - we just need the event. For all time characteristics,
     53          	 * 	we use system time
     54          	 * 	int period = icuGetPeriod(driver);
     55          	 */
     56          
     57          	WaveReaderHw * hw = findWaveReaderHw(driver);
   \   00000002   0x....             LDR.N    R2,??DataTable11
   \   00000004   0x6814             LDR      R4,[R2, #+0]
   \   00000006   0xB081             SUB      SP,SP,#+4
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x4613             MOV      R3,R2
   \   0000000C   0xE002             B.N      ??icuPeriordCallBack_0
   \                     ??icuPeriordCallBack_1:
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
   \   00000010   0xF503 0x7380      ADD      R3,R3,#+256
   \                     ??icuPeriordCallBack_0:
   \   00000014   0x42A1             CMP      R1,R4
   \   00000016   0xDA0B             BGE.N    ??icuPeriordCallBack_2
   \   00000018   0x685D             LDR      R5,[R3, #+4]
   \   0000001A   0x4285             CMP      R5,R0
   \   0000001C   0xD1F7             BNE.N    ??icuPeriordCallBack_1
   \   0000001E   0xB001             ADD      SP,SP,#+4
   \   00000020   0xE8BD 0x4030      POP      {R4,R5,LR}
   \   00000024   0xEB02 0x2001      ADD      R0,R2,R1, LSL #+8
   \   00000028   0x1D00             ADDS     R0,R0,#+4
   \   0000002A   0x3084             ADDS     R0,R0,#+132
   \   0000002C   0x.... 0x....      B.W      _ZN16IntListenerArray22invokeJustArgCallbacksEv
   \                     ??icuPeriordCallBack_2:
   \   00000030   0x.... 0x....      ADR.W    R0,`?<Constant "reader not found">`
   \   00000034   0x.... 0x....      BL       firmwareError
     58          	hw->periodListeners.invokeJustArgCallbacks();
   \   00000038   0xB001             ADD      SP,SP,#+4
   \   0000003A   0xE8BD 0x4030      POP      {R4,R5,LR}
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x3084             ADDS     R0,R0,#+132
   \   00000042   0x.... 0x....      B.W      _ZN16IntListenerArray22invokeJustArgCallbacksEv
     59          }
     60          
     61          static uint32_t getAlternateFunctions(ICUDriver *driver) {
     62          	if (driver == NULL) {
     63          		firmwareError("getAlternateFunctions(NULL)");
     64          		return 0xffffffff;
     65          	}
     66          #if STM32_ICU_USE_TIM1
     67          	if (driver == &ICUD1) {
     68          		return GPIO_AF_TIM1;
     69          	}
     70          #endif
     71          #if STM32_ICU_USE_TIM2
     72          	if (driver == &ICUD2) {
     73          		return GPIO_AF_TIM2;
     74          	}
     75          #endif
     76          #if STM32_ICU_USE_TIM3
     77          	if (driver == &ICUD3) {
     78          		return GPIO_AF_TIM3;
     79          	}
     80          #endif
     81          #if STM32_ICU_USE_TIM4
     82          	if (driver == &ICUD4) {
     83          		return GPIO_AF_TIM4;
     84          	}
     85          #endif
     86          #if STM32_ICU_USE_TIM9
     87          	if (driver == &ICUD9) {
     88          		return GPIO_AF_TIM9;
     89          	}
     90          #endif
     91          	firmwareError("No such driver");
     92          	return 0xffffffff;
     93          }
     94          

   \                                 In section .text, align 2, keep-with-next
     95          icuchannel_t getInputCaptureChannel(brain_pin_e hwPin) {
   \                     _Z22getInputCaptureChannel11brain_pin_e:
   \   00000000   0xB500             PUSH     {LR}
     96          	switch (hwPin) {
   \   00000002   0x4601             MOV      R1,R0
   \   00000004   0xB081             SUB      SP,SP,#+4
   \   00000006   0x2905             CMP      R1,#+5
   \   00000008   0xBF18             IT       NE 
   \   0000000A   0x2908             CMPNE    R1,#+8
   \   0000000C   0xD010             BEQ.N    ??getInputCaptureChannel_0
   \   0000000E   0x2926             CMP      R1,#+38
   \   00000010   0xBF18             IT       NE 
   \   00000012   0x2945             CMPNE    R1,#+69
   \   00000014   0xD00C             BEQ.N    ??getInputCaptureChannel_0
   \   00000016   0x2946             CMP      R1,#+70
   \   00000018   0xD003             BEQ.N    ??getInputCaptureChannel_1
   \   0000001A   0x2949             CMP      R1,#+73
   \   0000001C   0xD008             BEQ.N    ??getInputCaptureChannel_0
   \   0000001E   0x294B             CMP      R1,#+75
   \   00000020   0xD102             BNE.N    ??getInputCaptureChannel_2
     97          	case GPIOA_5:
     98          	case GPIOA_8:
     99          	case GPIOC_6:
    100          	case GPIOE_5:
    101          	case GPIOE_9:
    102          		return ICU_CHANNEL_1;
    103          
    104          	case GPIOE_6:
    105          	case GPIOE_11:
    106          		return ICU_CHANNEL_2;
   \                     ??getInputCaptureChannel_1:
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0xB001             ADD      SP,SP,#+4
   \   00000026   0xBD00             POP      {PC}
    107          	default:
    108          		firmwareError("Unexpected hw pin in getInputCaptureChannel %d", hwPin);
   \                     ??getInputCaptureChannel_2:
   \   00000028   0x.... 0x....      ADR.W    R0,`?<Constant "Unexpected hw pin in ...">`
   \   0000002C   0x.... 0x....      BL       firmwareError
    109          		return ICU_CHANNEL_1;
   \                     ??getInputCaptureChannel_0:
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0xB001             ADD      SP,SP,#+4
   \   00000034   0xBD00             POP      {PC}             ;; return
    110          	}
    111          }
    112          

   \                                 In section .text, align 2, keep-with-next
    113          ICUDriver * getInputCaptureDriver(brain_pin_e hwPin) {
    114          #if STM32_ICU_USE_TIM1
    115          	if (hwPin == GPIOA_8) {
   \                     _Z21getInputCaptureDriver11brain_pin_e:
   \   00000000   0x2808             CMP      R0,#+8
   \   00000002   0xBF1C             ITT      NE 
   \   00000004   0x2849             CMPNE    R0,#+73
    116          		return &ICUD1;
    117          	}
    118          	if (hwPin == GPIOE_9) {
   \   00000006   0x284B             CMPNE    R0,#+75
    119          		return &ICUD1;
    120          	}
    121          	if (hwPin == GPIOE_11) {
   \   00000008   0xD101             BNE.N    ??getInputCaptureDriver_0
    122          		return &ICUD1;
   \   0000000A   0x....             LDR.N    R0,??DataTable11_2
   \   0000000C   0x4770             BX       LR
    123          	}
    124          #endif
    125          #if STM32_ICU_USE_TIM2
    126          	if (hwPin == GPIOA_5) {
   \                     ??getInputCaptureDriver_0:
   \   0000000E   0x2805             CMP      R0,#+5
   \   00000010   0xD101             BNE.N    ??getInputCaptureDriver_1
    127          		return &ICUD2;
   \   00000012   0x....             LDR.N    R0,??DataTable11_3
   \   00000014   0x4770             BX       LR
    128          	}
    129          #endif
    130          #if STM32_ICU_USE_TIM3
    131          	if (hwPin == GPIOC_6) {
   \                     ??getInputCaptureDriver_1:
   \   00000016   0x2826             CMP      R0,#+38
   \   00000018   0xD101             BNE.N    ??getInputCaptureDriver_2
    132          		return &ICUD3;
   \   0000001A   0x....             LDR.N    R0,??DataTable11_4
   \   0000001C   0x4770             BX       LR
    133          	}
    134          #endif
    135          #if STM32_ICU_USE_TIM9
    136          	if (hwPin == GPIOE_5) {
   \                     ??getInputCaptureDriver_2:
   \   0000001E   0x2845             CMP      R0,#+69
   \   00000020   0xD101             BNE.N    ??getInputCaptureDriver_3
    137          		return &ICUD9;
   \   00000022   0x....             LDR.N    R0,??DataTable11_5
   \   00000024   0x4770             BX       LR
    138          	}
    139          #endif
    140          	return (ICUDriver *) NULL;
   \                     ??getInputCaptureDriver_3:
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x4770             BX       LR               ;; return
    141          }
    142          

   \                                 In section .text, align 2, keep-with-next
    143          void turnOnCapturePin(brain_pin_e brainPin) {
   \                     _Z16turnOnCapturePin11brain_pin_e:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4606             MOV      R6,R0
    144          	ioportid_t port = getHwPort(brainPin);
   \   00000004   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000008   0x4604             MOV      R4,R0
    145          	ioportmask_t pin = getHwPin(brainPin);
   \   0000000A   0x4630             MOV      R0,R6
   \   0000000C   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000010   0x4605             MOV      R5,R0
    146          
    147          	ICUDriver *driver = getInputCaptureDriver(brainPin);
   \   00000012   0x2E08             CMP      R6,#+8
   \   00000014   0xBF1C             ITT      NE 
   \   00000016   0x2E49             CMPNE    R6,#+73
   \   00000018   0x2E4B             CMPNE    R6,#+75
   \   0000001A   0xD00B             BEQ.N    ??turnOnCapturePin_0
   \   0000001C   0x2E05             CMP      R6,#+5
   \   0000001E   0xBF08             IT       EQ 
   \   00000020   0x....             LDREQ.N  R0,??DataTable11_3
   \   00000022   0xD008             BEQ.N    ??turnOnCapturePin_1
   \   00000024   0x2E26             CMP      R6,#+38
   \   00000026   0xBF08             IT       EQ 
   \   00000028   0x....             LDREQ.N  R0,??DataTable11_4
   \   0000002A   0xD004             BEQ.N    ??turnOnCapturePin_1
   \   0000002C   0x2E45             CMP      R6,#+69
   \   0000002E   0xD126             BNE.N    ??turnOnCapturePin_2
   \   00000030   0x....             LDR.N    R0,??DataTable11_5
   \   00000032   0xE000             B.N      ??turnOnCapturePin_1
   \                     ??turnOnCapturePin_0:
   \   00000034   0x....             LDR.N    R0,??DataTable11_2
    148          	if (driver != NULL) {
   \                     ??turnOnCapturePin_1:
   \   00000036   0xB310             CBZ.N    R0,??turnOnCapturePin_2
    149          		iomode_t mode = (iomode_t) PAL_MODE_ALTERNATE(getAlternateFunctions(driver));
   \   00000038   0x....             LDR.N    R1,??DataTable11_2
   \   0000003A   0x4288             CMP      R0,R1
   \   0000003C   0xBF1C             ITT      NE 
   \   0000003E   0x....             LDRNE.N  R1,??DataTable11_3
   \   00000040   0x4288             CMPNE    R0,R1
   \   00000042   0xD010             BEQ.N    ??turnOnCapturePin_3
   \   00000044   0x....             LDR.N    R1,??DataTable11_4
   \   00000046   0x4288             CMP      R0,R1
   \   00000048   0xBF08             IT       EQ 
   \   0000004A   0x2002             MOVEQ    R0,#+2
   \   0000004C   0xD00C             BEQ.N    ??turnOnCapturePin_4
   \   0000004E   0x....             LDR.N    R1,??DataTable11_5
   \   00000050   0x4288             CMP      R0,R1
   \   00000052   0xBF08             IT       EQ 
   \   00000054   0x2003             MOVEQ    R0,#+3
   \   00000056   0xD007             BEQ.N    ??turnOnCapturePin_4
   \   00000058   0x.... 0x....      ADR.W    R0,`?<Constant "No such driver">`
   \   0000005C   0x.... 0x....      BL       firmwareError
   \   00000060   0xF04F 0x30FF      MOV      R0,#-1
   \   00000064   0xE000             B.N      ??turnOnCapturePin_4
   \                     ??turnOnCapturePin_3:
   \   00000066   0x2001             MOVS     R0,#+1
    150          		mySetPadMode("wave input", port, pin, mode);
   \                     ??turnOnCapturePin_4:
   \   00000068   0x462A             MOV      R2,R5
   \   0000006A   0x4621             MOV      R1,R4
   \   0000006C   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000070   0x01C0             LSLS     R0,R0,#+7
   \   00000072   0xF040 0x0302      ORR      R3,R0,#0x2
   \   00000076   0x.... 0x....      ADR.W    R0,`?<Constant "wave input">`
   \   0000007A   0x.... 0x....      B.W      _Z12mySetPadModePKcP12GPIO_TypeDefjj
    151          	}
    152          }
   \                     ??turnOnCapturePin_2:
   \   0000007E   0xBD70             POP      {R4-R6,PC}       ;; return
    153          

   \                                 In section .text, align 2, keep-with-next
    154          WaveReaderHw * initWaveAnalyzerDriver(brain_pin_e brainPin) {
   \                     _Z22initWaveAnalyzerDriver11brain_pin_e:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    155          	ICUDriver *driver = getInputCaptureDriver(brainPin);
   \   00000004   0x2C08             CMP      R4,#+8
   \   00000006   0xBF1C             ITT      NE 
   \   00000008   0x2C49             CMPNE    R4,#+73
   \   0000000A   0x2C4B             CMPNE    R4,#+75
   \   0000000C   0xD00C             BEQ.N    ??initWaveAnalyzerDriver_0
   \   0000000E   0x2C05             CMP      R4,#+5
   \   00000010   0xBF08             IT       EQ 
   \   00000012   0x....             LDREQ.N  R5,??DataTable11_3
   \   00000014   0xD009             BEQ.N    ??initWaveAnalyzerDriver_1
   \   00000016   0x2C26             CMP      R4,#+38
   \   00000018   0xBF08             IT       EQ 
   \   0000001A   0x....             LDREQ.N  R5,??DataTable11_4
   \   0000001C   0xD005             BEQ.N    ??initWaveAnalyzerDriver_1
   \   0000001E   0x2C45             CMP      R4,#+69
   \   00000020   0xBF14             ITE      NE 
   \   00000022   0x2500             MOVNE    R5,#+0
   \   00000024   0x....             LDREQ.N  R5,??DataTable11_5
   \   00000026   0xE000             B.N      ??initWaveAnalyzerDriver_1
   \                     ??initWaveAnalyzerDriver_0:
   \   00000028   0x....             LDR.N    R5,??DataTable11_2
    156          
    157          	WaveReaderHw *hw = registeredIcus.add();
   \                     ??initWaveAnalyzerDriver_1:
   \   0000002A   0x....             LDR.N    R0,??DataTable11
   \   0000002C   0x6801             LDR      R1,[R0, #+0]
   \   0000002E   0x2908             CMP      R1,#+8
   \   00000030   0xDB04             BLT.N    ??initWaveAnalyzerDriver_2
   \   00000032   0x....             LDR.N    R0,??DataTable11_6
   \   00000034   0x.... 0x....      BL       firmwareError
   \   00000038   0x2600             MOVS     R6,#+0
   \   0000003A   0xE004             B.N      ??initWaveAnalyzerDriver_3
   \                     ??initWaveAnalyzerDriver_2:
   \   0000003C   0xEB00 0x2201      ADD      R2,R0,R1, LSL #+8
   \   00000040   0x1C49             ADDS     R1,R1,#+1
   \   00000042   0x1D16             ADDS     R6,R2,#+4
   \   00000044   0x6001             STR      R1,[R0, #+0]
    158          
    159          	hw->driver = driver;
   \                     ??initWaveAnalyzerDriver_3:
   \   00000046   0x6035             STR      R5,[R6, #+0]
    160          	turnOnCapturePin(brainPin);
   \   00000048   0x4620             MOV      R0,R4
   \   0000004A   0x.... 0x....      BL       _Z16turnOnCapturePin11brain_pin_e
    161          	return hw;
   \   0000004E   0x4630             MOV      R0,R6
   \   00000050   0xBD70             POP      {R4-R6,PC}       ;; return
    162          }
    163          

   \                                 In section .text, align 2, keep-with-next
    164          void startInputDriver(WaveReaderHw *hw, bool isActiveHigh) {
   \                     _Z16startInputDriverP12WaveReaderHwb:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
    165          	hw->isActiveHigh = isActiveHigh;
    166          	if (hw->isActiveHigh) {
   \   00000004   0x1E48             SUBS     R0,R1,#+1
   \   00000006   0x4180             SBCS     R0,R0,R0
   \   00000008   0x....             LDR.N    R5,??DataTable11_7
   \   0000000A   0x7121             STRB     R1,[R4, #+4]
   \   0000000C   0x0FC0             LSRS     R0,R0,#+31
   \   0000000E   0x7028             STRB     R0,[R5, #+0]
    167          		wave_icucfg.mode = ICU_INPUT_ACTIVE_HIGH;
    168          	} else {
    169          		wave_icucfg.mode = ICU_INPUT_ACTIVE_LOW;
    170          	}
    171          	ICUDriver *driver = hw->driver;
   \   00000010   0x6826             LDR      R6,[R4, #+0]
    172          
    173          	if (driver != NULL) {
   \   00000012   0xB176             CBZ.N    R6,??startInputDriver_0
    174          		if (hw->started) {
   \   00000014   0x7960             LDRB     R0,[R4, #+5]
   \   00000016   0xB128             CBZ.N    R0,??startInputDriver_1
    175          			icuDisable(driver);
   \   00000018   0x4630             MOV      R0,R6
   \   0000001A   0x.... 0x....      BL       icuDisable
    176          			icuStop(driver);
   \   0000001E   0x4630             MOV      R0,R6
   \   00000020   0x.... 0x....      BL       icuStop
    177          		}
    178          		efiIcuStart(driver, &wave_icucfg);
   \                     ??startInputDriver_1:
   \   00000024   0x4629             MOV      R1,R5
   \   00000026   0x4630             MOV      R0,R6
   \   00000028   0x.... 0x....      BL       _Z11efiIcuStartP9ICUDriverPK9ICUConfig
    179          		icuEnable(driver);
   \   0000002C   0x4630             MOV      R0,R6
   \   0000002E   0x.... 0x....      BL       icuEnable
    180          	}
    181          	hw->started = true;
   \                     ??startInputDriver_0:
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x7160             STRB     R0,[R4, #+5]
    182          }
   \   00000036   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .init_array, align 4, keep-with-next, root
   \   00000000   0x........         DC32    RELOC_ARM_TARGET1 __sti__routine

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "getAlternateFunctions...">`:
   \   00000000   0x67 0x65          DC8 "getAlternateFunctions(NULL)"
   \              0x74 0x41    
   \              0x6C 0x74    
   \              0x65 0x72    
   \              0x6E 0x61    
   \              0x74 0x65    
   \              0x46 0x75    
   \              0x6E 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x73 0x28    
   \              0x4E 0x55    
   \              0x4C 0x4C    
   \              0x29 0x00    

   \                                 In section .text, align 2, keep-with-next
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x....             LDR.N    R4,??DataTable11
   \   00000004   0x....             LDR.N    R1,??DataTable11_1
   \   00000006   0x2308             MOVS     R3,#+8
   \   00000008   0xF44F 0x7280      MOV      R2,#+256
   \   0000000C   0x1D20             ADDS     R0,R4,#+4
   \   0000000E   0x.... 0x....      BL       __aeabi_vec_ctor_nocookie_nodtor
   \   00000012   0xF44F 0x6100      MOV      R1,#+2048
   \   00000016   0x1D20             ADDS     R0,R4,#+4
   \   00000018   0x.... 0x....      BL       __aeabi_memclr4
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x6020             STR      R0,[R4, #+0]
   \   00000020   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     registeredIcus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x........         DC32     _ZN12WaveReaderHwC1Ev

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x........         DC32     ICUD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x........         DC32     ICUD2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x........         DC32     ICUD3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x........         DC32     ICUD9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x........         DC32     _ZZN9ArrayListI12WaveReaderHwLi8EE3addEvEs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x........         DC32     wave_icucfg

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "reader not found">`:
   \   00000000   0x72 0x65          DC8 "reader not found"
   \              0x61 0x64    
   \              0x65 0x72    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x66    
   \              0x6F 0x75    
   \              0x6E 0x64    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "No such driver">`:
   \   00000000   0x4E 0x6F          DC8 "No such driver"
   \              0x20 0x73    
   \              0x75 0x63    
   \              0x68 0x20    
   \              0x64 0x72    
   \              0x69 0x76    
   \              0x65 0x72    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Unexpected hw pin in ...">`:
   \   00000000   0x55 0x6E          DC8 "Unexpected hw pin in getInputCaptureChannel %d"
   \              0x65 0x78    
   \              0x70 0x65    
   \              0x63 0x74    
   \              0x65 0x64    
   \              0x20 0x68    
   \              0x77 0x20    
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x69 0x6E    
   \              0x20 0x67    
   \              0x65 0x74    
   \              0x49 0x6E    
   \              0x70 0x75    
   \              0x74 0x43    
   \              0x61 0x70    
   \              0x74 0x75    
   \              0x72 0x65    
   \              0x43 0x68    
   \              0x61 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000002F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "wave input">`:
   \   00000000   0x77 0x61          DC8 "wave input"
   \              0x76 0x65    
   \              0x20 0x69    
   \              0x6E 0x70    
   \              0x75 0x74    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4
   \   __code __interwork __softfp ArrayList<WaveReaderHw, 8>::subobject ArrayList()
   \                     _ZN9ArrayListI12WaveReaderHwLi8EEC2Ev:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x2308             MOVS     R3,#+8
   \   00000006   0xF44F 0x7280      MOV      R2,#+256
   \   0000000A   0x4906             LDR.N    R1,`??subobject ArrayList_0`
   \   0000000C   0x1D20             ADDS     R0,R4,#+4
   \   0000000E   0x.... 0x....      BL       __aeabi_vec_ctor_nocookie_nodtor
   \   00000012   0xF44F 0x6100      MOV      R1,#+2048
   \   00000016   0x1D20             ADDS     R0,R4,#+4
   \   00000018   0x.... 0x....      BL       __aeabi_memclr4
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x6020             STR      R0,[R4, #+0]
   \   00000020   0x4620             MOV      R0,R4
   \   00000022   0xBD10             POP      {R4,PC}          ;; return
   \                     `??subobject ArrayList_0`:
   \   00000024   0x........         DC32     _ZN12WaveReaderHwC1Ev
    183          
    184          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   ArrayList<WaveReaderHw, 8>::ArrayList()
         8   -> __aeabi_memclr4
         8   -> __aeabi_vec_ctor_nocookie_nodtor
       8   ArrayList<WaveReaderHw, 8>::add()
         8   -> firmwareError
       0   ArrayList<WaveReaderHw, 8>::reset()
       8   ArrayList<WaveReaderHw, 8>::subobject ArrayList()
         8   -> __aeabi_memclr4
         8   -> __aeabi_vec_ctor_nocookie_nodtor
       8   WaveReaderHw::<_ZN12WaveReaderHwC1Ev>()
         8   -> IntListenerArray::IntListenerArray()
       8   __sti__routine()
         8   -> __aeabi_memclr4
         8   -> __aeabi_vec_ctor_nocookie_nodtor
       8   getInputCaptureChannel(brain_pin_e)
         8   -> firmwareError
       0   getInputCaptureDriver(brain_pin_e)
      16   icuPeriordCallBack(ICUDriver *)
         0   -> IntListenerArray::invokeJustArgCallbacks()
        16   -> firmwareError
      16   icuWidthCallback(ICUDriver *)
         0   -> IntListenerArray::invokeJustArgCallbacks()
        16   -> firmwareError
      16   initWaveAnalyzerDriver(brain_pin_e)
        16   -> firmwareError
        16   -> turnOnCapturePin(brain_pin_e)
      16   startInputDriver(WaveReaderHw *, bool)
        16   -> efiIcuStart(ICUDriver *, ICUConfig const *)
        16   -> icuDisable
        16   -> icuEnable
        16   -> icuStop
      16   turnOnCapturePin(brain_pin_e)
        16   -> firmwareError
        16   -> getHwPin(brain_pin_e)
        16   -> getHwPort(brain_pin_e)
         0   -> mySetPadMode(char const *, ioportid_t, uint32_t, iomode_t)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant "No such driver">
      48  ?<Constant "Unexpected hw pin in ...">
      28  ?<Constant "getAlternateFunctions...">
      20  ?<Constant "reader not found">
      12  ?<Constant "wave input">
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
      40  ArrayList<WaveReaderHw, 8>::ArrayList()
      40  ArrayList<WaveReaderHw, 8>::add()
       6  ArrayList<WaveReaderHw, 8>::reset()
      40  ArrayList<WaveReaderHw, 8>::subobject ArrayList()
      24  WaveReaderHw::<_ZN12WaveReaderHwC1Ev>()
      34  __sti__routine()
      54  getInputCaptureChannel(brain_pin_e)
      42  getInputCaptureDriver(brain_pin_e)
      70  icuPeriordCallBack(ICUDriver *)
      70  icuWidthCallback(ICUDriver *)
      82  initWaveAnalyzerDriver(brain_pin_e)
    2052  registeredIcus
      56  startInputDriver(WaveReaderHw *, bool)
     128  turnOnCapturePin(brain_pin_e)
      28  wave_icucfg
      28  -- Other

 
 2 052 bytes in section .bss
    28 bytes in section .data
     4 bytes in section .init_array
    52 bytes in section .rodata
   814 bytes in section .text
 
   668 bytes of CODE  memory (+ 150 bytes shared)
    28 bytes of CONST memory (+  24 bytes shared)
 2 080 bytes of DATA  memory

Errors: none
Warnings: none
