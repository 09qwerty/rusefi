###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:08:47 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\controllers\trig #
#                       ger\trigger_gm.cpp                                    #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\controllers\trig #
#                       ger\trigger_gm.cpp -lCN F:\stuff\rusefi_sourceforge\f #
#                       irmware\iar\Debug\List\ -lA                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\  #
#                       -o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj #
#                       \ --no_cse --no_unroll --no_inline --no_code_motion   #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\t #
#                       rigger_gm.lst                                         #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\tr #
#                       igger_gm.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\controllers\trigger\trigger_gm.cpp
      1          /**
      2           * @file	trigger_gm.cpp
      3           *
      4           * @date Mar 28, 2014
      5           * @author Andrey Belomutskiy, (c) 2012-2015
      6           */
      7          
      8          #include "trigger_gm.h"
      9          

   \                                 In section .text, align 4, keep-with-next
     10          void configureGmTriggerShape(TriggerShape *s) {
   \                     _Z23configureGmTriggerShapeP12TriggerShape:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0x0004             MOVS     R4,R0
     11          	s->reset(FOUR_STROKE_CAM_SENSOR, false);
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2102             MOVS     R1,#+2
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       _ZN12TriggerShape5resetE16operation_mode_eb
     12          
     13          	// all angles are x2 here - so, 5 degree width is 10
     14          	float w = 10;
   \   00000012   0xEEB2 0x8A04      VMOV.F32 S16,#10.0
     15          
     16          	s->addEvent(120 - w, T_PRIMARY, TV_HIGH);
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0xED9F 0x0A38      VLDR.W   S0,??configureGmTriggerShape_0  ;; 0x42f00000
   \   0000001E   0xEE30 0x0A48      VSUB.F32 S0,S0,S16
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     17          	s->addEvent(120.0, T_PRIMARY, TV_LOW);
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0xED9F 0x0A33      VLDR.W   S0,??configureGmTriggerShape_0  ;; 0x42f00000
   \   00000030   0x0020             MOVS     R0,R4
   \   00000032   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     18          
     19          	s->addEvent(240 - w, T_PRIMARY, TV_HIGH);
   \   00000036   0x2201             MOVS     R2,#+1
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0xED9F 0x0A31      VLDR.W   S0,??configureGmTriggerShape_0+0x4  ;; 0x43700000
   \   0000003E   0xEE30 0x0A48      VSUB.F32 S0,S0,S16
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     20          	s->addEvent(240.0, T_PRIMARY, TV_LOW);
   \   00000048   0x2200             MOVS     R2,#+0
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0xED9F 0x0A2C      VLDR.W   S0,??configureGmTriggerShape_0+0x4  ;; 0x43700000
   \   00000050   0x0020             MOVS     R0,R4
   \   00000052   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     21          
     22          	s->addEvent(360 - w, T_PRIMARY, TV_HIGH);
   \   00000056   0x2201             MOVS     R2,#+1
   \   00000058   0x2100             MOVS     R1,#+0
   \   0000005A   0xED9F 0x0A2A      VLDR.W   S0,??configureGmTriggerShape_0+0x8  ;; 0x43b40000
   \   0000005E   0xEE30 0x0A48      VSUB.F32 S0,S0,S16
   \   00000062   0x0020             MOVS     R0,R4
   \   00000064   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     23          	s->addEvent(360.0, T_PRIMARY, TV_LOW);
   \   00000068   0x2200             MOVS     R2,#+0
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0xED9F 0x0A25      VLDR.W   S0,??configureGmTriggerShape_0+0x8  ;; 0x43b40000
   \   00000070   0x0020             MOVS     R0,R4
   \   00000072   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     24          
     25          	s->addEvent(480 - w, T_PRIMARY, TV_HIGH);
   \   00000076   0x2201             MOVS     R2,#+1
   \   00000078   0x2100             MOVS     R1,#+0
   \   0000007A   0xED9F 0x0A23      VLDR.W   S0,??configureGmTriggerShape_0+0xC  ;; 0x43f00000
   \   0000007E   0xEE30 0x0A48      VSUB.F32 S0,S0,S16
   \   00000082   0x0020             MOVS     R0,R4
   \   00000084   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     26          	s->addEvent(480.0, T_PRIMARY, TV_LOW);
   \   00000088   0x2200             MOVS     R2,#+0
   \   0000008A   0x2100             MOVS     R1,#+0
   \   0000008C   0xED9F 0x0A1E      VLDR.W   S0,??configureGmTriggerShape_0+0xC  ;; 0x43f00000
   \   00000090   0x0020             MOVS     R0,R4
   \   00000092   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     27          
     28          	s->addEvent(600 - w, T_PRIMARY, TV_HIGH);
   \   00000096   0x2201             MOVS     R2,#+1
   \   00000098   0x2100             MOVS     R1,#+0
   \   0000009A   0xED9F 0x0A1C      VLDR.W   S0,??configureGmTriggerShape_0+0x10  ;; 0x44160000
   \   0000009E   0xEE30 0x0A48      VSUB.F32 S0,S0,S16
   \   000000A2   0x0020             MOVS     R0,R4
   \   000000A4   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     29          	s->addEvent(600.0, T_PRIMARY, TV_LOW);
   \   000000A8   0x2200             MOVS     R2,#+0
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0xED9F 0x0A17      VLDR.W   S0,??configureGmTriggerShape_0+0x10  ;; 0x44160000
   \   000000B0   0x0020             MOVS     R0,R4
   \   000000B2   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     30          
     31          	s->addEvent(700 - w, T_PRIMARY, TV_HIGH);
   \   000000B6   0x2201             MOVS     R2,#+1
   \   000000B8   0x2100             MOVS     R1,#+0
   \   000000BA   0xED9F 0x0A15      VLDR.W   S0,??configureGmTriggerShape_0+0x14  ;; 0x442f0000
   \   000000BE   0xEE30 0x0A48      VSUB.F32 S0,S0,S16
   \   000000C2   0x0020             MOVS     R0,R4
   \   000000C4   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     32          	s->addEvent(700.0, T_PRIMARY, TV_LOW);
   \   000000C8   0x2200             MOVS     R2,#+0
   \   000000CA   0x2100             MOVS     R1,#+0
   \   000000CC   0xED9F 0x0A10      VLDR.W   S0,??configureGmTriggerShape_0+0x14  ;; 0x442f0000
   \   000000D0   0x0020             MOVS     R0,R4
   \   000000D2   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     33          
     34          	s->addEvent(720 - w, T_PRIMARY, TV_HIGH);
   \   000000D6   0x2201             MOVS     R2,#+1
   \   000000D8   0x2100             MOVS     R1,#+0
   \   000000DA   0xED9F 0x0A0E      VLDR.W   S0,??configureGmTriggerShape_0+0x18  ;; 0x44340000
   \   000000DE   0xEE30 0x0A48      VSUB.F32 S0,S0,S16
   \   000000E2   0x0020             MOVS     R0,R4
   \   000000E4   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     35          	s->addEvent(720.0, T_PRIMARY, TV_LOW);
   \   000000E8   0x2200             MOVS     R2,#+0
   \   000000EA   0x2100             MOVS     R1,#+0
   \   000000EC   0xED9F 0x0A09      VLDR.W   S0,??configureGmTriggerShape_0+0x18  ;; 0x44340000
   \   000000F0   0x0020             MOVS     R0,R4
   \   000000F2   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     36          }
   \   000000F6   0xECBD 0x8B02      VPOP     {D8}
   \   000000FA   0xBD10             POP      {R4,PC}          ;; return
   \                     ??configureGmTriggerShape_0:
   \   000000FC   0x42F00000         DC32     0x42f00000
   \   00000100   0x43700000         DC32     0x43700000
   \   00000104   0x43B40000         DC32     0x43b40000
   \   00000108   0x43F00000         DC32     0x43f00000
   \   0000010C   0x44160000         DC32     0x44160000
   \   00000110   0x442F0000         DC32     0x442f0000
   \   00000114   0x44340000         DC32     0x44340000
     37          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   configureGmTriggerShape(TriggerShape *)
        16   -> TriggerShape::addEvent(float, trigger_wheel_e, trigger_value_e)
        16   -> TriggerShape::reset(operation_mode_e, bool)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     280  configureGmTriggerShape(TriggerShape *)

 
 280 bytes in section .text
 
 280 bytes of CODE memory

Errors: none
Warnings: 1
