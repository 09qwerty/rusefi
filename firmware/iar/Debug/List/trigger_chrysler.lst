###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:08:57 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\controllers\trig #
#                       ger\trigger_chrysler.cpp                              #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\controllers\trig #
#                       ger\trigger_chrysler.cpp -lCN                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\  #
#                       -lA F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Li #
#                       st\ -o F:\stuff\rusefi_sourceforge\firmware\iar\Debug #
#                       \Obj\ --no_cse --no_unroll --no_inline                #
#                       --no_code_motion --no_tbaa --no_clustering            #
#                       --no_scheduling --debug --endian=little               #
#                       --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config       #
#                       "C:\Program Files (x86)\IAR Systems\Embedded          #
#                       Workbench 6.5\arm\INC\c\DLib_Config_Normal.h"         #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\t #
#                       rigger_chrysler.lst                                   #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\tr #
#                       igger_chrysler.o                                      #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\controllers\trigger\trigger_chrysler.cpp
      1          /**
      2           * @file	trigger_chrysler.cpp
      3           *
      4           * @date Mar 24, 2014
      5           * @author Andrey Belomutskiy, (c) 2012-2015
      6           */
      7          
      8          #include "trigger_chrysler.h"
      9          #include "trigger_decoder.h"
     10          

   \                                 In section .text, align 4, keep-with-next
     11          void initDodgeRam(TriggerShape *s) {
   \                     _Z12initDodgeRamP12TriggerShape:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     12          
     13          	s->reset(FOUR_STROKE_CAM_SENSOR, true);
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2102             MOVS     R1,#+2
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       _ZN12TriggerShape5resetE16operation_mode_eb
     14          	s->useRiseEdge = true;
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0xF884 0x0B64      STRB     R0,[R4, #+2916]
     15          
     16          	s->isSynchronizationNeeded = false;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x7020             STRB     R0,[R4, #+0]
     17          
     18          	addSkippedToothTriggerEvents(T_SECONDARY, s, 8, 0, 0.06, -25, 360, 0, 720);
   \   00000018   0xED9F 0x....      VLDR.W   S4,??DataTable1  ;; 0x44340000
   \   0000001C   0xEDDF 0x....      VLDR.W   S3,??DataTable1_1  ;; 0x0
   \   00000020   0xED9F 0x....      VLDR.W   S2,??DataTable1_2  ;; 0x43b40000
   \   00000024   0xEEFB 0x0A09      VMOV.F32 S1,#-25.0
   \   00000028   0xED9F 0x....      VLDR.W   S0,??DataTable1_3  ;; 0x3d75c28f
   \   0000002C   0x2300             MOVS     R3,#+0
   \   0000002E   0x2208             MOVS     R2,#+8
   \   00000030   0x0021             MOVS     R1,R4
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x.... 0x....      BL       _Z28addSkippedToothTriggerEvents15trigger_wheel_eP12TriggerShapeiifffff
     19          
     20          	s->addEvent(360, T_PRIMARY, TV_HIGH);
   \   00000038   0x2201             MOVS     R2,#+1
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0xED9F 0x....      VLDR.W   S0,??DataTable1_2  ;; 0x43b40000
   \   00000040   0x0020             MOVS     R0,R4
   \   00000042   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     21          
     22          	addSkippedToothTriggerEvents(T_SECONDARY, s, 8, 0, 0.06, 360 - 25, 360, 0, 720);
   \   00000046   0xED9F 0x....      VLDR.W   S4,??DataTable1  ;; 0x44340000
   \   0000004A   0xEDDF 0x....      VLDR.W   S3,??DataTable1_1  ;; 0x0
   \   0000004E   0xED9F 0x....      VLDR.W   S2,??DataTable1_2  ;; 0x43b40000
   \   00000052   0xEDDF 0x....      VLDR.W   S1,??DataTable1_4  ;; 0x43a78000
   \   00000056   0xED9F 0x....      VLDR.W   S0,??DataTable1_3  ;; 0x3d75c28f
   \   0000005A   0x2300             MOVS     R3,#+0
   \   0000005C   0x2208             MOVS     R2,#+8
   \   0000005E   0x0021             MOVS     R1,R4
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x.... 0x....      BL       _Z28addSkippedToothTriggerEvents15trigger_wheel_eP12TriggerShapeiifffff
     23          
     24          	s->addEvent(720, T_PRIMARY, TV_LOW);
   \   00000066   0x2200             MOVS     R2,#+0
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0xED9F 0x....      VLDR.W   S0,??DataTable1  ;; 0x44340000
   \   0000006E   0x0020             MOVS     R0,R4
   \   00000070   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     25          }
   \   00000074   0xBD10             POP      {R4,PC}          ;; return
     26          

   \                                 In section .text, align 4, keep-with-next
     27          void configureNeon2003TriggerShape(TriggerShape *s) {
   \                     _Z29configureNeon2003TriggerShapeP12TriggerShape:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0x0004             MOVS     R4,R0
     28          	s->reset(FOUR_STROKE_CAM_SENSOR, false);
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2102             MOVS     R1,#+2
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       _ZN12TriggerShape5resetE16operation_mode_eb
     29          
     30          	// voodoo magic - we always need 720 at the end
     31          	int base = 10;
   \   00000012   0x250A             MOVS     R5,#+10
     32          	float b = 0;
   \   00000014   0xED9F 0x....      VLDR.W   S16,??DataTable1_1  ;; 0x0
     33          	s->useRiseEdge = true;
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0xF884 0x0B64      STRB     R0,[R4, #+2916]
     34          
     35          	s->gapBothDirections = true;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0xF884 0x0B65      STRB     R0,[R4, #+2917]
     36          
     37          	// are these non-default values really needed here now that the gap is finally precise?
     38          	s->setTriggerSynchronizationGap2(0.5 * CHRYSLER_NGC_GAP, 1.5 * CHRYSLER_NGC_GAP);
   \   00000024   0xEDDF 0x....      VLDR.W   S1,??DataTable1_5  ;; 0x40bf4c98
   \   00000028   0xED9F 0x....      VLDR.W   S0,??DataTable1_6  ;; 0x3fff10cb
   \   0000002C   0x0020             MOVS     R0,R4
   \   0000002E   0x.... 0x....      BL       _ZN12TriggerShape29setTriggerSynchronizationGap2Eff
     39          
     40          	/*
     41          	s->addEvent(base + 26, T_PRIMARY, TV_HIGH);
     42          	s->addEvent(base + 62, T_PRIMARY, TV_LOW);
     43          
     44          	s->addEvent(base + 98, T_PRIMARY, TV_HIGH);
     45          	s->addEvent(base + 134, T_PRIMARY, TV_LOW);
     46          
     47          	s->addEvent(base + 180, T_PRIMARY, TV_HIGH);
     48          	s->addEvent(base + 314, T_PRIMARY, TV_LOW);
     49          
     50          	s->addEvent(base + 350, T_PRIMARY, TV_HIGH);
     51          	s->addEvent(base + 386, T_PRIMARY, TV_LOW);
     52          
     53          	s->addEvent(base + 422, T_PRIMARY, TV_HIGH);
     54          	s->addEvent(base + 458, T_PRIMARY, TV_LOW);
     55          
     56          	s->addEvent(base + 494, T_PRIMARY, TV_HIGH);
     57          	s->addEvent(base + 530, T_PRIMARY, TV_LOW);
     58          
     59          	s->addEvent(base + 674, T_PRIMARY, TV_HIGH);
     60          	s->addEvent(base + 710, T_PRIMARY, TV_LOW);
     61          	 *
     62          	 */
     63          
     64          	s->addEvent(143.0712499, T_PRIMARY, TV_HIGH);
   \   00000032   0x2201             MOVS     R2,#+1
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0xED9F 0x....      VLDR.W   S0,??DataTable1_7  ;; 0x430f123d
   \   0000003A   0x0020             MOVS     R0,R4
   \   0000003C   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     65          	s->addEvent(182.684791, T_PRIMARY, TV_LOW);
   \   00000040   0x2200             MOVS     R2,#+0
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0xED9F 0x....      VLDR.W   S0,??DataTable1_8  ;; 0x4336af4e
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     66          
     67          	s->addEvent(215.424166, T_PRIMARY, TV_HIGH);
   \   0000004E   0x2201             MOVS     R2,#+1
   \   00000050   0x2100             MOVS     R1,#+0
   \   00000052   0xED9F 0x....      VLDR.W   S0,??DataTable1_9  ;; 0x43576c96
   \   00000056   0x0020             MOVS     R0,R4
   \   00000058   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     68          	s->addEvent(256.247395, T_PRIMARY, TV_LOW);
   \   0000005C   0x2200             MOVS     R2,#+0
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0xED9F 0x....      VLDR.W   S0,??DataTable1_10  ;; 0x43801fab
   \   00000064   0x0020             MOVS     R0,R4
   \   00000066   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     69          
     70          	s->addEvent(288.659999, T_PRIMARY, TV_HIGH);
   \   0000006A   0x2201             MOVS     R2,#+1
   \   0000006C   0x2100             MOVS     R1,#+0
   \   0000006E   0xED9F 0x....      VLDR.W   S0,??DataTable1_11  ;; 0x4390547b
   \   00000072   0x0020             MOVS     R0,R4
   \   00000074   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     71          	s->addEvent(326.778229, T_PRIMARY, TV_LOW);
   \   00000078   0x2200             MOVS     R2,#+0
   \   0000007A   0x2100             MOVS     R1,#+0
   \   0000007C   0xED9F 0x....      VLDR.W   S0,??DataTable1_12  ;; 0x43a3639d
   \   00000080   0x0020             MOVS     R0,R4
   \   00000082   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     72          
     73          	s->addEvent(361.522083, T_PRIMARY, TV_HIGH);
   \   00000086   0x2201             MOVS     R2,#+1
   \   00000088   0x2100             MOVS     R1,#+0
   \   0000008A   0xED9F 0x....      VLDR.W   S0,??DataTable1_13  ;; 0x43b4c2d4
   \   0000008E   0x0020             MOVS     R0,R4
   \   00000090   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     74          	s->addEvent(508.960416, T_PRIMARY, TV_LOW);
   \   00000094   0x2200             MOVS     R2,#+0
   \   00000096   0x2100             MOVS     R1,#+0
   \   00000098   0xED9F 0x....      VLDR.W   S0,??DataTable1_14  ;; 0x43fe7aef
   \   0000009C   0x0020             MOVS     R0,R4
   \   0000009E   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     75          
     76          	s->addEvent(545.635, T_PRIMARY, TV_HIGH);
   \   000000A2   0x2201             MOVS     R2,#+1
   \   000000A4   0x2100             MOVS     R1,#+0
   \   000000A6   0xED9F 0x....      VLDR.W   S0,??DataTable1_15  ;; 0x440868a4
   \   000000AA   0x0020             MOVS     R0,R4
   \   000000AC   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     77          	s->addEvent(582.98864, T_PRIMARY, TV_LOW);
   \   000000B0   0x2200             MOVS     R2,#+0
   \   000000B2   0x2100             MOVS     R1,#+0
   \   000000B4   0xED9F 0x....      VLDR.W   S0,??DataTable1_16  ;; 0x4411bf46
   \   000000B8   0x0020             MOVS     R0,R4
   \   000000BA   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     78          
     79          	s->addEvent(617.22989, T_PRIMARY, TV_HIGH);
   \   000000BE   0x2201             MOVS     R2,#+1
   \   000000C0   0x2100             MOVS     R1,#+0
   \   000000C2   0xED9F 0x....      VLDR.W   S0,??DataTable1_17  ;; 0x441a4eb7
   \   000000C6   0x0020             MOVS     R0,R4
   \   000000C8   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     80          	s->addEvent(653.38625, T_PRIMARY, TV_LOW);
   \   000000CC   0x2200             MOVS     R2,#+0
   \   000000CE   0x2100             MOVS     R1,#+0
   \   000000D0   0xED9F 0x....      VLDR.W   S0,??DataTable2  ;; 0x442358b8
   \   000000D4   0x0020             MOVS     R0,R4
   \   000000D6   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     81          
     82          	s->addEvent(684.1080, T_PRIMARY, TV_HIGH);
   \   000000DA   0x2201             MOVS     R2,#+1
   \   000000DC   0x2100             MOVS     R1,#+0
   \   000000DE   0xED9F 0x....      VLDR.W   S0,??DataTable2_1  ;; 0x442b06e9
   \   000000E2   0x0020             MOVS     R0,R4
   \   000000E4   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     83          	s->addEvent(720, T_PRIMARY, TV_LOW);
   \   000000E8   0x2200             MOVS     R2,#+0
   \   000000EA   0x2100             MOVS     R1,#+0
   \   000000EC   0xED9F 0x....      VLDR.W   S0,??DataTable1  ;; 0x44340000
   \   000000F0   0x0020             MOVS     R0,R4
   \   000000F2   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     84          }
   \   000000F6   0xECBD 0x8B02      VPOP     {D8}
   \   000000FA   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     85          

   \                                 In section .text, align 4, keep-with-next
     86          void configureNeon1995TriggerShape(TriggerShape *s) {
   \                     _Z29configureNeon1995TriggerShapeP12TriggerShape:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     87          	s->reset(FOUR_STROKE_CAM_SENSOR, true);
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2102             MOVS     R1,#+2
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       _ZN12TriggerShape5resetE16operation_mode_eb
     88          
     89          	s->setTriggerSynchronizationGap(0.72);
   \   0000000E   0xED9F 0x....      VLDR.W   S0,??DataTable2_2  ;; 0x3f3851ec
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x.... 0x....      BL       _ZN12TriggerShape28setTriggerSynchronizationGapEf
     90          
     91          	s->useRiseEdge = false;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xF884 0x0B64      STRB     R0,[R4, #+2916]
     92          
     93          	// voodoo magic - we always need 720 at the end
     94          	int base = 720 - 560;
   \   0000001E   0x25A0             MOVS     R5,#+160
     95          
     96          	s->initialState[T_PRIMARY] = 1;
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xF8C4 0x0B80      STR      R0,[R4, #+2944]
     97          
     98          	s->addEvent(base - 720 + 600, T_SECONDARY, TV_HIGH);
   \   00000026   0x2201             MOVS     R2,#+1
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0xF1B5 0x0078      SUBS     R0,R5,#+120
   \   0000002E   0xEE00 0x0A10      VMOV     S0,R0
   \   00000032   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000036   0x0020             MOVS     R0,R4
   \   00000038   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     99          	s->addEvent(base - 720 + 604, T_SECONDARY, TV_LOW);
   \   0000003C   0x2200             MOVS     R2,#+0
   \   0000003E   0x2101             MOVS     R1,#+1
   \   00000040   0xF1B5 0x0074      SUBS     R0,R5,#+116
   \   00000044   0xEE00 0x0A10      VMOV     S0,R0
   \   00000048   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    100          	s->addEvent(base - 720 + 616, T_SECONDARY, TV_HIGH);
   \   00000052   0x2201             MOVS     R2,#+1
   \   00000054   0x2101             MOVS     R1,#+1
   \   00000056   0xF1B5 0x0068      SUBS     R0,R5,#+104
   \   0000005A   0xEE00 0x0A10      VMOV     S0,R0
   \   0000005E   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000062   0x0020             MOVS     R0,R4
   \   00000064   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    101          	s->addEvent(base - 720 + 620, T_SECONDARY, TV_LOW);
   \   00000068   0x2200             MOVS     R2,#+0
   \   0000006A   0x2101             MOVS     R1,#+1
   \   0000006C   0xF1B5 0x0064      SUBS     R0,R5,#+100
   \   00000070   0xEE00 0x0A10      VMOV     S0,R0
   \   00000074   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000078   0x0020             MOVS     R0,R4
   \   0000007A   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    102          	s->addEvent(base - 720 + 643, T_SECONDARY, TV_HIGH);
   \   0000007E   0x2201             MOVS     R2,#+1
   \   00000080   0x2101             MOVS     R1,#+1
   \   00000082   0xF1B5 0x004D      SUBS     R0,R5,#+77
   \   00000086   0xEE00 0x0A10      VMOV     S0,R0
   \   0000008A   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000008E   0x0020             MOVS     R0,R4
   \   00000090   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    103          	s->addEvent(base - 720 + 648, T_SECONDARY, TV_LOW);
   \   00000094   0x2200             MOVS     R2,#+0
   \   00000096   0x2101             MOVS     R1,#+1
   \   00000098   0xF1B5 0x0048      SUBS     R0,R5,#+72
   \   0000009C   0xEE00 0x0A10      VMOV     S0,R0
   \   000000A0   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000000A4   0x0020             MOVS     R0,R4
   \   000000A6   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    104          	s->addEvent(base - 720 + 671, T_SECONDARY, TV_HIGH);
   \   000000AA   0x2201             MOVS     R2,#+1
   \   000000AC   0x2101             MOVS     R1,#+1
   \   000000AE   0xF1B5 0x0031      SUBS     R0,R5,#+49
   \   000000B2   0xEE00 0x0A10      VMOV     S0,R0
   \   000000B6   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000000BA   0x0020             MOVS     R0,R4
   \   000000BC   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    105          	s->addEvent(base - 720 + 676, T_SECONDARY, TV_LOW);
   \   000000C0   0x2200             MOVS     R2,#+0
   \   000000C2   0x2101             MOVS     R1,#+1
   \   000000C4   0xF1B5 0x002C      SUBS     R0,R5,#+44
   \   000000C8   0xEE00 0x0A10      VMOV     S0,R0
   \   000000CC   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000000D0   0x0020             MOVS     R0,R4
   \   000000D2   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    106          
    107          	s->addEvent(base + 0, T_PRIMARY, TV_LOW);
   \   000000D6   0x2200             MOVS     R2,#+0
   \   000000D8   0x2100             MOVS     R1,#+0
   \   000000DA   0xEE00 0x5A10      VMOV     S0,R5
   \   000000DE   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000000E2   0x0020             MOVS     R0,R4
   \   000000E4   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    108          
    109          	s->addEvent(base + 20, T_SECONDARY, TV_HIGH);
   \   000000E8   0x2201             MOVS     R2,#+1
   \   000000EA   0x2101             MOVS     R1,#+1
   \   000000EC   0xF115 0x0014      ADDS     R0,R5,#+20
   \   000000F0   0xEE00 0x0A10      VMOV     S0,R0
   \   000000F4   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000000F8   0x0020             MOVS     R0,R4
   \   000000FA   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    110          	s->addEvent(base + 60, T_SECONDARY, TV_LOW);
   \   000000FE   0x2200             MOVS     R2,#+0
   \   00000100   0x2101             MOVS     R1,#+1
   \   00000102   0xF115 0x003C      ADDS     R0,R5,#+60
   \   00000106   0xEE00 0x0A10      VMOV     S0,R0
   \   0000010A   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000010E   0x0020             MOVS     R0,R4
   \   00000110   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    111          	s->addEvent(base + 75, T_SECONDARY, TV_HIGH);
   \   00000114   0x2201             MOVS     R2,#+1
   \   00000116   0x2101             MOVS     R1,#+1
   \   00000118   0xF115 0x004B      ADDS     R0,R5,#+75
   \   0000011C   0xEE00 0x0A10      VMOV     S0,R0
   \   00000120   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000124   0x0020             MOVS     R0,R4
   \   00000126   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    112          	s->addEvent(base + 79, T_SECONDARY, TV_LOW);
   \   0000012A   0x2200             MOVS     R2,#+0
   \   0000012C   0x2101             MOVS     R1,#+1
   \   0000012E   0xF115 0x004F      ADDS     R0,R5,#+79
   \   00000132   0xEE00 0x0A10      VMOV     S0,R0
   \   00000136   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000013A   0x0020             MOVS     R0,R4
   \   0000013C   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    113          	s->addEvent(base + 101, T_SECONDARY, TV_HIGH);
   \   00000140   0x2201             MOVS     R2,#+1
   \   00000142   0x2101             MOVS     R1,#+1
   \   00000144   0xF115 0x0065      ADDS     R0,R5,#+101
   \   00000148   0xEE00 0x0A10      VMOV     S0,R0
   \   0000014C   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000150   0x0020             MOVS     R0,R4
   \   00000152   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    114          	s->addEvent(base + 106, T_SECONDARY, TV_LOW);
   \   00000156   0x2200             MOVS     R2,#+0
   \   00000158   0x2101             MOVS     R1,#+1
   \   0000015A   0xF115 0x006A      ADDS     R0,R5,#+106
   \   0000015E   0xEE00 0x0A10      VMOV     S0,R0
   \   00000162   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000166   0x0020             MOVS     R0,R4
   \   00000168   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    115          	s->addEvent(base + 130, T_SECONDARY, TV_HIGH);
   \   0000016C   0x2201             MOVS     R2,#+1
   \   0000016E   0x2101             MOVS     R1,#+1
   \   00000170   0xF115 0x0082      ADDS     R0,R5,#+130
   \   00000174   0xEE00 0x0A10      VMOV     S0,R0
   \   00000178   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000017C   0x0020             MOVS     R0,R4
   \   0000017E   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    116          	s->addEvent(base + 135, T_SECONDARY, TV_LOW);
   \   00000182   0x2200             MOVS     R2,#+0
   \   00000184   0x2101             MOVS     R1,#+1
   \   00000186   0xF115 0x0087      ADDS     R0,R5,#+135
   \   0000018A   0xEE00 0x0A10      VMOV     S0,R0
   \   0000018E   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000192   0x0020             MOVS     R0,R4
   \   00000194   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    117          
    118          	s->addEvent(base + 200, T_PRIMARY, TV_HIGH); // width = 150
   \   00000198   0x2201             MOVS     R2,#+1
   \   0000019A   0x2100             MOVS     R1,#+0
   \   0000019C   0xF115 0x00C8      ADDS     R0,R5,#+200
   \   000001A0   0xEE00 0x0A10      VMOV     S0,R0
   \   000001A4   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000001A8   0x0020             MOVS     R0,R4
   \   000001AA   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    119          
    120          	s->addEvent(base + 236, T_SECONDARY, TV_HIGH);
   \   000001AE   0x2201             MOVS     R2,#+1
   \   000001B0   0x2101             MOVS     R1,#+1
   \   000001B2   0xF115 0x00EC      ADDS     R0,R5,#+236
   \   000001B6   0xEE00 0x0A10      VMOV     S0,R0
   \   000001BA   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000001BE   0x0020             MOVS     R0,R4
   \   000001C0   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    121          	s->addEvent(base + 239, T_SECONDARY, TV_LOW);
   \   000001C4   0x2200             MOVS     R2,#+0
   \   000001C6   0x2101             MOVS     R1,#+1
   \   000001C8   0xF115 0x00EF      ADDS     R0,R5,#+239
   \   000001CC   0xEE00 0x0A10      VMOV     S0,R0
   \   000001D0   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000001D4   0x0020             MOVS     R0,R4
   \   000001D6   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    122          	s->addEvent(base + 250, T_SECONDARY, TV_HIGH);
   \   000001DA   0x2201             MOVS     R2,#+1
   \   000001DC   0x2101             MOVS     R1,#+1
   \   000001DE   0xF115 0x00FA      ADDS     R0,R5,#+250
   \   000001E2   0xEE00 0x0A10      VMOV     S0,R0
   \   000001E6   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000001EA   0x0020             MOVS     R0,R4
   \   000001EC   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    123          	s->addEvent(base + 255, T_SECONDARY, TV_LOW);
   \   000001F0   0x2200             MOVS     R2,#+0
   \   000001F2   0x2101             MOVS     R1,#+1
   \   000001F4   0xF115 0x00FF      ADDS     R0,R5,#+255
   \   000001F8   0xEE00 0x0A10      VMOV     S0,R0
   \   000001FC   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000200   0x0020             MOVS     R0,R4
   \   00000202   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    124          	s->addEvent(base + 277, T_SECONDARY, TV_HIGH);
   \   00000206   0x2201             MOVS     R2,#+1
   \   00000208   0x2101             MOVS     R1,#+1
   \   0000020A   0xF205 0x1015      ADDW     R0,R5,#+277
   \   0000020E   0xEE00 0x0A10      VMOV     S0,R0
   \   00000212   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000216   0x0020             MOVS     R0,R4
   \   00000218   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    125          	s->addEvent(base + 282, T_SECONDARY, TV_LOW);
   \   0000021C   0x2200             MOVS     R2,#+0
   \   0000021E   0x2101             MOVS     R1,#+1
   \   00000220   0xF515 0x708D      ADDS     R0,R5,#+282
   \   00000224   0xEE00 0x0A10      VMOV     S0,R0
   \   00000228   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000022C   0x0020             MOVS     R0,R4
   \   0000022E   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    126          	s->addEvent(base + 305, T_SECONDARY, TV_HIGH);
   \   00000232   0x2201             MOVS     R2,#+1
   \   00000234   0x2101             MOVS     R1,#+1
   \   00000236   0xF205 0x1031      ADDW     R0,R5,#+305
   \   0000023A   0xEE00 0x0A10      VMOV     S0,R0
   \   0000023E   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000242   0x0020             MOVS     R0,R4
   \   00000244   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    127          	s->addEvent(base + 310, T_SECONDARY, TV_LOW);
   \   00000248   0x2200             MOVS     R2,#+0
   \   0000024A   0x2101             MOVS     R1,#+1
   \   0000024C   0xF515 0x709B      ADDS     R0,R5,#+310
   \   00000250   0xEE00 0x0A10      VMOV     S0,R0
   \   00000254   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000258   0x0020             MOVS     R0,R4
   \   0000025A   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    128          
    129          	s->addEvent(base + 374, T_SECONDARY, TV_HIGH);
   \   0000025E   0x2201             MOVS     R2,#+1
   \   00000260   0x2101             MOVS     R1,#+1
   \   00000262   0xF515 0x70BB      ADDS     R0,R5,#+374
   \   00000266   0xEE00 0x0A10      VMOV     S0,R0
   \   0000026A   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000026E   0x0020             MOVS     R0,R4
   \   00000270   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    130          
    131          	s->addEvent(base + 395, T_PRIMARY, TV_LOW); // width =
   \   00000274   0x2200             MOVS     R2,#+0
   \   00000276   0x2100             MOVS     R1,#+0
   \   00000278   0xF205 0x108B      ADDW     R0,R5,#+395
   \   0000027C   0xEE00 0x0A10      VMOV     S0,R0
   \   00000280   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000284   0x0020             MOVS     R0,R4
   \   00000286   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    132          
    133          	s->addEvent(base + 418, T_SECONDARY, TV_LOW);
   \   0000028A   0x2200             MOVS     R2,#+0
   \   0000028C   0x2101             MOVS     R1,#+1
   \   0000028E   0xF515 0x70D1      ADDS     R0,R5,#+418
   \   00000292   0xEE00 0x0A10      VMOV     S0,R0
   \   00000296   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000029A   0x0020             MOVS     R0,R4
   \   0000029C   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    134          	s->addEvent(base + 436, T_SECONDARY, TV_HIGH);
   \   000002A0   0x2201             MOVS     R2,#+1
   \   000002A2   0x2101             MOVS     R1,#+1
   \   000002A4   0xF515 0x70DA      ADDS     R0,R5,#+436
   \   000002A8   0xEE00 0x0A10      VMOV     S0,R0
   \   000002AC   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000002B0   0x0020             MOVS     R0,R4
   \   000002B2   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    135          	s->addEvent(base + 441, T_SECONDARY, TV_LOW);
   \   000002B6   0x2200             MOVS     R2,#+0
   \   000002B8   0x2101             MOVS     R1,#+1
   \   000002BA   0xF205 0x10B9      ADDW     R0,R5,#+441
   \   000002BE   0xEE00 0x0A10      VMOV     S0,R0
   \   000002C2   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000002C6   0x0020             MOVS     R0,R4
   \   000002C8   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    136          	s->addEvent(base + 463, T_SECONDARY, TV_HIGH);
   \   000002CC   0x2201             MOVS     R2,#+1
   \   000002CE   0x2101             MOVS     R1,#+1
   \   000002D0   0xF205 0x10CF      ADDW     R0,R5,#+463
   \   000002D4   0xEE00 0x0A10      VMOV     S0,R0
   \   000002D8   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000002DC   0x0020             MOVS     R0,R4
   \   000002DE   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    137          	s->addEvent(base + 468, T_SECONDARY, TV_LOW);
   \   000002E2   0x2200             MOVS     R2,#+0
   \   000002E4   0x2101             MOVS     R1,#+1
   \   000002E6   0xF515 0x70EA      ADDS     R0,R5,#+468
   \   000002EA   0xEE00 0x0A10      VMOV     S0,R0
   \   000002EE   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000002F2   0x0020             MOVS     R0,R4
   \   000002F4   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    138          	s->addEvent(base + 492, T_SECONDARY, TV_HIGH);
   \   000002F8   0x2201             MOVS     R2,#+1
   \   000002FA   0x2101             MOVS     R1,#+1
   \   000002FC   0xF515 0x70F6      ADDS     R0,R5,#+492
   \   00000300   0xEE00 0x0A10      VMOV     S0,R0
   \   00000304   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000308   0x0020             MOVS     R0,R4
   \   0000030A   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    139          	s->addEvent(base + 497, T_SECONDARY, TV_LOW);
   \   0000030E   0x2200             MOVS     R2,#+0
   \   00000310   0x2101             MOVS     R1,#+1
   \   00000312   0xF205 0x10F1      ADDW     R0,R5,#+497
   \   00000316   0xEE00 0x0A10      VMOV     S0,R0
   \   0000031A   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000031E   0x0020             MOVS     R0,R4
   \   00000320   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    140          
    141          	s->addEvent(base + 560, T_PRIMARY, TV_HIGH); // width =
   \   00000324   0x2201             MOVS     R2,#+1
   \   00000326   0x2100             MOVS     R1,#+0
   \   00000328   0xF515 0x700C      ADDS     R0,R5,#+560
   \   0000032C   0xEE00 0x0A10      VMOV     S0,R0
   \   00000330   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000334   0x0020             MOVS     R0,R4
   \   00000336   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
    142          }
   \   0000033A   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x44340000         DC32     0x44340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x00000000         DC32     0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x43B40000         DC32     0x43b40000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x3D75C28F         DC32     0x3d75c28f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x43A78000         DC32     0x43a78000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x40BF4C98         DC32     0x40bf4c98

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x3FFF10CB         DC32     0x3fff10cb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x430F123D         DC32     0x430f123d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x4336AF4E         DC32     0x4336af4e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x43576C96         DC32     0x43576c96

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x43801FAB         DC32     0x43801fab

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x4390547B         DC32     0x4390547b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x43A3639D         DC32     0x43a3639d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x43B4C2D4         DC32     0x43b4c2d4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x43FE7AEF         DC32     0x43fe7aef

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x440868A4         DC32     0x440868a4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x4411BF46         DC32     0x4411bf46

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   0x441A4EB7         DC32     0x441a4eb7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x442358B8         DC32     0x442358b8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x442B06E9         DC32     0x442b06e9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x3F3851EC         DC32     0x3f3851ec
    143          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   configureNeon1995TriggerShape(TriggerShape *)
        16   -> TriggerShape::addEvent(float, trigger_wheel_e, trigger_value_e)
        16   -> TriggerShape::reset(operation_mode_e, bool)
        16   -> TriggerShape::setTriggerSynchronizationGap(float)
      24   configureNeon2003TriggerShape(TriggerShape *)
        24   -> TriggerShape::addEvent(float, trigger_wheel_e, trigger_value_e)
        24   -> TriggerShape::reset(operation_mode_e, bool)
        24   -> TriggerShape::setTriggerSynchronizationGap2(float, float)
       8   initDodgeRam(TriggerShape *)
         8   -> TriggerShape::addEvent(float, trigger_wheel_e, trigger_value_e)
         8   -> TriggerShape::reset(operation_mode_e, bool)
         8   -> addSkippedToothTriggerEvents(trigger_wheel_e, TriggerShape *, int, int, float, float, float, float, float)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_17
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
     828  configureNeon1995TriggerShape(TriggerShape *)
     252  configureNeon2003TriggerShape(TriggerShape *)
     118  initDodgeRam(TriggerShape *)

 
 1 282 bytes in section .text
 
 1 282 bytes of CODE memory

Errors: none
Warnings: 3
