###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:10:04 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\config\engines\t #
#                       est_engine.cpp                                        #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\config\engines\t #
#                       est_engine.cpp -lCN F:\stuff\rusefi_sourceforge\firmw #
#                       are\iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\f #
#                       irmware\iar\Debug\List\ -o                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\   #
#                       --no_cse --no_unroll --no_inline --no_code_motion     #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\t #
#                       est_engine.lst                                        #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\te #
#                       st_engine.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\config\engines\test_engine.cpp
      1          /**
      2           * @file	test_engine.cpp
      3           *
      4           * set_engine_type 26
      5           *
      6           * @date Nov 14, 2014
      7           * @author Andrey Belomutskiy, (c) 2012-2015
      8           */
      9          
     10          #include "engine.h"
     11          #include "test_engine.h"
     12          
     13          EXTERN_ENGINE;
     14          

   \                                 In section .text, align 4, keep-with-next
     15          void setTestEngineConfiguration(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z26setTestEngineConfigurationv:
   \   00000000   0xB510             PUSH     {R4,LR}
     16          //	setOperationMode(engineConfiguration, FOUR_STROKE_CRANK_SENSOR);
     17          //	engineConfiguration->trigger.type = TT_TOOTHED_WHEEL;
     18          
     19          	setOperationMode(engineConfiguration, FOUR_STROKE_CAM_SENSOR);
   \   00000002   0x2102             MOVS     R1,#+2
   \   00000004   0x4833             LDR.N    R0,??setTestEngineConfiguration_0+0x4
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x.... 0x....      BL       _Z16setOperationModeP22engine_configuration_s16operation_mode_e
     20          	engineConfiguration->trigger.type = TT_ONE_PLUS_ONE;
   \   0000000C   0x4831             LDR.N    R0,??setTestEngineConfiguration_0+0x4
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x2110             MOVS     R1,#+16
   \   00000012   0xF8C0 0x1218      STR      R1,[R0, #+536]
     21          
     22          	trigger_config_s *triggerConfig = &engineConfiguration->trigger;
   \   00000016   0x482F             LDR.N    R0,??setTestEngineConfiguration_0+0x4
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF510 0x7406      ADDS     R4,R0,#+536
     23          	triggerConfig->customTotalToothCount = 60;
   \   0000001E   0x203C             MOVS     R0,#+60
   \   00000020   0x60A0             STR      R0,[R4, #+8]
     24          	triggerConfig->customSkippedToothCount = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x60E0             STR      R0,[R4, #+12]
     25          	engineConfiguration->useOnlyFrontForTrigger = true;
   \   00000026   0x482B             LDR.N    R0,??setTestEngineConfiguration_0+0x4
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0xF890 0x05E5      LDRB     R0,[R0, #+1509]
   \   0000002E   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000032   0x4928             LDR.N    R1,??setTestEngineConfiguration_0+0x4
   \   00000034   0x6809             LDR      R1,[R1, #+0]
   \   00000036   0xF881 0x05E5      STRB     R0,[R1, #+1509]
     26          
     27          	engineConfiguration->mafAdcChannel = EFI_ADC_NONE;
   \   0000003A   0x4826             LDR.N    R0,??setTestEngineConfiguration_0+0x4
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x2110             MOVS     R1,#+16
   \   00000040   0xF8C0 0x1244      STR      R1,[R0, #+580]
     28          	engineConfiguration->vbattAdcChannel = EFI_ADC_NONE;
   \   00000044   0x4823             LDR.N    R0,??setTestEngineConfiguration_0+0x4
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0x2110             MOVS     R1,#+16
   \   0000004A   0xF8C0 0x11D8      STR      R1,[R0, #+472]
     29          
     30          	setWholeIatCorrTimingTable(0 PASS_ENGINE_PARAMETER);
   \   0000004E   0xED9F 0x0A20      VLDR.W   S0,??setTestEngineConfiguration_0  ;; 0x0
   \   00000052   0x.... 0x....      BL       _Z26setWholeIatCorrTimingTablef
     31          
     32          	engineConfiguration->ignitionMode = IM_ONE_COIL;
   \   00000056   0x481F             LDR.N    R0,??setTestEngineConfiguration_0+0x4
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0xF8C0 0x11BC      STR      R1,[R0, #+444]
     33          	setConstantDwell(3 PASS_ENGINE_PARAMETER); // 50% duty cycle @ 5000 rpm
   \   00000060   0xEEB0 0x0A08      VMOV.F32 S0,#3.0
   \   00000064   0x.... 0x....      BL       _Z16setConstantDwellf
     34          
     35          	board_configuration_s *bc = &engineConfiguration->bc;
   \   00000068   0x481A             LDR.N    R0,??setTestEngineConfiguration_0+0x4
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0xF510 0x701C      ADDS     R0,R0,#+624
     36          	bc->malfunctionIndicatorPin = GPIO_UNASSIGNED;
   \   00000070   0x2150             MOVS     R1,#+80
   \   00000072   0xF8C0 0x1088      STR      R1,[R0, #+136]
     37          
     38          	bc->ignitionPins[0] = GPIOC_7; // #1
   \   00000076   0x2127             MOVS     R1,#+39
   \   00000078   0x6541             STR      R1,[R0, #+84]
     39          	bc->ignitionPins[1] = GPIO_UNASSIGNED; // #2
   \   0000007A   0x2150             MOVS     R1,#+80
   \   0000007C   0x6581             STR      R1,[R0, #+88]
     40          	bc->ignitionPins[2] = GPIO_UNASSIGNED; // #3
   \   0000007E   0x2150             MOVS     R1,#+80
   \   00000080   0x65C1             STR      R1,[R0, #+92]
     41          	bc->ignitionPins[3] = GPIO_UNASSIGNED; // #4
   \   00000082   0x2150             MOVS     R1,#+80
   \   00000084   0x6601             STR      R1,[R0, #+96]
     42          	bc->ignitionPins[4] = GPIO_UNASSIGNED; // #5
   \   00000086   0x2150             MOVS     R1,#+80
   \   00000088   0x6641             STR      R1,[R0, #+100]
     43          	bc->ignitionPins[5] = GPIO_UNASSIGNED; // #6
   \   0000008A   0x2150             MOVS     R1,#+80
   \   0000008C   0x6681             STR      R1,[R0, #+104]
     44          
     45          	bc->logicAnalyzerPins[0] = GPIO_UNASSIGNED;
   \   0000008E   0x2150             MOVS     R1,#+80
   \   00000090   0xF8C0 0x1184      STR      R1,[R0, #+388]
     46          	bc->logicAnalyzerPins[1] = GPIO_UNASSIGNED;
   \   00000094   0x2150             MOVS     R1,#+80
   \   00000096   0xF8C0 0x1188      STR      R1,[R0, #+392]
     47          	bc->logicAnalyzerPins[2] = GPIO_UNASSIGNED;
   \   0000009A   0x2150             MOVS     R1,#+80
   \   0000009C   0xF8C0 0x118C      STR      R1,[R0, #+396]
     48          	bc->logicAnalyzerPins[3] = GPIO_UNASSIGNED;
   \   000000A0   0x2150             MOVS     R1,#+80
   \   000000A2   0xF8C0 0x1190      STR      R1,[R0, #+400]
     49          
     50          	engineConfiguration->hasCltSensor = false;
   \   000000A6   0x490B             LDR.N    R1,??setTestEngineConfiguration_0+0x4
   \   000000A8   0x6809             LDR      R1,[R1, #+0]
   \   000000AA   0xF891 0x15D8      LDRB     R1,[R1, #+1496]
   \   000000AE   0xF011 0x017F      ANDS     R1,R1,#0x7F
   \   000000B2   0x4A08             LDR.N    R2,??setTestEngineConfiguration_0+0x4
   \   000000B4   0x6812             LDR      R2,[R2, #+0]
   \   000000B6   0xF882 0x15D8      STRB     R1,[R2, #+1496]
     51          	engineConfiguration->hasIatSensor = false;
   \   000000BA   0x4906             LDR.N    R1,??setTestEngineConfiguration_0+0x4
   \   000000BC   0x6809             LDR      R1,[R1, #+0]
   \   000000BE   0xF891 0x15D8      LDRB     R1,[R1, #+1496]
   \   000000C2   0xF011 0x01FD      ANDS     R1,R1,#0xFD
   \   000000C6   0x4A03             LDR.N    R2,??setTestEngineConfiguration_0+0x4
   \   000000C8   0x6812             LDR      R2,[R2, #+0]
   \   000000CA   0xF882 0x15D8      STRB     R1,[R2, #+1496]
     52          
     53          }
   \   000000CE   0xBD10             POP      {R4,PC}          ;; return
   \                     ??setTestEngineConfiguration_0:
   \   000000D0   0x00000000         DC32     0x0
   \   000000D4   0x........         DC32     engineConfiguration

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   setTestEngineConfiguration()
         8   -> setConstantDwell(float)
         8   -> setOperationMode(engine_configuration_s *, operation_mode_e)
         8   -> setWholeIatCorrTimingTable(float)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     216  setTestEngineConfiguration()

 
 216 bytes in section .text
 
 216 bytes of CODE memory

Errors: none
Warnings: 1
