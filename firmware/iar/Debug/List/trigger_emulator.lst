###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:08:55 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\development\trig #
#                       ger_emulator.cpp                                      #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\development\trig #
#                       ger_emulator.cpp -lCN F:\stuff\rusefi_sourceforge\fir #
#                       mware\iar\Debug\List\ -lA                             #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\  #
#                       -o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj #
#                       \ --no_cse --no_unroll --no_inline --no_code_motion   #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\t #
#                       rigger_emulator.lst                                   #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\tr #
#                       igger_emulator.o                                      #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\development\trigger_emulator.cpp
      1          /**
      2           * @file    trigger_emulator.cpp
      3           * @brief   Position sensor(s) emulation code
      4           *
      5           * This file is mostly about initialization, the configuration is
      6           * provided by the configureShaftPositionEmulatorShape method
      7           *
      8           * @date Dec 9, 2012
      9           * @author Andrey Belomutskiy, (c) 2012-2015
     10           */
     11          
     12          #include "trigger_emulator.h"
     13          #include "eficonsole.h"
     14          #include "main_trigger_callback.h"
     15          #include "datalogging.h"
     16          #include "engine_configuration.h"
     17          #if EFI_PROD_CODE
     18          #include "pwm_generator.h"
     19          #include "pin_repository.h"
     20          #endif
     21          #include "io_pins.h"
     22          #include "trigger_emulator_algo.h"
     23          #include "trigger_central.h"
     24          #include "settings.h"
     25          
     26          extern PwmConfig triggerSignal;
     27          

   \                                 In section .bss, align 4
     28          static OutputPin emulatorOutputs[3];
   \                     emulatorOutputs:
   \   00000000                      DS8 48
     29          

   \                                 In section .text, align 2, keep-with-next
     30          void initTriggerEmulator(Logging *sharedLogger, Engine *engine) {
   \                     _Z19initTriggerEmulatorP7LoggingP6Engine:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     31          
     32          	engine_configuration_s *engineConfiguration = engine->engineConfiguration;
   \   00000006   0x6A6E             LDR      R6,[R5, #+36]
     33          	board_configuration_s *boardConfiguration = &engineConfiguration->bc;
   \   00000008   0xF516 0x771C      ADDS     R7,R6,#+624
     34          
     35          #if EFI_EMULATE_POSITION_SENSORS || defined(__DOXYGEN__)
     36          	print("Emulating %s\r\n", getConfigurationName(engineConfiguration->engineType));
   \   0000000C   0x6830             LDR      R0,[R6, #+0]
   \   0000000E   0x.... 0x....      BL       _Z20getConfigurationName13engine_type_e
   \   00000012   0x0001             MOVS     R1,R0
   \   00000014   0x....             LDR.N    R0,??DataTable1_2
   \   00000016   0x.... 0x....      BL       print
     37          
     38          	triggerSignal.outputPins[0] = &emulatorOutputs[0];
   \   0000001A   0x....             LDR.N    R0,??DataTable1_3
   \   0000001C   0x....             LDR.N    R1,??DataTable1_1
   \   0000001E   0x6001             STR      R1,[R0, #+0]
     39          	triggerSignal.outputPins[1] = &emulatorOutputs[1];
   \   00000020   0x....             LDR.N    R0,??DataTable1_3
   \   00000022   0x....             LDR.N    R1,??DataTable1_4
   \   00000024   0x6041             STR      R1,[R0, #+4]
     40          	triggerSignal.outputPins[2] = &emulatorOutputs[2];
   \   00000026   0x....             LDR.N    R0,??DataTable1_3
   \   00000028   0x....             LDR.N    R1,??DataTable1_5
   \   0000002A   0x6081             STR      R1,[R0, #+8]
     41          
     42          #if EFI_PROD_CODE
     43          	// todo: refactor, make this a loop
     44          	outputPinRegisterExt2("distributor ch1", triggerSignal.outputPins[0], boardConfiguration->triggerSimulatorPins[0],
     45          			&boardConfiguration->triggerSimulatorPinModes[0]);
   \   0000002C   0xF517 0x73B6      ADDS     R3,R7,#+364
   \   00000030   0xF8D7 0x2160      LDR      R2,[R7, #+352]
   \   00000034   0x....             LDR.N    R0,??DataTable1_3
   \   00000036   0x6801             LDR      R1,[R0, #+0]
   \   00000038   0x....             LDR.N    R0,??DataTable1_6
   \   0000003A   0x.... 0x....      BL       _Z21outputPinRegisterExt2PKcP9OutputPin11brain_pin_eP17pin_output_mode_e
     46          
     47          	outputPinRegisterExt2("distributor ch2", triggerSignal.outputPins[1], boardConfiguration->triggerSimulatorPins[1],
     48          			&boardConfiguration->triggerSimulatorPinModes[1]);
   \   0000003E   0xF517 0x73B8      ADDS     R3,R7,#+368
   \   00000042   0xF8D7 0x2164      LDR      R2,[R7, #+356]
   \   00000046   0x....             LDR.N    R0,??DataTable1_3
   \   00000048   0x6841             LDR      R1,[R0, #+4]
   \   0000004A   0x....             LDR.N    R0,??DataTable1_7
   \   0000004C   0x.... 0x....      BL       _Z21outputPinRegisterExt2PKcP9OutputPin11brain_pin_eP17pin_output_mode_e
     49          
     50          	outputPinRegisterExt2("distributor ch3", triggerSignal.outputPins[2], boardConfiguration->triggerSimulatorPins[2],
     51          			&boardConfiguration->triggerSimulatorPinModes[2]);
   \   00000050   0xF517 0x73BA      ADDS     R3,R7,#+372
   \   00000054   0xF8D7 0x2168      LDR      R2,[R7, #+360]
   \   00000058   0x....             LDR.N    R0,??DataTable1_3
   \   0000005A   0x6881             LDR      R1,[R0, #+8]
   \   0000005C   0x....             LDR.N    R0,??DataTable1_8
   \   0000005E   0x.... 0x....      BL       _Z21outputPinRegisterExt2PKcP9OutputPin11brain_pin_eP17pin_output_mode_e
     52          #endif /* EFI_PROD_CODE */
     53          
     54          	initTriggerEmulatorLogic(sharedLogger, engine);
   \   00000062   0x0029             MOVS     R1,R5
   \   00000064   0x0020             MOVS     R0,R4
   \   00000066   0x.... 0x....      BL       _Z24initTriggerEmulatorLogicP7LoggingP6Engine
     55          #else
     56          	print("No position sensor(s) emulation\r\n");
     57          #endif /* EFI_EMULATE_POSITION_SENSORS */
     58          }
   \   0000006A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .init_array, align 4, keep-with-next, root
   \   00000000   0x........         DC32    RELOC_ARM_TARGET1 __sti__routine

   \                                 In section .rodata, align 4
   \                     `?<Constant "Emulating %s\\r\\n">`:
   \   00000000   0x45 0x6D          DC8 "Emulating %s\015\012"
   \              0x75 0x6C    
   \              0x61 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x25 0x73    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "distributor ch1">`:
   \   00000000   0x64 0x69          DC8 "distributor ch1"
   \              0x73 0x74    
   \              0x72 0x69    
   \              0x62 0x75    
   \              0x74 0x6F    
   \              0x72 0x20    
   \              0x63 0x68    
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "distributor ch2">`:
   \   00000000   0x64 0x69          DC8 "distributor ch2"
   \              0x73 0x74    
   \              0x72 0x69    
   \              0x62 0x75    
   \              0x74 0x6F    
   \              0x72 0x20    
   \              0x63 0x68    
   \              0x32 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "distributor ch3">`:
   \   00000000   0x64 0x69          DC8 "distributor ch3"
   \              0x73 0x74    
   \              0x72 0x69    
   \              0x62 0x75    
   \              0x74 0x6F    
   \              0x72 0x20    
   \              0x63 0x68    
   \              0x33 0x00    

   \                                 In section .text, align 2, keep-with-next
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x2303             MOVS     R3,#+3
   \   00000004   0x2210             MOVS     R2,#+16
   \   00000006   0x....             LDR.N    R1,??DataTable1
   \   00000008   0x....             LDR.N    R0,??DataTable1_1
   \   0000000A   0x.... 0x....      BL       __aeabi_vec_ctor_nocookie_nodtor
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     _ZN9OutputPinC1Ev

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     emulatorOutputs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     `?<Constant "Emulating %s\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     triggerSignal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     emulatorOutputs+0x10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     emulatorOutputs+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     `?<Constant "distributor ch1">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     `?<Constant "distributor ch2">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     `?<Constant "distributor ch3">`

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   __sti__routine()
         8   -> __aeabi_vec_ctor_nocookie_nodtor
      24   initTriggerEmulator(Logging *, Engine *)
        24   -> getConfigurationName(engine_type_e)
        24   -> initTriggerEmulatorLogic(Logging *, Engine *)
        24   -> outputPinRegisterExt2(char const *, OutputPin *, brain_pin_e, pin_output_mode_e *)
        24   -> print


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant "Emulating %s\r\n">
      16  ?<Constant "distributor ch1">
      16  ?<Constant "distributor ch2">
      16  ?<Constant "distributor ch3">
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
      16  __sti__routine()
      48  emulatorOutputs
     108  initTriggerEmulator(Logging *, Engine *)
       4  -- Other

 
  48 bytes in section .bss
   4 bytes in section .init_array
  64 bytes in section .rodata
 160 bytes in section .text
 
 164 bytes of CODE  memory
  64 bytes of CONST memory
  48 bytes of DATA  memory

Errors: none
Warnings: 1
