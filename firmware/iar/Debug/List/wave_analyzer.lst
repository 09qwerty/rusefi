###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:08:59 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\development\wave #
#                       _analyzer.cpp                                         #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\development\wave #
#                       _analyzer.cpp -lCN F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\Debug\List\ -o                             #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\   #
#                       --no_cse --no_unroll --no_inline --no_code_motion     #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\w #
#                       ave_analyzer.lst                                      #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\wa #
#                       ve_analyzer.o                                         #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\development\wave_analyzer.cpp
      1          /**
      2           * @file	wave_analyzer.cpp
      3           * @brief	Initialization of Input Capture pins used for dev console sniffer
      4           *
      5           * This file is responsible for sniffing of external digital signals and registering
      6           * these digital events in WaveChart used by the Sniffer tab of Dev Console.
      7           *
      8           *
      9           * @date Jan 7, 2013
     10           * @author Andrey Belomutskiy, (c) 2012-2015
     11           */
     12          
     13          #include "main.h"
     14          #include "wave_analyzer.h"
     15          #include "eficonsole.h"
     16          #include "data_buffer.h"
     17          #include "pin_repository.h"
     18          #include "engine_state.h"
     19          #include "signal_executor.h"
     20          #include "engine_configuration.h"
     21          #include "trigger_central.h"
     22          #include "rfiutil.h"
     23          #include "engine_math.h"
     24          #include "engine.h"
     25          #include "rpm_calculator.h"
     26          #include "wave_chart.h"
     27          
     28          #if EFI_WAVE_ANALYZER || defined(__DOXYGEN__)
     29          
     30          EXTERN_ENGINE;
     31          
     32          #define CHART_RESET_DELAY 1
     33          #define MAX_ICU_COUNT 5
     34          
     35          #if EFI_WAVE_CHART || defined(__DOXYGEN__)
     36          extern WaveChart waveChart;
     37          #endif
     38          extern bool hasFirmwareErrorFlag;
     39          
     40          /**
     41           * Difference between current 1st trigger event and previous 1st trigger event.
     42           */
     43          static volatile uint32_t engineCycleDurationUs;

   \                                 In section .bss, align 8
     44          static volatile efitime_t previousEngineCycleTimeUs = 0;
   \                     previousEngineCycleTimeUs:
   \   00000000                      DS8 8
     45          

   \                                 In section .bss, align 4
     46          static int waveReaderCount = 0;
   \                     waveReaderCount:
   \   00000000                      DS8 4

   \                                 In section .bss, align 8
     47          static WaveReader readers[MAX_ICU_COUNT];
   \                     readers:
   \   00000000                      DS8 440
     48          

   \                                 In section .bss, align 8
     49          static THD_WORKING_AREA(waThreadStack, UTILITY_THREAD_STACK_SIZE);
   \                     waThreadStack:
   \   00000000                      DS8 712

   \                                 In section .bss, align 4
     50          static Logging * logger;
   \                     logger:
   \   00000000                      DS8 4
     51          

   \                                 In section .text, align 2, keep-with-next
     52          static void ensureInitialized(WaveReader *reader) {
   \                     _Z17ensureInitializedP10WaveReader:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     53          	efiAssertVoid(reader->hw->started, "wave analyzer NOT INITIALIZED");
   \   00000004   0x6820             LDR      R0,[R4, #+0]
   \   00000006   0x7940             LDRB     R0,[R0, #+5]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD104             BNE.N    ??ensureInitialized_0
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   00000010   0x.... 0x....      BL       firmwareError
   \   00000014   0xE7FF             B.N      ??ensureInitialized_1
     54          }
   \                     ??ensureInitialized_0:
   \                     ??ensureInitialized_1:
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
     55          
     56          #if EFI_WAVE_ANALYZER || defined(__DOXYGEN__)
     57          

   \                                 In section .text, align 2, keep-with-next
     58          static void waAnaWidthCallback(WaveReader *reader) {
   \                     _Z18waAnaWidthCallbackP10WaveReader:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
     59          	efitick_t nowUs = getTimeNowUs();
   \   00000004   0x.... 0x....      BL       getTimeNowUs
   \   00000008   0x0004             MOVS     R4,R0
   \   0000000A   0x000D             MOVS     R5,R1
     60          	reader->eventCounter++;
   \   0000000C   0x68B0             LDR      R0,[R6, #+8]
   \   0000000E   0x1C40             ADDS     R0,R0,#+1
   \   00000010   0x60B0             STR      R0,[R6, #+8]
     61          	reader->lastActivityTimeUs = nowUs;
   \   00000012   0xE9C6 0x4508      STRD     R4,R5,[R6, #+32]
     62          	addWaveChartEvent(reader->name, WC_UP);
   \   00000016   0x....             ADR.N    R2,??DataTable9  ;; "u"
   \   00000018   0x6871             LDR      R1,[R6, #+4]
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000001E   0x.... 0x....      BL       _ZN9WaveChart18addWaveChartEvent3EPKcS1_
     63          
     64          	uint32_t width = nowUs - reader->periodEventTimeUs;
   \   00000022   0xE9D6 0x010A      LDRD     R0,R1,[R6, #+40]
   \   00000026   0x1A20             SUBS     R0,R4,R0
     65          	reader->last_wave_low_widthUs = width;
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0xE9C6 0x0112      STRD     R0,R1,[R6, #+72]
     66          
     67          	reader->signalPeriodUs = nowUs - reader->widthEventTimeUs;
   \   0000002E   0xE9D6 0x230C      LDRD     R2,R3,[R6, #+48]
   \   00000032   0x1AA2             SUBS     R2,R4,R2
   \   00000034   0xEB75 0x0303      SBCS     R3,R5,R3
   \   00000038   0xE9C6 0x230E      STRD     R2,R3,[R6, #+56]
     68          	reader->widthEventTimeUs = nowUs;
   \   0000003C   0xE9C6 0x450C      STRD     R4,R5,[R6, #+48]
     69          }
   \   00000040   0xBD70             POP      {R4-R6,PC}       ;; return
     70          

   \                                 In section .text, align 2, keep-with-next
     71          void WaveReader::onFallEvent() {
   \                     _ZN10WaveReader11onFallEventEv:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4680             MOV      R8,R0
     72          	efitick_t nowUs = getTimeNowUs();
   \   00000006   0x.... 0x....      BL       getTimeNowUs
   \   0000000A   0x0004             MOVS     R4,R0
   \   0000000C   0x000D             MOVS     R5,R1
     73          	eventCounter++;
   \   0000000E   0xF8D8 0x0008      LDR      R0,[R8, #+8]
   \   00000012   0x1C40             ADDS     R0,R0,#+1
   \   00000014   0xF8C8 0x0008      STR      R0,[R8, #+8]
     74          	lastActivityTimeUs = nowUs;
   \   00000018   0xE9C8 0x4508      STRD     R4,R5,[R8, #+32]
     75          	addWaveChartEvent(name, WC_DOWN);
   \   0000001C   0x....             ADR.N    R2,??DataTable9_1  ;; "d"
   \   0000001E   0xF8D8 0x1004      LDR      R1,[R8, #+4]
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000026   0x.... 0x....      BL       _ZN9WaveChart18addWaveChartEvent3EPKcS1_
     76          
     77          	efitick_t width = nowUs - widthEventTimeUs;
   \   0000002A   0xE9D8 0x010C      LDRD     R0,R1,[R8, #+48]
   \   0000002E   0x1A26             SUBS     R6,R4,R0
   \   00000030   0xEB75 0x0701      SBCS     R7,R5,R1
     78          	last_wave_high_widthUs = width;
   \   00000034   0xE9C8 0x6714      STRD     R6,R7,[R8, #+80]
     79          
     80          	int revolutionCounter = getRevolutionCounter();
   \   00000038   0x.... 0x....      BL       _Z20getRevolutionCounterv
     81          
     82          	totalOnTimeAccumulatorUs += width;
   \   0000003C   0xE9D8 0x2306      LDRD     R2,R3,[R8, #+24]
   \   00000040   0x1992             ADDS     R2,R2,R6
   \   00000042   0x417B             ADCS     R3,R3,R7
   \   00000044   0xE9C8 0x2306      STRD     R2,R3,[R8, #+24]
     83          	if (currentRevolutionCounter != revolutionCounter) {
   \   00000048   0xF8D8 0x100C      LDR      R1,[R8, #+12]
   \   0000004C   0x4281             CMP      R1,R0
   \   0000004E   0xD012             BEQ.N    ??onFallEvent_0
     84          		/**
     85          		 * We are here in case of a new engine cycle
     86          		 */
     87          		currentRevolutionCounter = revolutionCounter;
   \   00000050   0xF8C8 0x000C      STR      R0,[R8, #+12]
     88          		prevTotalOnTimeUs = totalOnTimeAccumulatorUs;
   \   00000054   0xE9D8 0x2306      LDRD     R2,R3,[R8, #+24]
   \   00000058   0xE9C8 0x2304      STRD     R2,R3,[R8, #+16]
     89          		totalOnTimeAccumulatorUs = 0;
   \   0000005C   0x2200             MOVS     R2,#+0
   \   0000005E   0x2300             MOVS     R3,#+0
   \   00000060   0xE9C8 0x2306      STRD     R2,R3,[R8, #+24]
     90          
     91          		waveOffsetUs = nowUs - previousEngineCycleTimeUs;
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable11_10
   \   00000068   0xE9D1 0x2300      LDRD     R2,R3,[R1, #+0]
   \   0000006C   0x1AA2             SUBS     R2,R4,R2
   \   0000006E   0xEB75 0x0303      SBCS     R3,R5,R3
   \   00000072   0xE9C8 0x2310      STRD     R2,R3,[R8, #+64]
     92          
     93          	}
     94          
     95          	periodEventTimeUs = nowUs;
   \                     ??onFallEvent_0:
   \   00000076   0xE9C8 0x450A      STRD     R4,R5,[R8, #+40]
     96          
     97          //	uint32_t period = engineCycleDurationUs;  // local copy of volatile variable
     98          }
   \   0000007A   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
     99          

   \                                 In section .text, align 2, keep-with-next
    100          static void waIcuPeriodCallback(WaveReader *reader) {
   \                     _Z19waIcuPeriodCallbackP10WaveReader:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    101          	reader->onFallEvent();
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN10WaveReader11onFallEventEv
    102          }
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return
    103          

   \                                 In section .text, align 2, keep-with-next
    104          static void setWaveModeSilent(int index, int mode) {
   \                     _Z17setWaveModeSilentii:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    105          	WaveReader *reader = &readers[index];
   \   00000006   0x2058             MOVS     R0,#+88
   \   00000008   0x....             LDR.N    R1,??DataTable11_7
   \   0000000A   0xFB00 0x1604      MLA      R6,R0,R4,R1
    106          
    107          	startInputDriver(reader->hw, mode);
   \   0000000E   0x2D00             CMP      R5,#+0
   \   00000010   0xD001             BEQ.N    ??setWaveModeSilent_0
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0xE000             B.N      ??setWaveModeSilent_1
   \                     ??setWaveModeSilent_0:
   \   00000016   0x2100             MOVS     R1,#+0
   \                     ??setWaveModeSilent_1:
   \   00000018   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001A   0x6830             LDR      R0,[R6, #+0]
   \   0000001C   0x.... 0x....      BL       _Z16startInputDriverP15digital_input_sb
    108          }
   \   00000020   0xBD70             POP      {R4-R6,PC}       ;; return
    109          
    110          //static int getEventCounter(int index) {
    111          //	WaveReader *reader = &readers[index];
    112          //	ensureInitialized(reader);
    113          //	return reader->eventCounter;
    114          //}
    115          

   \                                 In section .text, align 2, keep-with-next
    116          static void initWave(const char *name, int index) {
   \                     _Z8initWavePKci:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    117          	brain_pin_e brainPin = boardConfiguration->logicAnalyzerPins[index];
   \   00000008   0x....             LDR.N    R0,??DataTable11_11
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xEB10 0x0085      ADDS     R0,R0,R5, LSL #+2
   \   00000010   0xF8D0 0x6184      LDR      R6,[R0, #+388]
    118          
    119          	bool mode = boardConfiguration->logicAnalyzerMode[index];
   \   00000014   0x....             LDR.N    R0,??DataTable11_11
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x1828             ADDS     R0,R5,R0
   \   0000001A   0xF890 0x0194      LDRB     R0,[R0, #+404]
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD001             BEQ.N    ??initWave_0
   \   00000022   0x2701             MOVS     R7,#+1
   \   00000024   0xE000             B.N      ??initWave_1
   \                     ??initWave_0:
   \   00000026   0x2700             MOVS     R7,#+0
    120          
    121          	waveReaderCount++;
   \                     ??initWave_1:
   \   00000028   0x....             LDR.N    R0,??DataTable11_12
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x1C40             ADDS     R0,R0,#+1
   \   0000002E   0x....             LDR.N    R1,??DataTable11_12
   \   00000030   0x6008             STR      R0,[R1, #+0]
    122          	efiAssertVoid(index < MAX_ICU_COUNT, "too many ICUs");
   \   00000032   0x2D05             CMP      R5,#+5
   \   00000034   0xDB03             BLT.N    ??initWave_2
   \   00000036   0x....             LDR.N    R0,??DataTable11_13
   \   00000038   0x.... 0x....      BL       firmwareError
   \   0000003C   0xE027             B.N      ??initWave_3
    123          	WaveReader *reader = &readers[index];
   \                     ??initWave_2:
   \   0000003E   0x2058             MOVS     R0,#+88
   \   00000040   0x....             LDR.N    R1,??DataTable11_7
   \   00000042   0xFB00 0x1805      MLA      R8,R0,R5,R1
    124          	reader->name = name;
   \   00000046   0xF8C8 0x4004      STR      R4,[R8, #+4]
    125          
    126          	reader->hw = initWaveAnalyzerDriver("wave input", brainPin);
   \   0000004A   0x0031             MOVS     R1,R6
   \   0000004C   0x....             LDR.N    R0,??DataTable11_14
   \   0000004E   0x.... 0x....      BL       _Z22initWaveAnalyzerDriverPKc11brain_pin_e
   \   00000052   0xF8C8 0x0000      STR      R0,[R8, #+0]
    127          
    128          
    129          	reader->hw->widthListeners.registerCallback((VoidInt) waAnaWidthCallback, (void*) reader);
   \   00000056   0x4642             MOV      R2,R8
   \   00000058   0x....             LDR.N    R1,??DataTable11_15
   \   0000005A   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \   0000005E   0x3008             ADDS     R0,R0,#+8
   \   00000060   0x.... 0x....      BL       _ZN16IntListenerArray16registerCallbackEPFviEPv
    130          
    131          	reader->hw->periodListeners.registerCallback((VoidInt) waIcuPeriodCallback, (void*) reader);
   \   00000064   0x4642             MOV      R2,R8
   \   00000066   0x....             LDR.N    R1,??DataTable11_16
   \   00000068   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \   0000006C   0x3084             ADDS     R0,R0,#+132
   \   0000006E   0x.... 0x....      BL       _ZN16IntListenerArray16registerCallbackEPFviEPv
    132          
    133          
    134          	print("wave%d input on %s\r\n", index, hwPortname(brainPin));
   \   00000072   0x0030             MOVS     R0,R6
   \   00000074   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000078   0x0002             MOVS     R2,R0
   \   0000007A   0x0029             MOVS     R1,R5
   \   0000007C   0x....             LDR.N    R0,??DataTable11_17
   \   0000007E   0x.... 0x....      BL       print
    135          	startInputDriver(reader->hw, mode);
   \   00000082   0x0039             MOVS     R1,R7
   \   00000084   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000086   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \   0000008A   0x.... 0x....      BL       _Z16startInputDriverP15digital_input_sb
    136          }
   \                     ??initWave_3:
   \   0000008E   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    137          #endif
    138          

   \                                 In section .text, align 2, keep-with-next
   \   __code __interwork __softfp WaveReader::subobject WaveReader()
   \                     _ZN10WaveReaderC2Ev:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN10WaveReaderC1Ev
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
    139          WaveReader::WaveReader() {
    140          	hw = NULL;
   \                     _ZN10WaveReaderC1Ev:
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x6001             STR      R1,[R0, #+0]
    141          	last_wave_high_widthUs = 0;
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0xE9C0 0x2314      STRD     R2,R3,[R0, #+80]
    142          }
   \   0000000C   0x4770             BX       LR               ;; return
    143          
    144          static void waTriggerEventListener(trigger_event_e ckpSignalType, uint32_t index DECLARE_ENGINE_PARAMETER_S) {
    145          	(void)ckpSignalType;
    146          	if (index != 0) {
    147          		return;
    148          	}
    149          	efitick_t nowUs = getTimeNowUs();
    150          	engineCycleDurationUs = nowUs - previousEngineCycleTimeUs;
    151          	previousEngineCycleTimeUs = nowUs;
    152          }
    153          

   \                                 In section .text, align 2, keep-with-next
    154          static msg_t waThread(void *arg) {
   \                     _Z8waThreadPv:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    155          	(void)arg;
    156          	chRegSetThreadName("Wave Analyzer");
   \   00000004   0x....             LDR.N    R0,??DataTable11_18
   \   00000006   0x6980             LDR      R0,[R0, #+24]
   \   00000008   0x....             LDR.N    R1,??DataTable11_19
   \   0000000A   0x6181             STR      R1,[R0, #+24]
    157          #if EFI_WAVE_CHART
    158          	while (TRUE) {
    159          		chThdSleepSeconds(CHART_RESET_DELAY);
   \                     ??waThread_0:
   \   0000000C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000010   0x.... 0x....      BL       chThdSleep
    160          
    161          		waveChart.publishChartIfFull();
   \   00000014   0x....             LDR.N    R0,??DataTable11_9
   \   00000016   0x.... 0x....      BL       _ZN9WaveChart18publishChartIfFullEv
   \   0000001A   0xE7F7             B.N      ??waThread_0
    162          	}
    163          #endif /* EFI_WAVE_CHART */
    164          #if defined __GNUC__
    165          	return -1;
    166          #endif
    167          }
    168          
    169          static uint32_t getWaveLowWidth(int index) {
    170          	WaveReader *reader = &readers[index];
    171          	ensureInitialized(reader);
    172          	return reader->last_wave_low_widthUs;
    173          }
    174          

   \                                 In section .text, align 4, keep-with-next
    175          static float getSignalOnTime(int index) {
   \                     _Z15getSignalOnTimei:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    176          	WaveReader *reader = &readers[index];
   \   00000004   0x2058             MOVS     R0,#+88
   \   00000006   0x....             LDR.N    R1,??DataTable11_7
   \   00000008   0xFB00 0x1504      MLA      R5,R0,R4,R1
    177          	ensureInitialized(reader);
   \   0000000C   0x0028             MOVS     R0,R5
   \   0000000E   0x.... 0x....      BL       _Z17ensureInitializedP10WaveReader
    178          	if (getTimeNowUs() - reader->lastActivityTimeUs > 4 * US_PER_SECOND) {
   \   00000012   0x.... 0x....      BL       getTimeNowUs
   \   00000016   0xE9D5 0x2308      LDRD     R2,R3,[R5, #+32]
   \   0000001A   0x1A80             SUBS     R0,R0,R2
   \   0000001C   0x4199             SBCS     R1,R1,R3
   \   0000001E   0x....             LDR.N    R2,??DataTable11_20  ;; 0x3d0901
   \   00000020   0x2300             MOVS     R3,#+0
   \   00000022   0x4299             CMP      R1,R3
   \   00000024   0xDB05             BLT.N    ??getSignalOnTime_0
   \   00000026   0xDC01             BGT.N    ??getSignalOnTime_1
   \   00000028   0x4290             CMP      R0,R2
   \   0000002A   0xD302             BCC.N    ??getSignalOnTime_0
    179          		return 0.0f; // dwell time has expired
   \                     ??getSignalOnTime_1:
   \   0000002C   0xED9F 0x....      VLDR.W   S0,??DataTable11  ;; 0x0
   \   00000030   0xE009             B.N      ??getSignalOnTime_2
    180          	}
    181          	return reader->last_wave_high_widthUs / 1000.0f;
   \                     ??getSignalOnTime_0:
   \   00000032   0xE9D5 0x0114      LDRD     R0,R1,[R5, #+80]
   \   00000036   0x.... 0x....      BL       __aeabi_l2f
   \   0000003A   0xEE00 0x0A10      VMOV     S0,R0
   \   0000003E   0xEDDF 0x....      VLDR.W   S1,??DataTable11_1  ;; 0x447a0000
   \   00000042   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \                     ??getSignalOnTime_2:
   \   00000046   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    182          }
    183          

   \                                 In section .text, align 2, keep-with-next
    184          static efitime_t getWaveOffset(int index) {
   \                     _Z13getWaveOffseti:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    185          	WaveReader *reader = &readers[index];
   \   00000004   0x2058             MOVS     R0,#+88
   \   00000006   0x....             LDR.N    R1,??DataTable11_7
   \   00000008   0xFB00 0x1504      MLA      R5,R0,R4,R1
    186          	ensureInitialized(reader);
   \   0000000C   0x0028             MOVS     R0,R5
   \   0000000E   0x.... 0x....      BL       _Z17ensureInitializedP10WaveReader
    187          	return reader->waveOffsetUs;
   \   00000012   0xE9D5 0x0110      LDRD     R0,R1,[R5, #+64]
   \   00000016   0xBD34             POP      {R2,R4,R5,PC}    ;; return
    188          }
    189          

   \                                 In section .text, align 4, keep-with-next
    190          static float getSignalPeriodMs(int index) {
   \                     _Z17getSignalPeriodMsi:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    191          	WaveReader *reader = &readers[index];
   \   00000004   0x2058             MOVS     R0,#+88
   \   00000006   0x....             LDR.N    R1,??DataTable11_7
   \   00000008   0xFB00 0x1504      MLA      R5,R0,R4,R1
    192          	ensureInitialized(reader);
   \   0000000C   0x0028             MOVS     R0,R5
   \   0000000E   0x.... 0x....      BL       _Z17ensureInitializedP10WaveReader
    193          	return reader->signalPeriodUs / 1000.0f;
   \   00000012   0xE9D5 0x010E      LDRD     R0,R1,[R5, #+56]
   \   00000016   0x.... 0x....      BL       __aeabi_l2f
   \   0000001A   0xEE00 0x0A10      VMOV     S0,R0
   \   0000001E   0xEDDF 0x....      VLDR.W   S1,??DataTable11_1  ;; 0x447a0000
   \   00000022   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   00000026   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    194          }
    195          
    196          //static efitime_t getWidthEventTime(int index) {
    197          //	WaveReader *reader = &readers[index];
    198          //	ensureInitialized(reader);
    199          //	return reader->widthEventTimeUs;
    200          //}
    201          

   \                                 In section .text, align 4, keep-with-next
    202          static void reportWave(Logging *logging, int index) {
   \                     _Z10reportWaveP7Loggingi:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xED2D 0x8B06      VPUSH    {D8-D10}
   \   00000006   0x0005             MOVS     R5,R0
   \   00000008   0x000E             MOVS     R6,R1
    203          	if (readers[index].hw->started) {
   \   0000000A   0x2058             MOVS     R0,#+88
   \   0000000C   0x....             LDR.N    R1,??DataTable11_7
   \   0000000E   0xFB00 0x1006      MLA      R0,R0,R6,R1
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x7940             LDRB     R0,[R0, #+5]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xF000 0x80BD      BEQ.W    ??reportWave_0
    204          //	int counter = getEventCounter(index);
    205          //	debugInt2(logging, "ev", index, counter);
    206          
    207          		float dwellMs = getSignalOnTime(index);
   \   0000001C   0x0030             MOVS     R0,R6
   \   0000001E   0x.... 0x....      BL       _Z15getSignalOnTimei
   \   00000022   0xEEB0 0x8A40      VMOV.F32 S16,S0
    208          		float periodMs = getSignalPeriodMs(index);
   \   00000026   0x0030             MOVS     R0,R6
   \   00000028   0x.... 0x....      BL       _Z17getSignalPeriodMsi
   \   0000002C   0xEEF0 0x8A40      VMOV.F32 S17,S0
    209          
    210          		appendPrintf(logging, "duty%d%s", index, DELIMETER);
   \   00000030   0x....             ADR.N    R3,??DataTable11_2  ;; ","
   \   00000032   0x0032             MOVS     R2,R6
   \   00000034   0x....             LDR.N    R1,??DataTable11_21
   \   00000036   0x0028             MOVS     R0,R5
   \   00000038   0x.... 0x....      BL       appendPrintf
    211          		appendFloat(logging, 100.0f * dwellMs / periodMs, 2);
   \   0000003C   0x2102             MOVS     R1,#+2
   \   0000003E   0xED9F 0x....      VLDR.W   S0,??DataTable11_3  ;; 0x42c80000
   \   00000042   0xEE28 0x0A00      VMUL.F32 S0,S16,S0
   \   00000046   0xEE80 0x0A28      VDIV.F32 S0,S0,S17
   \   0000004A   0x0028             MOVS     R0,R5
   \   0000004C   0x.... 0x....      BL       appendFloat
    212          		appendPrintf(logging, "%s", DELIMETER);
   \   00000050   0x....             ADR.N    R2,??DataTable11_2  ;; ","
   \   00000052   0x....             ADR.N    R1,??DataTable11_4  ;; 0x25, 0x73, 0x00, 0x00
   \   00000054   0x0028             MOVS     R0,R5
   \   00000056   0x.... 0x....      BL       appendPrintf
    213          
    214          		/**
    215          		 * that's the ON time of the LAST signal
    216          		 */
    217          		appendPrintf(logging, "dwell%d%s", index, DELIMETER);
   \   0000005A   0x....             ADR.N    R3,??DataTable11_2  ;; ","
   \   0000005C   0x0032             MOVS     R2,R6
   \   0000005E   0x....             LDR.N    R1,??DataTable11_22
   \   00000060   0x0028             MOVS     R0,R5
   \   00000062   0x.... 0x....      BL       appendPrintf
    218          		appendFloat(logging, dwellMs, 2);
   \   00000066   0x2102             MOVS     R1,#+2
   \   00000068   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   0000006C   0x0028             MOVS     R0,R5
   \   0000006E   0x.... 0x....      BL       appendFloat
    219          		appendPrintf(logging, "%s", DELIMETER);
   \   00000072   0x....             ADR.N    R2,??DataTable11_2  ;; ","
   \   00000074   0x....             ADR.N    R1,??DataTable11_4  ;; 0x25, 0x73, 0x00, 0x00
   \   00000076   0x0028             MOVS     R0,R5
   \   00000078   0x.... 0x....      BL       appendPrintf
    220          
    221          		/**
    222          		 * that's the total ON time during the previous engine cycle
    223          		 */
    224          		appendPrintf(logging, "total_dwell%d%s", index, DELIMETER);
   \   0000007C   0x....             ADR.N    R3,??DataTable11_2  ;; ","
   \   0000007E   0x0032             MOVS     R2,R6
   \   00000080   0x....             LDR.N    R1,??DataTable11_23
   \   00000082   0x0028             MOVS     R0,R5
   \   00000084   0x.... 0x....      BL       appendPrintf
    225          		appendFloat(logging, readers[index].prevTotalOnTimeUs / 1000.0f, 2);
   \   00000088   0x2102             MOVS     R1,#+2
   \   0000008A   0x000C             MOVS     R4,R1
   \   0000008C   0x2058             MOVS     R0,#+88
   \   0000008E   0x....             LDR.N    R1,??DataTable11_7
   \   00000090   0xFB00 0x1206      MLA      R2,R0,R6,R1
   \   00000094   0xE9D2 0x0104      LDRD     R0,R1,[R2, #+16]
   \   00000098   0x.... 0x....      BL       __aeabi_l2f
   \   0000009C   0xEE00 0x0A10      VMOV     S0,R0
   \   000000A0   0xEDDF 0x....      VLDR.W   S1,??DataTable11_1  ;; 0x447a0000
   \   000000A4   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   000000A8   0x0021             MOVS     R1,R4
   \   000000AA   0x0028             MOVS     R0,R5
   \   000000AC   0x.... 0x....      BL       appendFloat
    226          		appendPrintf(logging, "%s", DELIMETER);
   \   000000B0   0x....             ADR.N    R2,??DataTable11_2  ;; ","
   \   000000B2   0x....             ADR.N    R1,??DataTable11_4  ;; 0x25, 0x73, 0x00, 0x00
   \   000000B4   0x0028             MOVS     R0,R5
   \   000000B6   0x.... 0x....      BL       appendPrintf
    227          
    228          		appendPrintf(logging, "period%d%s", index, DELIMETER);
   \   000000BA   0x....             ADR.N    R3,??DataTable11_2  ;; ","
   \   000000BC   0x0032             MOVS     R2,R6
   \   000000BE   0x....             LDR.N    R1,??DataTable11_24
   \   000000C0   0x0028             MOVS     R0,R5
   \   000000C2   0x.... 0x....      BL       appendPrintf
    229          		appendFloat(logging, periodMs, 2);
   \   000000C6   0x2102             MOVS     R1,#+2
   \   000000C8   0xEEB0 0x0A68      VMOV.F32 S0,S17
   \   000000CC   0x0028             MOVS     R0,R5
   \   000000CE   0x.... 0x....      BL       appendFloat
    230          		appendPrintf(logging, "%s", DELIMETER);
   \   000000D2   0x....             ADR.N    R2,??DataTable11_2  ;; ","
   \   000000D4   0x....             ADR.N    R1,??DataTable11_4  ;; 0x25, 0x73, 0x00, 0x00
   \   000000D6   0x0028             MOVS     R0,R5
   \   000000D8   0x.... 0x....      BL       appendPrintf
    231          
    232          		uint32_t offsetUs = getWaveOffset(index);
   \   000000DC   0x0030             MOVS     R0,R6
   \   000000DE   0x.... 0x....      BL       _Z13getWaveOffseti
   \   000000E2   0xEE09 0x0A10      VMOV     S18,R0
    233          		int rpm = getRpm();
   \   000000E6   0x....             LDR.N    R0,??DataTable11_25
   \   000000E8   0x6800             LDR      R0,[R0, #+0]
   \   000000EA   0x.... 0x....      BL       _ZN13RpmCalculator3rpmEv
   \   000000EE   0x0004             MOVS     R4,R0
    234          		float oneDegreeUs = rpm == 0 ? NAN : getOneDegreeTimeUs(rpm);
   \   000000F0   0x2C00             CMP      R4,#+0
   \   000000F2   0xD102             BNE.N    ??reportWave_1
   \   000000F4   0xEDDF 0x....      VLDR.W   S19,??DataTable11_5  ;; 0x7fffffff
   \   000000F8   0xE007             B.N      ??reportWave_2
   \                     ??reportWave_1:
   \   000000FA   0xEE00 0x4A10      VMOV     S0,R4
   \   000000FE   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000102   0xEDDF 0x....      VLDR.W   S1,??DataTable11_6  ;; 0x4822c2ab
   \   00000106   0xEEC0 0x9A80      VDIV.F32 S19,S1,S0
    235          
    236          		appendPrintf(logging, "advance%d%s", index, DELIMETER);
   \                     ??reportWave_2:
   \   0000010A   0x....             ADR.N    R3,??DataTable11_2  ;; ","
   \   0000010C   0x0032             MOVS     R2,R6
   \   0000010E   0x....             LDR.N    R1,??DataTable11_26
   \   00000110   0x0028             MOVS     R0,R5
   \   00000112   0x.... 0x....      BL       appendPrintf
    237          		float angle = (offsetUs / oneDegreeUs) - tdcPosition();
   \   00000116   0xEEB8 0x0A49      VCVT.F32.U32 S0,S18
   \   0000011A   0xEE80 0x0A29      VDIV.F32 S0,S0,S19
   \   0000011E   0x....             LDR.N    R0,??DataTable11_27
   \   00000120   0xEDD0 0x0A00      VLDR     S1,[R0, #0]
   \   00000124   0x....             LDR.N    R0,??DataTable11_28
   \   00000126   0xED90 0x1A75      VLDR     S2,[R0, #+468]
   \   0000012A   0xEE70 0x0A81      VADD.F32 S1,S1,S2
   \   0000012E   0xEE30 0xAA60      VSUB.F32 S20,S0,S1
    238          		fixAngle(angle);
   \   00000132   0x....             LDR.N    R0,??DataTable11_28
   \   00000134   0xF8D0 0x01A8      LDR      R0,[R0, #+424]
   \   00000138   0x2800             CMP      R0,#+0
   \   0000013A   0xD102             BNE.N    ??reportWave_3
   \   0000013C   0x....             LDR.N    R0,??DataTable11_29
   \   0000013E   0x.... 0x....      BL       firmwareError
   \                     ??reportWave_3:
   \   00000142   0xEEB5 0xAA40      VCMP.F32 S20,#0.0
   \   00000146   0xEEF1 0xFA10      FMSTAT   
   \   0000014A   0xD507             BPL.N    ??reportWave_4
   \   0000014C   0x....             LDR.N    R0,??DataTable11_28
   \   0000014E   0xED90 0x0A6A      VLDR     S0,[R0, #+424]
   \   00000152   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000156   0xEE30 0xAA0A      VADD.F32 S20,S0,S20
   \   0000015A   0xE7F2             B.N      ??reportWave_3
   \                     ??reportWave_4:
   \   0000015C   0x....             LDR.N    R0,??DataTable11_28
   \   0000015E   0xED90 0x0A6A      VLDR     S0,[R0, #+424]
   \   00000162   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000166   0xEEB4 0xAA40      VCMP.F32 S20,S0
   \   0000016A   0xEEF1 0xFA10      FMSTAT   
   \   0000016E   0xDB07             BLT.N    ??reportWave_5
   \   00000170   0x....             LDR.N    R0,??DataTable11_28
   \   00000172   0xED90 0x0A6A      VLDR     S0,[R0, #+424]
   \   00000176   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000017A   0xEE3A 0xAA40      VSUB.F32 S20,S20,S0
   \   0000017E   0xE7ED             B.N      ??reportWave_4
    239          		appendFloat(logging, angle, 3);
   \                     ??reportWave_5:
   \   00000180   0x2103             MOVS     R1,#+3
   \   00000182   0xEEB0 0x0A4A      VMOV.F32 S0,S20
   \   00000186   0x0028             MOVS     R0,R5
   \   00000188   0x.... 0x....      BL       appendFloat
    240          		appendPrintf(logging, "%s", DELIMETER);
   \   0000018C   0x....             ADR.N    R2,??DataTable11_2  ;; ","
   \   0000018E   0x....             ADR.N    R1,??DataTable11_4  ;; 0x25, 0x73, 0x00, 0x00
   \   00000190   0x0028             MOVS     R0,R5
   \   00000192   0x.... 0x....      BL       appendPrintf
    241          	}
    242          }
   \                     ??reportWave_0:
   \   00000196   0xECBD 0x8B06      VPOP     {D8-D10}
   \   0000019A   0xBD70             POP      {R4-R6,PC}       ;; return
    243          

   \                                 In section .text, align 2, keep-with-next
    244          void printWave(Logging *logging) {
   \                     _Z9printWaveP7Logging:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    245          	reportWave(logging, 0);
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       _Z10reportWaveP7Loggingi
    246          	reportWave(logging, 1);
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       _Z10reportWaveP7Loggingi
    247          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    248          

   \                                 In section .text, align 2, keep-with-next
    249          void initWaveAnalyzer(Logging *sharedLogger) {
   \                     _Z16initWaveAnalyzerP7Logging:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    250          	logger = sharedLogger;
   \   00000006   0x....             LDR.N    R0,??DataTable11_30
   \   00000008   0x6004             STR      R4,[R0, #+0]
    251          #if EFI_WAVE_ANALYZER || defined(__DOXYGEN__)
    252          	initWave(WA_CHANNEL_1, 0);
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x....             LDR.N    R0,??DataTable11_31
   \   0000000E   0x.... 0x....      BL       _Z8initWavePKci
    253          	initWave(WA_CHANNEL_2, 1);
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x....             LDR.N    R0,??DataTable11_32
   \   00000016   0x.... 0x....      BL       _Z8initWavePKci
    254          
    255          //	addTriggerEventListener(waTriggerEventListener, "wave analyzer", NULL);
    256          
    257          	addConsoleActionII("set_logic_input_mode", setWaveModeSilent);
   \   0000001A   0x....             LDR.N    R1,??DataTable11_33
   \   0000001C   0x....             LDR.N    R0,??DataTable11_34
   \   0000001E   0x.... 0x....      BL       addConsoleActionII
    258          
    259          	chThdCreateStatic(waThreadStack, sizeof(waThreadStack), NORMALPRIO, waThread, (void*) NULL);
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x9000             STR      R0,[SP, #+0]
   \   00000026   0x....             LDR.N    R3,??DataTable11_35
   \   00000028   0x2240             MOVS     R2,#+64
   \   0000002A   0xF44F 0x7132      MOV      R1,#+712
   \   0000002E   0x....             LDR.N    R0,??DataTable11_36
   \   00000030   0x.... 0x....      BL       chThdCreateStatic
    260          
    261          #else
    262          	print("wave disabled\r\n");
    263          #endif
    264          }
   \   00000034   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .init_array, align 4, keep-with-next, root
   \   00000000   0x........         DC32    RELOC_ARM_TARGET1 __sti__routine

   \                                 In section .rodata, align 4
   \                     `?<Constant "wave analyzer NOT INI...">`:
   \   00000000   0x77 0x61          DC8 "wave analyzer NOT INITIALIZED"
   \              0x76 0x65    
   \              0x20 0x61    
   \              0x6E 0x61    
   \              0x6C 0x79    
   \              0x7A 0x65    
   \              0x72 0x20    
   \              0x4E 0x4F    
   \              0x54 0x20    
   \              0x49 0x4E    
   \              0x49 0x54    
   \              0x49 0x41    
   \              0x4C 0x49    
   \              0x5A 0x45    
   \              0x44 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2
   \   00000000   0x75 0x00          DC8 "u"

   \                                 In section .rodata, align 4
   \                     `?<Constant "too many ICUs">`:
   \   00000000   0x74 0x6F          DC8 "too many ICUs"
   \              0x6F 0x20    
   \              0x6D 0x61    
   \              0x6E 0x79    
   \              0x20 0x49    
   \              0x43 0x55    
   \              0x73 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "wave input">`:
   \   00000000   0x77 0x61          DC8 "wave input"
   \              0x76 0x65    
   \              0x20 0x69    
   \              0x6E 0x70    
   \              0x75 0x74    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "wave%d input on %s\\r\\n">`:
   \   00000000   0x77 0x61          DC8 "wave%d input on %s\015\012"
   \              0x76 0x65    
   \              0x25 0x64    
   \              0x20 0x69    
   \              0x6E 0x70    
   \              0x75 0x74    
   \              0x20 0x6F    
   \              0x6E 0x20    
   \              0x25 0x73    
   \              0x0D 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Wave Analyzer">`:
   \   00000000   0x57 0x61          DC8 "Wave Analyzer"
   \              0x76 0x65    
   \              0x20 0x41    
   \              0x6E 0x61    
   \              0x6C 0x79    
   \              0x7A 0x65    
   \              0x72 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "duty%d%s">`:
   \   00000000   0x64 0x75          DC8 "duty%d%s"
   \              0x74 0x79    
   \              0x25 0x64    
   \              0x25 0x73    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2
   \   00000000   0x2C 0x00          DC8 ","

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x73          DC8 "%s"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "dwell%d%s">`:
   \   00000000   0x64 0x77          DC8 "dwell%d%s"
   \              0x65 0x6C    
   \              0x6C 0x25    
   \              0x64 0x25    
   \              0x73 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "total_dwell%d%s">`:
   \   00000000   0x74 0x6F          DC8 "total_dwell%d%s"
   \              0x74 0x61    
   \              0x6C 0x5F    
   \              0x64 0x77    
   \              0x65 0x6C    
   \              0x6C 0x25    
   \              0x64 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "period%d%s">`:
   \   00000000   0x70 0x65          DC8 "period%d%s"
   \              0x72 0x69    
   \              0x6F 0x64    
   \              0x25 0x64    
   \              0x25 0x73    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "advance%d%s">`:
   \   00000000   0x61 0x64          DC8 "advance%d%s"
   \              0x76 0x61    
   \              0x6E 0x63    
   \              0x65 0x25    
   \              0x64 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "zero engineCycle">`:
   \   00000000   0x7A 0x65          DC8 "zero engineCycle"
   \              0x72 0x6F    
   \              0x20 0x65    
   \              0x6E 0x67    
   \              0x69 0x6E    
   \              0x65 0x43    
   \              0x79 0x63    
   \              0x6C 0x65    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "input1">`:
   \   00000000   0x69 0x6E          DC8 "input1"
   \              0x70 0x75    
   \              0x74 0x31    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "input2">`:
   \   00000000   0x69 0x6E          DC8 "input2"
   \              0x70 0x75    
   \              0x74 0x32    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_logic_input_mode">`:
   \   00000000   0x73 0x65          DC8 "set_logic_input_mode"
   \              0x74 0x5F    
   \              0x6C 0x6F    
   \              0x67 0x69    
   \              0x63 0x5F    
   \              0x69 0x6E    
   \              0x70 0x75    
   \              0x74 0x5F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2
   \   00000000   0x64 0x00          DC8 "d"

   \                                 In section .text, align 2, keep-with-next
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x2305             MOVS     R3,#+5
   \   00000004   0x2258             MOVS     R2,#+88
   \   00000006   0x.... 0x....      ADR.W    R1,_ZN10WaveReaderC1Ev
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000000E   0x.... 0x....      BL       __aeabi_vec_ctor_nocookie_nodtor
   \   00000012   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x75 0x00          DC8      "u",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x64 0x00          DC8      "d",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x00000000         DC32     0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x2C 0x00          DC8      ",",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x25 0x73          DC8      0x25, 0x73, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x7FFFFFFF         DC32     0x7fffffff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x4822C2AB         DC32     0x4822c2ab

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x........         DC32     readers

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x........         DC32     `?<Constant "wave analyzer NOT INI...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0x........         DC32     waveChart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x........         DC32     previousEngineCycleTimeUs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \   00000000   0x........         DC32     waveReaderCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \   00000000   0x........         DC32     `?<Constant "too many ICUs">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_14:
   \   00000000   0x........         DC32     `?<Constant "wave input">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_15:
   \   00000000   0x........         DC32     _Z18waAnaWidthCallbackP10WaveReader

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_16:
   \   00000000   0x........         DC32     _Z19waIcuPeriodCallbackP10WaveReader

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_17:
   \   00000000   0x........         DC32     `?<Constant "wave%d input on %s\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_18:
   \   00000000   0x........         DC32     rlist

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_19:
   \   00000000   0x........         DC32     `?<Constant "Wave Analyzer">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_20:
   \   00000000   0x003D0901         DC32     0x3d0901

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_21:
   \   00000000   0x........         DC32     `?<Constant "duty%d%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_22:
   \   00000000   0x........         DC32     `?<Constant "dwell%d%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_23:
   \   00000000   0x........         DC32     `?<Constant "total_dwell%d%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_24:
   \   00000000   0x........         DC32     `?<Constant "period%d%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_25:
   \   00000000   0x........         DC32     engine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_26:
   \   00000000   0x........         DC32     `?<Constant "advance%d%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_27:
   \   00000000   0x........         DC32     _engine+0xDE4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_28:
   \   00000000   0x........         DC32     persistentState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_29:
   \   00000000   0x........         DC32     `?<Constant "zero engineCycle">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_30:
   \   00000000   0x........         DC32     logger

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_31:
   \   00000000   0x........         DC32     `?<Constant "input1">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_32:
   \   00000000   0x........         DC32     `?<Constant "input2">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_33:
   \   00000000   0x........         DC32     _Z17setWaveModeSilentii

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_34:
   \   00000000   0x........         DC32     `?<Constant "set_logic_input_mode">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_35:
   \   00000000   0x........         DC32     _Z8waThreadPv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_36:
   \   00000000   0x........         DC32     waThreadStack
    265          
    266          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   WaveReader::WaveReader()
      24   WaveReader::onFallEvent()
        24   -> WaveChart::addWaveChartEvent3(char const *, char const *)
        24   -> getRevolutionCounter()
        24   -> getTimeNowUs
       8   WaveReader::subobject WaveReader()
         8   -> WaveReader::WaveReader()
       8   __sti__routine()
         8   -> __aeabi_vec_ctor_nocookie_nodtor
       8   ensureInitialized(WaveReader *)
         8   -> firmwareError
      16   getSignalOnTime(int)
        16   -> __aeabi_l2f
        16   -> ensureInitialized(WaveReader *)
        16   -> getTimeNowUs
      16   getSignalPeriodMs(int)
        16   -> __aeabi_l2f
        16   -> ensureInitialized(WaveReader *)
      16   getWaveOffset(int)
        16   -> ensureInitialized(WaveReader *)
      24   initWave(char const *, int)
        24   -> IntListenerArray::registerCallback(VoidInt, void *)
        24   -> firmwareError
        24   -> hwPortname(brain_pin_e)
        24   -> initWaveAnalyzerDriver(char const *, brain_pin_e)
        24   -> print
        24   -> startInputDriver(digital_input_s *, bool)
      16   initWaveAnalyzer(Logging *)
        16   -> addConsoleActionII
        16   -> chThdCreateStatic
        16   -> initWave(char const *, int)
       8   printWave(Logging *)
         8   -> reportWave(Logging *, int)
      40   reportWave(Logging *, int)
        40   -> RpmCalculator::rpm()
        40   -> __aeabi_l2f
        40   -> appendFloat
        40   -> appendPrintf
        40   -> firmwareError
        40   -> getSignalOnTime(int)
        40   -> getSignalPeriodMs(int)
        40   -> getWaveOffset(int)
      16   setWaveModeSilent(int, int)
        16   -> startInputDriver(digital_input_s *, bool)
      16   waAnaWidthCallback(WaveReader *)
        16   -> WaveChart::addWaveChartEvent3(char const *, char const *)
        16   -> getTimeNowUs
       8   waIcuPeriodCallback(WaveReader *)
         8   -> WaveReader::onFallEvent()
       8   waThread(void *)
         8   -> WaveChart::publishChartIfFull()
         8   -> chThdSleep


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "%s">
       2  ?<Constant ",">
      16  ?<Constant "Wave Analyzer">
      12  ?<Constant "advance%d%s">
       2  ?<Constant "d">
      12  ?<Constant "duty%d%s">
      12  ?<Constant "dwell%d%s">
       8  ?<Constant "input1">
       8  ?<Constant "input2">
      12  ?<Constant "period%d%s">
      24  ?<Constant "set_logic_input_mode">
      16  ?<Constant "too many ICUs">
      16  ?<Constant "total_dwell%d%s">
       2  ?<Constant "u">
      32  ?<Constant "wave analyzer NOT INI...">
      12  ?<Constant "wave input">
      24  ?<Constant "wave%d input on %s\r\n">
      20  ?<Constant "zero engineCycle">
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_14
       4  ??DataTable11_15
       4  ??DataTable11_16
       4  ??DataTable11_17
       4  ??DataTable11_18
       4  ??DataTable11_19
       4  ??DataTable11_2
       4  ??DataTable11_20
       4  ??DataTable11_21
       4  ??DataTable11_22
       4  ??DataTable11_23
       4  ??DataTable11_24
       4  ??DataTable11_25
       4  ??DataTable11_26
       4  ??DataTable11_27
       4  ??DataTable11_28
       4  ??DataTable11_29
       4  ??DataTable11_3
       4  ??DataTable11_30
       4  ??DataTable11_31
       4  ??DataTable11_32
       4  ??DataTable11_33
       4  ??DataTable11_34
       4  ??DataTable11_35
       4  ??DataTable11_36
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
       4  ??DataTable9
       4  ??DataTable9_1
      14  WaveReader::WaveReader()
     126  WaveReader::onFallEvent()
      12  WaveReader::subobject WaveReader()
      20  __sti__routine()
      24  ensureInitialized(WaveReader *)
      72  getSignalOnTime(int)
      40  getSignalPeriodMs(int)
      24  getWaveOffset(int)
     146  initWave(char const *, int)
      54  initWaveAnalyzer(Logging *)
       4  logger
       8  previousEngineCycleTimeUs
      22  printWave(Logging *)
     440  readers
     412  reportWave(Logging *, int)
      34  setWaveModeSilent(int, int)
      66  waAnaWidthCallback(WaveReader *)
      12  waIcuPeriodCallback(WaveReader *)
      28  waThread(void *)
     712  waThreadStack
       4  waveReaderCount
       4  -- Other

 
 1 168 bytes in section .bss
     4 bytes in section .init_array
   234 bytes in section .rodata
 1 262 bytes in section .text
 
 1 266 bytes of CODE  memory
   234 bytes of CONST memory
 1 168 bytes of DATA  memory

Errors: none
Warnings: 4
