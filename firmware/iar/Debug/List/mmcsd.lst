###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:07 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\chibios\os\hal\s #
#                       rc\mmcsd.c                                            #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\chibios\os\hal\s #
#                       rc\mmcsd.c -lCN F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\firmw #
#                       are\iar\Debug\List\ -o F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\Debug\Obj\ --no_cse --no_unroll            #
#                       --no_inline --no_code_motion --no_tbaa                #
#                       --no_clustering --no_scheduling --debug               #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\ -On #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\m #
#                       mcsd.lst                                              #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\mm #
#                       csd.o                                                 #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\chibios\os\hal\src\mmcsd.c
      1          /*
      2              ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
      3                           2011,2012,2013 Giovanni Di Sirio.
      4          
      5              This file is part of ChibiOS/RT.
      6          
      7              ChibiOS/RT is free software; you can redistribute it and/or modify
      8              it under the terms of the GNU General Public License as published by
      9              the Free Software Foundation; either version 3 of the License, or
     10              (at your option) any later version.
     11          
     12              ChibiOS/RT is distributed in the hope that it will be useful,
     13              but WITHOUT ANY WARRANTY; without even the implied warranty of
     14              MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     15              GNU General Public License for more details.
     16          
     17              You should have received a copy of the GNU General Public License
     18              along with this program.  If not, see <http://www.gnu.org/licenses/>.
     19          
     20                                                ---
     21          
     22              A special exception to the GPL can be applied should you wish to distribute
     23              a combined work that includes ChibiOS/RT, without being obliged to provide
     24              the source code for any proprietary components. See the file exception.txt
     25              for full details of how and when the exception can be applied.
     26          */
     27          
     28          /**
     29           * @file    mmcsd.c
     30           * @brief   MMC/SD cards common code.
     31           *
     32           * @addtogroup MMCSD
     33           * @{
     34           */
     35          
     36          #include "ch.h"
     37          #include "hal.h"
     38          
     39          #if HAL_USE_MMC_SPI || HAL_USE_SDC || defined(__DOXYGEN__)
     40          
     41          /*===========================================================================*/
     42          /* Driver local definitions.                                                 */
     43          /*===========================================================================*/
     44          
     45          /*===========================================================================*/
     46          /* Driver exported variables.                                                */
     47          /*===========================================================================*/
     48          
     49          /*===========================================================================*/
     50          /* Driver local variables and types.                                         */
     51          /*===========================================================================*/
     52          
     53          /*===========================================================================*/
     54          /* Driver local functions.                                                   */
     55          /*===========================================================================*/
     56          
     57          /**
     58           * @brief   Gets a bit field from a words array.
     59           * @note    The bit zero is the LSb of the first word.
     60           *
     61           * @param[in] data      pointer to the words array
     62           * @param[in] end       bit offset of the last bit of the field, inclusive
     63           * @param[in] start     bit offset of the first bit of the field, inclusive
     64           *
     65           * @return              The bits field value, left aligned.
     66           *
     67           * @notapi
     68           */

   \                                 In section .text, align 2, keep-with-next
     69          static uint32_t mmcsd_get_slice(uint32_t *data, uint32_t end, uint32_t start) {
   \                     mmcsd_get_slice:
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
     70            unsigned startidx, endidx, startoff;
     71            uint32_t endmask;
     72          
     73            chDbgCheck((end >= start) && ((end - start) < 32), "mmcsd_get_slice");
   \   0000000A   0x42B5             CMP      R5,R6
   \   0000000C   0xD302             BCC.N    ??mmcsd_get_slice_0
   \   0000000E   0x1BA8             SUBS     R0,R5,R6
   \   00000010   0x2820             CMP      R0,#+32
   \   00000012   0xD304             BCC.N    ??mmcsd_get_slice_1
   \                     ??mmcsd_get_slice_0:
   \   00000014   0x2249             MOVS     R2,#+73
   \   00000016   0x....             LDR.N    R1,??DataTable0
   \   00000018   0x....             LDR.N    R0,??DataTable0_1
   \   0000001A   0x.... 0x....      BL       chDbgPanic3
     74          
     75            startidx = start / 32;
   \                     ??mmcsd_get_slice_1:
   \   0000001E   0x0970             LSRS     R0,R6,#+5
   \   00000020   0x0007             MOVS     R7,R0
     76            startoff = start % 32;
   \   00000022   0x2020             MOVS     R0,#+32
   \   00000024   0xFBB6 0xF1F0      UDIV     R1,R6,R0
   \   00000028   0xFB01 0x6110      MLS      R1,R1,R0,R6
   \   0000002C   0x4689             MOV      R9,R1
     77            endidx   = end / 32;
   \   0000002E   0x0968             LSRS     R0,R5,#+5
   \   00000030   0x4680             MOV      R8,R0
     78            endmask  = (1 << ((end % 32) + 1)) - 1;
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x2120             MOVS     R1,#+32
   \   00000036   0xFBB5 0xF2F1      UDIV     R2,R5,R1
   \   0000003A   0xFB02 0x5211      MLS      R2,R2,R1,R5
   \   0000003E   0x1C51             ADDS     R1,R2,#+1
   \   00000040   0x4088             LSLS     R0,R0,R1
   \   00000042   0x1E40             SUBS     R0,R0,#+1
   \   00000044   0x4682             MOV      R10,R0
     79          
     80            /* One or two pieces?*/
     81            if (startidx < endidx)
   \   00000046   0x4547             CMP      R7,R8
   \   00000048   0xD20C             BCS.N    ??mmcsd_get_slice_2
     82              return (data[startidx] >> startoff) |               /* Two pieces case. */
     83                     ((data[endidx] & endmask) << (32 - startoff));
   \   0000004A   0xF854 0x0027      LDR      R0,[R4, R7, LSL #+2]
   \   0000004E   0xFA30 0xF009      LSRS     R0,R0,R9
   \   00000052   0xF854 0x1028      LDR      R1,[R4, R8, LSL #+2]
   \   00000056   0xEA1A 0x0101      ANDS     R1,R10,R1
   \   0000005A   0xF1D9 0x0220      RSBS     R2,R9,#+32
   \   0000005E   0x4091             LSLS     R1,R1,R2
   \   00000060   0x4308             ORRS     R0,R1,R0
   \   00000062   0xE005             B.N      ??mmcsd_get_slice_3
     84            return (data[startidx] & endmask) >> startoff;        /* One piece case.  */
   \                     ??mmcsd_get_slice_2:
   \   00000064   0xF854 0x0027      LDR      R0,[R4, R7, LSL #+2]
   \   00000068   0xEA1A 0x0000      ANDS     R0,R10,R0
   \   0000006C   0xFA30 0xF009      LSRS     R0,R0,R9
   \                     ??mmcsd_get_slice_3:
   \   00000070   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
     85          }
     86          
     87          /*===========================================================================*/
     88          /* Driver exported functions.                                                */
     89          /*===========================================================================*/
     90          
     91          /**
     92           * @brief   Extract card capacity from a CSD.
     93           * @details The capacity is returned as number of available blocks.
     94           *
     95           * @param[in] csd       the CSD record
     96           *
     97           * @return              The card capacity.
     98           * @retval 0            CSD format error
     99           */

   \                                 In section .text, align 2, keep-with-next
    100          uint32_t mmcsdGetCapacity(uint32_t csd[4]) {
   \                     mmcsdGetCapacity:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0005             MOVS     R5,R0
    101          
    102            switch (csd[3] >> 30) {
   \   00000004   0x68E8             LDR      R0,[R5, #+12]
   \   00000006   0x0F80             LSRS     R0,R0,#+30
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD002             BEQ.N    ??mmcsdGetCapacity_0
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD019             BEQ.N    ??mmcsdGetCapacity_1
   \   00000010   0xE022             B.N      ??mmcsdGetCapacity_2
    103            uint32_t a, b, c;
    104            case 0:
    105              /* CSD version 1.0 */
    106              a = mmcsd_get_slice(csd, MMCSD_CSD_10_C_SIZE_SLICE);
   \                     ??mmcsdGetCapacity_0:
   \   00000012   0x223E             MOVS     R2,#+62
   \   00000014   0x2149             MOVS     R1,#+73
   \   00000016   0x0028             MOVS     R0,R5
   \   00000018   0x.... 0x....      BL       mmcsd_get_slice
   \   0000001C   0x0007             MOVS     R7,R0
    107              b = mmcsd_get_slice(csd, MMCSD_CSD_10_C_SIZE_MULT_SLICE);
   \   0000001E   0x222F             MOVS     R2,#+47
   \   00000020   0x2131             MOVS     R1,#+49
   \   00000022   0x0028             MOVS     R0,R5
   \   00000024   0x.... 0x....      BL       mmcsd_get_slice
   \   00000028   0x0006             MOVS     R6,R0
    108              c = mmcsd_get_slice(csd, MMCSD_CSD_10_READ_BL_LEN_SLICE);
   \   0000002A   0x2250             MOVS     R2,#+80
   \   0000002C   0x2153             MOVS     R1,#+83
   \   0000002E   0x0028             MOVS     R0,R5
   \   00000030   0x.... 0x....      BL       mmcsd_get_slice
   \   00000034   0x0004             MOVS     R4,R0
    109              return (a + 1) << (b + 2) << (c - 9);       /* 2^9 == MMCSD_BLOCK_SIZE. */
   \   00000036   0x1C78             ADDS     R0,R7,#+1
   \   00000038   0x1CB1             ADDS     R1,R6,#+2
   \   0000003A   0x4088             LSLS     R0,R0,R1
   \   0000003C   0xF1B4 0x0109      SUBS     R1,R4,#+9
   \   00000040   0x4088             LSLS     R0,R0,R1
   \   00000042   0xE00A             B.N      ??mmcsdGetCapacity_3
    110            case 1:
    111              /* CSD version 2.0.*/
    112              return 1024 * (mmcsd_get_slice(csd, MMCSD_CSD_20_C_SIZE_SLICE) + 1);
   \                     ??mmcsdGetCapacity_1:
   \   00000044   0x2230             MOVS     R2,#+48
   \   00000046   0x2145             MOVS     R1,#+69
   \   00000048   0x0028             MOVS     R0,R5
   \   0000004A   0x.... 0x....      BL       mmcsd_get_slice
   \   0000004E   0x1C40             ADDS     R0,R0,#+1
   \   00000050   0xF44F 0x6180      MOV      R1,#+1024
   \   00000054   0x4348             MULS     R0,R1,R0
   \   00000056   0xE000             B.N      ??mmcsdGetCapacity_3
    113            default:
    114              /* Reserved value detected.*/
    115              return 0;
   \                     ??mmcsdGetCapacity_2:
   \   00000058   0x2000             MOVS     R0,#+0
   \                     ??mmcsdGetCapacity_3:
   \   0000005A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    116            }
    117          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     `?<Constant "F:\\\\stuff\\\\rusefi_sourc...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     `?<Constant "\\"mmcsd_get_slice\\"()">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\"mmcsd_get_slice\\"()">`:
   \   00000000   0x22 0x6D          DC8 "\"mmcsd_get_slice\"()"
   \              0x6D 0x63    
   \              0x73 0x64    
   \              0x5F 0x67    
   \              0x65 0x74    
   \              0x5F 0x73    
   \              0x6C 0x69    
   \              0x63 0x65    
   \              0x22 0x28    
   \              0x29 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "F:\\\\stuff\\\\rusefi_sourc...">`:
   \   00000000   0x46 0x3A          DC8 46H, 3AH, 5CH, 73H, 74H, 75H, 66H, 66H
   \              0x5C 0x73    
   \              0x74 0x75    
   \              0x66 0x66    
   \   00000008   0x5C 0x72          DC8 5CH, 72H, 75H, 73H, 65H, 66H, 69H, 5FH
   \              0x75 0x73    
   \              0x65 0x66    
   \              0x69 0x5F    
   \   00000010   0x73 0x6F          DC8 73H, 6FH, 75H, 72H, 63H, 65H, 66H, 6FH
   \              0x75 0x72    
   \              0x63 0x65    
   \              0x66 0x6F    
   \   00000018   0x72 0x67          DC8 72H, 67H, 65H, 5CH, 66H, 69H, 72H, 6DH
   \              0x65 0x5C    
   \              0x66 0x69    
   \              0x72 0x6D    
   \   00000020   0x77 0x61          DC8 77H, 61H, 72H, 65H, 5CH, 63H, 68H, 69H
   \              0x72 0x65    
   \              0x5C 0x63    
   \              0x68 0x69    
   \   00000028   0x62 0x69          DC8 62H, 69H, 6FH, 73H, 5CH, 6FH, 73H, 5CH
   \              0x6F 0x73    
   \              0x5C 0x6F    
   \              0x73 0x5C    
   \   00000030   0x68 0x61          DC8 68H, 61H, 6CH, 5CH, 73H, 72H, 63H, 5CH
   \              0x6C 0x5C    
   \              0x73 0x72    
   \              0x63 0x5C    
   \   00000038   0x6D 0x6D          DC8 6DH, 6DH, 63H, 73H, 64H, 2EH, 63H, 0
   \              0x63 0x73    
   \              0x64 0x2E    
   \              0x63 0x00    
    118          
    119          #endif /* HAL_USE_MMC_SPI || HAL_USE_SDC */
    120          
    121          /** @} */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   mmcsdGetCapacity
        24   -> mmcsd_get_slice
      32   mmcsd_get_slice
        32   -> chDbgPanic3


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      64  ?<Constant "F:\\stuff\\rusefi_sourc...">
      20  ?<Constant "\"mmcsd_get_slice\"()">
       4  ??DataTable0
       4  ??DataTable0_1
      92  mmcsdGetCapacity
     116  mmcsd_get_slice

 
  84 bytes in section .rodata
 216 bytes in section .text
 
 216 bytes of CODE  memory
  84 bytes of CONST memory

Errors: none
Warnings: none
