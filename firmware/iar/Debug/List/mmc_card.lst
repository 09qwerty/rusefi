###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:55 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\mmc_car #
#                       d.cpp                                                 #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\mmc_car #
#                       d.cpp -lCN F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                       ebug\List\ -lA F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\Debug\List\ -o F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\Debug\Obj\ --no_cse --no_unroll --no_inline     #
#                       --no_code_motion --no_tbaa --no_clustering            #
#                       --no_scheduling --debug --endian=little               #
#                       --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config       #
#                       "C:\Program Files (x86)\IAR Systems\Embedded          #
#                       Workbench 6.5\arm\INC\c\DLib_Config_Normal.h"         #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\m #
#                       mc_card.lst                                           #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\mm #
#                       c_card.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\hw_layer\mmc_card.cpp
      1          /**
      2           * @file	mmc_card.cpp
      3           *
      4           * @date Dec 28, 2013
      5           * @author Kot_dnz
      6           * @author Andrey Belomutskiy, (c) 2012-2015
      7           *
      8           * default pinouts in case of SPI2 connected to MMC: PB13 - SCK, PB14 - MISO, PB15 - MOSI, PD4 - CS, 3.3v
      9           * default pinouts in case of SPI3 connected to MMC: PB3  - SCK, PB4  - MISO, PB5  - MOSI, PD4 - CS, 3.3v
     10           *
     11           *
     12           * todo: extract some logic into a controller file
     13           */
     14          
     15          #include "main.h"

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memset(void *, int, size_t)
   \                     memset:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x002A             MOVS     R2,R5
   \   0000000A   0x0031             MOVS     R1,R6
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memset
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return
     16          
     17          #if EFI_FILE_LOGGING || defined(__DOXYGEN__)
     18          
     19          #include <stdio.h>
     20          #include <string.h>
     21          #include "mmc_card.h"
     22          #include "pin_repository.h"
     23          #include "ff.h"
     24          #include "hardware.h"
     25          #include "engine_configuration.h"
     26          #include "status_loop.h"
     27          
     28          #define LOG_INDEX_FILENAME "index.txt"
     29          #define RUSEFI_LOG_PREFIX "rus"
     30          #define LS_RESPONSE "ls_result"
     31          #define FILE_LIST_MAX_COUNT 20
     32          
     33          extern board_configuration_s *boardConfiguration;
     34          
     35          #define PUSHPULLDELAY 500
     36          

   \                                 In section .bss, align 8
     37          static THD_WORKING_AREA(mmcThreadStack,UTILITY_THREAD_STACK_SIZE);		// MMC monitor thread
   \                     mmcThreadStack:
   \   00000000                      DS8 712
     38          
     39          /**
     40           * MMC driver instance.
     41           */

   \                                 In section .bss, align 4
     42          MMCDriver MMCD1;
   \                     MMCD1:
   \   00000000                      DS8 52
     43          

   \                                 In section .data, align 4
     44          static SPIConfig hs_spicfg = { NULL, NULL, 0,
   \                     hs_spicfg:
   \   00000000   0x00000000         DC32 0H, 0H
   \              0x00000000   
   \   00000008   0x0000 0x0010      DC16 0, 16
     45          SPI_BaudRatePrescaler_8 };

   \                                 In section .data, align 4
     46          static SPIConfig ls_spicfg = { NULL, NULL, 0,
   \                     ls_spicfg:
   \   00000000   0x00000000         DC32 0H, 0H
   \              0x00000000   
   \   00000008   0x0000 0x0038      DC16 0, 56
     47          SPI_BaudRatePrescaler_256 };
     48          
     49          /* MMC/SD over SPI driver configuration.*/
     50          // don't forget check if STM32_SPI_USE_SPI2 defined and spi has init with correct GPIO in hardware.c

   \                                 In section .data, align 4
     51          static MMCConfig mmccfg = { &MMC_CARD_SPI, &ls_spicfg, &hs_spicfg };
   \                     mmccfg:
   \   00000000   0x........         DC32 SPID3, ls_spicfg, hs_spicfg
   \              0x........   
   \              0x........   
     52          

   \                                 In section .bss, align 1
     53          static bool fs_ready = false;
   \                     fs_ready:
   \   00000000                      DS8 1
     54          
     55          #define FILE_LOG_DELAY 200
     56          
     57          /**
     58           * fatfs MMC/SPI
     59           */

   \                                 In section .bss, align 4
     60          static FATFS MMC_FS;
   \                     MMC_FS:
   \   00000000                      DS8 560
     61          

   \                                 In section .text, align 2, keep-with-next
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine:
   \   00000000   0xB580             PUSH     {R7,LR}
     62          static LoggingWithStorage logger("mmcCard");
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   0000000A   0x.... 0x....      BL       _ZN18LoggingWithStorageC1EPKc
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     logger:
   \   00000000                      DS8 260
     63          
     64          // print FAT error function

   \                                 In section .text, align 2, keep-with-next
     65          static void printError(const char *str, FRESULT f_error) {
   \                     _Z10printErrorPKc7FRESULT:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     66          	scheduleMsg(&logger, "FATfs Error \"%s\" %d", str, f_error);
   \   00000006   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000008   0x002B             MOVS     R3,R5
   \   0000000A   0x0022             MOVS     R2,R4
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable13_4
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   00000014   0x.... 0x....      BL       scheduleMsg
     67          }
   \   00000018   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     68          

   \                                 In section .bss, align 4
     69          static FIL FDLogFile;
   \                     FDLogFile:
   \   00000000                      DS8 548

   \                                 In section .bss, align 4
     70          static FIL FDCurrFile;
   \                     FDCurrFile:
   \   00000000                      DS8 548

   \                                 In section .data, align 4
     71          static int logFileIndex = 1;
   \                     logFileIndex:
   \   00000000   0x00000001         DC32 1

   \                                 In section .bss, align 4
     72          static char logName[15];
   \                     logName:
   \   00000000                      DS8 16
     73          

   \                                 In section .bss, align 4
     74          static int totalLoggedBytes = 0;
   \                     totalLoggedBytes:
   \   00000000                      DS8 4
     75          

   \                                 In section .text, align 2, keep-with-next
     76          static void printMmcPinout(void) {
   \                     _Z14printMmcPinoutv:
   \   00000000   0xB580             PUSH     {R7,LR}
     77          	scheduleMsg(&logger, "MMC CS %s", hwPortname(boardConfiguration->sdCardCsPin));
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF8D0 0x0144      LDR      R0,[R0, #+324]
   \   0000000C   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000010   0x0002             MOVS     R2,R0
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   0000001A   0x.... 0x....      BL       scheduleMsg
     78          	// todo: we need to figure out the right SPI pinout, not just SPI2
     79          //	scheduleMsg(&logger, "MMC SCK %s:%d", portname(EFI_SPI2_SCK_PORT), EFI_SPI2_SCK_PIN);
     80          //	scheduleMsg(&logger, "MMC MISO %s:%d", portname(EFI_SPI2_MISO_PORT), EFI_SPI2_MISO_PIN);
     81          //	scheduleMsg(&logger, "MMC MOSI %s:%d", portname(EFI_SPI2_MOSI_PORT), EFI_SPI2_MOSI_PIN);
     82          }
   \   0000001E   0xBD01             POP      {R0,PC}          ;; return
     83          

   \                                 In section .text, align 2, keep-with-next
     84          static void sdStatistics(void) {
   \                     _Z12sdStatisticsv:
   \   00000000   0xB580             PUSH     {R7,LR}
     85          	printMmcPinout();
   \   00000002   0x.... 0x....      BL       _Z14printMmcPinoutv
     86          	scheduleMsg(&logger, "SD enabled: %s [%s]", boolToString(boardConfiguration->isSdCardEnabled),
     87          			logName);
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x08C0             LSRS     R0,R0,#+3
   \   00000014   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000018   0x.... 0x....      BL       _Z12boolToStringb
   \   0000001C   0x.... 0x....      LDR.W    R3,??DataTable13_7
   \   00000020   0x0002             MOVS     R2,R0
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   0000002A   0x.... 0x....      BL       scheduleMsg
     88          	scheduleMsg(&logger, "fs_ready=%d totalLoggedBytes=%d %d", fs_ready, totalLoggedBytes, logFileIndex);
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x9000             STR      R0,[SP, #+0]
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000003A   0x6803             LDR      R3,[R0, #+0]
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   00000040   0x7802             LDRB     R2,[R0, #+0]
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable13_12
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   0000004A   0x.... 0x....      BL       scheduleMsg
     89          }
   \   0000004E   0xBD01             POP      {R0,PC}          ;; return
     90          

   \                                 In section .text, align 2, keep-with-next
     91          static void incLogFileName(void) {
   \                     _Z14incLogFileNamev:
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
     92          	lockSpi(SPI_NONE);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       _Z7lockSpi12spi_device_e
     93          	memset(&FDCurrFile, 0, sizeof(FIL));						// clear the memory
   \   00000008   0xF44F 0x7209      MOV      R2,#+548
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   00000012   0x.... 0x....      BL       memset
     94          	FRESULT err = f_open(&FDCurrFile, LOG_INDEX_FILENAME, FA_READ);				// This file has the index for next log file name
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable13_14
   \   0000001C   0x.... 0x....      BL       f_open
   \   00000020   0x0004             MOVS     R4,R0
     95          
     96          	char data[10];
     97          	UINT result = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x9000             STR      R0,[SP, #+0]
     98          	if (err != FR_OK && err != FR_EXIST) {
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0x2C00             CMP      R4,#+0
   \   0000002A   0xD011             BEQ.N    ??incLogFileName_0
   \   0000002C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002E   0x2C08             CMP      R4,#+8
   \   00000030   0xD00E             BEQ.N    ??incLogFileName_0
     99          			logFileIndex = 1;
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000036   0x2101             MOVS     R1,#+1
   \   00000038   0x6001             STR      R1,[R0, #+0]
    100          			scheduleMsg(&logger, "%s: not found or error: %d", LOG_INDEX_FILENAME, err);
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0x0023             MOVS     R3,R4
   \   0000003E   0x.... 0x....      LDR.W    R2,??DataTable13_14
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   0000004A   0x.... 0x....      BL       scheduleMsg
   \   0000004E   0xE039             B.N      ??incLogFileName_1
    101          	} else {
    102          		f_read(&FDCurrFile, (void*)data, sizeof(data), &result);
   \                     ??incLogFileName_0:
   \   00000050   0xAB00             ADD      R3,SP,#+0
   \   00000052   0x220A             MOVS     R2,#+10
   \   00000054   0xA901             ADD      R1,SP,#+4
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   0000005A   0x.... 0x....      BL       f_read
    103          
    104          		scheduleMsg(&logger, "Got content [%s] size %d", data, result);
   \   0000005E   0x9B00             LDR      R3,[SP, #+0]
   \   00000060   0xAA01             ADD      R2,SP,#+4
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable13_16
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   0000006A   0x.... 0x....      BL       scheduleMsg
    105          		f_close(&FDCurrFile);
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   00000072   0x.... 0x....      BL       f_close
    106          		if (result < 5) {
   \   00000076   0x9800             LDR      R0,[SP, #+0]
   \   00000078   0x2805             CMP      R0,#+5
   \   0000007A   0xD21F             BCS.N    ??incLogFileName_2
    107                                data[result] = 0;
   \   0000007C   0x9800             LDR      R0,[SP, #+0]
   \   0000007E   0xA901             ADD      R1,SP,#+4
   \   00000080   0x2200             MOVS     R2,#+0
   \   00000082   0x5442             STRB     R2,[R0, R1]
    108          			logFileIndex = atoi(data);
   \   00000084   0xA801             ADD      R0,SP,#+4
   \   00000086   0x.... 0x....      BL       atoi
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    109          			if (absI(logFileIndex) == ERROR_CODE) {
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x.... 0x....      BL       absI
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable13_17  ;; 0x128ce430
   \   0000009E   0x4288             CMP      R0,R1
   \   000000A0   0xD104             BNE.N    ??incLogFileName_3
    110          				logFileIndex = 1;
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000000A6   0x2101             MOVS     R1,#+1
   \   000000A8   0x6001             STR      R1,[R0, #+0]
   \   000000AA   0xE00B             B.N      ??incLogFileName_1
    111          			} else {
    112          				logFileIndex++; // next file would use next file name
   \                     ??incLogFileName_3:
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x1C40             ADDS     R0,R0,#+1
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   000000B8   0x6008             STR      R0,[R1, #+0]
   \   000000BA   0xE003             B.N      ??incLogFileName_1
    113          			}
    114          		} else {
    115          			logFileIndex = 1;
   \                     ??incLogFileName_2:
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000000C0   0x2101             MOVS     R1,#+1
   \   000000C2   0x6001             STR      R1,[R0, #+0]
    116          		}
    117          	}
    118          
    119          	err = f_open(&FDCurrFile, LOG_INDEX_FILENAME, FA_OPEN_ALWAYS | FA_WRITE);
   \                     ??incLogFileName_1:
   \   000000C4   0x2212             MOVS     R2,#+18
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable13_14
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   000000CE   0x.... 0x....      BL       f_open
   \   000000D2   0x0004             MOVS     R4,R0
    120          	itoa10(data, logFileIndex);
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000000D8   0x6801             LDR      R1,[R0, #+0]
   \   000000DA   0xA801             ADD      R0,SP,#+4
   \   000000DC   0x.... 0x....      BL       itoa10
    121          	f_write(&FDCurrFile, (void*)data, strlen(data), &result);
   \   000000E0   0xA801             ADD      R0,SP,#+4
   \   000000E2   0x.... 0x....      BL       strlen
   \   000000E6   0x0002             MOVS     R2,R0
   \   000000E8   0xAB00             ADD      R3,SP,#+0
   \   000000EA   0xA901             ADD      R1,SP,#+4
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   000000F0   0x.... 0x....      BL       f_write
    122          	f_close(&FDCurrFile);
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   000000F8   0x.... 0x....      BL       f_close
    123          	scheduleMsg(&logger, "Done %d", logFileIndex);
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000100   0x6802             LDR      R2,[R0, #+0]
   \   00000102   0x.... 0x....      LDR.W    R1,??DataTable13_18
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   0000010A   0x.... 0x....      BL       scheduleMsg
    124          	unlockSpi();
   \   0000010E   0x.... 0x....      BL       _Z9unlockSpiv
    125          }
   \   00000112   0xBD1F             POP      {R0-R4,PC}       ;; return
    126          
    127          /**
    128           * @brief Create a new file with the specified name
    129           *
    130           * This function saves the name of the file in a global variable
    131           * so that we can later append to that file
    132           */

   \                                 In section .text, align 2, keep-with-next
    133          static void createLogFile(void) {
   \                     _Z13createLogFilev:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    134          	lockSpi(SPI_NONE);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       _Z7lockSpi12spi_device_e
    135          	memset(&FDLogFile, 0, sizeof(FIL));						// clear the memory
   \   00000008   0xF44F 0x7209      MOV      R2,#+548
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable13_19
   \   00000012   0x.... 0x....      BL       memset
    136          	strcpy(logName, RUSEFI_LOG_PREFIX);
   \   00000016   0x....             ADR.N    R1,??DataTable9  ;; "rus"
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   0000001C   0x.... 0x....      BL       strcpy
    137          	char *ptr = itoa10(&logName[3], logFileIndex);
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000024   0x6801             LDR      R1,[R0, #+0]
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable13_20
   \   0000002A   0x.... 0x....      BL       itoa10
   \   0000002E   0x0004             MOVS     R4,R0
    138          	strcat(ptr, ".log");
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable13_21
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0x.... 0x....      BL       strcat
    139          
    140          	FRESULT err = f_open(&FDLogFile, logName, FA_OPEN_ALWAYS | FA_WRITE);				// Create new file
   \   0000003A   0x2212             MOVS     R2,#+18
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable13_19
   \   00000044   0x.... 0x....      BL       f_open
   \   00000048   0x0005             MOVS     R5,R0
    141          	if (err != FR_OK && err != FR_EXIST) {
   \   0000004A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004C   0x2D00             CMP      R5,#+0
   \   0000004E   0xD00B             BEQ.N    ??createLogFile_0
   \   00000050   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000052   0x2D08             CMP      R5,#+8
   \   00000054   0xD008             BEQ.N    ??createLogFile_0
    142          		unlockSpi();
   \   00000056   0x.... 0x....      BL       _Z9unlockSpiv
    143          		printError("FS mount failed", err);	// else - show error
   \   0000005A   0x0029             MOVS     R1,R5
   \   0000005C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable13_22
   \   00000062   0x.... 0x....      BL       _Z10printErrorPKc7FRESULT
    144          		return;
   \   00000066   0xE01D             B.N      ??createLogFile_1
    145          	}
    146          
    147          	err = f_lseek(&FDLogFile, f_size(&FDLogFile)); // Move to end of the file to append data
   \                     ??createLogFile_0:
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable13_19
   \   0000006C   0x68C1             LDR      R1,[R0, #+12]
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable13_19
   \   00000072   0x.... 0x....      BL       f_lseek
   \   00000076   0x0005             MOVS     R5,R0
    148          	if (err) {
   \   00000078   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000007A   0x2D00             CMP      R5,#+0
   \   0000007C   0xD008             BEQ.N    ??createLogFile_2
    149          		unlockSpi();
   \   0000007E   0x.... 0x....      BL       _Z9unlockSpiv
    150          		printError("Seek error", err);
   \   00000082   0x0029             MOVS     R1,R5
   \   00000084   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable13_23
   \   0000008A   0x.... 0x....      BL       _Z10printErrorPKc7FRESULT
    151          		return;
   \   0000008E   0xE009             B.N      ??createLogFile_1
    152          	}
    153          	f_sync(&FDLogFile);
   \                     ??createLogFile_2:
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable13_19
   \   00000094   0x.... 0x....      BL       f_sync
    154          	fs_ready = true;						// everything Ok
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   0000009C   0x2101             MOVS     R1,#+1
   \   0000009E   0x7001             STRB     R1,[R0, #+0]
    155          	unlockSpi();
   \   000000A0   0x.... 0x....      BL       _Z9unlockSpiv
    156          }
   \                     ??createLogFile_1:
   \   000000A4   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    157          

   \                                 In section .text, align 2, keep-with-next
    158          static void removeFile(const char *pathx) {
   \                     _Z10removeFilePKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    159          	if (!fs_ready) {
   \   00000004   0x....             LDR.N    R0,??DataTable13_11
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD105             BNE.N    ??removeFile_0
    160          		scheduleMsg(&logger, "Error: No File system is mounted");
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable13_24
   \   00000010   0x....             LDR.N    R0,??DataTable13_3
   \   00000012   0x.... 0x....      BL       scheduleMsg
    161          		return;
   \   00000016   0xE007             B.N      ??removeFile_1
    162          	}
    163          	lockSpi(SPI_NONE);
   \                     ??removeFile_0:
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       _Z7lockSpi12spi_device_e
    164          	f_unlink(pathx);
   \   0000001E   0x0020             MOVS     R0,R4
   \   00000020   0x.... 0x....      BL       f_unlink
    165          
    166          	unlockSpi();
   \   00000024   0x.... 0x....      BL       _Z9unlockSpiv
    167          }
   \                     ??removeFile_1:
   \   00000028   0xBD10             POP      {R4,PC}          ;; return
    168          

   \                                 In section .text, align 2, keep-with-next
    169          static void listDirectory(const char *path) {
   \                     _Z13listDirectoryPKc:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB091             SUB      SP,SP,#+68
   \   00000004   0x0004             MOVS     R4,R0
    170          
    171          	if (!fs_ready) {
   \   00000006   0x....             LDR.N    R0,??DataTable13_11
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD104             BNE.N    ??listDirectory_0
    172          		scheduleMsg(&logger, "Error: No File system is mounted");
   \   0000000E   0x....             LDR.N    R1,??DataTable13_24
   \   00000010   0x....             LDR.N    R0,??DataTable13_3
   \   00000012   0x.... 0x....      BL       scheduleMsg
    173          		return;
   \   00000016   0xE046             B.N      ??listDirectory_1
    174          	}
    175          	lockSpi(SPI_NONE);
   \                     ??listDirectory_0:
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       _Z7lockSpi12spi_device_e
    176          
    177          	DIR dir;
    178          	FRESULT res = f_opendir(&dir, path);
   \   0000001E   0x0021             MOVS     R1,R4
   \   00000020   0xA808             ADD      R0,SP,#+32
   \   00000022   0x.... 0x....      BL       f_opendir
   \   00000026   0x0007             MOVS     R7,R0
    179          
    180          	if (res != FR_OK) {
   \   00000028   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000002A   0x2F00             CMP      R7,#+0
   \   0000002C   0xD007             BEQ.N    ??listDirectory_2
    181          		scheduleMsg(&logger, "Error opening directory %s", path);
   \   0000002E   0x0022             MOVS     R2,R4
   \   00000030   0x....             LDR.N    R1,??DataTable13_25
   \   00000032   0x....             LDR.N    R0,??DataTable13_3
   \   00000034   0x.... 0x....      BL       scheduleMsg
    182          		unlockSpi();
   \   00000038   0x.... 0x....      BL       _Z9unlockSpiv
    183          		return;
   \   0000003C   0xE033             B.N      ??listDirectory_1
    184          	}
    185          
    186          	scheduleMsg(&logger, LS_RESPONSE);
   \                     ??listDirectory_2:
   \   0000003E   0x....             LDR.N    R1,??DataTable13_26
   \   00000040   0x....             LDR.N    R0,??DataTable13_3
   \   00000042   0x.... 0x....      BL       scheduleMsg
    187          
    188          	int i = strlen(path);
   \   00000046   0x0020             MOVS     R0,R4
   \   00000048   0x.... 0x....      BL       strlen
   \   0000004C   0x0005             MOVS     R5,R0
    189          	for (int count = 0;count < FILE_LIST_MAX_COUNT;) {
   \   0000004E   0x2600             MOVS     R6,#+0
   \                     ??listDirectory_3:
   \   00000050   0x2E14             CMP      R6,#+20
   \   00000052   0xDA26             BGE.N    ??listDirectory_4
    190          		FILINFO fno;
    191          		res = f_readdir(&dir, &fno);
   \   00000054   0xA900             ADD      R1,SP,#+0
   \   00000056   0xA808             ADD      R0,SP,#+32
   \   00000058   0x.... 0x....      BL       f_readdir
   \   0000005C   0x0007             MOVS     R7,R0
    192          		if (res != FR_OK || fno.fname[0] == 0)
   \   0000005E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000060   0x2F00             CMP      R7,#+0
   \   00000062   0xD103             BNE.N    ??listDirectory_5
   \   00000064   0xF89D 0x0009      LDRB     R0,[SP, #+9]
   \   00000068   0x2800             CMP      R0,#+0
   \   0000006A   0xD100             BNE.N    ??listDirectory_6
    193          			break;
   \                     ??listDirectory_5:
   \   0000006C   0xE019             B.N      ??listDirectory_4
    194          		if (fno.lfname[0] == '.')
   \                     ??listDirectory_6:
   \   0000006E   0x9806             LDR      R0,[SP, #+24]
   \   00000070   0x7800             LDRB     R0,[R0, #+0]
   \   00000072   0x282E             CMP      R0,#+46
   \   00000074   0xD0EC             BEQ.N    ??listDirectory_3
    195          			continue;
    196          		if ((fno.fattrib & AM_DIR) || strncmp(RUSEFI_LOG_PREFIX, fno.fname, sizeof(RUSEFI_LOG_PREFIX) - 1)) {
   \                     ??listDirectory_7:
   \   00000076   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   0000007A   0x06C0             LSLS     R0,R0,#+27
   \   0000007C   0xD407             BMI.N    ??listDirectory_8
   \   0000007E   0x2203             MOVS     R2,#+3
   \   00000080   0xF10D 0x0109      ADD      R1,SP,#+9
   \   00000084   0x....             ADR.N    R0,??DataTable9  ;; "rus"
   \   00000086   0x.... 0x....      BL       strncmp
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xD000             BEQ.N    ??listDirectory_9
    197          			continue;
   \                     ??listDirectory_8:
   \   0000008E   0xE7DF             B.N      ??listDirectory_3
    198          		}
    199          		scheduleMsg(&logger, "logfile%lu:%s", fno.fsize, fno.fname);
   \                     ??listDirectory_9:
   \   00000090   0xF10D 0x0309      ADD      R3,SP,#+9
   \   00000094   0x9A00             LDR      R2,[SP, #+0]
   \   00000096   0x....             LDR.N    R1,??DataTable13_27
   \   00000098   0x....             LDR.N    R0,??DataTable13_3
   \   0000009A   0x.... 0x....      BL       scheduleMsg
    200          		count++;
   \   0000009E   0x1C76             ADDS     R6,R6,#+1
   \   000000A0   0xE7D6             B.N      ??listDirectory_3
    201          
    202          //			scheduleMsg(&logger, "%c%c%c%c%c %u/%02u/%02u %02u:%02u %9lu  %-12s", (fno.fattrib & AM_DIR) ? 'D' : '-',
    203          //					(fno.fattrib & AM_RDO) ? 'R' : '-', (fno.fattrib & AM_HID) ? 'H' : '-',
    204          //					(fno.fattrib & AM_SYS) ? 'S' : '-', (fno.fattrib & AM_ARC) ? 'A' : '-', (fno.fdate >> 9) + 1980,
    205          //					(fno.fdate >> 5) & 15, fno.fdate & 31, (fno.ftime >> 11), (fno.ftime >> 5) & 63, fno.fsize,
    206          //					fno.fname);
    207          	}
    208          	unlockSpi();
   \                     ??listDirectory_4:
   \   000000A2   0x.... 0x....      BL       _Z9unlockSpiv
    209          }
   \                     ??listDirectory_1:
   \   000000A6   0xB011             ADD      SP,SP,#+68
   \   000000A8   0xBDF0             POP      {R4-R7,PC}       ;; return
    210          

   \                                 In section .bss, align 4
    211          static int errorReported = FALSE; // this is used to report the error only once
   \                     errorReported:
   \   00000000                      DS8 4
    212          
    213          /**
    214           * @brief Appends specified line to the current log file
    215           */

   \                                 In section .text, align 2, keep-with-next
    216          void appendToLog(const char *line) {
   \                     appendToLog:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    217          	UINT bytesWrited;
    218          
    219          	if (!fs_ready) {
   \   00000006   0x....             LDR.N    R0,??DataTable13_11
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD10B             BNE.N    ??appendToLog_0
    220          		if (!errorReported)
   \   0000000E   0x....             LDR.N    R0,??DataTable13_28
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD103             BNE.N    ??appendToLog_1
    221          			scheduleMsg(&logger, "appendToLog Error: No File system is mounted");
   \   00000016   0x....             LDR.N    R1,??DataTable13_29
   \   00000018   0x....             LDR.N    R0,??DataTable13_3
   \   0000001A   0x.... 0x....      BL       scheduleMsg
    222          		errorReported = TRUE;
   \                     ??appendToLog_1:
   \   0000001E   0x....             LDR.N    R0,??DataTable13_28
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0x6001             STR      R1,[R0, #+0]
    223          		return;
   \   00000024   0xE01F             B.N      ??appendToLog_2
    224          	}
    225          	UINT lineLength = strlen(line);
   \                     ??appendToLog_0:
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0x.... 0x....      BL       strlen
   \   0000002C   0x0005             MOVS     R5,R0
    226          	totalLoggedBytes += lineLength;
   \   0000002E   0x....             LDR.N    R0,??DataTable13_10
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x1828             ADDS     R0,R5,R0
   \   00000034   0x....             LDR.N    R1,??DataTable13_10
   \   00000036   0x6008             STR      R0,[R1, #+0]
    227          	lockSpi(SPI_NONE);
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      BL       _Z7lockSpi12spi_device_e
    228          	FRESULT err = f_write(&FDLogFile, line, lineLength, &bytesWrited);
   \   0000003E   0xAB00             ADD      R3,SP,#+0
   \   00000040   0x002A             MOVS     R2,R5
   \   00000042   0x0021             MOVS     R1,R4
   \   00000044   0x....             LDR.N    R0,??DataTable13_19
   \   00000046   0x.... 0x....      BL       f_write
   \   0000004A   0x0006             MOVS     R6,R0
    229          	if (bytesWrited < lineLength) {
   \   0000004C   0x9800             LDR      R0,[SP, #+0]
   \   0000004E   0x42A8             CMP      R0,R5
   \   00000050   0xD204             BCS.N    ??appendToLog_3
    230          		printError("write error or disk full", err); // error or disk full
   \   00000052   0x0031             MOVS     R1,R6
   \   00000054   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000056   0x....             LDR.N    R0,??DataTable13_30
   \   00000058   0x.... 0x....      BL       _Z10printErrorPKc7FRESULT
    231          	}
    232          	f_sync(&FDLogFile);
   \                     ??appendToLog_3:
   \   0000005C   0x....             LDR.N    R0,??DataTable13_19
   \   0000005E   0x.... 0x....      BL       f_sync
    233          	unlockSpi();
   \   00000062   0x.... 0x....      BL       _Z9unlockSpiv
    234          }
   \                     ??appendToLog_2:
   \   00000066   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    235          
    236          /*
    237           * MMC card umount.
    238           */

   \                                 In section .text, align 2, keep-with-next
    239          static void MMCumount(void) {
   \                     _Z9MMCumountv:
   \   00000000   0xB580             PUSH     {R7,LR}
    240          	if (!fs_ready) {
   \   00000002   0x....             LDR.N    R0,??DataTable13_11
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD104             BNE.N    ??MMCumount_0
    241          		scheduleMsg(&logger, "Error: No File system is mounted. \"mountsd\" first");
   \   0000000A   0x....             LDR.N    R1,??DataTable13_31
   \   0000000C   0x....             LDR.N    R0,??DataTable13_3
   \   0000000E   0x.... 0x....      BL       scheduleMsg
    242          		return;
   \   00000012   0xE01C             B.N      ??MMCumount_1
    243          	}
    244          	f_close(&FDLogFile);						// close file
   \                     ??MMCumount_0:
   \   00000014   0x....             LDR.N    R0,??DataTable13_19
   \   00000016   0x.... 0x....      BL       f_close
    245          	f_sync(&FDLogFile);							// sync ALL
   \   0000001A   0x....             LDR.N    R0,??DataTable13_19
   \   0000001C   0x.... 0x....      BL       f_sync
    246          	mmcDisconnect(&MMCD1);						// Brings the driver in a state safe for card removal.
   \   00000020   0x....             LDR.N    R0,??DataTable13_32
   \   00000022   0x.... 0x....      BL       mmcDisconnect
    247          	mmcStop(&MMCD1);							// Disables the MMC peripheral.
   \   00000026   0x....             LDR.N    R0,??DataTable13_32
   \   00000028   0x.... 0x....      BL       mmcStop
    248          	f_mount(0, NULL);							// FATFS: Unregister work area prior to discard it
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x.... 0x....      BL       f_mount
    249          	memset(&FDLogFile, 0, sizeof(FIL));			// clear FDLogFile
   \   00000034   0xF44F 0x7209      MOV      R2,#+548
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x....             LDR.N    R0,??DataTable13_19
   \   0000003C   0x.... 0x....      BL       memset
    250          	fs_ready = false;							// status = false
   \   00000040   0x....             LDR.N    R0,??DataTable13_11
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0x7001             STRB     R1,[R0, #+0]
    251          	scheduleMsg(&logger, "MMC/SD card removed");
   \   00000046   0x....             LDR.N    R1,??DataTable13_33
   \   00000048   0x....             LDR.N    R0,??DataTable13_3
   \   0000004A   0x.... 0x....      BL       scheduleMsg
    252          }
   \                     ??MMCumount_1:
   \   0000004E   0xBD01             POP      {R0,PC}          ;; return
    253          
    254          /*
    255           * MMC card mount.
    256           */

   \                                 In section .text, align 2, keep-with-next
    257          static void MMCmount(void) {
   \                     _Z8MMCmountv:
   \   00000000   0xB580             PUSH     {R7,LR}
    258          //	printMmcPinout();
    259          
    260          	if (fs_ready) {
   \   00000002   0x....             LDR.N    R0,??DataTable13_11
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD004             BEQ.N    ??MMCmount_0
    261          		scheduleMsg(&logger, "Error: Already mounted. \"umountsd\" first");
   \   0000000A   0x....             LDR.N    R1,??DataTable13_34
   \   0000000C   0x....             LDR.N    R0,??DataTable13_3
   \   0000000E   0x.... 0x....      BL       scheduleMsg
    262          		return;
   \   00000012   0xE02C             B.N      ??MMCmount_1
    263          	}
    264          	// start to initialize MMC/SD
    265          	mmcObjectInit(&MMCD1);						// Initializes an instance.
   \                     ??MMCmount_0:
   \   00000014   0x....             LDR.N    R0,??DataTable13_32
   \   00000016   0x.... 0x....      BL       mmcObjectInit
    266          	mmcStart(&MMCD1, &mmccfg);					// Configures and activates the MMC peripheral.
   \   0000001A   0x....             LDR.N    R1,??DataTable13_35
   \   0000001C   0x....             LDR.N    R0,??DataTable13_32
   \   0000001E   0x.... 0x....      BL       mmcStart
    267          
    268          	// Performs the initialization procedure on the inserted card.
    269          	lockSpi(SPI_NONE);
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x.... 0x....      BL       _Z7lockSpi12spi_device_e
    270          	if (mmcConnect(&MMCD1) != CH_SUCCESS) {
   \   00000028   0x....             LDR.N    R0,??DataTable13_32
   \   0000002A   0x.... 0x....      BL       mmcConnect
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD007             BEQ.N    ??MMCmount_2
    271          		warning(OBD_PCM_Processor_Fault, "Can't connect or mount MMC/SD");
   \   00000032   0x....             LDR.N    R1,??DataTable13_36
   \   00000034   0xF240 0x205E      MOVW     R0,#+606
   \   00000038   0x.... 0x....      BL       warning
    272          		unlockSpi();
   \   0000003C   0x.... 0x....      BL       _Z9unlockSpiv
    273          		return;
   \   00000040   0xE015             B.N      ??MMCmount_1
    274          
    275          	}
    276          	unlockSpi();
   \                     ??MMCmount_2:
   \   00000042   0x.... 0x....      BL       _Z9unlockSpiv
    277          	// if Ok - mount FS now
    278          	memset(&MMC_FS, 0, sizeof(FATFS));
   \   00000046   0xF44F 0x720C      MOV      R2,#+560
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x....             LDR.N    R0,??DataTable13_37
   \   0000004E   0x.... 0x....      BL       memset
   \   00000052   0x0001             MOVS     R1,R0
    279          	if (f_mount(0, &MMC_FS) == FR_OK) {
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x.... 0x....      BL       f_mount
   \   0000005A   0x2800             CMP      R0,#+0
   \   0000005C   0xD107             BNE.N    ??MMCmount_3
    280          		incLogFileName();
   \   0000005E   0x.... 0x....      BL       _Z14incLogFileNamev
    281          		createLogFile();
   \   00000062   0x.... 0x....      BL       _Z13createLogFilev
    282          		scheduleMsg(&logger, "MMC/SD mounted!");
   \   00000066   0x....             LDR.N    R1,??DataTable13_38
   \   00000068   0x....             LDR.N    R0,??DataTable13_3
   \   0000006A   0x.... 0x....      BL       scheduleMsg
    283          	}
    284          }
   \                     ??MMCmount_3:
   \                     ??MMCmount_1:
   \   0000006E   0xBD01             POP      {R0,PC}          ;; return
    285          
    286          #if defined __GNUC__
    287          __attribute__((noreturn))        static msg_t MMCmonThread(void)
    288          #else

   \                                 In section .text, align 2, keep-with-next
    289          static msg_t MMCmonThread(void)
    290          #endif
    291          {
   \                     _Z12MMCmonThreadv:
   \   00000000   0xB580             PUSH     {R7,LR}
    292          	chRegSetThreadName("MMC_Monitor");
   \   00000002   0x....             LDR.N    R0,??DataTable13_39
   \   00000004   0x6980             LDR      R0,[R0, #+24]
   \   00000006   0x....             LDR.N    R1,??DataTable13_40
   \   00000008   0x6181             STR      R1,[R0, #+24]
    293          
    294          	while (true) {
    295          		// this returns TRUE if SD module is there, even without an SD card?
    296          		if (blkIsInserted(&MMCD1)) {
   \                     ??MMCmonThread_0:
   \   0000000A   0x....             LDR.N    R0,??DataTable13_32
   \   0000000C   0x....             LDR.N    R1,??DataTable13_32
   \   0000000E   0x6809             LDR      R1,[R1, #+0]
   \   00000010   0x6809             LDR      R1,[R1, #+0]
   \   00000012   0x4788             BLX      R1
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD005             BEQ.N    ??MMCmonThread_1
    297          
    298          			if (!fs_ready) {
   \   00000018   0x....             LDR.N    R0,??DataTable13_11
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD101             BNE.N    ??MMCmonThread_1
    299          				MMCmount();
   \   00000020   0x.... 0x....      BL       _Z8MMCmountv
    300          			}
    301          		}
    302          
    303          		if (isSdCardAlive())
   \                     ??MMCmonThread_1:
   \   00000024   0x.... 0x....      BL       isSdCardAlive
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD001             BEQ.N    ??MMCmonThread_2
    304          			writeLogLine();
   \   0000002C   0x.... 0x....      BL       _Z12writeLogLinev
    305          
    306          		chThdSleepMilliseconds(FILE_LOG_DELAY);
   \                     ??MMCmonThread_2:
   \   00000030   0x20C8             MOVS     R0,#+200
   \   00000032   0x.... 0x....      BL       chThdSleep
   \   00000036   0xE7E8             B.N      ??MMCmonThread_0
    307          	}
    308          }
    309          

   \                                 In section .text, align 2, keep-with-next
    310          bool isSdCardAlive(void) {
    311          	return fs_ready;
   \                     isSdCardAlive:
   \   00000000   0x....             LDR.N    R0,??DataTable13_11
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    312          }
    313          

   \                                 In section .text, align 2, keep-with-next
    314          void initMmcCard(void) {
   \                     initMmcCard:
   \   00000000   0xB580             PUSH     {R7,LR}
    315          	logName[0] = 0;
   \   00000002   0x....             LDR.N    R0,??DataTable13_7
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x7001             STRB     R1,[R0, #+0]
    316          	addConsoleAction("sdinfo", sdStatistics);
   \   00000008   0x....             LDR.N    R1,??DataTable13_41
   \   0000000A   0x....             LDR.N    R0,??DataTable13_42
   \   0000000C   0x.... 0x....      BL       addConsoleAction
    317          	if (!boardConfiguration->isSdCardEnabled) {
   \   00000010   0x....             LDR.N    R0,??DataTable13_5
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x08C0             LSRS     R0,R0,#+3
   \   0000001C   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD03B             BEQ.N    ??initMmcCard_0
    318          		return;
    319          	}
    320          
    321          	hs_spicfg.ssport = ls_spicfg.ssport = getHwPort(boardConfiguration->sdCardCsPin);
   \                     ??initMmcCard_1:
   \   00000024   0x....             LDR.N    R0,??DataTable13_5
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF8D0 0x0144      LDR      R0,[R0, #+324]
   \   0000002C   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000030   0x....             LDR.N    R1,??DataTable13_43
   \   00000032   0x6048             STR      R0,[R1, #+4]
   \   00000034   0x....             LDR.N    R1,??DataTable13_44
   \   00000036   0x6048             STR      R0,[R1, #+4]
    322          	hs_spicfg.sspad = ls_spicfg.sspad = getHwPin(boardConfiguration->sdCardCsPin);
   \   00000038   0x....             LDR.N    R0,??DataTable13_5
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF8D0 0x0144      LDR      R0,[R0, #+324]
   \   00000040   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000044   0x....             LDR.N    R1,??DataTable13_43
   \   00000046   0x8108             STRH     R0,[R1, #+8]
   \   00000048   0x....             LDR.N    R1,??DataTable13_44
   \   0000004A   0x8108             STRH     R0,[R1, #+8]
    323          
    324          	/**
    325          	 * FYI: SPI does not work with CCM memory, be sure to have main() stack in RAM, not in CCMRAM
    326          	 */
    327          
    328          	// start to initialize MMC/SD
    329          	mmcObjectInit(&MMCD1);
   \   0000004C   0x....             LDR.N    R0,??DataTable13_32
   \   0000004E   0x.... 0x....      BL       mmcObjectInit
    330          	mmcStart(&MMCD1, &mmccfg);
   \   00000052   0x....             LDR.N    R1,??DataTable13_35
   \   00000054   0x....             LDR.N    R0,??DataTable13_32
   \   00000056   0x.... 0x....      BL       mmcStart
    331          
    332          	chThdCreateStatic(mmcThreadStack, sizeof(mmcThreadStack), LOWPRIO, (tfunc_t) MMCmonThread, NULL);
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x9000             STR      R0,[SP, #+0]
   \   0000005E   0x....             LDR.N    R3,??DataTable13_45
   \   00000060   0x2202             MOVS     R2,#+2
   \   00000062   0xF44F 0x7132      MOV      R1,#+712
   \   00000066   0x....             LDR.N    R0,??DataTable13_46
   \   00000068   0x.... 0x....      BL       chThdCreateStatic
    333          
    334          	addConsoleAction("mountsd", MMCmount);
   \   0000006C   0x....             LDR.N    R1,??DataTable13_47
   \   0000006E   0x....             LDR.N    R0,??DataTable13_48
   \   00000070   0x.... 0x....      BL       addConsoleAction
    335          	addConsoleActionS("appendToLog", appendToLog);
   \   00000074   0x....             LDR.N    R1,??DataTable13_49
   \   00000076   0x....             LDR.N    R0,??DataTable13_50
   \   00000078   0x.... 0x....      BL       addConsoleActionS
    336          	addConsoleAction("umountsd", MMCumount);
   \   0000007C   0x....             LDR.N    R1,??DataTable13_51
   \   0000007E   0x....             LDR.N    R0,??DataTable13_52
   \   00000080   0x.... 0x....      BL       addConsoleAction
    337          	addConsoleActionS("ls", listDirectory);
   \   00000084   0x....             LDR.N    R1,??DataTable13_53
   \   00000086   0x....             ADR.N    R0,??DataTable13  ;; 0x6C, 0x73, 0x00, 0x00
   \   00000088   0x.... 0x....      BL       addConsoleActionS
    338          	addConsoleActionS("del", removeFile);
   \   0000008C   0x....             LDR.N    R1,??DataTable13_54
   \   0000008E   0x....             ADR.N    R0,??DataTable13_1  ;; "del"
   \   00000090   0x.... 0x....      BL       addConsoleActionS
    339          	addConsoleAction("incfilename", incLogFileName);
   \   00000094   0x....             LDR.N    R1,??DataTable13_55
   \   00000096   0x....             LDR.N    R0,??DataTable13_56
   \   00000098   0x.... 0x....      BL       addConsoleAction
    340          }
   \                     ??initMmcCard_0:
   \   0000009C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x72 0x75          DC8      "rus"
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x6C 0x73          DC8      0x6C, 0x73, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x64 0x65          DC8      "del"
   \              0x6C 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     `?<Constant "mmcCard">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x........         DC32     logger

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x........         DC32     `?<Constant "FATfs Error \\"%s\\" %d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x........         DC32     `?<Constant "MMC CS %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x........         DC32     logName

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x........         DC32     `?<Constant "SD enabled: %s [%s]">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x........         DC32     logFileIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x........         DC32     totalLoggedBytes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0x........         DC32     fs_ready

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x........         DC32     `?<Constant "fs_ready=%d totalLogg...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_13:
   \   00000000   0x........         DC32     FDCurrFile

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_14:
   \   00000000   0x........         DC32     `?<Constant "index.txt">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_15:
   \   00000000   0x........         DC32     `?<Constant "%s: not found or erro...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_16:
   \   00000000   0x........         DC32     `?<Constant "Got content [%s] size %d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_17:
   \   00000000   0x128CE430         DC32     0x128ce430

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_18:
   \   00000000   0x........         DC32     `?<Constant "Done %d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_19:
   \   00000000   0x........         DC32     FDLogFile

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_20:
   \   00000000   0x........         DC32     logName+0x3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_21:
   \   00000000   0x........         DC32     `?<Constant ".log">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_22:
   \   00000000   0x........         DC32     `?<Constant "FS mount failed">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_23:
   \   00000000   0x........         DC32     `?<Constant "Seek error">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_24:
   \   00000000   0x........         DC32     `?<Constant "Error: No File system...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_25:
   \   00000000   0x........         DC32     `?<Constant "Error opening directo...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_26:
   \   00000000   0x........         DC32     `?<Constant "ls_result">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_27:
   \   00000000   0x........         DC32     `?<Constant "logfile%lu:%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_28:
   \   00000000   0x........         DC32     errorReported

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_29:
   \   00000000   0x........         DC32     `?<Constant "appendToLog Error: No...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_30:
   \   00000000   0x........         DC32     `?<Constant "write error or disk full">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_31:
   \   00000000   0x........         DC32     `?<Constant "Error: No File system...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_32:
   \   00000000   0x........         DC32     MMCD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_33:
   \   00000000   0x........         DC32     `?<Constant "MMC/SD card removed">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_34:
   \   00000000   0x........         DC32     `?<Constant "Error: Already mounte...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_35:
   \   00000000   0x........         DC32     mmccfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_36:
   \   00000000   0x........         DC32     `?<Constant "Can\\'t connect or moun...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_37:
   \   00000000   0x........         DC32     MMC_FS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_38:
   \   00000000   0x........         DC32     `?<Constant "MMC/SD mounted!">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_39:
   \   00000000   0x........         DC32     rlist

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_40:
   \   00000000   0x........         DC32     `?<Constant "MMC_Monitor">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_41:
   \   00000000   0x........         DC32     _Z12sdStatisticsv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_42:
   \   00000000   0x........         DC32     `?<Constant "sdinfo">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_43:
   \   00000000   0x........         DC32     ls_spicfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_44:
   \   00000000   0x........         DC32     hs_spicfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_45:
   \   00000000   0x........         DC32     _Z12MMCmonThreadv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_46:
   \   00000000   0x........         DC32     mmcThreadStack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_47:
   \   00000000   0x........         DC32     _Z8MMCmountv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_48:
   \   00000000   0x........         DC32     `?<Constant "mountsd">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_49:
   \   00000000   0x........         DC32     appendToLog

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_50:
   \   00000000   0x........         DC32     `?<Constant "appendToLog">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_51:
   \   00000000   0x........         DC32     _Z9MMCumountv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_52:
   \   00000000   0x........         DC32     `?<Constant "umountsd">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_53:
   \   00000000   0x........         DC32     _Z13listDirectoryPKc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_54:
   \   00000000   0x........         DC32     _Z10removeFilePKc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_55:
   \   00000000   0x........         DC32     _Z14incLogFileNamev

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_56:
   \   00000000   0x........         DC32     `?<Constant "incfilename">`

   \                                 In section .init_array, align 4, keep-with-next, root
   \   00000000   0x........         DC32    RELOC_ARM_TARGET1 __sti__routine

   \                                 In section .rodata, align 4
   \                     `?<Constant "FATfs Error \\"%s\\" %d">`:
   \   00000000   0x46 0x41          DC8 "FATfs Error \"%s\" %d"
   \              0x54 0x66    
   \              0x73 0x20    
   \              0x45 0x72    
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "MMC CS %s">`:
   \   00000000   0x4D 0x4D          DC8 "MMC CS %s"
   \              0x43 0x20    
   \              0x43 0x53    
   \              0x20 0x25    
   \              0x73 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SD enabled: %s [%s]">`:
   \   00000000   0x53 0x44          DC8 "SD enabled: %s [%s]"
   \              0x20 0x65    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x64    
   \              0x3A 0x20    
   \              0x25 0x73    
   \              0x20 0x5B    
   \              0x25 0x73    
   \              0x5D 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "fs_ready=%d totalLogg...">`:
   \   00000000   0x66 0x73          DC8 "fs_ready=%d totalLoggedBytes=%d %d"
   \              0x5F 0x72    
   \              0x65 0x61    
   \              0x64 0x79    
   \              0x3D 0x25    
   \              0x64 0x20    
   \              0x74 0x6F    
   \              0x74 0x61    
   \              0x6C 0x4C    
   \              0x6F 0x67    
   \              0x67 0x65    
   \              0x64 0x42    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x3D 0x25    
   \              0x64 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "index.txt">`:
   \   00000000   0x69 0x6E          DC8 "index.txt"
   \              0x64 0x65    
   \              0x78 0x2E    
   \              0x74 0x78    
   \              0x74 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s: not found or erro...">`:
   \   00000000   0x25 0x73          DC8 "%s: not found or error: %d"
   \              0x3A 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x66 0x6F    
   \              0x75 0x6E    
   \              0x64 0x20    
   \              0x6F 0x72    
   \              0x20 0x65    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Got content [%s] size %d">`:
   \   00000000   0x47 0x6F          DC8 "Got content [%s] size %d"
   \              0x74 0x20    
   \              0x63 0x6F    
   \              0x6E 0x74    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x5B 0x25    
   \              0x73 0x5D    
   \              0x20 0x73    
   \              0x69 0x7A    
   \              0x65 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Done %d">`:
   \   00000000   0x44 0x6F          DC8 "Done %d"
   \              0x6E 0x65    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x72 0x75          DC8 "rus"
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant ".log">`:
   \   00000000   0x2E 0x6C          DC8 ".log"
   \              0x6F 0x67    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "FS mount failed">`:
   \   00000000   0x46 0x53          DC8 "FS mount failed"
   \              0x20 0x6D    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Seek error">`:
   \   00000000   0x53 0x65          DC8 "Seek error"
   \              0x65 0x6B    
   \              0x20 0x65    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Error: No File system...">`:
   \   00000000   0x45 0x72          DC8 "Error: No File system is mounted"
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x4E    
   \              0x6F 0x20    
   \              0x46 0x69    
   \              0x6C 0x65    
   \              0x20 0x73    
   \              0x79 0x73    
   \              0x74 0x65    
   \              0x6D 0x20    
   \              0x69 0x73    
   \              0x20 0x6D    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x65 0x64    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Error opening directo...">`:
   \   00000000   0x45 0x72          DC8 "Error opening directory %s"
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x6F 0x70    
   \              0x65 0x6E    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x64 0x69    
   \              0x72 0x65    
   \              0x63 0x74    
   \              0x6F 0x72    
   \              0x79 0x20    
   \              0x25 0x73    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ls_result">`:
   \   00000000   0x6C 0x73          DC8 "ls_result"
   \              0x5F 0x72    
   \              0x65 0x73    
   \              0x75 0x6C    
   \              0x74 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "logfile%lu:%s">`:
   \   00000000   0x6C 0x6F          DC8 "logfile%lu:%s"
   \              0x67 0x66    
   \              0x69 0x6C    
   \              0x65 0x25    
   \              0x6C 0x75    
   \              0x3A 0x25    
   \              0x73 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "appendToLog Error: No...">`:
   \   00000000   0x61 0x70          DC8 "appendToLog Error: No File system is mounted"
   \              0x70 0x65    
   \              0x6E 0x64    
   \              0x54 0x6F    
   \              0x4C 0x6F    
   \              0x67 0x20    
   \              0x45 0x72    
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x4E    
   \              0x6F 0x20    
   \              0x46 0x69    
   \              0x6C 0x65    
   \              0x20 0x73    
   \              0x79 0x73    
   \              0x74 0x65    
   \              0x6D 0x20    
   \              0x69 0x73    
   \              0x20 0x6D    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x65 0x64    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "write error or disk full">`:
   \   00000000   0x77 0x72          DC8 "write error or disk full"
   \              0x69 0x74    
   \              0x65 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x6F 0x72    
   \              0x20 0x64    
   \              0x69 0x73    
   \              0x6B 0x20    
   \              0x66 0x75    
   \              0x6C 0x6C    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Error: No File system...">_1`:
   \   00000000   0x45 0x72          DC8 "Error: No File system is mounted. \"mountsd\" first"
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x4E    
   \              0x6F 0x20    
   \              0x46 0x69    
   \              0x6C 0x65    
   \              0x20 0x73    
   \              0x79 0x73    
   \              0x74 0x65    
   \              0x6D 0x20    
   \              0x69 0x73    
   \              0x20 0x6D    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x65 0x64    
   \              0x2E 0x20    
   \              0x22 0x6D    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x73 0x64    
   \              0x22 0x20    
   \              0x66 0x69    
   \              0x72 0x73    
   \              0x74 0x00    
   \   00000032   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "MMC/SD card removed">`:
   \   00000000   0x4D 0x4D          DC8 "MMC/SD card removed"
   \              0x43 0x2F    
   \              0x53 0x44    
   \              0x20 0x63    
   \              0x61 0x72    
   \              0x64 0x20    
   \              0x72 0x65    
   \              0x6D 0x6F    
   \              0x76 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Error: Already mounte...">`:
   \   00000000   0x45 0x72          DC8 "Error: Already mounted. \"umountsd\" first"
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x41    
   \              0x6C 0x72    
   \              0x65 0x61    
   \              0x64 0x79    
   \              0x20 0x6D    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x65 0x64    
   \              0x2E 0x20    
   \              0x22 0x75    
   \              0x6D 0x6F    
   \              0x75 0x6E    
   \              0x74 0x73    
   \              0x64 0x22    
   \              0x20 0x66    
   \              0x69 0x72    
   \              0x73 0x74    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Can\\'t connect or moun...">`:
   \   00000000   0x43 0x61          DC8 "Can't connect or mount MMC/SD"
   \              0x6E 0x27    
   \              0x74 0x20    
   \              0x63 0x6F    
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x20    
   \              0x6F 0x72    
   \              0x20 0x6D    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x20 0x4D    
   \              0x4D 0x43    
   \              0x2F 0x53    
   \              0x44 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "MMC/SD mounted!">`:
   \   00000000   0x4D 0x4D          DC8 "MMC/SD mounted!"
   \              0x43 0x2F    
   \              0x53 0x44    
   \              0x20 0x6D    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x65 0x64    
   \              0x21 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "MMC_Monitor">`:
   \   00000000   0x4D 0x4D          DC8 "MMC_Monitor"
   \              0x43 0x5F    
   \              0x4D 0x6F    
   \              0x6E 0x69    
   \              0x74 0x6F    
   \              0x72 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "sdinfo">`:
   \   00000000   0x73 0x64          DC8 "sdinfo"
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "mountsd">`:
   \   00000000   0x6D 0x6F          DC8 "mountsd"
   \              0x75 0x6E    
   \              0x74 0x73    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "appendToLog">`:
   \   00000000   0x61 0x70          DC8 "appendToLog"
   \              0x70 0x65    
   \              0x6E 0x64    
   \              0x54 0x6F    
   \              0x4C 0x6F    
   \              0x67 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "umountsd">`:
   \   00000000   0x75 0x6D          DC8 "umountsd"
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x73 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x6C 0x73          DC8 "ls"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x64 0x65          DC8 "del"
   \              0x6C 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "incfilename">`:
   \   00000000   0x69 0x6E          DC8 "incfilename"
   \              0x63 0x66    
   \              0x69 0x6C    
   \              0x65 0x6E    
   \              0x61 0x6D    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "mmcCard">`:
   \   00000000   0x6D 0x6D          DC8 "mmcCard"
   \              0x63 0x43    
   \              0x61 0x72    
   \              0x64 0x00    
    341          
    342          #endif /* EFI_FILE_LOGGING */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   MMCmonThread()
         8   -- Indirect call
         8   -> MMCmount()
         8   -> chThdSleep
         8   -> isSdCardAlive
         8   -> writeLogLine()
       8   MMCmount()
         8   -> createLogFile()
         8   -> f_mount
         8   -> incLogFileName()
         8   -> lockSpi(spi_device_e)
         8   -> memset
         8   -> mmcConnect
         8   -> mmcObjectInit
         8   -> mmcStart
         8   -> scheduleMsg
         8   -> unlockSpi()
         8   -> warning
       8   MMCumount()
         8   -> f_close
         8   -> f_mount
         8   -> f_sync
         8   -> memset
         8   -> mmcDisconnect
         8   -> mmcStop
         8   -> scheduleMsg
       8   __sti__routine()
         8   -> LoggingWithStorage::LoggingWithStorage(char const *)
      24   appendToLog
        24   -> f_sync
        24   -> f_write
        24   -> lockSpi(spi_device_e)
        24   -> printError(char const *, FRESULT)
        24   -> scheduleMsg
        24   -> strlen
        24   -> unlockSpi()
      16   createLogFile()
        16   -> f_lseek
        16   -> f_open
        16   -> f_sync
        16   -> itoa10
        16   -> lockSpi(spi_device_e)
        16   -> memset
        16   -> printError(char const *, FRESULT)
        16   -> strcat
        16   -> strcpy
        16   -> unlockSpi()
      24   incLogFileName()
        24   -> absI
        24   -> atoi
        24   -> f_close
        24   -> f_open
        24   -> f_read
        24   -> f_write
        24   -> itoa10
        24   -> lockSpi(spi_device_e)
        24   -> memset
        24   -> scheduleMsg
        24   -> strlen
        24   -> unlockSpi()
       8   initMmcCard
         8   -> addConsoleAction
         8   -> addConsoleActionS
         8   -> chThdCreateStatic
         8   -> getHwPin(brain_pin_e)
         8   -> getHwPort(brain_pin_e)
         8   -> mmcObjectInit
         8   -> mmcStart
       0   isSdCardAlive
      88   listDirectory(char const *)
        88   -> f_opendir
        88   -> f_readdir
        88   -> lockSpi(spi_device_e)
        88   -> scheduleMsg
        88   -> strlen
        88   -> strncmp
        88   -> unlockSpi()
      16   memset
        16   -> __aeabi_memset
      16   printError(char const *, FRESULT)
        16   -> scheduleMsg
       8   printMmcPinout()
         8   -> hwPortname(brain_pin_e)
         8   -> scheduleMsg
       8   removeFile(char const *)
         8   -> f_unlink
         8   -> lockSpi(spi_device_e)
         8   -> scheduleMsg
         8   -> unlockSpi()
       8   sdStatistics()
         8   -> boolToString(bool)
         8   -> printMmcPinout()
         8   -> scheduleMsg


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      28  ?<Constant "%s: not found or erro...">
       8  ?<Constant ".log">
      32  ?<Constant "Can\'t connect or moun...">
       8  ?<Constant "Done %d">
      28  ?<Constant "Error opening directo...">
      44  ?<Constant "Error: Already mounte...">
      36  ?<Constant "Error: No File system...">
      52  ?<Constant "Error: No File system...">_1
      20  ?<Constant "FATfs Error \"%s\" %d">
      16  ?<Constant "FS mount failed">
      28  ?<Constant "Got content [%s] size %d">
      12  ?<Constant "MMC CS %s">
      20  ?<Constant "MMC/SD card removed">
      16  ?<Constant "MMC/SD mounted!">
      12  ?<Constant "MMC_Monitor">
      20  ?<Constant "SD enabled: %s [%s]">
      12  ?<Constant "Seek error">
      48  ?<Constant "appendToLog Error: No...">
      12  ?<Constant "appendToLog">
       4  ?<Constant "del">
      36  ?<Constant "fs_ready=%d totalLogg...">
      12  ?<Constant "incfilename">
      12  ?<Constant "index.txt">
      16  ?<Constant "logfile%lu:%s">
       4  ?<Constant "ls">
      12  ?<Constant "ls_result">
       8  ?<Constant "mmcCard">
       8  ?<Constant "mountsd">
       4  ?<Constant "rus">
       8  ?<Constant "sdinfo">
      12  ?<Constant "umountsd">
      28  ?<Constant "write error or disk full">
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_13
       4  ??DataTable13_14
       4  ??DataTable13_15
       4  ??DataTable13_16
       4  ??DataTable13_17
       4  ??DataTable13_18
       4  ??DataTable13_19
       4  ??DataTable13_2
       4  ??DataTable13_20
       4  ??DataTable13_21
       4  ??DataTable13_22
       4  ??DataTable13_23
       4  ??DataTable13_24
       4  ??DataTable13_25
       4  ??DataTable13_26
       4  ??DataTable13_27
       4  ??DataTable13_28
       4  ??DataTable13_29
       4  ??DataTable13_3
       4  ??DataTable13_30
       4  ??DataTable13_31
       4  ??DataTable13_32
       4  ??DataTable13_33
       4  ??DataTable13_34
       4  ??DataTable13_35
       4  ??DataTable13_36
       4  ??DataTable13_37
       4  ??DataTable13_38
       4  ??DataTable13_39
       4  ??DataTable13_4
       4  ??DataTable13_40
       4  ??DataTable13_41
       4  ??DataTable13_42
       4  ??DataTable13_43
       4  ??DataTable13_44
       4  ??DataTable13_45
       4  ??DataTable13_46
       4  ??DataTable13_47
       4  ??DataTable13_48
       4  ??DataTable13_49
       4  ??DataTable13_5
       4  ??DataTable13_50
       4  ??DataTable13_51
       4  ??DataTable13_52
       4  ??DataTable13_53
       4  ??DataTable13_54
       4  ??DataTable13_55
       4  ??DataTable13_56
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
       4  ??DataTable9
     548  FDCurrFile
     548  FDLogFile
      52  MMCD1
     560  MMC_FS
      56  MMCmonThread()
     112  MMCmount()
      80  MMCumount()
      16  __sti__routine()
     104  appendToLog
     166  createLogFile()
       4  errorReported
       1  fs_ready
      12  hs_spicfg
     276  incLogFileName()
     158  initMmcCard
       6  isSdCardAlive
     170  listDirectory(char const *)
       4  logFileIndex
      16  logName
     260  logger
      12  ls_spicfg
      22  memset
     712  mmcThreadStack
      12  mmccfg
      26  printError(char const *, FRESULT)
      32  printMmcPinout()
      42  removeFile(char const *)
      80  sdStatistics()
       4  totalLoggedBytes
       4  -- Other

 
 2 705 bytes in section .bss
    40 bytes in section .data
     4 bytes in section .init_array
   616 bytes in section .rodata
 1 578 bytes in section .text
 
 1 560 bytes of CODE  memory (+ 22 bytes shared)
   616 bytes of CONST memory
 2 745 bytes of DATA  memory

Errors: none
Warnings: 1
