###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:10:06 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\serial_ #
#                       over_usb\usbconsole.c                                 #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\serial_ #
#                       over_usb\usbconsole.c -lCN                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\  #
#                       -lA F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Li #
#                       st\ -o F:\stuff\rusefi_sourceforge\firmware\iar\Debug #
#                       \Obj\ --no_cse --no_unroll --no_inline                #
#                       --no_code_motion --no_tbaa --no_clustering            #
#                       --no_scheduling --debug --endian=little               #
#                       --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config       #
#                       "C:\Program Files (x86)\IAR Systems\Embedded          #
#                       Workbench 6.5\arm\INC\c\DLib_Config_Normal.h"         #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\ -On #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\u #
#                       sbconsole.lst                                         #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\us #
#                       bconsole.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\hw_layer\serial_over_usb\usbconsole.c
      1          /**
      2           * @file    usbconsole.c
      3           * @brief	USB-over-serial configuration
      4           *
      5           * @date Oct 14, 2013
      6           * @author Andrey Belomutskiy, (c) 2012-2015
      7           */
      8          
      9          #include "main.h"
     10          
     11          #if EFI_USB_SERIAL || defined(__DOXYGEN__)
     12          
     13          #include "usbconsole.h"
     14          #include "usbcfg.h"
     15          #include "efifeatures.h"
     16          
     17          extern SerialUSBDriver SDU1;
     18          extern const SerialUSBConfig serusbcfg;
     19          extern const USBConfig usbcfg;
     20          

   \                                 In section .text, align 2, keep-with-next
     21          void usb_serial_start(void) {
   \                     usb_serial_start:
   \   00000000   0xB580             PUSH     {R7,LR}
     22          	/*
     23          	 * Initializes a serial-over-USB CDC driver.
     24          	 */
     25          	sduObjectInit(&SDU1);
   \   00000002   0x....             LDR.N    R0,??DataTable1
   \   00000004   0x.... 0x....      BL       sduObjectInit
     26          	sduStart(&SDU1, &serusbcfg);
   \   00000008   0x....             LDR.N    R1,??DataTable1_1
   \   0000000A   0x....             LDR.N    R0,??DataTable1
   \   0000000C   0x.... 0x....      BL       sduStart
     27          
     28          	/*
     29          	 * Activates the USB driver and then the USB bus pull-up on D+.
     30          	 * Note, a delay is inserted in order to not have to disconnect the cable
     31          	 * after a reset.
     32          	 */
     33          	usbDisconnectBus(serusbcfg.usbp);
   \   00000010   0x....             LDR.N    R0,??DataTable1_1
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x6D00             LDR      R0,[R0, #+80]
   \   00000016   0x6B80             LDR      R0,[R0, #+56]
   \   00000018   0xF430 0x2000      BICS     R0,R0,#0x80000
   \   0000001C   0x....             LDR.N    R1,??DataTable1_1
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0x6D09             LDR      R1,[R1, #+80]
   \   00000022   0x6388             STR      R0,[R1, #+56]
     34          	chThdSleepMilliseconds(1500);
   \   00000024   0xF240 0x50DC      MOVW     R0,#+1500
   \   00000028   0x.... 0x....      BL       chThdSleep
     35          	usbStart(serusbcfg.usbp, &usbcfg);
   \   0000002C   0x....             LDR.N    R1,??DataTable1_2
   \   0000002E   0x....             LDR.N    R0,??DataTable1_1
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x.... 0x....      BL       usbStart
     36          	usbConnectBus(serusbcfg.usbp);
   \   00000036   0x....             LDR.N    R0,??DataTable1_1
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x6D00             LDR      R0,[R0, #+80]
   \   0000003C   0x6B80             LDR      R0,[R0, #+56]
   \   0000003E   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   00000042   0x....             LDR.N    R1,??DataTable1_1
   \   00000044   0x6809             LDR      R1,[R1, #+0]
   \   00000046   0x6D09             LDR      R1,[R1, #+80]
   \   00000048   0x6388             STR      R0,[R1, #+56]
     37          
     38          	/*
     39          	 * Activates the serial driver 2 using the driver default configuration.
     40          	 */
     41          	sdStart(&SD2, NULL);
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x....             LDR.N    R0,??DataTable1_3
   \   0000004E   0x.... 0x....      BL       sdStart
     42          }
   \   00000052   0xBD01             POP      {R0,PC}          ;; return
     43          

   \                                 In section .text, align 2, keep-with-next
     44          bool is_usb_serial_ready(void) {
     45          	return SDU1.config->usbp->state == USB_ACTIVE;
   \                     is_usb_serial_ready:
   \   00000000   0x....             LDR.N    R0,??DataTable1
   \   00000002   0xF8D0 0x0254      LDR      R0,[R0, #+596]
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x2804             CMP      R0,#+4
   \   0000000C   0xD101             BNE.N    ??is_usb_serial_ready_0
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0xE000             B.N      ??is_usb_serial_ready_1
   \                     ??is_usb_serial_ready_0:
   \   00000012   0x2000             MOVS     R0,#+0
   \                     ??is_usb_serial_ready_1:
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x4770             BX       LR               ;; return
     46          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     SDU1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     serusbcfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     usbcfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     SD2
     47          
     48          #else
     49          bool is_usb_serial_ready(void) {
     50          	return false;
     51          }
     52          
     53          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   is_usb_serial_ready
       8   usb_serial_start
         8   -> chThdSleep
         8   -> sdStart
         8   -> sduObjectInit
         8   -> sduStart
         8   -> usbStart


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
      24  is_usb_serial_ready
      84  usb_serial_start

 
 124 bytes in section .text
 
 124 bytes of CODE memory

Errors: none
Warnings: none
