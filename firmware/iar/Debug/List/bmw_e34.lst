###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:39 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\config\engines\b #
#                       mw_e34.cpp                                            #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\config\engines\b #
#                       mw_e34.cpp -lCN F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\firmw #
#                       are\iar\Debug\List\ -o F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\Debug\Obj\ --no_cse --no_unroll            #
#                       --no_inline --no_code_motion --no_tbaa                #
#                       --no_clustering --no_scheduling --debug               #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\b #
#                       mw_e34.lst                                            #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\bm #
#                       w_e34.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\config\engines\bmw_e34.cpp
      1          /**
      2           * @file bmw_e34.cpp
      3           *
      4           * set_engine_type 25
      5           *
      6           * Coil pairs: 1-6, 2-5, 3-4
      7           *
      8           * Injector groups: 1,2,3 & 4,5,6
      9           *
     10           * @date Nov 5, 2014
     11           * @author Andrey Belomutskiy, (c) 2012-2015
     12           */
     13          
     14          #include "global.h"
     15          #include "bmw_e34.h"
     16          #include "thermistors.h"
     17          #include "engine_math.h"
     18          
     19          EXTERN_ENGINE
     20          ;
     21          

   \                                 In section .text, align 4, keep-with-next
     22          void setBmwE34(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z9setBmwE34v:
   \   00000000   0xB510             PUSH     {R4,LR}
     23          	// chartsize 450
     24          	engineConfiguration->engineChartSize = 450;
   \   00000002   0x48CD             LDR.N    R0,??setBmwE34_0+0x10
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF44F 0x71E1      MOV      R1,#+450
   \   0000000A   0xF8C0 0x15E8      STR      R1,[R0, #+1512]
     25          
     26          //	setOperationMode(engineConfiguration, FOUR_STROKE_CAM_SENSOR);
     27          //	engineConfiguration->trigger.type = TT_ONE_PLUS_TOOTHED_WHEEL_60_2;
     28          //	engineConfiguration->injectionMode = IM_SEQUENTIAL;
     29          //	boardConfiguration->triggerInputPins[0] = GPIOC_6;
     30          //	boardConfiguration->triggerInputPins[1] = GPIOA_5;
     31          
     32          //Base engine setting
     33          	engineConfiguration->specs.cylindersCount = 6;
   \   0000000E   0x48CA             LDR.N    R0,??setBmwE34_0+0x10
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x2106             MOVS     R1,#+6
   \   00000014   0xF8C0 0x1194      STR      R1,[R0, #+404]
     34          	engineConfiguration->specs.displacement = 2.91;
   \   00000018   0x48C7             LDR.N    R0,??setBmwE34_0+0x10
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x49C7             LDR.N    R1,??setBmwE34_0+0x14  ;; 0x403a3d71
   \   0000001E   0xF8C0 0x1190      STR      R1,[R0, #+400]
     35          	engineConfiguration->specs.firingOrder = FO_1_THEN_5_THEN_3_THEN_6_THEN_2_THEN_4;
   \   00000022   0x48C5             LDR.N    R0,??setBmwE34_0+0x10
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x2104             MOVS     R1,#+4
   \   00000028   0xF8C0 0x1198      STR      R1,[R0, #+408]
     36          	engineConfiguration->injectionMode = IM_BATCH;
   \   0000002C   0x48C2             LDR.N    R0,??setBmwE34_0+0x10
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x2102             MOVS     R1,#+2
   \   00000032   0xF8C0 0x11B0      STR      R1,[R0, #+432]
     37          	engineConfiguration->twoWireBatch = true;
   \   00000036   0x48C0             LDR.N    R0,??setBmwE34_0+0x10
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF890 0x05E5      LDRB     R0,[R0, #+1509]
   \   0000003E   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000042   0x49BD             LDR.N    R1,??setBmwE34_0+0x10
   \   00000044   0x6809             LDR      R1,[R1, #+0]
   \   00000046   0xF881 0x05E5      STRB     R0,[R1, #+1509]
     38          	engineConfiguration->ignitionMode = IM_WASTED_SPARK;
   \   0000004A   0x48BB             LDR.N    R0,??setBmwE34_0+0x10
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x2102             MOVS     R1,#+2
   \   00000050   0xF8C0 0x11BC      STR      R1,[R0, #+444]
     39          	engineConfiguration->useOnlyFrontForTrigger = true;
   \   00000054   0x48B8             LDR.N    R0,??setBmwE34_0+0x10
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF890 0x05E5      LDRB     R0,[R0, #+1509]
   \   0000005C   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000060   0x49B5             LDR.N    R1,??setBmwE34_0+0x10
   \   00000062   0x6809             LDR      R1,[R1, #+0]
   \   00000064   0xF881 0x05E5      STRB     R0,[R1, #+1509]
     40          
     41          	// Trigger configuration
     42          //	engineConfiguration->trigger.type = TT_TOOTHED_WHEEL_60_2;
     43          	setOperationMode(engineConfiguration, FOUR_STROKE_CRANK_SENSOR);
   \   00000068   0x2101             MOVS     R1,#+1
   \   0000006A   0x48B3             LDR.N    R0,??setBmwE34_0+0x10
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x.... 0x....      BL       _Z16setOperationModeP22engine_configuration_s16operation_mode_e
     44          	engineConfiguration->globalTriggerAngleOffset = 84;
   \   00000072   0x48B1             LDR.N    R0,??setBmwE34_0+0x10
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x49B2             LDR.N    R1,??setBmwE34_0+0x18  ;; 0x42a80000
   \   00000078   0xF8C0 0x11CC      STR      R1,[R0, #+460]
     45          
     46          	engineConfiguration->trigger.type = TT_TOOTHED_WHEEL;
   \   0000007C   0x48AE             LDR.N    R0,??setBmwE34_0+0x10
   \   0000007E   0x6800             LDR      R0,[R0, #+0]
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0xF8C0 0x1218      STR      R1,[R0, #+536]
     47          	engineConfiguration->trigger.customTotalToothCount = 30;
   \   00000086   0x48AC             LDR.N    R0,??setBmwE34_0+0x10
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x211E             MOVS     R1,#+30
   \   0000008C   0xF8C0 0x1220      STR      R1,[R0, #+544]
     48          	engineConfiguration->trigger.customSkippedToothCount = 1;
   \   00000090   0x48A9             LDR.N    R0,??setBmwE34_0+0x10
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0x2101             MOVS     R1,#+1
   \   00000096   0xF8C0 0x1224      STR      R1,[R0, #+548]
     49          
     50          
     51          	// Injection settings
     52          	engineConfiguration->injector.lag = 1.15;
   \   0000009A   0x48A7             LDR.N    R0,??setBmwE34_0+0x10
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x49A9             LDR.N    R1,??setBmwE34_0+0x1C  ;; 0x3f933333
   \   000000A0   0x60C1             STR      R1,[R0, #+12]
     53          	engineConfiguration->injector.flow = 750;
   \   000000A2   0x48A5             LDR.N    R0,??setBmwE34_0+0x10
   \   000000A4   0x6800             LDR      R0,[R0, #+0]
   \   000000A6   0x49A8             LDR.N    R1,??setBmwE34_0+0x20  ;; 0x443b8000
   \   000000A8   0x6081             STR      R1,[R0, #+8]
     54          
     55          	// General settings
     56          	boardConfiguration->tunerStudioSerialSpeed = 57600;
   \   000000AA   0x48A8             LDR.N    R0,??setBmwE34_0+0x24
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0xF44F 0x4161      MOV      R1,#+57600
   \   000000B2   0xF8C0 0x114C      STR      R1,[R0, #+332]
     57          	engineConfiguration->rpmHardLimit = 7000;
   \   000000B6   0x48A0             LDR.N    R0,??setBmwE34_0+0x10
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0xF641 0x3158      MOVW     R1,#+7000
   \   000000BE   0xF8C0 0x11A4      STR      R1,[R0, #+420]
     58          	setAlgorithm(LM_SPEED_DENSITY PASS_ENGINE_PARAMETER);
   \   000000C2   0x2003             MOVS     R0,#+3
   \   000000C4   0x.... 0x....      BL       _Z12setAlgorithm18engine_load_mode_e
     59          
     60          	// for best performance at high RPM, we need to turn off 'Engine Sniffer' and 'Sensor Sniffer'
     61          	boardConfiguration->sensorChartMode = SC_OFF;
   \   000000C8   0x48A0             LDR.N    R0,??setBmwE34_0+0x24
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0x2100             MOVS     R1,#+0
   \   000000CE   0xF8C0 0x1310      STR      R1,[R0, #+784]
     62          	engineConfiguration->isEngineChartEnabled = false;
   \   000000D2   0x4899             LDR.N    R0,??setBmwE34_0+0x10
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0xF890 0x05D8      LDRB     R0,[R0, #+1496]
   \   000000DA   0xF010 0x00DF      ANDS     R0,R0,#0xDF
   \   000000DE   0x4996             LDR.N    R1,??setBmwE34_0+0x10
   \   000000E0   0x6809             LDR      R1,[R1, #+0]
   \   000000E2   0xF881 0x05D8      STRB     R0,[R1, #+1496]
     63          
     64          	engineConfiguration->isCylinderCleanupEnabled = false;
   \   000000E6   0x4894             LDR.N    R0,??setBmwE34_0+0x10
   \   000000E8   0x6800             LDR      R0,[R0, #+0]
   \   000000EA   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   000000EE   0xF010 0x00FB      ANDS     R0,R0,#0xFB
   \   000000F2   0x4991             LDR.N    R1,??setBmwE34_0+0x10
   \   000000F4   0x6809             LDR      R1,[R1, #+0]
   \   000000F6   0xF881 0x05E4      STRB     R0,[R1, #+1508]
     65          	engineConfiguration->isInjectionEnabled = true;
   \   000000FA   0x488F             LDR.N    R0,??setBmwE34_0+0x10
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   00000102   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000106   0x498C             LDR.N    R1,??setBmwE34_0+0x10
   \   00000108   0x6809             LDR      R1,[R1, #+0]
   \   0000010A   0xF881 0x05E4      STRB     R0,[R1, #+1508]
     66          	engineConfiguration->isIgnitionEnabled = true;
   \   0000010E   0x488A             LDR.N    R0,??setBmwE34_0+0x10
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0xF890 0x05E4      LDRB     R0,[R0, #+1508]
   \   00000116   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000011A   0x4987             LDR.N    R1,??setBmwE34_0+0x10
   \   0000011C   0x6809             LDR      R1,[R1, #+0]
   \   0000011E   0xF881 0x05E4      STRB     R0,[R1, #+1508]
     67          
     68          	setConstantDwell(3 PASS_ENGINE_PARAMETER); // a bit shorter dwell
   \   00000122   0xEEB0 0x0A08      VMOV.F32 S0,#3.0
   \   00000126   0x.... 0x....      BL       _Z16setConstantDwellf
     69          	engineConfiguration->ignMathCalculateAtIndex = 14;
   \   0000012A   0x4883             LDR.N    R0,??setBmwE34_0+0x10
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0x210E             MOVS     R1,#+14
   \   00000130   0xF8C0 0x15F4      STR      R1,[R0, #+1524]
     70          
     71          	engineConfiguration->mapAveragingSchedulingAtIndex = 6;
   \   00000134   0x4880             LDR.N    R0,??setBmwE34_0+0x10
   \   00000136   0x6800             LDR      R0,[R0, #+0]
   \   00000138   0x2106             MOVS     R1,#+6
   \   0000013A   0xF8C0 0x1670      STR      R1,[R0, #+1648]
     72          
     73          	// Cranking
     74          	engineConfiguration->cranking.rpm = 600;
   \   0000013E   0x487E             LDR.N    R0,??setBmwE34_0+0x10
   \   00000140   0x6800             LDR      R0,[R0, #+0]
   \   00000142   0xF44F 0x7116      MOV      R1,#+600
   \   00000146   0xF8A0 0x1060      STRH     R1,[R0, #+96]
     75          	engineConfiguration->crankingInjectionMode = IM_BATCH;
   \   0000014A   0x487B             LDR.N    R0,??setBmwE34_0+0x10
   \   0000014C   0x6800             LDR      R0,[R0, #+0]
   \   0000014E   0x2102             MOVS     R1,#+2
   \   00000150   0xF8C0 0x11AC      STR      R1,[R0, #+428]
     76          	engineConfiguration->cranking.baseFuel = 7;
   \   00000154   0x4878             LDR.N    R0,??setBmwE34_0+0x10
   \   00000156   0x6800             LDR      R0,[R0, #+0]
   \   00000158   0x497D             LDR.N    R1,??setBmwE34_0+0x28  ;; 0x40e00000
   \   0000015A   0x65C1             STR      R1,[R0, #+92]
     77          	engineConfiguration->useConstantDwellDuringCranking = true;
   \   0000015C   0x4876             LDR.N    R0,??setBmwE34_0+0x10
   \   0000015E   0x6800             LDR      R0,[R0, #+0]
   \   00000160   0xF890 0x05D8      LDRB     R0,[R0, #+1496]
   \   00000164   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000168   0x4973             LDR.N    R1,??setBmwE34_0+0x10
   \   0000016A   0x6809             LDR      R1,[R1, #+0]
   \   0000016C   0xF881 0x05D8      STRB     R0,[R1, #+1496]
     78          	engineConfiguration->ignitionDwellForCrankingMs = 6;
   \   00000170   0x4871             LDR.N    R0,??setBmwE34_0+0x10
   \   00000172   0x6800             LDR      R0,[R0, #+0]
   \   00000174   0x4977             LDR.N    R1,??setBmwE34_0+0x2C  ;; 0x40c00000
   \   00000176   0x6681             STR      R1,[R0, #+104]
     79          
     80          	// Inputs configuration
     81          	engineConfiguration->analogInputDividerCoefficient = 1.52;
   \   00000178   0x486F             LDR.N    R0,??setBmwE34_0+0x10
   \   0000017A   0x6800             LDR      R0,[R0, #+0]
   \   0000017C   0x4976             LDR.N    R1,??setBmwE34_0+0x30  ;; 0x3fc28f5c
   \   0000017E   0xF8C0 0x11D0      STR      R1,[R0, #+464]
     82          	engineConfiguration->vbattDividerCoeff = 5.33;
   \   00000182   0x486D             LDR.N    R0,??setBmwE34_0+0x10
   \   00000184   0x6800             LDR      R0,[R0, #+0]
   \   00000186   0x4975             LDR.N    R1,??setBmwE34_0+0x34  ;; 0x40aa8f5c
   \   00000188   0xF8C0 0x11D4      STR      R1,[R0, #+468]
     83          	engineConfiguration->vbattAdcChannel = EFI_ADC_15; // PC5
   \   0000018C   0x486A             LDR.N    R0,??setBmwE34_0+0x10
   \   0000018E   0x6800             LDR      R0,[R0, #+0]
   \   00000190   0x210F             MOVS     R1,#+15
   \   00000192   0xF8C0 0x11D8      STR      R1,[R0, #+472]
     84          
     85          	engineConfiguration->tpsAdcChannel = EFI_ADC_3;
   \   00000196   0x4868             LDR.N    R0,??setBmwE34_0+0x10
   \   00000198   0x6800             LDR      R0,[R0, #+0]
   \   0000019A   0x2103             MOVS     R1,#+3
   \   0000019C   0xF8C0 0x120C      STR      R1,[R0, #+524]
     86          
     87          
     88          	boardConfiguration->triggerInputPins[0] = GPIOA_5;
   \   000001A0   0x486A             LDR.N    R0,??setBmwE34_0+0x24
   \   000001A2   0x6800             LDR      R0,[R0, #+0]
   \   000001A4   0x2105             MOVS     R1,#+5
   \   000001A6   0xF8C0 0x1128      STR      R1,[R0, #+296]
     89          	boardConfiguration->triggerInputPins[1] = GPIO_UNASSIGNED;
   \   000001AA   0x4868             LDR.N    R0,??setBmwE34_0+0x24
   \   000001AC   0x6800             LDR      R0,[R0, #+0]
   \   000001AE   0x2150             MOVS     R1,#+80
   \   000001B0   0xF8C0 0x112C      STR      R1,[R0, #+300]
     90          
     91          	setWholeTimingTable(25 PASS_ENGINE_PARAMETER);
   \   000001B4   0xEEB3 0x0A09      VMOV.F32 S0,#25.0
   \   000001B8   0x.... 0x....      BL       _Z19setWholeTimingTablef
     92          
     93          	board_configuration_s *bc = &engineConfiguration->bc;
   \   000001BC   0x485E             LDR.N    R0,??setBmwE34_0+0x10
   \   000001BE   0x6800             LDR      R0,[R0, #+0]
   \   000001C0   0xF510 0x741C      ADDS     R4,R0,#+624
     94          	bc->malfunctionIndicatorPin = GPIO_UNASSIGNED;
   \   000001C4   0x2050             MOVS     R0,#+80
   \   000001C6   0xF8C4 0x0088      STR      R0,[R4, #+136]
     95          
     96          //	bc->isFastAdcEnabled = true;
     97          
     98          	bc->injectionPinMode = OM_INVERTED;
   \   000001CA   0x2001             MOVS     R0,#+1
   \   000001CC   0x6520             STR      R0,[R4, #+80]
     99          	bc->injectionPins[0] = GPIOB_8; // #1
   \   000001CE   0x2018             MOVS     R0,#+24
   \   000001D0   0x6220             STR      R0,[R4, #+32]
    100          	bc->injectionPins[1] = GPIOE_2; // #2
   \   000001D2   0x2042             MOVS     R0,#+66
   \   000001D4   0x6260             STR      R0,[R4, #+36]
    101          	bc->injectionPins[2] = GPIOE_3; // #3
   \   000001D6   0x2043             MOVS     R0,#+67
   \   000001D8   0x62A0             STR      R0,[R4, #+40]
    102          	bc->injectionPins[3] = GPIOE_4; // #4
   \   000001DA   0x2044             MOVS     R0,#+68
   \   000001DC   0x62E0             STR      R0,[R4, #+44]
    103          	bc->injectionPins[4] = GPIOE_5; // #5
   \   000001DE   0x2045             MOVS     R0,#+69
   \   000001E0   0x6320             STR      R0,[R4, #+48]
    104          	bc->injectionPins[5] = GPIOE_6; // #6
   \   000001E2   0x2046             MOVS     R0,#+70
   \   000001E4   0x6360             STR      R0,[R4, #+52]
    105          
    106          	bc->ignitionPinMode = OM_INVERTED;
   \   000001E6   0x2001             MOVS     R0,#+1
   \   000001E8   0xF8C4 0x0084      STR      R0,[R4, #+132]
    107          
    108          	bc->ignitionPins[0] = GPIOB_5; // #1
   \   000001EC   0x2015             MOVS     R0,#+21
   \   000001EE   0x6560             STR      R0,[R4, #+84]
    109          	bc->ignitionPins[2] = GPIOB_6; // #3
   \   000001F0   0x2016             MOVS     R0,#+22
   \   000001F2   0x65E0             STR      R0,[R4, #+92]
    110          	bc->ignitionPins[4] = GPIOB_7; // #5
   \   000001F4   0x2017             MOVS     R0,#+23
   \   000001F6   0x6660             STR      R0,[R4, #+100]
    111          
    112          	bc->triggerErrorPin = GPIO_UNASSIGNED;
   \   000001F8   0x2050             MOVS     R0,#+80
   \   000001FA   0xF8C4 0x0258      STR      R0,[R4, #+600]
    113          
    114          	// clutch up
    115          	boardConfiguration->clutchUpPin = GPIOD_3;
   \   000001FE   0x4853             LDR.N    R0,??setBmwE34_0+0x24
   \   00000200   0x6800             LDR      R0,[R0, #+0]
   \   00000202   0x2133             MOVS     R1,#+51
   \   00000204   0xF8C0 0x131C      STR      R1,[R0, #+796]
    116          	boardConfiguration->clutchUpPinMode = PI_PULLUP;
   \   00000208   0x4850             LDR.N    R0,??setBmwE34_0+0x24
   \   0000020A   0x6800             LDR      R0,[R0, #+0]
   \   0000020C   0x2101             MOVS     R1,#+1
   \   0000020E   0xF8C0 0x1320      STR      R1,[R0, #+800]
    117          
    118          	// fuel pump
    119          	boardConfiguration->fuelPumpPin = GPIOD_4;
   \   00000212   0x484E             LDR.N    R0,??setBmwE34_0+0x24
   \   00000214   0x6800             LDR      R0,[R0, #+0]
   \   00000216   0x2134             MOVS     R1,#+52
   \   00000218   0x6181             STR      R1,[R0, #+24]
    120          
    121          	// idle
    122          	boardConfiguration->idle.solenoidPin = GPIOC_14;
   \   0000021A   0x484C             LDR.N    R0,??setBmwE34_0+0x24
   \   0000021C   0x6800             LDR      R0,[R0, #+0]
   \   0000021E   0x212E             MOVS     R1,#+46
   \   00000220   0x6001             STR      R1,[R0, #+0]
    123          	boardConfiguration->idle.solenoidPinMode = OM_INVERTED;
   \   00000222   0x484A             LDR.N    R0,??setBmwE34_0+0x24
   \   00000224   0x6800             LDR      R0,[R0, #+0]
   \   00000226   0x2101             MOVS     R1,#+1
   \   00000228   0x6041             STR      R1,[R0, #+4]
    124          	boardConfiguration->idle.solenoidFrequency = 300;
   \   0000022A   0x4848             LDR.N    R0,??setBmwE34_0+0x24
   \   0000022C   0x6800             LDR      R0,[R0, #+0]
   \   0000022E   0xF44F 0x7196      MOV      R1,#+300
   \   00000232   0x6081             STR      R1,[R0, #+8]
    125          	boardConfiguration->idlePosition = 50; // set_idle_pwm 50
   \   00000234   0x4845             LDR.N    R0,??setBmwE34_0+0x24
   \   00000236   0x6800             LDR      R0,[R0, #+0]
   \   00000238   0x4949             LDR.N    R1,??setBmwE34_0+0x38  ;; 0x42480000
   \   0000023A   0x6141             STR      R1,[R0, #+20]
    126          
    127          	// disable sd_card
    128          	boardConfiguration->sdCardCsPin = GPIO_UNASSIGNED;
   \   0000023C   0x4843             LDR.N    R0,??setBmwE34_0+0x24
   \   0000023E   0x6800             LDR      R0,[R0, #+0]
   \   00000240   0x2150             MOVS     R1,#+80
   \   00000242   0xF8C0 0x1144      STR      R1,[R0, #+324]
    129          	boardConfiguration->is_enabled_spi_2 = false;
   \   00000246   0x4841             LDR.N    R0,??setBmwE34_0+0x24
   \   00000248   0x6800             LDR      R0,[R0, #+0]
   \   0000024A   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   0000024E   0xF010 0x00FD      ANDS     R0,R0,#0xFD
   \   00000252   0x493E             LDR.N    R1,??setBmwE34_0+0x24
   \   00000254   0x6809             LDR      R1,[R1, #+0]
   \   00000256   0xF881 0x0180      STRB     R0,[R1, #+384]
    130          	boardConfiguration->is_enabled_spi_3 = false;
   \   0000025A   0x483C             LDR.N    R0,??setBmwE34_0+0x24
   \   0000025C   0x6800             LDR      R0,[R0, #+0]
   \   0000025E   0xF890 0x0180      LDRB     R0,[R0, #+384]
   \   00000262   0xF010 0x00FB      ANDS     R0,R0,#0xFB
   \   00000266   0x4939             LDR.N    R1,??setBmwE34_0+0x24
   \   00000268   0x6809             LDR      R1,[R1, #+0]
   \   0000026A   0xF881 0x0180      STRB     R0,[R1, #+384]
    131          	boardConfiguration->max31855spiDevice = SPI_NONE;
   \   0000026E   0x4837             LDR.N    R0,??setBmwE34_0+0x24
   \   00000270   0x6800             LDR      R0,[R0, #+0]
   \   00000272   0x2100             MOVS     R1,#+0
   \   00000274   0xF8C0 0x11C0      STR      R1,[R0, #+448]
    132          
    133          	// turbocharger boost control solenoid: TODO output: GPIOE_6
    134          	// water injection #1 TODO GPIOD_7
    135          	// water injection #2 TODO GPIOE_2
    136          
    137          	/**
    138          	 * emulating the 60-0 trigger takes some resources, let's keep it slow by default
    139          	 * rpm 200
    140          	 */
    141          	bc->triggerSimulatorFrequency = 200;
   \   00000278   0x20C8             MOVS     R0,#+200
   \   0000027A   0xF8C4 0x00D0      STR      R0,[R4, #+208]
    142          
    143          	// Configurating sensors:
    144          
    145          	// map
    146          	engineConfiguration->map.sensor.type = MT_MPX4250;
   \   0000027E   0x482E             LDR.N    R0,??setBmwE34_0+0x10
   \   00000280   0x6800             LDR      R0,[R0, #+0]
   \   00000282   0x2102             MOVS     R1,#+2
   \   00000284   0xF8C0 0x10F8      STR      R1,[R0, #+248]
    147          
    148          	// thermistors
    149          	engineConfiguration->hasCltSensor = true;
   \   00000288   0x482B             LDR.N    R0,??setBmwE34_0+0x10
   \   0000028A   0x6800             LDR      R0,[R0, #+0]
   \   0000028C   0xF890 0x05D8      LDRB     R0,[R0, #+1496]
   \   00000290   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000294   0x4928             LDR.N    R1,??setBmwE34_0+0x10
   \   00000296   0x6809             LDR      R1,[R1, #+0]
   \   00000298   0xF881 0x05D8      STRB     R0,[R1, #+1496]
    150          	engineConfiguration->hasIatSensor = true;
   \   0000029C   0x4826             LDR.N    R0,??setBmwE34_0+0x10
   \   0000029E   0x6800             LDR      R0,[R0, #+0]
   \   000002A0   0xF890 0x05D8      LDRB     R0,[R0, #+1496]
   \   000002A4   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000002A8   0x4923             LDR.N    R1,??setBmwE34_0+0x10
   \   000002AA   0x6809             LDR      R1,[R1, #+0]
   \   000002AC   0xF881 0x05D8      STRB     R0,[R1, #+1496]
    151          	setThermistorConfiguration(&engineConfiguration->clt, -10, 9300, 20, 2500, 80, 335);
   \   000002B0   0xEDDF 0x2A1D      VLDR.W   S5,??setBmwE34_0  ;; 0x43a78000
   \   000002B4   0xED9F 0x2A1D      VLDR.W   S4,??setBmwE34_0+0x4  ;; 0x42a00000
   \   000002B8   0xEDDF 0x1A1D      VLDR.W   S3,??setBmwE34_0+0x8  ;; 0x451c4000
   \   000002BC   0xEEB3 0x1A04      VMOV.F32 S2,#20.0
   \   000002C0   0xEDDF 0x0A1C      VLDR.W   S1,??setBmwE34_0+0xC  ;; 0x46115000
   \   000002C4   0xEEBA 0x0A04      VMOV.F32 S0,#-10.0
   \   000002C8   0x481B             LDR.N    R0,??setBmwE34_0+0x10
   \   000002CA   0x6800             LDR      R0,[R0, #+0]
   \   000002CC   0xF510 0x7080      ADDS     R0,R0,#+256
   \   000002D0   0x.... 0x....      BL       _Z26setThermistorConfigurationP14ThermistorConfffffff
    152          	engineConfiguration->iat.config.bias_resistor = 2200;
   \   000002D4   0x4818             LDR.N    R0,??setBmwE34_0+0x10
   \   000002D6   0x6800             LDR      R0,[R0, #+0]
   \   000002D8   0x4922             LDR.N    R1,??setBmwE34_0+0x3C  ;; 0x45098000
   \   000002DA   0xF8C0 0x1138      STR      R1,[R0, #+312]
    153          	setThermistorConfiguration(&engineConfiguration->iat, -10, 9300, 20, 2500, 80, 335);
   \   000002DE   0xEDDF 0x2A12      VLDR.W   S5,??setBmwE34_0  ;; 0x43a78000
   \   000002E2   0xED9F 0x2A12      VLDR.W   S4,??setBmwE34_0+0x4  ;; 0x42a00000
   \   000002E6   0xEDDF 0x1A12      VLDR.W   S3,??setBmwE34_0+0x8  ;; 0x451c4000
   \   000002EA   0xEEB3 0x1A04      VMOV.F32 S2,#20.0
   \   000002EE   0xEDDF 0x0A11      VLDR.W   S1,??setBmwE34_0+0xC  ;; 0x46115000
   \   000002F2   0xEEBA 0x0A04      VMOV.F32 S0,#-10.0
   \   000002F6   0x4810             LDR.N    R0,??setBmwE34_0+0x10
   \   000002F8   0x6800             LDR      R0,[R0, #+0]
   \   000002FA   0xF510 0x7090      ADDS     R0,R0,#+288
   \   000002FE   0x.... 0x....      BL       _Z26setThermistorConfigurationP14ThermistorConfffffff
    154          	engineConfiguration->clt.config.bias_resistor = 2200;
   \   00000302   0x480D             LDR.N    R0,??setBmwE34_0+0x10
   \   00000304   0x6800             LDR      R0,[R0, #+0]
   \   00000306   0x4917             LDR.N    R1,??setBmwE34_0+0x3C  ;; 0x45098000
   \   00000308   0xF8C0 0x1118      STR      R1,[R0, #+280]
    155          
    156          //	/**
    157          //	 * This saves a couple of ticks in trigger emulation methods
    158          //	 * TODO: add some smart logic to detect unneeded trigger simulation pins?
    159          //	 * TODO: but probably not worth it
    160          //	 */
    161          //	bc->triggerSimulatorPins[1] = GPIO_UNASSIGNED;
    162          
    163          	boardConfiguration->triggerSimulatorPins[0] = GPIOD_1;
   \   0000030C   0x480F             LDR.N    R0,??setBmwE34_0+0x24
   \   0000030E   0x6800             LDR      R0,[R0, #+0]
   \   00000310   0x2131             MOVS     R1,#+49
   \   00000312   0xF8C0 0x1160      STR      R1,[R0, #+352]
    164          	boardConfiguration->triggerSimulatorPins[1] = GPIOD_2;
   \   00000316   0x480D             LDR.N    R0,??setBmwE34_0+0x24
   \   00000318   0x6800             LDR      R0,[R0, #+0]
   \   0000031A   0x2132             MOVS     R1,#+50
   \   0000031C   0xF8C0 0x1164      STR      R1,[R0, #+356]
    165          	bc->triggerSimulatorPins[2] = GPIO_UNASSIGNED;
   \   00000320   0x2050             MOVS     R0,#+80
   \   00000322   0xF8C4 0x0168      STR      R0,[R4, #+360]
    166          }
   \   00000326   0xBD10             POP      {R4,PC}          ;; return
   \                     ??setBmwE34_0:
   \   00000328   0x43A78000         DC32     0x43a78000
   \   0000032C   0x42A00000         DC32     0x42a00000
   \   00000330   0x451C4000         DC32     0x451c4000
   \   00000334   0x46115000         DC32     0x46115000
   \   00000338   0x........         DC32     engineConfiguration
   \   0000033C   0x403A3D71         DC32     0x403a3d71
   \   00000340   0x42A80000         DC32     0x42a80000
   \   00000344   0x3F933333         DC32     0x3f933333
   \   00000348   0x443B8000         DC32     0x443b8000
   \   0000034C   0x........         DC32     boardConfiguration
   \   00000350   0x40E00000         DC32     0x40e00000
   \   00000354   0x40C00000         DC32     0x40c00000
   \   00000358   0x3FC28F5C         DC32     0x3fc28f5c
   \   0000035C   0x40AA8F5C         DC32     0x40aa8f5c
   \   00000360   0x42480000         DC32     0x42480000
   \   00000364   0x45098000         DC32     0x45098000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   setBmwE34()
         8   -> setAlgorithm(engine_load_mode_e)
         8   -> setConstantDwell(float)
         8   -> setOperationMode(engine_configuration_s *, operation_mode_e)
         8   -> setThermistorConfiguration(ThermistorConf *, float, float, float, float, float, float)
         8   -> setWholeTimingTable(float)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     872  setBmwE34()

 
 872 bytes in section .text
 
 872 bytes of CODE memory

Errors: none
Warnings: 1
