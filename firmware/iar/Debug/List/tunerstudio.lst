###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:08:51 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\console\binary\t #
#                       unerstudio.cpp                                        #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\console\binary\t #
#                       unerstudio.cpp -lCN F:\stuff\rusefi_sourceforge\firmw #
#                       are\iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\f #
#                       irmware\iar\Debug\List\ -o                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\   #
#                       --no_cse --no_unroll --no_inline --no_code_motion     #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\t #
#                       unerstudio.lst                                        #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\tu #
#                       nerstudio.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\console\binary\tunerstudio.cpp
      1          /**
      2           * @file	tunerstudio.cpp
      3           * @brief	Binary protocol implementation
      4           *
      5           * This implementation would not happen without the documentation
      6           * provided by Jon Zeeff (jon@zeeff.com)
      7           *
      8           *
      9           * @brief Integration with EFI Analytics Tuner Studio software
     10           *
     11           * Tuner Studio has a really simple protocol, a minimal implementation
     12           * capable of displaying current engine state on the gauges would
     13           * require only two commands: queryCommand and ochGetCommand
     14           *
     15           * queryCommand:
     16           * 		Communication initialization command. TunerStudio sends a single byte H
     17           * 		ECU response:
     18           * 			One of the known ECU id strings. We are using "MShift v0.01" id string.
     19           *
     20           * ochGetCommand:
     21           * 		Request for output channels state.TunerStudio sends a single byte O
     22           * 		ECU response:
     23           * 			A snapshot of output channels as described in [OutputChannels] section of the .ini file
     24           * 			The length of this block is 'ochBlockSize' property of the .ini file
     25           *
     26           * These two commands are enough to get working gauges. In order to start configuring the ECU using
     27           * tuner studio, three more commands should be implemented:
     28           *
     29           * todo: merge this file with tunerstudio.c?
     30           *
     31           *
     32           * @date Oct 22, 2013
     33           * @author Andrey Belomutskiy, (c) 2012-2015
     34           *
     35           * This file is part of rusEfi - see http://rusefi.com
     36           *
     37           * rusEfi is free software; you can redistribute it and/or modify it under the terms of
     38           * the GNU General Public License as published by the Free Software Foundation; either
     39           * version 3 of the License, or (at your option) any later version.
     40           *
     41           * rusEfi is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
     42           * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     43           * GNU General Public License for more details.
     44           *
     45           * You should have received a copy of the GNU General Public License along with this program.
     46           * If not, see <http://www.gnu.org/licenses/>.
     47           *
     48           * @author Andrey Belomutskiy, (c) 2012-2015
     49           *
     50           * This file is part of rusEfi - see http://rusefi.com
     51           *
     52           * rusEfi is free software; you can redistribute it and/or modify it under the terms of
     53           * the GNU General Public License as published by the Free Software Foundation; either
     54           * version 3 of the License, or (at your option) any later version.
     55           *
     56           * rusEfi is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
     57           * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     58           * GNU General Public License for more details.
     59           *
     60           * You should have received a copy of the GNU General Public License along with this program.
     61           * If not, see <http://www.gnu.org/licenses/>.
     62           *
     63           */
     64          
     65          #include "main.h"

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memcpy(void *, void const *, size_t)
   \                     memcpy:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x0032             MOVS     R2,R6
   \   0000000A   0x0029             MOVS     R1,R5
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memcpy
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memset(void *, int, size_t)
   \                     memset:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x002A             MOVS     R2,R5
   \   0000000A   0x0031             MOVS     R1,R6
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memset
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return
     66          
     67          #include "engine_state.h"
     68          #include "tunerstudio.h"
     69          
     70          #include "main_trigger_callback.h"
     71          #include "flash_main.h"
     72          
     73          #include "tunerstudio_io.h"
     74          #include "tunerstudio_configuration.h"
     75          #include "malfunction_central.h"
     76          #include "console_io.h"
     77          #include "crc.h"
     78          
     79          #include <string.h>
     80          #include "engine_configuration.h"
     81          #include "svnversion.h"
     82          #include "loggingcentral.h"
     83          #include "status_loop.h"
     84          
     85          #if EFI_TUNER_STUDIO || defined(__DOXYGEN__)
     86          
     87          EXTERN_ENGINE
     88          ;
     89          
     90          extern short currentPageId;
     91          
     92          // in MS, that's 3 seconds
     93          #define TS_READ_TIMEOUT MS2ST(3000)
     94          
     95          /**
     96           * note the use-case where text console port is switched into
     97           * binary port
     98           */

   \                                 In section .text, align 2, keep-with-next
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine:
   \   00000000   0xB580             PUSH     {R7,LR}
     99          LoggingWithStorage tsLogger("binary");
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable22
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000000A   0x.... 0x....      BL       _ZN18LoggingWithStorageC1EPKc
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     tsLogger:
   \   00000000                      DS8 260
    100          
    101          extern persistent_config_s configWorkingCopy;
    102          extern persistent_config_container_s persistentState;
    103          

   \                                 In section .bss, align 4
    104          static efitimems_t previousWriteReportMs = 0;
   \                     previousWriteReportMs:
   \   00000000                      DS8 4
    105          

   \                                 In section .bss, align 4
    106          ts_channel_s tsChannel;
   \                     tsChannel:
   \   00000000                      DS8 308
    107          
    108          extern uint8_t crcWriteBuffer[300];
    109          

   \                                 In section .text, align 2, keep-with-next
    110          static int ts_serial_ready(bool_t isConsoleRedirect) {
   \                     _Z15ts_serial_readyb:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    111          #if EFI_PROD_CODE
    112          	if (isSerialOverUart() ^ isConsoleRedirect) {
   \   00000004   0x.... 0x....      BL       _Z16isSerialOverUartv
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0xEA94 0x0F00      TEQ      R4,R0
   \   0000000E   0xD002             BEQ.N    ??ts_serial_ready_0
    113          		// TS uses USB when console uses serial
    114          		return is_usb_serial_ready();
   \   00000010   0x.... 0x....      BL       is_usb_serial_ready
   \   00000014   0xE000             B.N      ??ts_serial_ready_1
    115          	} else {
    116          		// TS uses serial when console uses USB
    117          		return true;
   \                     ??ts_serial_ready_0:
   \   00000016   0x2001             MOVS     R0,#+1
   \                     ??ts_serial_ready_1:
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    118          	}
    119          #else
    120          	return true;
    121          #endif
    122          }
    123          

   \                                 In section .data, align 2
    124          static uint16_t BINARY_RESPONSE = (uint16_t) SWAP_UINT16(BINARY_SWITCH_TAG);
   \                     BINARY_RESPONSE:
   \   00000000   0x0A7E             DC16 2686
    125          
    126          // this thread wants a bit extra stack

   \                                 In section .bss, align 8
    127          static THD_WORKING_AREA(tsThreadStack, 3 * UTILITY_THREAD_STACK_SIZE);
   \                     tsThreadStack:
   \   00000000                      DS8 1512
    128          
    129          extern TunerStudioOutputChannels tsOutputChannels;
    130          
    131          extern tunerstudio_counters_s tsState;
    132          

   \                                 In section .text, align 2, keep-with-next
    133          static void resetTs(void) {
   \                     _Z7resetTsv:
   \   00000000   0xB580             PUSH     {R7,LR}
    134          	memset(&tsState, 0, sizeof(tsState));
   \   00000002   0x2228             MOVS     R2,#+40
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   0000000A   0x.... 0x....      BL       memset
    135          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
    136          

   \                                 In section .text, align 2, keep-with-next
    137          static void printErrorCounters(void) {
   \                     _Z18printErrorCountersv:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    138          	scheduleMsg(&tsLogger, "TunerStudio size=%d / total=%d / errors=%d / H=%d / O=%d / P=%d / B=%d",
    139          			sizeof(tsOutputChannels), tsState.tsCounter, tsState.errorCounter, tsState.queryCommandCounter,
    140          			tsState.outputChannelsCommandCounter, tsState.readPageCommandsCounter, tsState.burnCommandCounter);
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   00000008   0x68C0             LDR      R0,[R0, #+12]
   \   0000000A   0x9004             STR      R0,[SP, #+16]
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   00000010   0x6880             LDR      R0,[R0, #+8]
   \   00000012   0x9003             STR      R0,[SP, #+12]
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   00000018   0x6840             LDR      R0,[R0, #+4]
   \   0000001A   0x9002             STR      R0,[SP, #+8]
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x9001             STR      R0,[SP, #+4]
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   00000028   0x6A00             LDR      R0,[R0, #+32]
   \   0000002A   0x9000             STR      R0,[SP, #+0]
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   00000030   0x6A43             LDR      R3,[R0, #+36]
   \   00000032   0x22C4             MOVS     R2,#+196
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable22_2
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000003C   0x.... 0x....      BL       scheduleMsg
    141          	scheduleMsg(&tsLogger, "TunerStudio W=%d / C=%d / P=%d / page=%d", tsState.writeValueCommandCounter,
    142          			tsState.writeChunkCommandCounter, tsState.pageCommandCounter, currentPageId);
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable22_3
   \   00000044   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000048   0x9001             STR      R0,[SP, #+4]
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   0000004E   0x6900             LDR      R0,[R0, #+16]
   \   00000050   0x9000             STR      R0,[SP, #+0]
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   00000056   0x69C3             LDR      R3,[R0, #+28]
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   0000005C   0x6942             LDR      R2,[R0, #+20]
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable22_4
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable23
   \   00000066   0x.... 0x....      BL       scheduleMsg
    143          //	scheduleMsg(&tsLogger, "page size=%d", getTunerStudioPageSize(currentPageId));
    144          }
   \   0000006A   0xB005             ADD      SP,SP,#+20
   \   0000006C   0xBD00             POP      {PC}             ;; return
    145          

   \                                 In section .text, align 2, keep-with-next
    146          void printTsStats(void) {
   \                     _Z12printTsStatsv:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
    147          #if EFI_PROD_CODE
    148          	if (!isSerialOverUart()) {
   \   00000004   0x.... 0x....      BL       _Z16isSerialOverUartv
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD119             BNE.N    ??printTsStats_0
    149          		scheduleMsg(&tsLogger, "TS RX on %s%d/TX on %s%d @%d", portname(TS_SERIAL_RX_PORT), TS_SERIAL_RX_PIN,
    150          				portname(TS_SERIAL_TX_PORT), TS_SERIAL_TX_PIN, boardConfiguration->tunerStudioSerialSpeed);
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable22_5  ;; 0x40020800
   \   00000010   0x.... 0x....      BL       _Z8portnameP12GPIO_TypeDef
   \   00000014   0x0004             MOVS     R4,R0
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable22_5  ;; 0x40020800
   \   0000001A   0x.... 0x....      BL       _Z8portnameP12GPIO_TypeDef
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable22_6
   \   00000022   0x6809             LDR      R1,[R1, #+0]
   \   00000024   0xF8D1 0x114C      LDR      R1,[R1, #+332]
   \   00000028   0x9102             STR      R1,[SP, #+8]
   \   0000002A   0x210A             MOVS     R1,#+10
   \   0000002C   0x9101             STR      R1,[SP, #+4]
   \   0000002E   0x9400             STR      R4,[SP, #+0]
   \   00000030   0x230B             MOVS     R3,#+11
   \   00000032   0x0002             MOVS     R2,R0
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable22_7
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000003C   0x.... 0x....      BL       scheduleMsg
    151          	}
    152          #endif /* EFI_PROD_CODE */
    153          
    154          	printErrorCounters();
   \                     ??printTsStats_0:
   \   00000040   0x.... 0x....      BL       _Z18printErrorCountersv
    155          
    156          //	scheduleMsg(logger, "analogChartFrequency %d",
    157          //			(int) (&engineConfiguration->analogChartFrequency) - (int) engineConfiguration);
    158          //
    159          //	int fuelMapOffset = (int) (&engineConfiguration->fuelTable) - (int) engineConfiguration;
    160          //	scheduleMsg(logger, "fuelTable %d", fuelMapOffset);
    161          //
    162          //	int offset = (int) (&boardConfiguration->hip9011Gain) - (int) engineConfiguration;
    163          //	scheduleMsg(&tsLogger, "hip9011Gain %d", offset);
    164          //
    165          //	offset = (int) (&engineConfiguration->crankingCycleBins) - (int) engineConfiguration;
    166          //	scheduleMsg(&tsLogger, "crankingCycleBins %d", offset);
    167          //
    168          //	offset = (int) (&engineConfiguration->engineCycle) - (int) engineConfiguration;
    169          //	scheduleMsg(&tsLogger, "engineCycle %d", offset);
    170          }
   \   00000044   0xBD1F             POP      {R0-R4,PC}       ;; return
    171          

   \                                 In section .text, align 2, keep-with-next
    172          static void setTsSpeed(int value) {
   \                     _Z10setTsSpeedi:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    173          	boardConfiguration->tunerStudioSerialSpeed = value;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable22_6
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF8C0 0x414C      STR      R4,[R0, #+332]
    174          	printTsStats();
   \   0000000E   0x.... 0x....      BL       _Z12printTsStatsv
    175          }
   \   00000012   0xBD10             POP      {R4,PC}          ;; return
    176          

   \                                 In section .text, align 2, keep-with-next
    177          void tunerStudioDebug(const char *msg) {
   \                     _Z16tunerStudioDebugPKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    178          #if EFI_TUNER_STUDIO_VERBOSE
    179          	scheduleMsg(&tsLogger, "%s", msg);
   \   00000004   0x0022             MOVS     R2,R4
   \   00000006   0x....             ADR.N    R1,??DataTable10  ;; 0x25, 0x73, 0x00, 0x00
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000000C   0x.... 0x....      BL       scheduleMsg
    180          #endif
    181          }
   \   00000010   0xBD10             POP      {R4,PC}          ;; return
    182          

   \                                 In section .text, align 2, keep-with-next
    183          char *getWorkingPageAddr(int pageIndex) {
   \                     _Z18getWorkingPageAddri:
   \   00000000   0x0001             MOVS     R1,R0
    184          	switch (pageIndex) {
   \   00000002   0x2900             CMP      R1,#+0
   \   00000004   0xD102             BNE.N    ??getWorkingPageAddr_0
    185          	case 0:
    186          		return (char*) &configWorkingCopy.engineConfiguration;
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   0000000A   0xE000             B.N      ??getWorkingPageAddr_1
    187          //	case 1:
    188          //		return (char*) &configWorkingCopy.ve2Table;
    189          //	case 2:
    190          //		return (char*) &configWorkingCopy.fuelTable;
    191          //	case 3:
    192          //		return (char*) &configWorkingCopy.ignitionTable;
    193          //	case 4:
    194          //		return (char*) &configWorkingCopy.veTable;
    195          //	case 5:
    196          //		return (char*) &configWorkingCopy.afrTable;
    197          //	case 6:
    198          //		return (char*) &configWorkingCopy.injectionPhase;
    199          //	case 2: // fuelTable
    200          //	case 3: // ignitionTable
    201          //	case 4: // veTable
    202          //	case 5: // afrTable
    203          //		return (char*) &configWorkingCopy.engineConfiguration + PAGE_0_SIZE + (pageIndex - 2) * 1024;
    204          	}
    205          	return NULL;
   \                     ??getWorkingPageAddr_0:
   \   0000000C   0x2000             MOVS     R0,#+0
   \                     ??getWorkingPageAddr_1:
   \   0000000E   0x4770             BX       LR               ;; return
    206          }
    207          

   \                                 In section .text, align 2, keep-with-next
    208          int getTunerStudioPageSize(int pageIndex) {
   \                     _Z22getTunerStudioPageSizei:
   \   00000000   0x0001             MOVS     R1,R0
    209          	switch (pageIndex) {
   \   00000002   0x2900             CMP      R1,#+0
   \   00000004   0xD102             BNE.N    ??getTunerStudioPageSize_0
    210          	case 0:
    211          		return TOTAL_CONFIG_SIZE;
   \   00000006   0xF643 0x30B8      MOVW     R0,#+15288
   \   0000000A   0xE000             B.N      ??getTunerStudioPageSize_1
    212          //	case 1:
    213          //	case 2:
    214          //	case 3:
    215          //	case 4:
    216          //	case 5:
    217          //	case 6:
    218          //		return PAGE_1_SIZE;
    219          //	case 2:
    220          //	case 3:
    221          //	case 4:
    222          //		return 1024;
    223          	}
    224          	return 0;
   \                     ??getTunerStudioPageSize_0:
   \   0000000C   0x2000             MOVS     R0,#+0
   \                     ??getTunerStudioPageSize_1:
   \   0000000E   0x4770             BX       LR               ;; return
    225          }
    226          

   \                                 In section .text, align 2, keep-with-next
    227          void handlePageSelectCommand(ts_channel_s *tsChannel, ts_response_format_e mode, uint16_t pageId) {
   \                     _Z23handlePageSelectCommandP12ts_channel_s20ts_response_format_et:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    228          	tsState.pageCommandCounter++;
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   0000000C   0x6900             LDR      R0,[R0, #+16]
   \   0000000E   0x1C40             ADDS     R0,R0,#+1
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable22_1
   \   00000014   0x6108             STR      R0,[R1, #+16]
    229          
    230          	currentPageId = pageId;
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable22_3
   \   0000001A   0x8006             STRH     R6,[R0, #+0]
    231          	scheduleMsg(&tsLogger, "PAGE %d", currentPageId);
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable22_3
   \   00000020   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable23_2
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000002C   0x.... 0x....      BL       scheduleMsg
    232          	tsSendResponse(tsChannel, mode, NULL, 0);
   \   00000030   0x2300             MOVS     R3,#+0
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0x0029             MOVS     R1,R5
   \   00000036   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000038   0x0020             MOVS     R0,R4
   \   0000003A   0x.... 0x....      BL       _Z14tsSendResponseP12ts_channel_s20ts_response_format_ePKhi
    233          }
   \   0000003E   0xBD70             POP      {R4-R6,PC}       ;; return
    234          

   \                                 In section .text, align 2, keep-with-next
    235          void yellowMagic(int currentPageId, int offset, int count) {
   \                     _Z11yellowMagiciii:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    236          	if (offset > 6200) {
   \   00000008   0xF641 0x0039      MOVW     R0,#+6201
   \   0000000C   0x4285             CMP      R5,R0
   \   0000000E   0xDB11             BLT.N    ??yellowMagic_0
    237          		scheduleMsg(&tsLogger, "applying soft change from %d length %d", offset, count);
   \   00000010   0x0033             MOVS     R3,R6
   \   00000012   0x002A             MOVS     R2,R5
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable23_3
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000001C   0x.... 0x....      BL       scheduleMsg
    238          		memcpy(((char*) engineConfiguration) + offset, ((char*) &configWorkingCopy.engineConfiguration) + offset,
    239          				count);
   \   00000020   0x0032             MOVS     R2,R6
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   00000026   0x1829             ADDS     R1,R5,R0
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable24_1
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x1828             ADDS     R0,R5,R0
   \   00000030   0x.... 0x....      BL       memcpy
    240          	}
    241          }
   \                     ??yellowMagic_0:
   \   00000034   0xBD70             POP      {R4-R6,PC}       ;; return
    242          
    243          /**
    244           * This command is needed to make the whole transfer a bit faster
    245           * @note See also handleWriteValueCommand
    246           */

   \                                 In section .text, align 2, keep-with-next
    247          void handleWriteChunkCommand(ts_channel_s *tsChannel, ts_response_format_e mode, short offset, short count,
    248          		void *content) {
   \                     _Z23handleWriteChunkCommandP12ts_channel_s20ts_response_format_essPv:
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0x0016             MOVS     R6,R2
   \   0000000C   0x001F             MOVS     R7,R3
   \   0000000E   0xF8DD 0x8028      LDR      R8,[SP, #+40]
    249          	tsState.writeChunkCommandCounter++;
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable24_2
   \   00000016   0x69C0             LDR      R0,[R0, #+28]
   \   00000018   0x1C40             ADDS     R0,R0,#+1
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable24_2
   \   0000001E   0x61C8             STR      R0,[R1, #+28]
    250          
    251          	scheduleMsg(&tsLogger, "WRITE CHUNK mode=%d p=%d o=%d s=%d", mode, currentPageId, offset, count);
   \   00000020   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000022   0x9701             STR      R7,[SP, #+4]
   \   00000024   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000026   0x9600             STR      R6,[SP, #+0]
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   0000002C   0xF9B0 0x3000      LDRSH    R3,[R0, #+0]
   \   00000030   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000032   0x002A             MOVS     R2,R5
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable23_4
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000003C   0x.... 0x....      BL       scheduleMsg
    252          
    253          	if (offset > getTunerStudioPageSize(currentPageId)) {
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   00000044   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000048   0x.... 0x....      BL       _Z22getTunerStudioPageSizei
   \   0000004C   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   0000004E   0x42B0             CMP      R0,R6
   \   00000050   0xDA0D             BGE.N    ??handleWriteChunkCommand_0
    254          		scheduleMsg(&tsLogger, "ERROR invalid offset %d", offset);
   \   00000052   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000054   0x0032             MOVS     R2,R6
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable24_4
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000005E   0x.... 0x....      BL       scheduleMsg
    255          		tunerStudioError("ERROR: out of range");
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable24_5
   \   00000066   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    256          		offset = 0;
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x0006             MOVS     R6,R0
    257          	}
    258          
    259          	if (count > getTunerStudioPageSize(currentPageId)) {
   \                     ??handleWriteChunkCommand_0:
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   00000072   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000076   0x.... 0x....      BL       _Z22getTunerStudioPageSizei
   \   0000007A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000007C   0x42B8             CMP      R0,R7
   \   0000007E   0xDA0D             BGE.N    ??handleWriteChunkCommand_1
    260          		tunerStudioError("ERROR: unexpected count");
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable24_6
   \   00000084   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    261          		scheduleMsg(&tsLogger, "ERROR unexpected count %d", count);
   \   00000088   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000008A   0x003A             MOVS     R2,R7
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable24_7
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable23
   \   00000094   0x.... 0x....      BL       scheduleMsg
    262          		count = 0;
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x0007             MOVS     R7,R0
    263          	}
    264          
    265          	uint8_t * addr = (uint8_t *) (getWorkingPageAddr(currentPageId) + offset);
   \                     ??handleWriteChunkCommand_1:
   \   0000009C   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   000000A2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000A6   0x.... 0x....      BL       _Z18getWorkingPageAddri
   \   000000AA   0xEB16 0x0900      ADDS     R9,R6,R0
    266          	memcpy(addr, content, count);
   \   000000AE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000000B0   0x003A             MOVS     R2,R7
   \   000000B2   0x4641             MOV      R1,R8
   \   000000B4   0x4648             MOV      R0,R9
   \   000000B6   0x.... 0x....      BL       memcpy
    267          	yellowMagic(currentPageId, offset, count);
   \   000000BA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000000BC   0x003A             MOVS     R2,R7
   \   000000BE   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   000000C0   0x0031             MOVS     R1,R6
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   000000C6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000CA   0x.... 0x....      BL       _Z11yellowMagiciii
    268          
    269          	tsSendResponse(tsChannel, mode, NULL, 0);
   \   000000CE   0x2300             MOVS     R3,#+0
   \   000000D0   0x2200             MOVS     R2,#+0
   \   000000D2   0x0029             MOVS     R1,R5
   \   000000D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D6   0x0020             MOVS     R0,R4
   \   000000D8   0x.... 0x....      BL       _Z14tsSendResponseP12ts_channel_s20ts_response_format_ePKhi
    270          }
   \   000000DC   0xE8BD 0x83F7      POP      {R0-R2,R4-R9,PC}  ;; return
    271          

   \                                 In section .text, align 2, keep-with-next
    272          void handleCrc32Check(ts_channel_s *tsChannel, ts_response_format_e mode, uint16_t pageId, uint16_t offset,
    273          		uint16_t count) {
   \                     _Z16handleCrc32CheckP12ts_channel_s20ts_response_format_ettt:
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
   \   0000000C   0x9C0A             LDR      R4,[SP, #+40]
    274          	tsState.crc32CheckCommandCounter++;
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   00000012   0x6980             LDR      R0,[R0, #+24]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable22_1
   \   0000001A   0x6188             STR      R0,[R1, #+24]
    275          
    276          	count = SWAP_UINT16(count);
   \   0000001C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000001E   0x0A20             LSRS     R0,R4,#+8
   \   00000020   0xEA50 0x2404      ORRS     R4,R0,R4, LSL #+8
    277          
    278          	count = getTunerStudioPageSize(pageId);
   \   00000024   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000026   0x0038             MOVS     R0,R7
   \   00000028   0x.... 0x....      BL       _Z22getTunerStudioPageSizei
   \   0000002C   0x0004             MOVS     R4,R0
    279          
    280          	scheduleMsg(&tsLogger, "CRC32 request: pageId %d offset %d size %d", pageId, offset, count);
   \   0000002E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000030   0x9400             STR      R4,[SP, #+0]
   \   00000032   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   00000036   0x4643             MOV      R3,R8
   \   00000038   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000003A   0x003A             MOVS     R2,R7
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable24_8
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable23
   \   00000044   0x.... 0x....      BL       scheduleMsg
    281          
    282          	uint32_t crc = SWAP_UINT32(crc32((void * ) getWorkingPageAddr(0), count));
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x.... 0x....      BL       _Z18getWorkingPageAddri
   \   0000004E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000050   0x0021             MOVS     R1,R4
   \   00000052   0x.... 0x....      BL       crc32
   \   00000056   0x4681             MOV      R9,R0
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      BL       _Z18getWorkingPageAddri
   \   0000005E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000060   0x0021             MOVS     R1,R4
   \   00000062   0x.... 0x....      BL       crc32
   \   00000066   0x4682             MOV      R10,R0
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x.... 0x....      BL       _Z18getWorkingPageAddri
   \   0000006E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000070   0x0021             MOVS     R1,R4
   \   00000072   0x.... 0x....      BL       crc32
   \   00000076   0x4683             MOV      R11,R0
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x.... 0x....      BL       _Z18getWorkingPageAddri
   \   0000007E   0xEA5F 0x210A      LSLS     R1,R10,#+8
   \   00000082   0xF411 0x017F      ANDS     R1,R1,#0xFF0000
   \   00000086   0xEA51 0x6119      ORRS     R1,R1,R9, LSR #+24
   \   0000008A   0xEA5F 0x221B      LSRS     R2,R11,#+8
   \   0000008E   0xF412 0x427F      ANDS     R2,R2,#0xFF00
   \   00000092   0xEA52 0x0901      ORRS     R9,R2,R1
   \   00000096   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000098   0x0021             MOVS     R1,R4
   \   0000009A   0x.... 0x....      BL       crc32
   \   0000009E   0xEA59 0x6000      ORRS     R0,R9,R0, LSL #+24
   \   000000A2   0x9000             STR      R0,[SP, #+0]
    283          
    284          	scheduleMsg(&tsLogger, "CRC32 response: %x", crc);
   \   000000A4   0x9A00             LDR      R2,[SP, #+0]
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable24_9
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable23
   \   000000AE   0x.... 0x....      BL       scheduleMsg
    285          
    286          	tsSendResponse(tsChannel, mode, (const uint8_t *) &crc, 4);
   \   000000B2   0x2304             MOVS     R3,#+4
   \   000000B4   0xAA00             ADD      R2,SP,#+0
   \   000000B6   0x0031             MOVS     R1,R6
   \   000000B8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000BA   0x0028             MOVS     R0,R5
   \   000000BC   0x.... 0x....      BL       _Z14tsSendResponseP12ts_channel_s20ts_response_format_ePKhi
    287          }
   \   000000C0   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    288          
    289          /**
    290           * 'Write' command receives a single value at a given offset
    291           * @note Writing values one by one is pretty slow
    292           */

   \                                 In section .text, align 2, keep-with-next
    293          void handleWriteValueCommand(ts_channel_s *tsChannel, ts_response_format_e mode, uint16_t page, uint16_t offset,
    294          		uint8_t value) {
   \                     _Z23handleWriteValueCommandP12ts_channel_s20ts_response_format_etth:
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
   \   0000000C   0x9C08             LDR      R4,[SP, #+32]
    295          	tsState.writeValueCommandCounter++;
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable24_2
   \   00000012   0x6940             LDR      R0,[R0, #+20]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable24_2
   \   0000001A   0x6148             STR      R0,[R1, #+20]
    296          
    297          	currentPageId = page;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   00000020   0x8007             STRH     R7,[R0, #+0]
    298          
    299          	tunerStudioDebug("got W (Write)"); // we can get a lot of these
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable24_10
   \   00000026   0x.... 0x....      BL       _Z16tunerStudioDebugPKc
    300          
    301          #if EFI_TUNER_STUDIO_VERBOSE
    302          //	scheduleMsg(logger, "Page number %d\r\n", pageId); // we can get a lot of these
    303          #endif
    304          
    305          //	int size = sizeof(TunerStudioWriteValueRequest);
    306          //	scheduleMsg(logger, "Reading %d\r\n", size);
    307          
    308          	if (offset > getTunerStudioPageSize(currentPageId)) {
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   0000002E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000032   0x.... 0x....      BL       _Z22getTunerStudioPageSizei
   \   00000036   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   0000003A   0x4540             CMP      R0,R8
   \   0000003C   0xDA0F             BGE.N    ??handleWriteValueCommand_0
    309          		tunerStudioError("ERROR: out of range2");
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable24_11
   \   00000042   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    310          		scheduleMsg(&tsLogger, "ERROR offset %d", offset);
   \   00000046   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   0000004A   0x4642             MOV      R2,R8
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable24_12
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable23
   \   00000054   0x.... 0x....      BL       scheduleMsg
    311          		offset = 0;
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x4680             MOV      R8,R0
    312          		return;
   \   0000005C   0xE030             B.N      ??handleWriteValueCommand_1
    313          	}
    314          
    315          	efitimems_t nowMs = currentTimeMillis();
   \                     ??handleWriteValueCommand_0:
   \   0000005E   0x.... 0x....      BL       currentTimeMillis
   \   00000062   0x4681             MOV      R9,R0
    316          	if (nowMs - previousWriteReportMs > 5) {
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable24_13
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0xEBB9 0x0000      SUBS     R0,R9,R0
   \   0000006E   0x2806             CMP      R0,#+6
   \   00000070   0xD312             BCC.N    ??handleWriteValueCommand_2
    317          		previousWriteReportMs = nowMs;
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable24_13
   \   00000076   0xF8C0 0x9000      STR      R9,[R0, #+0]
    318          		scheduleMsg(&tsLogger, "page %d offset %d: value=%d", currentPageId, offset, value);
   \   0000007A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007C   0x9400             STR      R4,[SP, #+0]
   \   0000007E   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   00000082   0x4643             MOV      R3,R8
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   00000088   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable24_14
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable23
   \   00000094   0x.... 0x....      BL       scheduleMsg
    319          	}
    320          
    321          	getWorkingPageAddr(currentPageId)[offset] = value;
   \                     ??handleWriteValueCommand_2:
   \   00000098   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   000000A0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000A4   0x.... 0x....      BL       _Z18getWorkingPageAddri
   \   000000A8   0xF808 0x4000      STRB     R4,[R8, R0]
    322          
    323          	yellowMagic(currentPageId, offset, 1);
   \   000000AC   0x2201             MOVS     R2,#+1
   \   000000AE   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000B2   0x4641             MOV      R1,R8
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   000000B8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000BC   0x.... 0x....      BL       _Z11yellowMagiciii
    324          
    325          //	scheduleMsg(logger, "va=%d", configWorkingCopy.boardConfiguration.idleValvePin);
    326          }
   \                     ??handleWriteValueCommand_1:
   \   000000C0   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    327          

   \                                 In section .text, align 2, keep-with-next
    328          static void sendErrorCode(ts_channel_s *tsChannel) {
   \                     _Z13sendErrorCodeP12ts_channel_s:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    329          	tunerStudioWriteCrcPacket(tsChannel, TS_RESPONSE_CRC_FAILURE, NULL, 0);
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x2182             MOVS     R1,#+130
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x.... 0x....      BL       _Z25tunerStudioWriteCrcPacketP12ts_channel_shPKvt
    330          }
   \   00000010   0xBD10             POP      {R4,PC}          ;; return
    331          

   \                                 In section .text, align 2, keep-with-next
    332          void handlePageReadCommand(ts_channel_s *tsChannel, ts_response_format_e mode, uint16_t pageId, uint16_t offset,
    333          		uint16_t count) {
   \                     _Z21handlePageReadCommandP12ts_channel_s20ts_response_format_ettt:
   \   00000000   0xE92D 0x47FC      PUSH     {R2-R10,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
   \   0000000C   0x9C0A             LDR      R4,[SP, #+40]
    334          	tsState.readPageCommandsCounter++;
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable24_2
   \   00000012   0x6880             LDR      R0,[R0, #+8]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable24_2
   \   0000001A   0x6088             STR      R0,[R1, #+8]
    335          	currentPageId = pageId;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   00000020   0x8007             STRH     R7,[R0, #+0]
    336          
    337          #if EFI_TUNER_STUDIO_VERBOSE
    338          	scheduleMsg(&tsLogger, "READ mode=%d page=%d offset=%d size=%d", mode, (int) currentPageId, offset, count);
   \   00000022   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000024   0x9401             STR      R4,[SP, #+4]
   \   00000026   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   0000002A   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   00000032   0xF9B0 0x3000      LDRSH    R3,[R0, #+0]
   \   00000036   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000038   0x0032             MOVS     R2,R6
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable24_15
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable23
   \   00000042   0x.... 0x....      BL       scheduleMsg
    339          #endif
    340          
    341          	if (currentPageId >= PAGE_COUNT) {
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   0000004A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000004E   0x2801             CMP      R0,#+1
   \   00000050   0xDB08             BLT.N    ??handlePageReadCommand_0
    342          		// something is not right here
    343          		currentPageId = 0;
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x8001             STRH     R1,[R0, #+0]
    344          		tunerStudioError("ERROR: invalid page number");
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable24_16
   \   0000005E   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    345          		return;
   \   00000062   0xE02C             B.N      ??handlePageReadCommand_1
    346          	}
    347          
    348          	int size = getTunerStudioPageSize(currentPageId);
   \                     ??handlePageReadCommand_0:
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   00000068   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000006C   0x.... 0x....      BL       _Z22getTunerStudioPageSizei
   \   00000070   0x4681             MOV      R9,R0
    349          
    350          	if (size < offset + count) {
   \   00000072   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000074   0xFA14 0xF088      UXTAH    R0,R4,R8
   \   00000078   0x4581             CMP      R9,R0
   \   0000007A   0xDA0E             BGE.N    ??handlePageReadCommand_2
    351          		scheduleMsg(&tsLogger, "invalid offset/count %d/%d", offset, count);
   \   0000007C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000007E   0x0023             MOVS     R3,R4
   \   00000080   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   00000084   0x4642             MOV      R2,R8
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable24_17
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000008E   0x.... 0x....      BL       scheduleMsg
    352          		sendErrorCode(tsChannel);
   \   00000092   0x0028             MOVS     R0,R5
   \   00000094   0x.... 0x....      BL       _Z13sendErrorCodeP12ts_channel_s
    353          		return;
   \   00000098   0xE011             B.N      ??handlePageReadCommand_1
    354          	}
    355          
    356          	const uint8_t *addr = (const uint8_t *) (getWorkingPageAddr(currentPageId) + offset);
   \                     ??handlePageReadCommand_2:
   \   0000009A   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   000000A2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000A6   0x.... 0x....      BL       _Z18getWorkingPageAddri
   \   000000AA   0xEB18 0x0A00      ADDS     R10,R8,R0
    357          	tsSendResponse(tsChannel, mode, addr, count);
   \   000000AE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000B0   0x0023             MOVS     R3,R4
   \   000000B2   0x4652             MOV      R2,R10
   \   000000B4   0x0031             MOVS     R1,R6
   \   000000B6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B8   0x0028             MOVS     R0,R5
   \   000000BA   0x.... 0x....      BL       _Z14tsSendResponseP12ts_channel_s20ts_response_format_ePKhi
    358          #if EFI_TUNER_STUDIO_VERBOSE
    359          //	scheduleMsg(&tsLogger, "Sending %d done", count);
    360          #endif
    361          }
   \                     ??handlePageReadCommand_1:
   \   000000BE   0xE8BD 0x87F3      POP      {R0,R1,R4-R10,PC}  ;; return
    362          

   \                                 In section .text, align 2, keep-with-next
    363          void requestBurn(void) {
   \                     _Z11requestBurnv:
   \   00000000   0xB580             PUSH     {R7,LR}
    364          #if EFI_INTERNAL_FLASH
    365          	setNeedToWriteConfiguration();
   \   00000002   0x.... 0x....      BL       _Z27setNeedToWriteConfigurationv
    366          #endif
    367          	incrementGlobalConfigurationVersion();
   \   00000006   0x.... 0x....      BL       _Z35incrementGlobalConfigurationVersionv
    368          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    369          

   \                                 In section .text, align 2, keep-with-next
    370          static void sendResponseCode(ts_response_format_e mode, ts_channel_s *tsChannel, const uint8_t responseCode) {
   \                     _Z16sendResponseCode20ts_response_format_eP12ts_channel_sh:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    371          	if (mode == TS_CRC) {
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x2C01             CMP      R4,#+1
   \   0000000C   0xD106             BNE.N    ??sendResponseCode_0
    372          		tunerStudioWriteCrcPacket(tsChannel, responseCode, NULL, 0);
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x0031             MOVS     R1,R6
   \   00000014   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000016   0x0028             MOVS     R0,R5
   \   00000018   0x.... 0x....      BL       _Z25tunerStudioWriteCrcPacketP12ts_channel_shPKvt
    373          	}
    374          }
   \                     ??sendResponseCode_0:
   \   0000001C   0xBD70             POP      {R4-R6,PC}       ;; return
    375          
    376          /**
    377           * 'Burn' command is a command to commit the changes
    378           */

   \                                 In section .text, align 2, keep-with-next
    379          void handleBurnCommand(ts_channel_s *tsChannel, ts_response_format_e mode, uint16_t page) {
   \                     _Z17handleBurnCommandP12ts_channel_s20ts_response_format_et:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    380          	efitimems_t nowMs = currentTimeMillis();
   \   00000008   0x.... 0x....      BL       currentTimeMillis
   \   0000000C   0x0007             MOVS     R7,R0
    381          	tsState.burnCommandCounter++;
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable22_1
   \   00000012   0x68C0             LDR      R0,[R0, #+12]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable22_1
   \   0000001A   0x60C8             STR      R0,[R1, #+12]
    382          
    383          	scheduleMsg(&tsLogger, "got B (Burn) %s", mode == TS_PLAIN ? "plain" : "CRC");
   \   0000001C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001E   0x2D00             CMP      R5,#+0
   \   00000020   0xD102             BNE.N    ??handleBurnCommand_0
   \   00000022   0x.... 0x....      LDR.W    R2,??DataTable24_18
   \   00000026   0xE000             B.N      ??handleBurnCommand_1
   \                     ??handleBurnCommand_0:
   \   00000028   0x....             ADR.N    R2,??DataTable14  ;; "CRC"
   \                     ??handleBurnCommand_1:
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable24_19
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable23
   \   00000032   0x.... 0x....      BL       scheduleMsg
    384          
    385          	currentPageId = page;
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable22_3
   \   0000003A   0x8006             STRH     R6,[R0, #+0]
    386          
    387          #if EFI_TUNER_STUDIO_VERBOSE
    388          	// pointless since we only have one page now
    389          //	scheduleMsg(logger, "Page number %d", currentPageId);
    390          #endif
    391          
    392          // todo: how about some multi-threading?
    393          	memcpy(&persistentState.persistentConfiguration, &configWorkingCopy, sizeof(persistent_config_s));
   \   0000003C   0xF643 0x32B8      MOVW     R2,#+15288
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable23_1
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable24_20
   \   00000048   0x.... 0x....      BL       memcpy
    394          
    395          	requestBurn();
   \   0000004C   0x.... 0x....      BL       _Z11requestBurnv
    396          	sendResponseCode(mode, tsChannel, TS_RESPONSE_BURN_OK);
   \   00000050   0x2204             MOVS     R2,#+4
   \   00000052   0x0021             MOVS     R1,R4
   \   00000054   0x0028             MOVS     R0,R5
   \   00000056   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000058   0x.... 0x....      BL       _Z16sendResponseCode20ts_response_format_eP12ts_channel_sh
    397          	scheduleMsg(&tsLogger, "BURN in %dms", currentTimeMillis() - nowMs);
   \   0000005C   0x.... 0x....      BL       currentTimeMillis
   \   00000060   0x1BC2             SUBS     R2,R0,R7
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable24_21
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000006A   0x.... 0x....      BL       scheduleMsg
    398          }
   \   0000006E   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    399          

   \                                 In section .bss, align 4
    400          static TunerStudioReadRequest readRequest;
   \                     readRequest:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
    401          static TunerStudioWriteChunkRequest writeChunkRequest;
   \                     writeChunkRequest:
   \   00000000                      DS8 8

   \                                 In section .bss, align 2
    402          static short int pageIn;
   \                     pageIn:
   \   00000000                      DS8 2
    403          

   \                                 In section .text, align 2, keep-with-next
    404          static bool isKnownCommand(char command) {
    405          	return command == TS_HELLO_COMMAND || command == TS_READ_COMMAND || command == TS_OUTPUT_COMMAND
    406          			|| command == TS_PAGE_COMMAND || command == TS_BURN_COMMAND || command == TS_SINGLE_WRITE_COMMAND
    407          			|| command == TS_LEGACY_HELLO_COMMAND || command == TS_CHUNK_WRITE_COMMAND || command == TS_EXECUTE
    408          			|| command == TS_GET_TEXT || command == TS_CRC_CHECK_COMMAND;
   \                     _Z14isKnownCommandc:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2853             CMP      R0,#+83
   \   00000004   0xD01D             BEQ.N    ??isKnownCommand_0
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x2852             CMP      R0,#+82
   \   0000000A   0xD01A             BEQ.N    ??isKnownCommand_0
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x284F             CMP      R0,#+79
   \   00000010   0xD017             BEQ.N    ??isKnownCommand_0
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x2850             CMP      R0,#+80
   \   00000016   0xD014             BEQ.N    ??isKnownCommand_0
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x2842             CMP      R0,#+66
   \   0000001C   0xD011             BEQ.N    ??isKnownCommand_0
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x2857             CMP      R0,#+87
   \   00000022   0xD00E             BEQ.N    ??isKnownCommand_0
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x2851             CMP      R0,#+81
   \   00000028   0xD00B             BEQ.N    ??isKnownCommand_0
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x2843             CMP      R0,#+67
   \   0000002E   0xD008             BEQ.N    ??isKnownCommand_0
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x2845             CMP      R0,#+69
   \   00000034   0xD005             BEQ.N    ??isKnownCommand_0
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x2847             CMP      R0,#+71
   \   0000003A   0xD002             BEQ.N    ??isKnownCommand_0
   \   0000003C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003E   0x286B             CMP      R0,#+107
   \   00000040   0xD101             BNE.N    ??isKnownCommand_1
   \                     ??isKnownCommand_0:
   \   00000042   0x2001             MOVS     R0,#+1
   \   00000044   0xE000             B.N      ??isKnownCommand_2
   \                     ??isKnownCommand_1:
   \   00000046   0x2000             MOVS     R0,#+0
   \                     ??isKnownCommand_2:
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x4770             BX       LR               ;; return
    409          }
    410          

   \                                 In section .bss, align 1
    411          static uint8_t firstByte;
   \                     firstByte:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    412          static uint8_t secondByte;
   \                     secondByte:
   \   00000000                      DS8 1
    413          

   \                                 In section .text, align 2, keep-with-next
    414          void runBinaryProtocolLoop(ts_channel_s *tsChannel, bool_t isConsoleRedirect) {
   \                     _Z21runBinaryProtocolLoopP12ts_channel_sb:
   \   00000000   0xE92D 0x4FF2      PUSH     {R1,R4-R11,LR}
   \   00000004   0xB084             SUB      SP,SP,#+16
   \   00000006   0x0004             MOVS     R4,R0
    415          	int wasReady = false;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x9002             STR      R0,[SP, #+8]
    416          	while (true) {
    417          		int isReady = ts_serial_ready(isConsoleRedirect);
   \                     ??runBinaryProtocolLoop_0:
   \   0000000C   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   00000010   0x.... 0x....      BL       _Z15ts_serial_readyb
   \   00000014   0x0005             MOVS     R5,R0
    418          		if (!isReady) {
   \   00000016   0x2D00             CMP      R5,#+0
   \   00000018   0xD105             BNE.N    ??runBinaryProtocolLoop_1
    419          			chThdSleepMilliseconds(10);
   \   0000001A   0x200A             MOVS     R0,#+10
   \   0000001C   0x.... 0x....      BL       chThdSleep
    420          			wasReady = false;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x9002             STR      R0,[SP, #+8]
    421          			continue;
   \   00000024   0xE7F2             B.N      ??runBinaryProtocolLoop_0
    422          		}
    423          
    424          		if (!wasReady) {
   \                     ??runBinaryProtocolLoop_1:
   \   00000026   0x9802             LDR      R0,[SP, #+8]
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD101             BNE.N    ??runBinaryProtocolLoop_2
    425          			wasReady = true;
   \   0000002C   0x2001             MOVS     R0,#+1
   \   0000002E   0x9002             STR      R0,[SP, #+8]
    426          //			scheduleSimpleMsg(&logger, "ts channel is now ready ", hTimeNow());
    427          		}
    428          
    429          		tsState.tsCounter++;
   \                     ??runBinaryProtocolLoop_2:
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable24_2
   \   00000034   0x6A40             LDR      R0,[R0, #+36]
   \   00000036   0x1C40             ADDS     R0,R0,#+1
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable24_2
   \   0000003C   0x6248             STR      R0,[R1, #+36]
    430          
    431          		int recieved = chnReadTimeout(tsChannel->channel, &firstByte, 1, TS_READ_TIMEOUT);
   \   0000003E   0xF640 0x33B8      MOVW     R3,#+3000
   \   00000042   0x2201             MOVS     R2,#+1
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable24_22
   \   00000048   0x6820             LDR      R0,[R4, #+0]
   \   0000004A   0x6826             LDR      R6,[R4, #+0]
   \   0000004C   0x6836             LDR      R6,[R6, #+0]
   \   0000004E   0x69F6             LDR      R6,[R6, #+28]
   \   00000050   0x47B0             BLX      R6
   \   00000052   0x0006             MOVS     R6,R0
    432          		if (recieved != 1) {
   \   00000054   0x2E01             CMP      R6,#+1
   \   00000056   0xD1D9             BNE.N    ??runBinaryProtocolLoop_0
    433          //			tunerStudioError("ERROR: no command");
    434          			continue;
    435          		}
    436          //		scheduleMsg(logger, "Got first=%x=[%c]", firstByte, firstByte);
    437          		if (handlePlainCommand(tsChannel, firstByte))
   \                     ??runBinaryProtocolLoop_3:
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable24_22
   \   0000005C   0x7801             LDRB     R1,[R0, #+0]
   \   0000005E   0x0020             MOVS     R0,R4
   \   00000060   0x.... 0x....      BL       _Z18handlePlainCommandP12ts_channel_sh
   \   00000064   0x2800             CMP      R0,#+0
   \   00000066   0xD1D1             BNE.N    ??runBinaryProtocolLoop_0
    438          			continue;
    439          
    440          		recieved = chnReadTimeout(tsChannel->channel, &secondByte, 1, TS_READ_TIMEOUT);
   \                     ??runBinaryProtocolLoop_4:
   \   00000068   0xF640 0x33B8      MOVW     R3,#+3000
   \   0000006C   0x2201             MOVS     R2,#+1
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable24_23
   \   00000072   0x6820             LDR      R0,[R4, #+0]
   \   00000074   0x6827             LDR      R7,[R4, #+0]
   \   00000076   0x683F             LDR      R7,[R7, #+0]
   \   00000078   0x69FF             LDR      R7,[R7, #+28]
   \   0000007A   0x47B8             BLX      R7
   \   0000007C   0x0006             MOVS     R6,R0
    441          		if (recieved != 1) {
   \   0000007E   0x2E01             CMP      R6,#+1
   \   00000080   0xD004             BEQ.N    ??runBinaryProtocolLoop_5
    442          			tunerStudioError("ERROR: no second");
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable24_24
   \   00000086   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    443          			continue;
   \   0000008A   0xE7BF             B.N      ??runBinaryProtocolLoop_0
    444          		}
    445          //		scheduleMsg(logger, "Got secondByte=%x=[%c]", secondByte, secondByte);
    446          
    447          		uint32_t incomingPacketSize = firstByte * 256 + secondByte;
   \                     ??runBinaryProtocolLoop_5:
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable24_22
   \   00000090   0x7800             LDRB     R0,[R0, #+0]
   \   00000092   0xF44F 0x7180      MOV      R1,#+256
   \   00000096   0x.... 0x....      LDR.W    R2,??DataTable24_23
   \   0000009A   0x7812             LDRB     R2,[R2, #+0]
   \   0000009C   0xFB01 0x2700      MLA      R7,R1,R0,R2
    448          
    449          		if (incomingPacketSize == BINARY_SWITCH_TAG) {
   \   000000A0   0xF647 0x600A      MOVW     R0,#+32266
   \   000000A4   0x4287             CMP      R7,R0
   \   000000A6   0xD106             BNE.N    ??runBinaryProtocolLoop_6
    450          			// we are here if we get a binary switch request while already in binary mode. We will just ignore it.
    451          			tunerStudioWriteData(tsChannel, (const uint8_t *) &BINARY_RESPONSE, 2);
   \   000000A8   0x2202             MOVS     R2,#+2
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable24_25
   \   000000AE   0x0020             MOVS     R0,R4
   \   000000B0   0x.... 0x....      BL       _Z20tunerStudioWriteDataP12ts_channel_sPKhi
    452          			continue;
   \   000000B4   0xE7AA             B.N      ??runBinaryProtocolLoop_0
    453          		}
    454          
    455          		if (incomingPacketSize == 0 || incomingPacketSize > (sizeof(tsChannel->crcReadBuffer) - CRC_WRAPPING_SIZE)) {
   \                     ??runBinaryProtocolLoop_6:
   \   000000B6   0x2F00             CMP      R7,#+0
   \   000000B8   0xD002             BEQ.N    ??runBinaryProtocolLoop_7
   \   000000BA   0xF5B7 0x7F93      CMP      R7,#+294
   \   000000BE   0xD30E             BCC.N    ??runBinaryProtocolLoop_8
    456          			scheduleMsg(&tsLogger, "TunerStudio: invalid size: %d", incomingPacketSize);
   \                     ??runBinaryProtocolLoop_7:
   \   000000C0   0x003A             MOVS     R2,R7
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable24_26
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable23
   \   000000CA   0x.... 0x....      BL       scheduleMsg
    457          			tunerStudioError("ERROR: CRC header size");
   \   000000CE   0x.... 0x....      LDR.W    R0,??DataTable24_27
   \   000000D2   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    458          			sendErrorCode(tsChannel);
   \   000000D6   0x0020             MOVS     R0,R4
   \   000000D8   0x.... 0x....      BL       _Z13sendErrorCodeP12ts_channel_s
    459          			continue;
   \   000000DC   0xE796             B.N      ??runBinaryProtocolLoop_0
    460          		}
    461          
    462          		recieved = chnReadTimeout(tsChannel->channel, (uint8_t* )tsChannel->crcReadBuffer, 1, TS_READ_TIMEOUT);
   \                     ??runBinaryProtocolLoop_8:
   \   000000DE   0xF640 0x33B8      MOVW     R3,#+3000
   \   000000E2   0x2201             MOVS     R2,#+1
   \   000000E4   0xF114 0x0108      ADDS     R1,R4,#+8
   \   000000E8   0x6820             LDR      R0,[R4, #+0]
   \   000000EA   0xF8D4 0xC000      LDR      R12,[R4, #+0]
   \   000000EE   0xF8DC 0xC000      LDR      R12,[R12, #+0]
   \   000000F2   0xF8DC 0xC01C      LDR      R12,[R12, #+28]
   \   000000F6   0x47E0             BLX      R12
   \   000000F8   0x0006             MOVS     R6,R0
    463          		if (recieved != 1) {
   \   000000FA   0x2E01             CMP      R6,#+1
   \   000000FC   0xD004             BEQ.N    ??runBinaryProtocolLoop_9
    464          			tunerStudioError("ERROR: did not receive command");
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable24_28
   \   00000102   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    465          			continue;
   \   00000106   0xE781             B.N      ??runBinaryProtocolLoop_0
    466          		}
    467          
    468          		char command = tsChannel->crcReadBuffer[0];
   \                     ??runBinaryProtocolLoop_9:
   \   00000108   0xF894 0x8008      LDRB     R8,[R4, #+8]
    469          		if (!isKnownCommand(command)) {
   \   0000010C   0x4640             MOV      R0,R8
   \   0000010E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000110   0x.... 0x....      BL       _Z14isKnownCommandc
   \   00000114   0x2800             CMP      R0,#+0
   \   00000116   0xD10C             BNE.N    ??runBinaryProtocolLoop_10
    470          			scheduleMsg(&tsLogger, "unexpected command %x", command);
   \   00000118   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000011C   0x4642             MOV      R2,R8
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable24_29
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable23
   \   00000126   0x.... 0x....      BL       scheduleMsg
    471          			sendErrorCode(tsChannel);
   \   0000012A   0x0020             MOVS     R0,R4
   \   0000012C   0x.... 0x....      BL       _Z13sendErrorCodeP12ts_channel_s
    472          			continue;
   \   00000130   0xE76C             B.N      ??runBinaryProtocolLoop_0
    473          		}
    474          
    475          //		scheduleMsg(logger, "TunerStudio: reading %d+4 bytes(s)", incomingPacketSize);
    476          
    477          		recieved = chnReadTimeout(tsChannel->channel, (uint8_t * ) (tsChannel->crcReadBuffer + 1),
    478          				incomingPacketSize + CRC_VALUE_SIZE - 1, TS_READ_TIMEOUT);
   \                     ??runBinaryProtocolLoop_10:
   \   00000132   0xF640 0x33B8      MOVW     R3,#+3000
   \   00000136   0x1CFA             ADDS     R2,R7,#+3
   \   00000138   0xF114 0x0109      ADDS     R1,R4,#+9
   \   0000013C   0x6820             LDR      R0,[R4, #+0]
   \   0000013E   0xF8D4 0xC000      LDR      R12,[R4, #+0]
   \   00000142   0xF8DC 0xC000      LDR      R12,[R12, #+0]
   \   00000146   0xF8DC 0xC01C      LDR      R12,[R12, #+28]
   \   0000014A   0x47E0             BLX      R12
   \   0000014C   0x0006             MOVS     R6,R0
    479          		int expectedSize = incomingPacketSize + CRC_VALUE_SIZE - 1;
   \   0000014E   0x1CF8             ADDS     R0,R7,#+3
   \   00000150   0x9003             STR      R0,[SP, #+12]
    480          		if (recieved != expectedSize) {
   \   00000152   0x9803             LDR      R0,[SP, #+12]
   \   00000154   0x4286             CMP      R6,R0
   \   00000156   0xD015             BEQ.N    ??runBinaryProtocolLoop_11
    481          			scheduleMsg(&tsLogger, "Got only %d bytes while expecting %d for command %c", recieved,
    482          					expectedSize, command);
   \   00000158   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000015C   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \   00000160   0x9B03             LDR      R3,[SP, #+12]
   \   00000162   0x0032             MOVS     R2,R6
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable24_30
   \   00000168   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000016C   0x.... 0x....      BL       scheduleMsg
    483          			tunerStudioError("ERROR: not enough bytes in stream");
   \   00000170   0x.... 0x....      LDR.W    R0,??DataTable24_31
   \   00000174   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    484          			sendResponseCode(TS_CRC, tsChannel, TS_RESPONSE_UNDERRUN);
   \   00000178   0x2280             MOVS     R2,#+128
   \   0000017A   0x0021             MOVS     R1,R4
   \   0000017C   0x2001             MOVS     R0,#+1
   \   0000017E   0x.... 0x....      BL       _Z16sendResponseCode20ts_response_format_eP12ts_channel_sh
    485          			continue;
   \   00000182   0xE743             B.N      ??runBinaryProtocolLoop_0
    486          		}
    487          
    488          		uint32_t expectedCrc = *(uint32_t*) (tsChannel->crcReadBuffer + incomingPacketSize);
   \                     ??runBinaryProtocolLoop_11:
   \   00000184   0x1938             ADDS     R0,R7,R4
   \   00000186   0xF8D0 0x9008      LDR      R9,[R0, #+8]
    489          
    490          		expectedCrc = SWAP_UINT32(expectedCrc);
   \   0000018A   0xEA5F 0x2009      LSLS     R0,R9,#+8
   \   0000018E   0xF410 0x007F      ANDS     R0,R0,#0xFF0000
   \   00000192   0xEA50 0x6019      ORRS     R0,R0,R9, LSR #+24
   \   00000196   0xEA5F 0x2119      LSRS     R1,R9,#+8
   \   0000019A   0xF411 0x417F      ANDS     R1,R1,#0xFF00
   \   0000019E   0x4308             ORRS     R0,R1,R0
   \   000001A0   0xEA50 0x6909      ORRS     R9,R0,R9, LSL #+24
    491          
    492          		uint32_t actualCrc = crc32(tsChannel->crcReadBuffer, incomingPacketSize);
   \   000001A4   0x0039             MOVS     R1,R7
   \   000001A6   0xF114 0x0008      ADDS     R0,R4,#+8
   \   000001AA   0x.... 0x....      BL       crc32
   \   000001AE   0x4682             MOV      R10,R0
    493          		if (actualCrc != expectedCrc) {
   \   000001B0   0x45CA             CMP      R10,R9
   \   000001B2   0xD01E             BEQ.N    ??runBinaryProtocolLoop_12
    494          			scheduleMsg(&tsLogger, "TunerStudio: CRC %x %x %x %x", tsChannel->crcReadBuffer[incomingPacketSize + 0],
    495          					tsChannel->crcReadBuffer[incomingPacketSize + 1], tsChannel->crcReadBuffer[incomingPacketSize + 2],
    496          					tsChannel->crcReadBuffer[incomingPacketSize + 3]);
   \   000001B4   0x1938             ADDS     R0,R7,R4
   \   000001B6   0x7AC0             LDRB     R0,[R0, #+11]
   \   000001B8   0x9001             STR      R0,[SP, #+4]
   \   000001BA   0x1938             ADDS     R0,R7,R4
   \   000001BC   0x7A80             LDRB     R0,[R0, #+10]
   \   000001BE   0x9000             STR      R0,[SP, #+0]
   \   000001C0   0x1938             ADDS     R0,R7,R4
   \   000001C2   0x7A43             LDRB     R3,[R0, #+9]
   \   000001C4   0x1938             ADDS     R0,R7,R4
   \   000001C6   0x7A02             LDRB     R2,[R0, #+8]
   \   000001C8   0x.... 0x....      LDR.W    R1,??DataTable24_32
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable23
   \   000001D0   0x.... 0x....      BL       scheduleMsg
    497          
    498          			scheduleMsg(&tsLogger, "TunerStudio: command %c actual CRC %x/expected %x", tsChannel->crcReadBuffer[0],
    499          					actualCrc, expectedCrc);
   \   000001D4   0xF8CD 0x9000      STR      R9,[SP, #+0]
   \   000001D8   0x4653             MOV      R3,R10
   \   000001DA   0x7A22             LDRB     R2,[R4, #+8]
   \   000001DC   0x.... 0x....      LDR.W    R1,??DataTable24_33
   \   000001E0   0x.... 0x....      LDR.W    R0,??DataTable23
   \   000001E4   0x.... 0x....      BL       scheduleMsg
    500          			tunerStudioError("ERROR: CRC issue");
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable24_34
   \   000001EC   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    501          			continue;
   \   000001F0   0xE70C             B.N      ??runBinaryProtocolLoop_0
    502          		}
    503          
    504          //		scheduleMsg(logger, "TunerStudio: P00-07 %x %x %x %x %x %x %x %x", crcIoBuffer[0], crcIoBuffer[1],
    505          //				crcIoBuffer[2], crcIoBuffer[3], crcIoBuffer[4], crcIoBuffer[5], crcIoBuffer[6], crcIoBuffer[7]);
    506          
    507          		int success = tunerStudioHandleCrcCommand(tsChannel, tsChannel->crcReadBuffer, incomingPacketSize);
   \                     ??runBinaryProtocolLoop_12:
   \   000001F2   0x003A             MOVS     R2,R7
   \   000001F4   0xF114 0x0108      ADDS     R1,R4,#+8
   \   000001F8   0x0020             MOVS     R0,R4
   \   000001FA   0x.... 0x....      BL       _Z27tunerStudioHandleCrcCommandP12ts_channel_sPci
   \   000001FE   0x4683             MOV      R11,R0
    508          		if (!success)
   \   00000200   0xF1BB 0x0F00      CMP      R11,#+0
   \   00000204   0xF47F 0xAF02      BNE.W    ??runBinaryProtocolLoop_0
    509          			print("got unexpected TunerStudio command %x:%c\r\n", command, command);
   \   00000208   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000020C   0x4642             MOV      R2,R8
   \   0000020E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000212   0x4641             MOV      R1,R8
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable24_35
   \   00000218   0x.... 0x....      BL       print
   \   0000021C   0xE6F6             B.N      ??runBinaryProtocolLoop_0
    510          
    511          	}
    512          }
    513          

   \                                 In section .text, align 2, keep-with-next
    514          static msg_t tsThreadEntryPoint(void *arg) {
   \                     _Z18tsThreadEntryPointPv:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    515          	(void) arg;
    516          	chRegSetThreadName("tunerstudio thread");
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable24_36
   \   00000008   0x6980             LDR      R0,[R0, #+24]
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable24_37
   \   0000000E   0x6181             STR      R1,[R0, #+24]
    517          
    518          #if EFI_PROD_CODE || defined(__DOXYGEN__)
    519          	startTsPort();
   \   00000010   0x.... 0x....      BL       _Z11startTsPortv
    520          #endif
    521          
    522          	runBinaryProtocolLoop(&tsChannel, false);
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable24_38
   \   0000001A   0x.... 0x....      BL       _Z21runBinaryProtocolLoopP12ts_channel_sb
    523          
    524          #if defined __GNUC__
    525          	return 0;
    526          #endif
    527          }
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return
    528          

   \                                 In section .text, align 2, keep-with-next
    529          void syncTunerStudioCopy(void) {
   \                     _Z19syncTunerStudioCopyv:
   \   00000000   0xB580             PUSH     {R7,LR}
    530          	memcpy(&configWorkingCopy, &persistentState.persistentConfiguration, sizeof(persistent_config_s));
   \   00000002   0xF643 0x32B8      MOVW     R2,#+15288
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable24_20
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   0000000E   0x.... 0x....      BL       memcpy
    531          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    532          

   \                                 In section .bss, align 4
    533          tunerstudio_counters_s tsState;
   \                     tsState:
   \   00000000                      DS8 40

   \                                 In section .bss, align 4
    534          TunerStudioOutputChannels tsOutputChannels;
   \                     tsOutputChannels:
   \   00000000                      DS8 196
    535          /**
    536           * this is a local copy of the configuration. Any changes to this copy
    537           * have no effect until this copy is explicitly propagated to the main working copy
    538           */

   \                                 In section .bss, align 4
    539          persistent_config_s configWorkingCopy;
   \                     configWorkingCopy:
   \   00000000                      DS8 15288
    540          

   \                                 In section .bss, align 2
    541          short currentPageId;
   \                     currentPageId:
   \   00000000                      DS8 2
    542          

   \                                 In section .text, align 2, keep-with-next
    543          void tunerStudioError(const char *msg) {
   \                     _Z16tunerStudioErrorPKc:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    544          	tunerStudioDebug(msg);
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _Z16tunerStudioDebugPKc
    545          	printErrorCounters();
   \   0000000A   0x.... 0x....      BL       _Z18printErrorCountersv
    546          	tsState.errorCounter++;
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable24_2
   \   00000012   0x6A00             LDR      R0,[R0, #+32]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable24_2
   \   0000001A   0x6208             STR      R0,[R1, #+32]
    547          }
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return
    548          
    549          /**
    550           * Query with CRC takes place while re-establishing connection
    551           * Query without CRC takes place on TunerStudio startup
    552           */

   \                                 In section .text, align 2, keep-with-next
    553          void handleQueryCommand(ts_channel_s *tsChannel, ts_response_format_e mode) {
   \                     _Z18handleQueryCommandP12ts_channel_s20ts_response_format_e:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    554          	tsState.queryCommandCounter++;
   \   00000006   0x....             LDR.N    R0,??DataTable22_1
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x1C40             ADDS     R0,R0,#+1
   \   0000000C   0x....             LDR.N    R1,??DataTable22_1
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    555          #if EFI_TUNER_STUDIO_VERBOSE
    556          	scheduleMsg(&tsLogger, "got S/H (queryCommand) mode=%d", mode);
   \   00000010   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000012   0x002A             MOVS     R2,R5
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable24_39
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000001C   0x.... 0x....      BL       scheduleMsg
    557          	printTsStats();
   \   00000020   0x.... 0x....      BL       _Z12printTsStatsv
    558          #endif
    559          	tsSendResponse(tsChannel, mode, (const uint8_t *) TS_SIGNATURE, strlen(TS_SIGNATURE) + 1);
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0xF110 0x030C      ADDS     R3,R0,#+12
   \   0000002A   0x.... 0x....      LDR.W    R2,??DataTable24_40
   \   0000002E   0x0029             MOVS     R1,R5
   \   00000030   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000032   0x0020             MOVS     R0,R4
   \   00000034   0x.... 0x....      BL       _Z14tsSendResponseP12ts_channel_s20ts_response_format_ePKhi
    560          }
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    561          
    562          /**
    563           * @brief 'Output' command sends out a snapshot of current values
    564           */

   \                                 In section .text, align 2, keep-with-next
    565          void handleOutputChannelsCommand(ts_channel_s *tsChannel, ts_response_format_e mode) {
   \                     _Z27handleOutputChannelsCommandP12ts_channel_s20ts_response_format_e:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    566          	tsState.outputChannelsCommandCounter++;
   \   00000006   0x....             LDR.N    R0,??DataTable22_1
   \   00000008   0x6840             LDR      R0,[R0, #+4]
   \   0000000A   0x1C40             ADDS     R0,R0,#+1
   \   0000000C   0x....             LDR.N    R1,??DataTable22_1
   \   0000000E   0x6048             STR      R0,[R1, #+4]
    567          	prepareTunerStudioOutputs();
   \   00000010   0x.... 0x....      BL       _Z25prepareTunerStudioOutputsv
    568          	// this method is invoked too often to print any debug information
    569          	tsSendResponse(tsChannel, mode, (const uint8_t *) &tsOutputChannels, sizeof(TunerStudioOutputChannels));
   \   00000014   0x23C4             MOVS     R3,#+196
   \   00000016   0x.... 0x....      LDR.W    R2,??DataTable24_41
   \   0000001A   0x0029             MOVS     R1,R5
   \   0000001C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001E   0x0020             MOVS     R0,R4
   \   00000020   0x.... 0x....      BL       _Z14tsSendResponseP12ts_channel_s20ts_response_format_ePKhi
    570          }
   \   00000024   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    571          

   \                                 In section .text, align 2, keep-with-next
    572          void handleTestCommand(ts_channel_s *tsChannel) {
   \                     _Z17handleTestCommandP12ts_channel_s:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    573          	/**
    574          	 * this is NOT a standard TunerStudio command, this is my own
    575          	 * extension of the protocol to simplify troubleshooting
    576          	 */
    577          	tunerStudioDebug("got T (Test)");
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable24_42
   \   00000008   0x.... 0x....      BL       _Z16tunerStudioDebugPKc
    578          	tunerStudioWriteData(tsChannel, (const uint8_t *) VCS_VERSION, sizeof(VCS_VERSION));
   \   0000000C   0x2205             MOVS     R2,#+5
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable24_43
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x.... 0x....      BL       _Z20tunerStudioWriteDataP12ts_channel_sPKhi
    579          	/**
    580          	 * Please note that this response is a magic constant used by dev console for protocol detection
    581          	 * @see EngineState#TS_PROTOCOL_TAG
    582          	 */
    583          	tunerStudioWriteData(tsChannel, (const uint8_t *) " ts_p_alive\r\n", 8);
   \   00000018   0x2208             MOVS     R2,#+8
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable24_44
   \   0000001E   0x0020             MOVS     R0,R4
   \   00000020   0x.... 0x....      BL       _Z20tunerStudioWriteDataP12ts_channel_sPKhi
    584          }
   \   00000024   0xBD10             POP      {R4,PC}          ;; return
    585          
    586          extern CommandHandler console_line_callback;
    587          

   \                                 In section .text, align 2, keep-with-next
    588          static void handleGetText(ts_channel_s *tsChannel) {
   \                     _Z13handleGetTextP12ts_channel_s:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    589          	int outputSize;
    590          	char *output = swapOutputBuffers(&outputSize);
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x.... 0x....      BL       _Z17swapOutputBuffersPi
   \   0000000A   0x0005             MOVS     R5,R0
    591          
    592          	tunerStudioWriteCrcPacket(tsChannel, TS_RESPONSE_COMMAND_OK, output, outputSize);
   \   0000000C   0x9B00             LDR      R3,[SP, #+0]
   \   0000000E   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   00000010   0x002A             MOVS     R2,R5
   \   00000012   0x2107             MOVS     R1,#+7
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0x.... 0x....      BL       _Z25tunerStudioWriteCrcPacketP12ts_channel_shPKvt
    593          }
   \   0000001A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    594          

   \                                 In section .text, align 2, keep-with-next
    595          static void handleExecuteCommand(ts_channel_s *tsChannel, char *data, int incomingPacketSize) {
   \                     _Z20handleExecuteCommandP12ts_channel_sPci:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    596          	tunerStudioWriteCrcPacket(tsChannel, TS_RESPONSE_COMMAND_OK, NULL, 0);
   \   00000008   0x2300             MOVS     R3,#+0
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0x2107             MOVS     R1,#+7
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       _Z25tunerStudioWriteCrcPacketP12ts_channel_shPKvt
    597          	data[incomingPacketSize] = 0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x5570             STRB     R0,[R6, R5]
    598          	char *trimmed = efiTrim(data);
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       efiTrim
   \   0000001E   0x0007             MOVS     R7,R0
    599          	(console_line_callback)(trimmed);
   \   00000020   0x0038             MOVS     R0,R7
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable24_45
   \   00000026   0x6809             LDR      R1,[R1, #+0]
   \   00000028   0x4788             BLX      R1
    600          }
   \   0000002A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    601          
    602          /**
    603           * @return true if legacy command was processed, false otherwise
    604           */

   \                                 In section .text, align 2, keep-with-next
    605          bool handlePlainCommand(ts_channel_s *tsChannel, uint8_t command) {
   \                     _Z18handlePlainCommandP12ts_channel_sh:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    606          	if (command == TS_HELLO_COMMAND || command == TS_HELLO_COMMAND_DEPRECATED) {
   \   00000008   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000A   0x2D53             CMP      R5,#+83
   \   0000000C   0xD002             BEQ.N    ??handlePlainCommand_0
   \   0000000E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000010   0x2D48             CMP      R5,#+72
   \   00000012   0xD10B             BNE.N    ??handlePlainCommand_1
    607          		scheduleMsg(&tsLogger, "Got naked Query command");
   \                     ??handlePlainCommand_0:
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable24_46
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable23
   \   0000001C   0x.... 0x....      BL       scheduleMsg
    608          		handleQueryCommand(tsChannel, TS_PLAIN);
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0x.... 0x....      BL       _Z18handleQueryCommandP12ts_channel_s20ts_response_format_e
    609          		return true;
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0xE0ED             B.N      ??handlePlainCommand_2
    610          	} else if (command == 't' || command == 'T') {
   \                     ??handlePlainCommand_1:
   \   0000002C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002E   0x2D74             CMP      R5,#+116
   \   00000030   0xD002             BEQ.N    ??handlePlainCommand_3
   \   00000032   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000034   0x2D54             CMP      R5,#+84
   \   00000036   0xD104             BNE.N    ??handlePlainCommand_4
    611          		handleTestCommand(tsChannel);
   \                     ??handlePlainCommand_3:
   \   00000038   0x0020             MOVS     R0,R4
   \   0000003A   0x.... 0x....      BL       _Z17handleTestCommandP12ts_channel_s
    612          		return true;
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0xE0E2             B.N      ??handlePlainCommand_2
    613          	} else if (command == TS_PAGE_COMMAND) {
   \                     ??handlePlainCommand_4:
   \   00000042   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000044   0x2D50             CMP      R5,#+80
   \   00000046   0xD11C             BNE.N    ??handlePlainCommand_5
    614          		int recieved = chnReadTimeout(tsChannel->channel, (uint8_t * )&pageIn, sizeof(pageIn), TS_READ_TIMEOUT);
   \   00000048   0xF640 0x33B8      MOVW     R3,#+3000
   \   0000004C   0x2202             MOVS     R2,#+2
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable24_47
   \   00000052   0x6820             LDR      R0,[R4, #+0]
   \   00000054   0x6826             LDR      R6,[R4, #+0]
   \   00000056   0x6836             LDR      R6,[R6, #+0]
   \   00000058   0x69F6             LDR      R6,[R6, #+28]
   \   0000005A   0x47B0             BLX      R6
   \   0000005C   0x0006             MOVS     R6,R0
    615          		if (recieved != sizeof(pageIn)) {
   \   0000005E   0x2E02             CMP      R6,#+2
   \   00000060   0xD005             BEQ.N    ??handlePlainCommand_6
    616          			tunerStudioError("ERROR: not enough for PAGE");
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable24_48
   \   00000066   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    617          			return true;
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0xE0CC             B.N      ??handlePlainCommand_2
    618          		}
    619          		handlePageSelectCommand(tsChannel, TS_PLAIN, pageIn);
   \                     ??handlePlainCommand_6:
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable24_47
   \   00000072   0x8802             LDRH     R2,[R0, #+0]
   \   00000074   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000076   0x2100             MOVS     R1,#+0
   \   00000078   0x0020             MOVS     R0,R4
   \   0000007A   0x.... 0x....      BL       _Z23handlePageSelectCommandP12ts_channel_s20ts_response_format_et
    620          		return true;
   \   0000007E   0x2001             MOVS     R0,#+1
   \   00000080   0xE0C2             B.N      ??handlePlainCommand_2
    621          	} else if (command == TS_BURN_COMMAND) {
   \                     ??handlePlainCommand_5:
   \   00000082   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000084   0x2D42             CMP      R5,#+66
   \   00000086   0xD11E             BNE.N    ??handlePlainCommand_7
    622          		scheduleMsg(&tsLogger, "Got naked BURN");
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable24_49
   \   0000008C   0x....             LDR.N    R0,??DataTable23
   \   0000008E   0x.... 0x....      BL       scheduleMsg
    623          		uint16_t page;
    624          		int recieved = chnReadTimeout(tsChannel->channel, (uint8_t * )&page, sizeof(page), TS_READ_TIMEOUT);
   \   00000092   0xF640 0x33B8      MOVW     R3,#+3000
   \   00000096   0x2202             MOVS     R2,#+2
   \   00000098   0xA901             ADD      R1,SP,#+4
   \   0000009A   0x6820             LDR      R0,[R4, #+0]
   \   0000009C   0x6826             LDR      R6,[R4, #+0]
   \   0000009E   0x6836             LDR      R6,[R6, #+0]
   \   000000A0   0x69F6             LDR      R6,[R6, #+28]
   \   000000A2   0x47B0             BLX      R6
   \   000000A4   0x0006             MOVS     R6,R0
    625          		if (recieved != sizeof(page)) {
   \   000000A6   0x2E02             CMP      R6,#+2
   \   000000A8   0xD005             BEQ.N    ??handlePlainCommand_8
    626          			tunerStudioError("ERROR: Not enough for plain burn");
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable24_50
   \   000000AE   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    627          			return true;
   \   000000B2   0x2001             MOVS     R0,#+1
   \   000000B4   0xE0A8             B.N      ??handlePlainCommand_2
    628          		}
    629          		handleBurnCommand(tsChannel, TS_PLAIN, page);
   \                     ??handlePlainCommand_8:
   \   000000B6   0xF8BD 0x2004      LDRH     R2,[SP, #+4]
   \   000000BA   0x2100             MOVS     R1,#+0
   \   000000BC   0x0020             MOVS     R0,R4
   \   000000BE   0x.... 0x....      BL       _Z17handleBurnCommandP12ts_channel_s20ts_response_format_et
    630          		return true;
   \   000000C2   0x2001             MOVS     R0,#+1
   \   000000C4   0xE0A0             B.N      ??handlePlainCommand_2
    631          	} else if (command == TS_CHUNK_WRITE_COMMAND) {
   \                     ??handlePlainCommand_7:
   \   000000C6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000C8   0x2D43             CMP      R5,#+67
   \   000000CA   0xD159             BNE.N    ??handlePlainCommand_9
    632          		scheduleMsg(&tsLogger, "Got naked CHUNK_WRITE");
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable24_51
   \   000000D0   0x....             LDR.N    R0,??DataTable23
   \   000000D2   0x.... 0x....      BL       scheduleMsg
    633          		int recieved = chnReadTimeout(tsChannel->channel, (uint8_t * )&writeChunkRequest, sizeof(writeChunkRequest),
    634          				TS_READ_TIMEOUT);
   \   000000D6   0xF640 0x33B8      MOVW     R3,#+3000
   \   000000DA   0x2206             MOVS     R2,#+6
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable24_52
   \   000000E0   0x6820             LDR      R0,[R4, #+0]
   \   000000E2   0x6826             LDR      R6,[R4, #+0]
   \   000000E4   0x6836             LDR      R6,[R6, #+0]
   \   000000E6   0x69F6             LDR      R6,[R6, #+28]
   \   000000E8   0x47B0             BLX      R6
   \   000000EA   0x0006             MOVS     R6,R0
    635          		if (recieved != sizeof(writeChunkRequest)) {
   \   000000EC   0x2E06             CMP      R6,#+6
   \   000000EE   0xD00C             BEQ.N    ??handlePlainCommand_10
    636          			scheduleMsg(&tsLogger, "ERROR: Not enough for plain chunk write header: %d", recieved);
   \   000000F0   0x0032             MOVS     R2,R6
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable24_53
   \   000000F6   0x....             LDR.N    R0,??DataTable23
   \   000000F8   0x.... 0x....      BL       scheduleMsg
    637          			tsState.errorCounter++;
   \   000000FC   0x....             LDR.N    R0,??DataTable22_1
   \   000000FE   0x6A00             LDR      R0,[R0, #+32]
   \   00000100   0x1C40             ADDS     R0,R0,#+1
   \   00000102   0x....             LDR.N    R1,??DataTable22_1
   \   00000104   0x6208             STR      R0,[R1, #+32]
    638          			return true;
   \   00000106   0x2001             MOVS     R0,#+1
   \   00000108   0xE07E             B.N      ??handlePlainCommand_2
    639          		}
    640          		recieved = chnReadTimeout(tsChannel->channel, (uint8_t * )&tsChannel->crcReadBuffer, writeChunkRequest.count,
    641          				TS_READ_TIMEOUT);
   \                     ??handlePlainCommand_10:
   \   0000010A   0xF640 0x33B8      MOVW     R3,#+3000
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable24_52
   \   00000112   0xF9B0 0x2004      LDRSH    R2,[R0, #+4]
   \   00000116   0xF114 0x0108      ADDS     R1,R4,#+8
   \   0000011A   0x6820             LDR      R0,[R4, #+0]
   \   0000011C   0x6827             LDR      R7,[R4, #+0]
   \   0000011E   0x683F             LDR      R7,[R7, #+0]
   \   00000120   0x69FF             LDR      R7,[R7, #+28]
   \   00000122   0x47B8             BLX      R7
   \   00000124   0x0006             MOVS     R6,R0
    642          		if (recieved != writeChunkRequest.count) {
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable24_52
   \   0000012A   0xF9B0 0x0004      LDRSH    R0,[R0, #+4]
   \   0000012E   0x4286             CMP      R6,R0
   \   00000130   0xD010             BEQ.N    ??handlePlainCommand_11
    643          			scheduleMsg(&tsLogger, "ERROR: Not enough for plain chunk write content: %d while expecting %d", recieved,
    644          					writeChunkRequest.count);
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable24_52
   \   00000136   0xF9B0 0x3004      LDRSH    R3,[R0, #+4]
   \   0000013A   0x0032             MOVS     R2,R6
   \   0000013C   0x.... 0x....      LDR.W    R1,??DataTable24_54
   \   00000140   0x....             LDR.N    R0,??DataTable23
   \   00000142   0x.... 0x....      BL       scheduleMsg
    645          			tsState.errorCounter++;
   \   00000146   0x....             LDR.N    R0,??DataTable22_1
   \   00000148   0x6A00             LDR      R0,[R0, #+32]
   \   0000014A   0x1C40             ADDS     R0,R0,#+1
   \   0000014C   0x....             LDR.N    R1,??DataTable22_1
   \   0000014E   0x6208             STR      R0,[R1, #+32]
    646          			return true;
   \   00000150   0x2001             MOVS     R0,#+1
   \   00000152   0xE059             B.N      ??handlePlainCommand_2
    647          		}
    648          		currentPageId = writeChunkRequest.page;
   \                     ??handlePlainCommand_11:
   \   00000154   0x....             LDR.N    R0,??DataTable22_3
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable24_52
   \   0000015A   0x8809             LDRH     R1,[R1, #+0]
   \   0000015C   0x8001             STRH     R1,[R0, #+0]
    649          
    650          		handleWriteChunkCommand(tsChannel, TS_PLAIN, writeChunkRequest.offset, writeChunkRequest.count,
    651          				(uint8_t *) &tsChannel->crcReadBuffer);
   \   0000015E   0xF114 0x0008      ADDS     R0,R4,#+8
   \   00000162   0x9000             STR      R0,[SP, #+0]
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable24_52
   \   00000168   0xF9B0 0x3004      LDRSH    R3,[R0, #+4]
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable24_52
   \   00000170   0xF9B0 0x2002      LDRSH    R2,[R0, #+2]
   \   00000174   0x2100             MOVS     R1,#+0
   \   00000176   0x0020             MOVS     R0,R4
   \   00000178   0x.... 0x....      BL       _Z23handleWriteChunkCommandP12ts_channel_s20ts_response_format_essPv
    652          		return true;
   \   0000017C   0x2001             MOVS     R0,#+1
   \   0000017E   0xE043             B.N      ??handlePlainCommand_2
    653          	} else if (command == TS_READ_COMMAND) {
   \                     ??handlePlainCommand_9:
   \   00000180   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000182   0x2D52             CMP      R5,#+82
   \   00000184   0xD121             BNE.N    ??handlePlainCommand_12
    654          		//scheduleMsg(logger, "Got naked READ PAGE???");
    655          		int recieved = chnReadTimeout(tsChannel->channel, (uint8_t * )&readRequest, sizeof(readRequest),
    656          				TS_READ_TIMEOUT);
   \   00000186   0xF640 0x33B8      MOVW     R3,#+3000
   \   0000018A   0x2206             MOVS     R2,#+6
   \   0000018C   0x.... 0x....      LDR.W    R1,??DataTable24_55
   \   00000190   0x6820             LDR      R0,[R4, #+0]
   \   00000192   0x6826             LDR      R6,[R4, #+0]
   \   00000194   0x6836             LDR      R6,[R6, #+0]
   \   00000196   0x69F6             LDR      R6,[R6, #+28]
   \   00000198   0x47B0             BLX      R6
   \   0000019A   0x0006             MOVS     R6,R0
    657          		if (recieved != sizeof(readRequest)) {
   \   0000019C   0x2E06             CMP      R6,#+6
   \   0000019E   0xD004             BEQ.N    ??handlePlainCommand_13
    658          			tunerStudioError("Not enough for plain read header");
   \   000001A0   0x....             LDR.N    R0,??DataTable24_56
   \   000001A2   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    659          			return true;
   \   000001A6   0x2001             MOVS     R0,#+1
   \   000001A8   0xE02E             B.N      ??handlePlainCommand_2
    660          		}
    661          		handlePageReadCommand(tsChannel, TS_PLAIN, readRequest.page, readRequest.offset, readRequest.count);
   \                     ??handlePlainCommand_13:
   \   000001AA   0x....             LDR.N    R0,??DataTable24_55
   \   000001AC   0x8880             LDRH     R0,[R0, #+4]
   \   000001AE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001B0   0x9000             STR      R0,[SP, #+0]
   \   000001B2   0x....             LDR.N    R0,??DataTable24_55
   \   000001B4   0x8843             LDRH     R3,[R0, #+2]
   \   000001B6   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000001B8   0x....             LDR.N    R0,??DataTable24_55
   \   000001BA   0x8802             LDRH     R2,[R0, #+0]
   \   000001BC   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000001BE   0x2100             MOVS     R1,#+0
   \   000001C0   0x0020             MOVS     R0,R4
   \   000001C2   0x.... 0x....      BL       _Z21handlePageReadCommandP12ts_channel_s20ts_response_format_ettt
    662          		return true;
   \   000001C6   0x2001             MOVS     R0,#+1
   \   000001C8   0xE01E             B.N      ??handlePlainCommand_2
    663          	} else if (command == TS_OUTPUT_COMMAND) {
   \                     ??handlePlainCommand_12:
   \   000001CA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000001CC   0x2D4F             CMP      R5,#+79
   \   000001CE   0xD105             BNE.N    ??handlePlainCommand_14
    664          		//scheduleMsg(logger, "Got naked Channels???");
    665          		handleOutputChannelsCommand(tsChannel, TS_PLAIN);
   \   000001D0   0x2100             MOVS     R1,#+0
   \   000001D2   0x0020             MOVS     R0,R4
   \   000001D4   0x.... 0x....      BL       _Z27handleOutputChannelsCommandP12ts_channel_s20ts_response_format_e
    666          		return true;
   \   000001D8   0x2001             MOVS     R0,#+1
   \   000001DA   0xE015             B.N      ??handlePlainCommand_2
    667          	} else if (command == TS_LEGACY_HELLO_COMMAND) {
   \                     ??handlePlainCommand_14:
   \   000001DC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000001DE   0x2D51             CMP      R5,#+81
   \   000001E0   0xD104             BNE.N    ??handlePlainCommand_15
    668          		tunerStudioDebug("ignoring LEGACY_HELLO_COMMAND");
   \   000001E2   0x....             LDR.N    R0,??DataTable24_57
   \   000001E4   0x.... 0x....      BL       _Z16tunerStudioDebugPKc
    669          		return true;
   \   000001E8   0x2001             MOVS     R0,#+1
   \   000001EA   0xE00D             B.N      ??handlePlainCommand_2
    670          	} else if (command == TS_COMMAND_F) {
   \                     ??handlePlainCommand_15:
   \   000001EC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000001EE   0x2D46             CMP      R5,#+70
   \   000001F0   0xD109             BNE.N    ??handlePlainCommand_16
    671          		tunerStudioDebug("not ignoring F");
   \   000001F2   0x....             LDR.N    R0,??DataTable24_58
   \   000001F4   0x.... 0x....      BL       _Z16tunerStudioDebugPKc
    672          		tunerStudioWriteData(tsChannel, (const uint8_t *) PROTOCOL, strlen(PROTOCOL));
   \   000001F8   0x2203             MOVS     R2,#+3
   \   000001FA   0x....             ADR.N    R1,??DataTable24  ;; "001"
   \   000001FC   0x0020             MOVS     R0,R4
   \   000001FE   0x.... 0x....      BL       _Z20tunerStudioWriteDataP12ts_channel_sPKhi
    673          		return true;
   \   00000202   0x2001             MOVS     R0,#+1
   \   00000204   0xE000             B.N      ??handlePlainCommand_2
    674          	} else {
    675          		return false;
   \                     ??handlePlainCommand_16:
   \   00000206   0x2000             MOVS     R0,#+0
   \                     ??handlePlainCommand_2:
   \   00000208   0xBDFE             POP      {R1-R7,PC}       ;; return
    676          	}
    677          }
    678          

   \                                 In section .text, align 2, keep-with-next
    679          int tunerStudioHandleCrcCommand(ts_channel_s *tsChannel, char *data, int incomingPacketSize) {
   \                     _Z27tunerStudioHandleCrcCommandP12ts_channel_sPci:
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB082             SUB      SP,SP,#+8
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000F             MOVS     R7,R1
   \   0000000A   0x0015             MOVS     R5,R2
    680          	char command = data[0];
   \   0000000C   0x783E             LDRB     R6,[R7, #+0]
    681          	data++;
   \   0000000E   0x1C7F             ADDS     R7,R7,#+1
    682          	if (command == TS_HELLO_COMMAND || command == TS_HELLO_COMMAND_DEPRECATED) {
   \   00000010   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000012   0x2E53             CMP      R6,#+83
   \   00000014   0xD002             BEQ.N    ??tunerStudioHandleCrcCommand_0
   \   00000016   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000018   0x2E48             CMP      R6,#+72
   \   0000001A   0xD107             BNE.N    ??tunerStudioHandleCrcCommand_1
    683          		tunerStudioDebug("got Query command");
   \                     ??tunerStudioHandleCrcCommand_0:
   \   0000001C   0x....             LDR.N    R0,??DataTable24_59
   \   0000001E   0x.... 0x....      BL       _Z16tunerStudioDebugPKc
    684          		handleQueryCommand(tsChannel, TS_CRC);
   \   00000022   0x2101             MOVS     R1,#+1
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0x.... 0x....      BL       _Z18handleQueryCommandP12ts_channel_s20ts_response_format_e
   \   0000002A   0xE0A4             B.N      ??tunerStudioHandleCrcCommand_2
    685          	} else if (command == TS_GET_TEXT) {
   \                     ??tunerStudioHandleCrcCommand_1:
   \   0000002C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002E   0x2E47             CMP      R6,#+71
   \   00000030   0xD103             BNE.N    ??tunerStudioHandleCrcCommand_3
    686          		handleGetText(tsChannel);
   \   00000032   0x0020             MOVS     R0,R4
   \   00000034   0x.... 0x....      BL       _Z13handleGetTextP12ts_channel_s
   \   00000038   0xE09D             B.N      ??tunerStudioHandleCrcCommand_2
    687          	} else if (command == TS_EXECUTE) {
   \                     ??tunerStudioHandleCrcCommand_3:
   \   0000003A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000003C   0x2E45             CMP      R6,#+69
   \   0000003E   0xD105             BNE.N    ??tunerStudioHandleCrcCommand_4
    688          		handleExecuteCommand(tsChannel, data, incomingPacketSize - 1);
   \   00000040   0x1E6A             SUBS     R2,R5,#+1
   \   00000042   0x0039             MOVS     R1,R7
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x.... 0x....      BL       _Z20handleExecuteCommandP12ts_channel_sPci
   \   0000004A   0xE094             B.N      ??tunerStudioHandleCrcCommand_2
    689          	} else if (command == TS_OUTPUT_COMMAND) {
   \                     ??tunerStudioHandleCrcCommand_4:
   \   0000004C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000004E   0x2E4F             CMP      R6,#+79
   \   00000050   0xD104             BNE.N    ??tunerStudioHandleCrcCommand_5
    690          		handleOutputChannelsCommand(tsChannel, TS_CRC);
   \   00000052   0x2101             MOVS     R1,#+1
   \   00000054   0x0020             MOVS     R0,R4
   \   00000056   0x.... 0x....      BL       _Z27handleOutputChannelsCommandP12ts_channel_s20ts_response_format_e
   \   0000005A   0xE08C             B.N      ??tunerStudioHandleCrcCommand_2
    691          	} else if (command == TS_PAGE_COMMAND) {
   \                     ??tunerStudioHandleCrcCommand_5:
   \   0000005C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005E   0x2E50             CMP      R6,#+80
   \   00000060   0xD108             BNE.N    ??tunerStudioHandleCrcCommand_6
    692          		uint16_t page = *(uint16_t *) data;
   \   00000062   0xF8B7 0x8000      LDRH     R8,[R7, #+0]
    693          		handlePageSelectCommand(tsChannel, TS_CRC, page);
   \   00000066   0x4642             MOV      R2,R8
   \   00000068   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000006A   0x2101             MOVS     R1,#+1
   \   0000006C   0x0020             MOVS     R0,R4
   \   0000006E   0x.... 0x....      BL       _Z23handlePageSelectCommandP12ts_channel_s20ts_response_format_et
   \   00000072   0xE080             B.N      ??tunerStudioHandleCrcCommand_2
    694          	} else if (command == TS_CHUNK_WRITE_COMMAND) {
   \                     ??tunerStudioHandleCrcCommand_6:
   \   00000074   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000076   0x2E43             CMP      R6,#+67
   \   00000078   0xD112             BNE.N    ??tunerStudioHandleCrcCommand_7
    695          		currentPageId = *(uint16_t *) data;
   \   0000007A   0x....             LDR.N    R0,??DataTable24_3
   \   0000007C   0xF9B7 0x1000      LDRSH    R1,[R7, #+0]
   \   00000080   0x8001             STRH     R1,[R0, #+0]
    696          		uint16_t offset = *(uint16_t *) (data + 2);
   \   00000082   0xF8B7 0x8002      LDRH     R8,[R7, #+2]
    697          		uint16_t count = *(uint16_t *) (data + 4);
   \   00000086   0xF8B7 0x9004      LDRH     R9,[R7, #+4]
    698          		handleWriteChunkCommand(tsChannel, TS_CRC, offset, count, data + sizeof(TunerStudioWriteChunkRequest));
   \   0000008A   0x1DB8             ADDS     R0,R7,#+6
   \   0000008C   0x9000             STR      R0,[SP, #+0]
   \   0000008E   0x464B             MOV      R3,R9
   \   00000090   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000092   0x4642             MOV      R2,R8
   \   00000094   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000096   0x2101             MOVS     R1,#+1
   \   00000098   0x0020             MOVS     R0,R4
   \   0000009A   0x.... 0x....      BL       _Z23handleWriteChunkCommandP12ts_channel_s20ts_response_format_essPv
   \   0000009E   0xE06A             B.N      ??tunerStudioHandleCrcCommand_2
    699          	} else if (command == TS_SINGLE_WRITE_COMMAND) {
   \                     ??tunerStudioHandleCrcCommand_7:
   \   000000A0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000A2   0x2E57             CMP      R6,#+87
   \   000000A4   0xD112             BNE.N    ??tunerStudioHandleCrcCommand_8
    700          		uint16_t page = *(uint16_t *) data;
   \   000000A6   0xF8B7 0x8000      LDRH     R8,[R7, #+0]
    701          		uint16_t offset = *(uint16_t *) (data + 2);
   \   000000AA   0xF8B7 0x9002      LDRH     R9,[R7, #+2]
    702          		uint8_t value = data[4];
   \   000000AE   0xF897 0xA004      LDRB     R10,[R7, #+4]
    703          		handleWriteValueCommand(tsChannel, TS_CRC, page, offset, value);
   \   000000B2   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000000B6   0xF8CD 0xA000      STR      R10,[SP, #+0]
   \   000000BA   0x464B             MOV      R3,R9
   \   000000BC   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000000BE   0x4642             MOV      R2,R8
   \   000000C0   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000C2   0x2101             MOVS     R1,#+1
   \   000000C4   0x0020             MOVS     R0,R4
   \   000000C6   0x.... 0x....      BL       _Z23handleWriteValueCommandP12ts_channel_s20ts_response_format_etth
   \   000000CA   0xE054             B.N      ??tunerStudioHandleCrcCommand_2
    704          	} else if (command == TS_CRC_CHECK_COMMAND) {
   \                     ??tunerStudioHandleCrcCommand_8:
   \   000000CC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000CE   0x2E6B             CMP      R6,#+107
   \   000000D0   0xD112             BNE.N    ??tunerStudioHandleCrcCommand_9
    705          		uint16_t page = *(uint16_t *) data;
   \   000000D2   0xF8B7 0x8000      LDRH     R8,[R7, #+0]
    706          		uint16_t offset = *(uint16_t *) (data + 2);
   \   000000D6   0xF8B7 0x9002      LDRH     R9,[R7, #+2]
    707          		uint16_t count = *(uint16_t *) (data + 4);
   \   000000DA   0xF8B7 0xA004      LDRH     R10,[R7, #+4]
    708          		handleCrc32Check(tsChannel, TS_CRC, page, offset, count);
   \   000000DE   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000000E2   0xF8CD 0xA000      STR      R10,[SP, #+0]
   \   000000E6   0x464B             MOV      R3,R9
   \   000000E8   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000000EA   0x4642             MOV      R2,R8
   \   000000EC   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000EE   0x2101             MOVS     R1,#+1
   \   000000F0   0x0020             MOVS     R0,R4
   \   000000F2   0x.... 0x....      BL       _Z16handleCrc32CheckP12ts_channel_s20ts_response_format_ettt
   \   000000F6   0xE03E             B.N      ??tunerStudioHandleCrcCommand_2
    709          	} else if (command == TS_BURN_COMMAND) {
   \                     ??tunerStudioHandleCrcCommand_9:
   \   000000F8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000FA   0x2E42             CMP      R6,#+66
   \   000000FC   0xD108             BNE.N    ??tunerStudioHandleCrcCommand_10
    710          		uint16_t page = *(uint16_t *) data;
   \   000000FE   0xF8B7 0x8000      LDRH     R8,[R7, #+0]
    711          		handleBurnCommand(tsChannel, TS_CRC, page);
   \   00000102   0x4642             MOV      R2,R8
   \   00000104   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000106   0x2101             MOVS     R1,#+1
   \   00000108   0x0020             MOVS     R0,R4
   \   0000010A   0x.... 0x....      BL       _Z17handleBurnCommandP12ts_channel_s20ts_response_format_et
   \   0000010E   0xE032             B.N      ??tunerStudioHandleCrcCommand_2
    712          	} else if (command == TS_READ_COMMAND) {
   \                     ??tunerStudioHandleCrcCommand_10:
   \   00000110   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000112   0x2E52             CMP      R6,#+82
   \   00000114   0xD112             BNE.N    ??tunerStudioHandleCrcCommand_11
    713          		uint16_t page = *(uint16_t *) data;
   \   00000116   0xF8B7 0x8000      LDRH     R8,[R7, #+0]
    714          		uint16_t offset = *(uint16_t *) (data + 2);
   \   0000011A   0xF8B7 0x9002      LDRH     R9,[R7, #+2]
    715          		uint16_t count = *(uint16_t *) (data + 4);
   \   0000011E   0xF8B7 0xA004      LDRH     R10,[R7, #+4]
    716          		handlePageReadCommand(tsChannel, TS_CRC, page, offset, count);
   \   00000122   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000126   0xF8CD 0xA000      STR      R10,[SP, #+0]
   \   0000012A   0x464B             MOV      R3,R9
   \   0000012C   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   0000012E   0x4642             MOV      R2,R8
   \   00000130   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000132   0x2101             MOVS     R1,#+1
   \   00000134   0x0020             MOVS     R0,R4
   \   00000136   0x.... 0x....      BL       _Z21handlePageReadCommandP12ts_channel_s20ts_response_format_ettt
   \   0000013A   0xE01C             B.N      ??tunerStudioHandleCrcCommand_2
    717          	} else if (command == 't' || command == 'T') {
   \                     ??tunerStudioHandleCrcCommand_11:
   \   0000013C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000013E   0x2E74             CMP      R6,#+116
   \   00000140   0xD002             BEQ.N    ??tunerStudioHandleCrcCommand_12
   \   00000142   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000144   0x2E54             CMP      R6,#+84
   \   00000146   0xD103             BNE.N    ??tunerStudioHandleCrcCommand_13
    718          		handleTestCommand(tsChannel);
   \                     ??tunerStudioHandleCrcCommand_12:
   \   00000148   0x0020             MOVS     R0,R4
   \   0000014A   0x.... 0x....      BL       _Z17handleTestCommandP12ts_channel_s
   \   0000014E   0xE012             B.N      ??tunerStudioHandleCrcCommand_2
    719          	} else if (command == TS_LEGACY_HELLO_COMMAND) {
   \                     ??tunerStudioHandleCrcCommand_13:
   \   00000150   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000152   0x2E51             CMP      R6,#+81
   \   00000154   0xD103             BNE.N    ??tunerStudioHandleCrcCommand_14
    720          		/**
    721          		 * 'Q' is the query command used for compatibility with older ECUs
    722          		 */
    723          		tunerStudioDebug("ignoring Q");
   \   00000156   0x....             LDR.N    R0,??DataTable24_60
   \   00000158   0x.... 0x....      BL       _Z16tunerStudioDebugPKc
   \   0000015C   0xE00B             B.N      ??tunerStudioHandleCrcCommand_2
    724          	} else if (command == TS_COMMAND_F) {
   \                     ??tunerStudioHandleCrcCommand_14:
   \   0000015E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000160   0x2E46             CMP      R6,#+70
   \   00000162   0xD103             BNE.N    ??tunerStudioHandleCrcCommand_15
    725          		tunerStudioDebug("ignoring F");
   \   00000164   0x....             LDR.N    R0,??DataTable24_61
   \   00000166   0x.... 0x....      BL       _Z16tunerStudioDebugPKc
   \   0000016A   0xE004             B.N      ??tunerStudioHandleCrcCommand_2
    726          		/**
    727          		 * http://www.msextra.com/forums/viewtopic.php?f=122&t=48327
    728          		 * Response from TS support: This is an optional command		 *
    729          		 * "The F command is used to find what ini. file needs to be loaded in TunerStudio to match the controller.
    730          		 * If you are able to just make your firmware ignore the command that would work.
    731          		 * Currently on some firmware versions the F command is not used and is just ignored by the firmware as a unknown command."
    732          		 */
    733          	} else {
    734          		tunerStudioError("ERROR: ignoring unexpected command");
   \                     ??tunerStudioHandleCrcCommand_15:
   \   0000016C   0x....             LDR.N    R0,??DataTable24_62
   \   0000016E   0x.... 0x....      BL       _Z16tunerStudioErrorPKc
    735          		return false;
   \   00000172   0x2000             MOVS     R0,#+0
   \   00000174   0xE000             B.N      ??tunerStudioHandleCrcCommand_16
    736          	}
    737          	return true;
   \                     ??tunerStudioHandleCrcCommand_2:
   \   00000176   0x2001             MOVS     R0,#+1
   \                     ??tunerStudioHandleCrcCommand_16:
   \   00000178   0xE8BD 0x87F6      POP      {R1,R2,R4-R10,PC}  ;; return
    738          }
    739          
    740          /**
    741           * we use 'blockingFactor = 256' in rusefi.ini
    742           * todo: should we just do (256 + CRC_WRAPPING_SIZE) ?
    743           */
    744          

   \                                 In section .bss, align 4
    745          static uint8_t tsCrcWriteBuffer[300];
   \                     tsCrcWriteBuffer:
   \   00000000                      DS8 300
    746          

   \                                 In section .text, align 2, keep-with-next
    747          void startTunerStudioConnectivity(void) {
   \                     _Z28startTunerStudioConnectivityv:
   \   00000000   0xB580             PUSH     {R7,LR}
    748          	if (sizeof(persistent_config_s) != getTunerStudioPageSize(0))
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       _Z22getTunerStudioPageSizei
   \   00000008   0xF643 0x31B8      MOVW     R1,#+15288
   \   0000000C   0x4288             CMP      R0,R1
   \   0000000E   0xD008             BEQ.N    ??startTunerStudioConnectivity_0
    749          		firmwareError("TS page size mismatch: %d/%d", sizeof(persistent_config_s), getTunerStudioPageSize(0));
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       _Z22getTunerStudioPageSizei
   \   00000016   0x0002             MOVS     R2,R0
   \   00000018   0xF643 0x31B8      MOVW     R1,#+15288
   \   0000001C   0x....             LDR.N    R0,??DataTable24_63
   \   0000001E   0x.... 0x....      BL       firmwareError
    750          
    751          	if (sizeof(TunerStudioOutputChannels) != TS_OUTPUT_SIZE)
    752          		firmwareError("TS outputs size mismatch: %d/%d", sizeof(TunerStudioOutputChannels), TS_OUTPUT_SIZE);
    753          
    754          	memset(&tsState, 0, sizeof(tsState));
   \                     ??startTunerStudioConnectivity_0:
   \   00000022   0x2228             MOVS     R2,#+40
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x....             LDR.N    R0,??DataTable24_2
   \   00000028   0x.... 0x....      BL       memset
    755          	syncTunerStudioCopy();
   \   0000002C   0x.... 0x....      BL       _Z19syncTunerStudioCopyv
    756          
    757          	addConsoleAction("tsinfo", printTsStats);
   \   00000030   0x....             LDR.N    R1,??DataTable24_64
   \   00000032   0x....             LDR.N    R0,??DataTable24_65
   \   00000034   0x.... 0x....      BL       addConsoleAction
    758          	addConsoleAction("reset_ts", resetTs);
   \   00000038   0x....             LDR.N    R1,??DataTable24_66
   \   0000003A   0x....             LDR.N    R0,??DataTable24_67
   \   0000003C   0x.... 0x....      BL       addConsoleAction
    759          	addConsoleActionI("set_ts_speed", setTsSpeed);
   \   00000040   0x....             LDR.N    R1,??DataTable24_68
   \   00000042   0x....             LDR.N    R0,??DataTable24_69
   \   00000044   0x.... 0x....      BL       addConsoleActionI
    760          
    761          	tsChannel.channel = getTsSerialDevice();
   \   00000048   0x.... 0x....      BL       _Z17getTsSerialDevicev
   \   0000004C   0x....             LDR.N    R1,??DataTable24_38
   \   0000004E   0x6008             STR      R0,[R1, #+0]
    762          	tsChannel.writeBuffer = tsCrcWriteBuffer;
   \   00000050   0x....             LDR.N    R0,??DataTable24_38
   \   00000052   0x....             LDR.N    R1,??DataTable24_70
   \   00000054   0x6041             STR      R1,[R0, #+4]
    763          
    764          	chThdCreateStatic(tsThreadStack, sizeof(tsThreadStack), NORMALPRIO, tsThreadEntryPoint, NULL);
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x9000             STR      R0,[SP, #+0]
   \   0000005A   0x....             LDR.N    R3,??DataTable24_71
   \   0000005C   0x2240             MOVS     R2,#+64
   \   0000005E   0xF44F 0x61BD      MOV      R1,#+1512
   \   00000062   0x....             LDR.N    R0,??DataTable24_72
   \   00000064   0x.... 0x....      BL       chThdCreateStatic
    765          }
   \   00000068   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x25 0x73          DC8      0x25, 0x73, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x43 0x52          DC8      "CRC"
   \              0x43 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   0x........         DC32     `?<Constant "binary">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_1:
   \   00000000   0x........         DC32     tsState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_2:
   \   00000000   0x........         DC32     `?<Constant "TunerStudio size=%d /...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_3:
   \   00000000   0x........         DC32     currentPageId

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_4:
   \   00000000   0x........         DC32     `?<Constant "TunerStudio W=%d / C=...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_5:
   \   00000000   0x40020800         DC32     0x40020800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_6:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_7:
   \   00000000   0x........         DC32     `?<Constant "TS RX on %s%d/TX on %...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x........         DC32     tsLogger

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_1:
   \   00000000   0x........         DC32     configWorkingCopy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_2:
   \   00000000   0x........         DC32     `?<Constant "PAGE %d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_3:
   \   00000000   0x........         DC32     `?<Constant "applying soft change ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_4:
   \   00000000   0x........         DC32     `?<Constant "WRITE CHUNK mode=%d p...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   0x30 0x30          DC8      "001"
   \              0x31 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_1:
   \   00000000   0x........         DC32     engineConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_2:
   \   00000000   0x........         DC32     tsState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_3:
   \   00000000   0x........         DC32     currentPageId

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_4:
   \   00000000   0x........         DC32     `?<Constant "ERROR invalid offset %d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_5:
   \   00000000   0x........         DC32     `?<Constant "ERROR: out of range">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_6:
   \   00000000   0x........         DC32     `?<Constant "ERROR: unexpected count">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_7:
   \   00000000   0x........         DC32     `?<Constant "ERROR unexpected coun...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_8:
   \   00000000   0x........         DC32     `?<Constant "CRC32 request: pageId...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_9:
   \   00000000   0x........         DC32     `?<Constant "CRC32 response: %x">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_10:
   \   00000000   0x........         DC32     `?<Constant "got W (Write)">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_11:
   \   00000000   0x........         DC32     `?<Constant "ERROR: out of range2">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_12:
   \   00000000   0x........         DC32     `?<Constant "ERROR offset %d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_13:
   \   00000000   0x........         DC32     previousWriteReportMs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_14:
   \   00000000   0x........         DC32     `?<Constant "page %d offset %d: va...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_15:
   \   00000000   0x........         DC32     `?<Constant "READ mode=%d page=%d ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_16:
   \   00000000   0x........         DC32     `?<Constant "ERROR: invalid page n...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_17:
   \   00000000   0x........         DC32     `?<Constant "invalid offset/count ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_18:
   \   00000000   0x........         DC32     `?<Constant "plain">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_19:
   \   00000000   0x........         DC32     `?<Constant "got B (Burn) %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_20:
   \   00000000   0x........         DC32     persistentState+0x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_21:
   \   00000000   0x........         DC32     `?<Constant "BURN in %dms">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_22:
   \   00000000   0x........         DC32     firstByte

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_23:
   \   00000000   0x........         DC32     secondByte

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_24:
   \   00000000   0x........         DC32     `?<Constant "ERROR: no second">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_25:
   \   00000000   0x........         DC32     BINARY_RESPONSE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_26:
   \   00000000   0x........         DC32     `?<Constant "TunerStudio: invalid ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_27:
   \   00000000   0x........         DC32     `?<Constant "ERROR: CRC header size">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_28:
   \   00000000   0x........         DC32     `?<Constant "ERROR: did not receiv...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_29:
   \   00000000   0x........         DC32     `?<Constant "unexpected command %x">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_30:
   \   00000000   0x........         DC32     `?<Constant "Got only %d bytes whi...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_31:
   \   00000000   0x........         DC32     `?<Constant "ERROR: not enough byt...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_32:
   \   00000000   0x........         DC32     `?<Constant "TunerStudio: CRC %x %...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_33:
   \   00000000   0x........         DC32     `?<Constant "TunerStudio: command ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_34:
   \   00000000   0x........         DC32     `?<Constant "ERROR: CRC issue">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_35:
   \   00000000   0x........         DC32     `?<Constant "got unexpected TunerS...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_36:
   \   00000000   0x........         DC32     rlist

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_37:
   \   00000000   0x........         DC32     `?<Constant "tunerstudio thread">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_38:
   \   00000000   0x........         DC32     tsChannel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_39:
   \   00000000   0x........         DC32     `?<Constant "got S/H (queryCommand...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_40:
   \   00000000   0x........         DC32     `?<Constant "MShift v0.01">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_41:
   \   00000000   0x........         DC32     tsOutputChannels

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_42:
   \   00000000   0x........         DC32     `?<Constant "got T (Test)">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_43:
   \   00000000   0x........         DC32     `?<Constant "8529">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_44:
   \   00000000   0x........         DC32     `?<Constant " ts_p_alive\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_45:
   \   00000000   0x........         DC32     console_line_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_46:
   \   00000000   0x........         DC32     `?<Constant "Got naked Query command">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_47:
   \   00000000   0x........         DC32     pageIn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_48:
   \   00000000   0x........         DC32     `?<Constant "ERROR: not enough for...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_49:
   \   00000000   0x........         DC32     `?<Constant "Got naked BURN">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_50:
   \   00000000   0x........         DC32     `?<Constant "ERROR: Not enough for...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_51:
   \   00000000   0x........         DC32     `?<Constant "Got naked CHUNK_WRITE">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_52:
   \   00000000   0x........         DC32     writeChunkRequest

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_53:
   \   00000000   0x........         DC32     `?<Constant "ERROR: Not enough for...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_54:
   \   00000000   0x........         DC32     `?<Constant "ERROR: Not enough for...">_2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_55:
   \   00000000   0x........         DC32     readRequest

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_56:
   \   00000000   0x........         DC32     `?<Constant "Not enough for plain ...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_57:
   \   00000000   0x........         DC32     `?<Constant "ignoring LEGACY_HELLO...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_58:
   \   00000000   0x........         DC32     `?<Constant "not ignoring F">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_59:
   \   00000000   0x........         DC32     `?<Constant "got Query command">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_60:
   \   00000000   0x........         DC32     `?<Constant "ignoring Q">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_61:
   \   00000000   0x........         DC32     `?<Constant "ignoring F">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_62:
   \   00000000   0x........         DC32     `?<Constant "ERROR: ignoring unexp...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_63:
   \   00000000   0x........         DC32     `?<Constant "TS page size mismatch...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_64:
   \   00000000   0x........         DC32     _Z12printTsStatsv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_65:
   \   00000000   0x........         DC32     `?<Constant "tsinfo">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_66:
   \   00000000   0x........         DC32     _Z7resetTsv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_67:
   \   00000000   0x........         DC32     `?<Constant "reset_ts">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_68:
   \   00000000   0x........         DC32     _Z10setTsSpeedi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_69:
   \   00000000   0x........         DC32     `?<Constant "set_ts_speed">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_70:
   \   00000000   0x........         DC32     tsCrcWriteBuffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_71:
   \   00000000   0x........         DC32     _Z18tsThreadEntryPointPv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_72:
   \   00000000   0x........         DC32     tsThreadStack

   \                                 In section .init_array, align 4, keep-with-next, root
   \   00000000   0x........         DC32    RELOC_ARM_TARGET1 __sti__routine

   \                                 In section .rodata, align 4
   \                     `?<Constant "TunerStudio size=%d /...">`:
   \   00000000   0x54 0x75          DC8 54H, 75H, 6EH, 65H, 72H, 53H, 74H, 75H
   \              0x6E 0x65    
   \              0x72 0x53    
   \              0x74 0x75    
   \   00000008   0x64 0x69          DC8 64H, 69H, 6FH, 20H, 73H, 69H, 7AH, 65H
   \              0x6F 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \   00000010   0x3D 0x25          DC8 3DH, 25H, 64H, 20H, 2FH, 20H, 74H, 6FH
   \              0x64 0x20    
   \              0x2F 0x20    
   \              0x74 0x6F    
   \   00000018   0x74 0x61          DC8 74H, 61H, 6CH, 3DH, 25H, 64H, 20H, 2FH
   \              0x6C 0x3D    
   \              0x25 0x64    
   \              0x20 0x2F    
   \   00000020   0x20 0x65          DC8 20H, 65H, 72H, 72H, 6FH, 72H, 73H, 3DH
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x73 0x3D    
   \   00000028   0x25 0x64          DC8 25H, 64H, 20H, 2FH, 20H, 48H, 3DH, 25H
   \              0x20 0x2F    
   \              0x20 0x48    
   \              0x3D 0x25    
   \   00000030   0x64 0x20          DC8 64H, 20H, 2FH, 20H, 4FH, 3DH, 25H, 64H
   \              0x2F 0x20    
   \              0x4F 0x3D    
   \              0x25 0x64    
   \   00000038   0x20 0x2F          DC8 20H, 2FH, 20H, 50H, 3DH, 25H, 64H, 20H
   \              0x20 0x50    
   \              0x3D 0x25    
   \              0x64 0x20    
   \   00000040   0x2F 0x20          DC8 2FH, 20H, 42H, 3DH, 25H, 64H, 0
   \              0x42 0x3D    
   \              0x25 0x64    
   \              0x00         
   \   00000047   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "TunerStudio W=%d / C=...">`:
   \   00000000   0x54 0x75          DC8 "TunerStudio W=%d / C=%d / P=%d / page=%d"
   \              0x6E 0x65    
   \              0x72 0x53    
   \              0x74 0x75    
   \              0x64 0x69    
   \              0x6F 0x20    
   \              0x57 0x3D    
   \              0x25 0x64    
   \              0x20 0x2F    
   \              0x20 0x43    
   \              0x3D 0x25    
   \              0x64 0x20    
   \              0x2F 0x20    
   \              0x50 0x3D    
   \              0x25 0x64    
   \              0x20 0x2F    
   \              0x20 0x70    
   \              0x61 0x67    
   \              0x65 0x3D    
   \              0x25 0x64    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "TS RX on %s%d/TX on %...">`:
   \   00000000   0x54 0x53          DC8 "TS RX on %s%d/TX on %s%d @%d"
   \              0x20 0x52    
   \              0x58 0x20    
   \              0x6F 0x6E    
   \              0x20 0x25    
   \              0x73 0x25    
   \              0x64 0x2F    
   \              0x54 0x58    
   \              0x20 0x6F    
   \              0x6E 0x20    
   \              0x25 0x73    
   \              0x25 0x64    
   \              0x20 0x40    
   \              0x25 0x64    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x73          DC8 "%s"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "PAGE %d">`:
   \   00000000   0x50 0x41          DC8 "PAGE %d"
   \              0x47 0x45    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "applying soft change ...">`:
   \   00000000   0x61 0x70          DC8 "applying soft change from %d length %d"
   \              0x70 0x6C    
   \              0x79 0x69    
   \              0x6E 0x67    
   \              0x20 0x73    
   \              0x6F 0x66    
   \              0x74 0x20    
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x20 0x66    
   \              0x72 0x6F    
   \              0x6D 0x20    
   \              0x25 0x64    
   \              0x20 0x6C    
   \              0x65 0x6E    
   \              0x67 0x74    
   \              0x68 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000027   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "WRITE CHUNK mode=%d p...">`:
   \   00000000   0x57 0x52          DC8 "WRITE CHUNK mode=%d p=%d o=%d s=%d"
   \              0x49 0x54    
   \              0x45 0x20    
   \              0x43 0x48    
   \              0x55 0x4E    
   \              0x4B 0x20    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x3D 0x25    
   \              0x64 0x20    
   \              0x70 0x3D    
   \              0x25 0x64    
   \              0x20 0x6F    
   \              0x3D 0x25    
   \              0x64 0x20    
   \              0x73 0x3D    
   \              0x25 0x64    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR invalid offset %d">`:
   \   00000000   0x45 0x52          DC8 "ERROR invalid offset %d"
   \              0x52 0x4F    
   \              0x52 0x20    
   \              0x69 0x6E    
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x6F 0x66    
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: out of range">`:
   \   00000000   0x45 0x52          DC8 "ERROR: out of range"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x6F    
   \              0x75 0x74    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x72 0x61    
   \              0x6E 0x67    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: unexpected count">`:
   \   00000000   0x45 0x52          DC8 "ERROR: unexpected count"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x75    
   \              0x6E 0x65    
   \              0x78 0x70    
   \              0x65 0x63    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x63 0x6F    
   \              0x75 0x6E    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR unexpected coun...">`:
   \   00000000   0x45 0x52          DC8 "ERROR unexpected count %d"
   \              0x52 0x4F    
   \              0x52 0x20    
   \              0x75 0x6E    
   \              0x65 0x78    
   \              0x70 0x65    
   \              0x63 0x74    
   \              0x65 0x64    
   \              0x20 0x63    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "CRC32 request: pageId...">`:
   \   00000000   0x43 0x52          DC8 "CRC32 request: pageId %d offset %d size %d"
   \              0x43 0x33    
   \              0x32 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x3A    
   \              0x20 0x70    
   \              0x61 0x67    
   \              0x65 0x49    
   \              0x64 0x20    
   \              0x25 0x64    
   \              0x20 0x6F    
   \              0x66 0x66    
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x25 0x64    
   \              0x20 0x73    
   \              0x69 0x7A    
   \              0x65 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "CRC32 response: %x">`:
   \   00000000   0x43 0x52          DC8 "CRC32 response: %x"
   \              0x43 0x33    
   \              0x32 0x20    
   \              0x72 0x65    
   \              0x73 0x70    
   \              0x6F 0x6E    
   \              0x73 0x65    
   \              0x3A 0x20    
   \              0x25 0x78    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "got W (Write)">`:
   \   00000000   0x67 0x6F          DC8 "got W (Write)"
   \              0x74 0x20    
   \              0x57 0x20    
   \              0x28 0x57    
   \              0x72 0x69    
   \              0x74 0x65    
   \              0x29 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: out of range2">`:
   \   00000000   0x45 0x52          DC8 "ERROR: out of range2"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x6F    
   \              0x75 0x74    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x72 0x61    
   \              0x6E 0x67    
   \              0x65 0x32    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR offset %d">`:
   \   00000000   0x45 0x52          DC8 "ERROR offset %d"
   \              0x52 0x4F    
   \              0x52 0x20    
   \              0x6F 0x66    
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "page %d offset %d: va...">`:
   \   00000000   0x70 0x61          DC8 "page %d offset %d: value=%d"
   \              0x67 0x65    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x6F 0x66    
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x20 0x25    
   \              0x64 0x3A    
   \              0x20 0x76    
   \              0x61 0x6C    
   \              0x75 0x65    
   \              0x3D 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "READ mode=%d page=%d ...">`:
   \   00000000   0x52 0x45          DC8 "READ mode=%d page=%d offset=%d size=%d"
   \              0x41 0x44    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x3D    
   \              0x25 0x64    
   \              0x20 0x70    
   \              0x61 0x67    
   \              0x65 0x3D    
   \              0x25 0x64    
   \              0x20 0x6F    
   \              0x66 0x66    
   \              0x73 0x65    
   \              0x74 0x3D    
   \              0x25 0x64    
   \              0x20 0x73    
   \              0x69 0x7A    
   \              0x65 0x3D    
   \              0x25 0x64    
   \              0x00         
   \   00000027   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: invalid page n...">`:
   \   00000000   0x45 0x52          DC8 "ERROR: invalid page number"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x69    
   \              0x6E 0x76    
   \              0x61 0x6C    
   \              0x69 0x64    
   \              0x20 0x70    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x6E 0x75    
   \              0x6D 0x62    
   \              0x65 0x72    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "invalid offset/count ...">`:
   \   00000000   0x69 0x6E          DC8 "invalid offset/count %d/%d"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x6F 0x66    
   \              0x66 0x73    
   \              0x65 0x74    
   \              0x2F 0x63    
   \              0x6F 0x75    
   \              0x6E 0x74    
   \              0x20 0x25    
   \              0x64 0x2F    
   \              0x25 0x64    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "got B (Burn) %s">`:
   \   00000000   0x67 0x6F          DC8 "got B (Burn) %s"
   \              0x74 0x20    
   \              0x42 0x20    
   \              0x28 0x42    
   \              0x75 0x72    
   \              0x6E 0x29    
   \              0x20 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "plain">`:
   \   00000000   0x70 0x6C          DC8 "plain"
   \              0x61 0x69    
   \              0x6E 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x43 0x52          DC8 "CRC"
   \              0x43 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "BURN in %dms">`:
   \   00000000   0x42 0x55          DC8 "BURN in %dms"
   \              0x52 0x4E    
   \              0x20 0x69    
   \              0x6E 0x20    
   \              0x25 0x64    
   \              0x6D 0x73    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: no second">`:
   \   00000000   0x45 0x52          DC8 "ERROR: no second"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x6E    
   \              0x6F 0x20    
   \              0x73 0x65    
   \              0x63 0x6F    
   \              0x6E 0x64    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "TunerStudio: invalid ...">`:
   \   00000000   0x54 0x75          DC8 "TunerStudio: invalid size: %d"
   \              0x6E 0x65    
   \              0x72 0x53    
   \              0x74 0x75    
   \              0x64 0x69    
   \              0x6F 0x3A    
   \              0x20 0x69    
   \              0x6E 0x76    
   \              0x61 0x6C    
   \              0x69 0x64    
   \              0x20 0x73    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: CRC header size">`:
   \   00000000   0x45 0x52          DC8 "ERROR: CRC header size"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x43    
   \              0x52 0x43    
   \              0x20 0x68    
   \              0x65 0x61    
   \              0x64 0x65    
   \              0x72 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: did not receiv...">`:
   \   00000000   0x45 0x52          DC8 "ERROR: did not receive command"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x64    
   \              0x69 0x64    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x72    
   \              0x65 0x63    
   \              0x65 0x69    
   \              0x76 0x65    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x61    
   \              0x6E 0x64    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "unexpected command %x">`:
   \   00000000   0x75 0x6E          DC8 "unexpected command %x"
   \              0x65 0x78    
   \              0x70 0x65    
   \              0x63 0x74    
   \              0x65 0x64    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x61    
   \              0x6E 0x64    
   \              0x20 0x25    
   \              0x78 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Got only %d bytes whi...">`:
   \   00000000   0x47 0x6F          DC8 47H, 6FH, 74H, 20H, 6FH, 6EH, 6CH, 79H
   \              0x74 0x20    
   \              0x6F 0x6E    
   \              0x6C 0x79    
   \   00000008   0x20 0x25          DC8 20H, 25H, 64H, 20H, 62H, 79H, 74H, 65H
   \              0x64 0x20    
   \              0x62 0x79    
   \              0x74 0x65    
   \   00000010   0x73 0x20          DC8 73H, 20H, 77H, 68H, 69H, 6CH, 65H, 20H
   \              0x77 0x68    
   \              0x69 0x6C    
   \              0x65 0x20    
   \   00000018   0x65 0x78          DC8 65H, 78H, 70H, 65H, 63H, 74H, 69H, 6EH
   \              0x70 0x65    
   \              0x63 0x74    
   \              0x69 0x6E    
   \   00000020   0x67 0x20          DC8 67H, 20H, 25H, 64H, 20H, 66H, 6FH, 72H
   \              0x25 0x64    
   \              0x20 0x66    
   \              0x6F 0x72    
   \   00000028   0x20 0x63          DC8 20H, 63H, 6FH, 6DH, 6DH, 61H, 6EH, 64H
   \              0x6F 0x6D    
   \              0x6D 0x61    
   \              0x6E 0x64    
   \   00000030   0x20 0x25          DC8 20H, 25H, 63H, 0
   \              0x63 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: not enough byt...">`:
   \   00000000   0x45 0x52          DC8 "ERROR: not enough bytes in stream"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x65    
   \              0x6E 0x6F    
   \              0x75 0x67    
   \              0x68 0x20    
   \              0x62 0x79    
   \              0x74 0x65    
   \              0x73 0x20    
   \              0x69 0x6E    
   \              0x20 0x73    
   \              0x74 0x72    
   \              0x65 0x61    
   \              0x6D 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "TunerStudio: CRC %x %...">`:
   \   00000000   0x54 0x75          DC8 "TunerStudio: CRC %x %x %x %x"
   \              0x6E 0x65    
   \              0x72 0x53    
   \              0x74 0x75    
   \              0x64 0x69    
   \              0x6F 0x3A    
   \              0x20 0x43    
   \              0x52 0x43    
   \              0x20 0x25    
   \              0x78 0x20    
   \              0x25 0x78    
   \              0x20 0x25    
   \              0x78 0x20    
   \              0x25 0x78    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "TunerStudio: command ...">`:
   \   00000000   0x54 0x75          DC8 "TunerStudio: command %c actual CRC %x/expected %x"
   \              0x6E 0x65    
   \              0x72 0x53    
   \              0x74 0x75    
   \              0x64 0x69    
   \              0x6F 0x3A    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x61    
   \              0x6E 0x64    
   \              0x20 0x25    
   \              0x63 0x20    
   \              0x61 0x63    
   \              0x74 0x75    
   \              0x61 0x6C    
   \              0x20 0x43    
   \              0x52 0x43    
   \              0x20 0x25    
   \              0x78 0x2F    
   \              0x65 0x78    
   \              0x70 0x65    
   \              0x63 0x74    
   \              0x65 0x64    
   \              0x20 0x25    
   \              0x78 0x00    
   \   00000032   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: CRC issue">`:
   \   00000000   0x45 0x52          DC8 "ERROR: CRC issue"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x43    
   \              0x52 0x43    
   \              0x20 0x69    
   \              0x73 0x73    
   \              0x75 0x65    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "got unexpected TunerS...">`:
   \   00000000   0x67 0x6F          DC8 "got unexpected TunerStudio command %x:%c\015\012"
   \              0x74 0x20    
   \              0x75 0x6E    
   \              0x65 0x78    
   \              0x70 0x65    
   \              0x63 0x74    
   \              0x65 0x64    
   \              0x20 0x54    
   \              0x75 0x6E    
   \              0x65 0x72    
   \              0x53 0x74    
   \              0x75 0x64    
   \              0x69 0x6F    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x61    
   \              0x6E 0x64    
   \              0x20 0x25    
   \              0x78 0x3A    
   \              0x25 0x63    
   \              0x0D 0x0A    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "tunerstudio thread">`:
   \   00000000   0x74 0x75          DC8 "tunerstudio thread"
   \              0x6E 0x65    
   \              0x72 0x73    
   \              0x74 0x75    
   \              0x64 0x69    
   \              0x6F 0x20    
   \              0x74 0x68    
   \              0x72 0x65    
   \              0x61 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "got S/H (queryCommand...">`:
   \   00000000   0x67 0x6F          DC8 "got S/H (queryCommand) mode=%d"
   \              0x74 0x20    
   \              0x53 0x2F    
   \              0x48 0x20    
   \              0x28 0x71    
   \              0x75 0x65    
   \              0x72 0x79    
   \              0x43 0x6F    
   \              0x6D 0x6D    
   \              0x61 0x6E    
   \              0x64 0x29    
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x3D    
   \              0x25 0x64    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "MShift v0.01">`:
   \   00000000   0x4D 0x53          DC8 "MShift v0.01"
   \              0x68 0x69    
   \              0x66 0x74    
   \              0x20 0x76    
   \              0x30 0x2E    
   \              0x30 0x31    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "got T (Test)">`:
   \   00000000   0x67 0x6F          DC8 "got T (Test)"
   \              0x74 0x20    
   \              0x54 0x20    
   \              0x28 0x54    
   \              0x65 0x73    
   \              0x74 0x29    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "8529">`:
   \   00000000   0x38 0x35          DC8 "8529"
   \              0x32 0x39    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant " ts_p_alive\\r\\n">`:
   \   00000000   0x20 0x74          DC8 " ts_p_alive\015\012"
   \              0x73 0x5F    
   \              0x70 0x5F    
   \              0x61 0x6C    
   \              0x69 0x76    
   \              0x65 0x0D    
   \              0x0A 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Got naked Query command">`:
   \   00000000   0x47 0x6F          DC8 "Got naked Query command"
   \              0x74 0x20    
   \              0x6E 0x61    
   \              0x6B 0x65    
   \              0x64 0x20    
   \              0x51 0x75    
   \              0x65 0x72    
   \              0x79 0x20    
   \              0x63 0x6F    
   \              0x6D 0x6D    
   \              0x61 0x6E    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: not enough for...">`:
   \   00000000   0x45 0x52          DC8 "ERROR: not enough for PAGE"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x65    
   \              0x6E 0x6F    
   \              0x75 0x67    
   \              0x68 0x20    
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x50 0x41    
   \              0x47 0x45    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Got naked BURN">`:
   \   00000000   0x47 0x6F          DC8 "Got naked BURN"
   \              0x74 0x20    
   \              0x6E 0x61    
   \              0x6B 0x65    
   \              0x64 0x20    
   \              0x42 0x55    
   \              0x52 0x4E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: Not enough for...">`:
   \   00000000   0x45 0x52          DC8 "ERROR: Not enough for plain burn"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x4E    
   \              0x6F 0x74    
   \              0x20 0x65    
   \              0x6E 0x6F    
   \              0x75 0x67    
   \              0x68 0x20    
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x70 0x6C    
   \              0x61 0x69    
   \              0x6E 0x20    
   \              0x62 0x75    
   \              0x72 0x6E    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Got naked CHUNK_WRITE">`:
   \   00000000   0x47 0x6F          DC8 "Got naked CHUNK_WRITE"
   \              0x74 0x20    
   \              0x6E 0x61    
   \              0x6B 0x65    
   \              0x64 0x20    
   \              0x43 0x48    
   \              0x55 0x4E    
   \              0x4B 0x5F    
   \              0x57 0x52    
   \              0x49 0x54    
   \              0x45 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: Not enough for...">_1`:
   \   00000000   0x45 0x52          DC8 45H, 52H, 52H, 4FH, 52H, 3AH, 20H, 4EH
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x4E    
   \   00000008   0x6F 0x74          DC8 6FH, 74H, 20H, 65H, 6EH, 6FH, 75H, 67H
   \              0x20 0x65    
   \              0x6E 0x6F    
   \              0x75 0x67    
   \   00000010   0x68 0x20          DC8 68H, 20H, 66H, 6FH, 72H, 20H, 70H, 6CH
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x70 0x6C    
   \   00000018   0x61 0x69          DC8 61H, 69H, 6EH, 20H, 63H, 68H, 75H, 6EH
   \              0x6E 0x20    
   \              0x63 0x68    
   \              0x75 0x6E    
   \   00000020   0x6B 0x20          DC8 6BH, 20H, 77H, 72H, 69H, 74H, 65H, 20H
   \              0x77 0x72    
   \              0x69 0x74    
   \              0x65 0x20    
   \   00000028   0x68 0x65          DC8 68H, 65H, 61H, 64H, 65H, 72H, 3AH, 20H
   \              0x61 0x64    
   \              0x65 0x72    
   \              0x3A 0x20    
   \   00000030   0x25 0x64          DC8 25H, 64H, 0
   \              0x00         
   \   00000033   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: Not enough for...">_2`:
   \   00000000   0x45 0x52          DC8 45H, 52H, 52H, 4FH, 52H, 3AH, 20H, 4EH
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x4E    
   \   00000008   0x6F 0x74          DC8 6FH, 74H, 20H, 65H, 6EH, 6FH, 75H, 67H
   \              0x20 0x65    
   \              0x6E 0x6F    
   \              0x75 0x67    
   \   00000010   0x68 0x20          DC8 68H, 20H, 66H, 6FH, 72H, 20H, 70H, 6CH
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x70 0x6C    
   \   00000018   0x61 0x69          DC8 61H, 69H, 6EH, 20H, 63H, 68H, 75H, 6EH
   \              0x6E 0x20    
   \              0x63 0x68    
   \              0x75 0x6E    
   \   00000020   0x6B 0x20          DC8 6BH, 20H, 77H, 72H, 69H, 74H, 65H, 20H
   \              0x77 0x72    
   \              0x69 0x74    
   \              0x65 0x20    
   \   00000028   0x63 0x6F          DC8 63H, 6FH, 6EH, 74H, 65H, 6EH, 74H, 3AH
   \              0x6E 0x74    
   \              0x65 0x6E    
   \              0x74 0x3A    
   \   00000030   0x20 0x25          DC8 20H, 25H, 64H, 20H, 77H, 68H, 69H, 6CH
   \              0x64 0x20    
   \              0x77 0x68    
   \              0x69 0x6C    
   \   00000038   0x65 0x20          DC8 65H, 20H, 65H, 78H, 70H, 65H, 63H, 74H
   \              0x65 0x78    
   \              0x70 0x65    
   \              0x63 0x74    
   \   00000040   0x69 0x6E          DC8 69H, 6EH, 67H, 20H, 25H, 64H, 0
   \              0x67 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000047   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Not enough for plain ...">`:
   \   00000000   0x4E 0x6F          DC8 "Not enough for plain read header"
   \              0x74 0x20    
   \              0x65 0x6E    
   \              0x6F 0x75    
   \              0x67 0x68    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x70    
   \              0x6C 0x61    
   \              0x69 0x6E    
   \              0x20 0x72    
   \              0x65 0x61    
   \              0x64 0x20    
   \              0x68 0x65    
   \              0x61 0x64    
   \              0x65 0x72    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ignoring LEGACY_HELLO...">`:
   \   00000000   0x69 0x67          DC8 "ignoring LEGACY_HELLO_COMMAND"
   \              0x6E 0x6F    
   \              0x72 0x69    
   \              0x6E 0x67    
   \              0x20 0x4C    
   \              0x45 0x47    
   \              0x41 0x43    
   \              0x59 0x5F    
   \              0x48 0x45    
   \              0x4C 0x4C    
   \              0x4F 0x5F    
   \              0x43 0x4F    
   \              0x4D 0x4D    
   \              0x41 0x4E    
   \              0x44 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "not ignoring F">`:
   \   00000000   0x6E 0x6F          DC8 "not ignoring F"
   \              0x74 0x20    
   \              0x69 0x67    
   \              0x6E 0x6F    
   \              0x72 0x69    
   \              0x6E 0x67    
   \              0x20 0x46    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x30 0x30          DC8 "001"
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "got Query command">`:
   \   00000000   0x67 0x6F          DC8 "got Query command"
   \              0x74 0x20    
   \              0x51 0x75    
   \              0x65 0x72    
   \              0x79 0x20    
   \              0x63 0x6F    
   \              0x6D 0x6D    
   \              0x61 0x6E    
   \              0x64 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ignoring Q">`:
   \   00000000   0x69 0x67          DC8 "ignoring Q"
   \              0x6E 0x6F    
   \              0x72 0x69    
   \              0x6E 0x67    
   \              0x20 0x51    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ignoring F">`:
   \   00000000   0x69 0x67          DC8 "ignoring F"
   \              0x6E 0x6F    
   \              0x72 0x69    
   \              0x6E 0x67    
   \              0x20 0x46    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERROR: ignoring unexp...">`:
   \   00000000   0x45 0x52          DC8 "ERROR: ignoring unexpected command"
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x69    
   \              0x67 0x6E    
   \              0x6F 0x72    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x75 0x6E    
   \              0x65 0x78    
   \              0x70 0x65    
   \              0x63 0x74    
   \              0x65 0x64    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x61    
   \              0x6E 0x64    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "TS page size mismatch...">`:
   \   00000000   0x54 0x53          DC8 "TS page size mismatch: %d/%d"
   \              0x20 0x70    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x20 0x6D    
   \              0x69 0x73    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x3A    
   \              0x20 0x25    
   \              0x64 0x2F    
   \              0x25 0x64    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "tsinfo">`:
   \   00000000   0x74 0x73          DC8 "tsinfo"
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "reset_ts">`:
   \   00000000   0x72 0x65          DC8 "reset_ts"
   \              0x73 0x65    
   \              0x74 0x5F    
   \              0x74 0x73    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "set_ts_speed">`:
   \   00000000   0x73 0x65          DC8 "set_ts_speed"
   \              0x74 0x5F    
   \              0x74 0x73    
   \              0x5F 0x73    
   \              0x70 0x65    
   \              0x65 0x64    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "binary">`:
   \   00000000   0x62 0x69          DC8 "binary"
   \              0x6E 0x61    
   \              0x72 0x79    
   \              0x00         
   \   00000007   0x00               DC8 0
    766          
    767          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   __sti__routine()
         8   -> LoggingWithStorage::LoggingWithStorage(char const *)
       0   getTunerStudioPageSize(int)
       0   getWorkingPageAddr(int)
      24   handleBurnCommand(ts_channel_s *, ts_response_format_e, uint16_t)
        24   -> currentTimeMillis
        24   -> memcpy
        24   -> requestBurn()
        24   -> scheduleMsg
        24   -> sendResponseCode(ts_response_format_e, ts_channel_s *, uint8_t)
      40   handleCrc32Check(ts_channel_s *, ts_response_format_e, uint16_t, uint16_t, uint16_t)
        40   -> crc32
        40   -> getTunerStudioPageSize(int)
        40   -> getWorkingPageAddr(int)
        40   -> scheduleMsg
        40   -> tsSendResponse(ts_channel_s *, ts_response_format_e, uint8_t const *, int)
      24   handleExecuteCommand(ts_channel_s *, char *, int)
        24   -- Indirect call
        24   -> efiTrim
        24   -> tunerStudioWriteCrcPacket(ts_channel_s *, uint8_t, void const *, uint16_t)
      16   handleGetText(ts_channel_s *)
        16   -> swapOutputBuffers(int *)
        16   -> tunerStudioWriteCrcPacket(ts_channel_s *, uint8_t, void const *, uint16_t)
      16   handleOutputChannelsCommand(ts_channel_s *, ts_response_format_e)
        16   -> prepareTunerStudioOutputs()
        16   -> tsSendResponse(ts_channel_s *, ts_response_format_e, uint8_t const *, int)
      40   handlePageReadCommand(ts_channel_s *, ts_response_format_e, uint16_t, uint16_t, uint16_t)
        40   -> getTunerStudioPageSize(int)
        40   -> getWorkingPageAddr(int)
        40   -> scheduleMsg
        40   -> sendErrorCode(ts_channel_s *)
        40   -> tsSendResponse(ts_channel_s *, ts_response_format_e, uint8_t const *, int)
        40   -> tunerStudioError(char const *)
      16   handlePageSelectCommand(ts_channel_s *, ts_response_format_e, uint16_t)
        16   -> scheduleMsg
        16   -> tsSendResponse(ts_channel_s *, ts_response_format_e, uint8_t const *, int)
      32   handlePlainCommand(ts_channel_s *, uint8_t)
        32   -- Indirect call
        32   -> handleBurnCommand(ts_channel_s *, ts_response_format_e, uint16_t)
        32   -> handleOutputChannelsCommand(ts_channel_s *, ts_response_format_e)
        32   -> handlePageReadCommand(ts_channel_s *, ts_response_format_e, uint16_t, uint16_t, uint16_t)
        32   -> handlePageSelectCommand(ts_channel_s *, ts_response_format_e, uint16_t)
        32   -> handleQueryCommand(ts_channel_s *, ts_response_format_e)
        32   -> handleTestCommand(ts_channel_s *)
        32   -> handleWriteChunkCommand(ts_channel_s *, ts_response_format_e, short, short, void *)
        32   -> scheduleMsg
        32   -> tunerStudioDebug(char const *)
        32   -> tunerStudioError(char const *)
        32   -> tunerStudioWriteData(ts_channel_s *, uint8_t const *, int)
      16   handleQueryCommand(ts_channel_s *, ts_response_format_e)
        16   -> printTsStats()
        16   -> scheduleMsg
        16   -> tsSendResponse(ts_channel_s *, ts_response_format_e, uint8_t const *, int)
       8   handleTestCommand(ts_channel_s *)
         8   -> tunerStudioDebug(char const *)
         8   -> tunerStudioWriteData(ts_channel_s *, uint8_t const *, int)
      40   handleWriteChunkCommand(ts_channel_s *, ts_response_format_e, short, short, void *)
        40   -> getTunerStudioPageSize(int)
        40   -> getWorkingPageAddr(int)
        40   -> memcpy
        40   -> scheduleMsg
        40   -> tsSendResponse(ts_channel_s *, ts_response_format_e, uint8_t const *, int)
        40   -> tunerStudioError(char const *)
        40   -> yellowMagic(int, int, int)
      32   handleWriteValueCommand(ts_channel_s *, ts_response_format_e, uint16_t, uint16_t, uint8_t)
        32   -> currentTimeMillis
        32   -> getTunerStudioPageSize(int)
        32   -> getWorkingPageAddr(int)
        32   -> scheduleMsg
        32   -> tunerStudioDebug(char const *)
        32   -> tunerStudioError(char const *)
        32   -> yellowMagic(int, int, int)
       0   isKnownCommand(char)
      16   memcpy
        16   -> __aeabi_memcpy
      16   memset
        16   -> __aeabi_memset
      24   printErrorCounters()
        24   -> scheduleMsg
      24   printTsStats()
        24   -> isSerialOverUart()
        24   -> portname(GPIO_TypeDef *)
        24   -> printErrorCounters()
        24   -> scheduleMsg
       8   requestBurn()
         8   -> incrementGlobalConfigurationVersion()
         8   -> setNeedToWriteConfiguration()
       8   resetTs()
         8   -> memset
      56   runBinaryProtocolLoop(ts_channel_s *, bool)
        56   -- Indirect call
        56   -> chThdSleep
        56   -> crc32
        56   -> handlePlainCommand(ts_channel_s *, uint8_t)
        56   -> isKnownCommand(char)
        56   -> print
        56   -> scheduleMsg
        56   -> sendErrorCode(ts_channel_s *)
        56   -> sendResponseCode(ts_response_format_e, ts_channel_s *, uint8_t)
        56   -> ts_serial_ready(bool)
        56   -> tunerStudioError(char const *)
        56   -> tunerStudioHandleCrcCommand(ts_channel_s *, char *, int)
        56   -> tunerStudioWriteData(ts_channel_s *, uint8_t const *, int)
       8   sendErrorCode(ts_channel_s *)
         8   -> tunerStudioWriteCrcPacket(ts_channel_s *, uint8_t, void const *, uint16_t)
      16   sendResponseCode(ts_response_format_e, ts_channel_s *, uint8_t)
        16   -> tunerStudioWriteCrcPacket(ts_channel_s *, uint8_t, void const *, uint16_t)
       8   setTsSpeed(int)
         8   -> printTsStats()
       8   startTunerStudioConnectivity()
         8   -> addConsoleAction
         8   -> addConsoleActionI
         8   -> chThdCreateStatic
         8   -> firmwareError
         8   -> getTsSerialDevice()
         8   -> getTunerStudioPageSize(int)
         8   -> memset
         8   -> syncTunerStudioCopy()
       8   syncTunerStudioCopy()
         8   -> memcpy
       8   tsThreadEntryPoint(void *)
         8   -> runBinaryProtocolLoop(ts_channel_s *, bool)
         8   -> startTsPort()
       8   ts_serial_ready(bool)
         8   -> isSerialOverUart()
         8   -> is_usb_serial_ready
       8   tunerStudioDebug(char const *)
         8   -> scheduleMsg
       8   tunerStudioError(char const *)
         8   -> printErrorCounters()
         8   -> tunerStudioDebug(char const *)
      40   tunerStudioHandleCrcCommand(ts_channel_s *, char *, int)
        40   -> handleBurnCommand(ts_channel_s *, ts_response_format_e, uint16_t)
        40   -> handleCrc32Check(ts_channel_s *, ts_response_format_e, uint16_t, uint16_t, uint16_t)
        40   -> handleExecuteCommand(ts_channel_s *, char *, int)
        40   -> handleGetText(ts_channel_s *)
        40   -> handleOutputChannelsCommand(ts_channel_s *, ts_response_format_e)
        40   -> handlePageReadCommand(ts_channel_s *, ts_response_format_e, uint16_t, uint16_t, uint16_t)
        40   -> handlePageSelectCommand(ts_channel_s *, ts_response_format_e, uint16_t)
        40   -> handleQueryCommand(ts_channel_s *, ts_response_format_e)
        40   -> handleTestCommand(ts_channel_s *)
        40   -> handleWriteChunkCommand(ts_channel_s *, ts_response_format_e, short, short, void *)
        40   -> handleWriteValueCommand(ts_channel_s *, ts_response_format_e, uint16_t, uint16_t, uint8_t)
        40   -> tunerStudioDebug(char const *)
        40   -> tunerStudioError(char const *)
      16   yellowMagic(int, int, int)
        16   -> memcpy
        16   -> scheduleMsg


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant " ts_p_alive\r\n">
       4  ?<Constant "%s">
       4  ?<Constant "001">
       8  ?<Constant "8529">
      16  ?<Constant "BURN in %dms">
       4  ?<Constant "CRC">
      44  ?<Constant "CRC32 request: pageId...">
      20  ?<Constant "CRC32 response: %x">
      24  ?<Constant "ERROR invalid offset %d">
      16  ?<Constant "ERROR offset %d">
      28  ?<Constant "ERROR unexpected coun...">
      24  ?<Constant "ERROR: CRC header size">
      20  ?<Constant "ERROR: CRC issue">
      36  ?<Constant "ERROR: Not enough for...">
      52  ?<Constant "ERROR: Not enough for...">_1
      72  ?<Constant "ERROR: Not enough for...">_2
      32  ?<Constant "ERROR: did not receiv...">
      36  ?<Constant "ERROR: ignoring unexp...">
      28  ?<Constant "ERROR: invalid page n...">
      20  ?<Constant "ERROR: no second">
      36  ?<Constant "ERROR: not enough byt...">
      28  ?<Constant "ERROR: not enough for...">
      20  ?<Constant "ERROR: out of range">
      24  ?<Constant "ERROR: out of range2">
      24  ?<Constant "ERROR: unexpected count">
      16  ?<Constant "Got naked BURN">
      24  ?<Constant "Got naked CHUNK_WRITE">
      24  ?<Constant "Got naked Query command">
      52  ?<Constant "Got only %d bytes whi...">
      16  ?<Constant "MShift v0.01">
      36  ?<Constant "Not enough for plain ...">
       8  ?<Constant "PAGE %d">
      40  ?<Constant "READ mode=%d page=%d ...">
      32  ?<Constant "TS RX on %s%d/TX on %...">
      32  ?<Constant "TS page size mismatch...">
      44  ?<Constant "TunerStudio W=%d / C=...">
      72  ?<Constant "TunerStudio size=%d /...">
      32  ?<Constant "TunerStudio: CRC %x %...">
      52  ?<Constant "TunerStudio: command ...">
      32  ?<Constant "TunerStudio: invalid ...">
      36  ?<Constant "WRITE CHUNK mode=%d p...">
      40  ?<Constant "applying soft change ...">
       8  ?<Constant "binary">
      16  ?<Constant "got B (Burn) %s">
      20  ?<Constant "got Query command">
      32  ?<Constant "got S/H (queryCommand...">
      16  ?<Constant "got T (Test)">
      16  ?<Constant "got W (Write)">
      44  ?<Constant "got unexpected TunerS...">
      12  ?<Constant "ignoring F">
      32  ?<Constant "ignoring LEGACY_HELLO...">
      12  ?<Constant "ignoring Q">
      28  ?<Constant "invalid offset/count ...">
      16  ?<Constant "not ignoring F">
      28  ?<Constant "page %d offset %d: va...">
       8  ?<Constant "plain">
      12  ?<Constant "reset_ts">
      16  ?<Constant "set_ts_speed">
       8  ?<Constant "tsinfo">
      20  ?<Constant "tunerstudio thread">
      24  ?<Constant "unexpected command %x">
       4  ??DataTable10
       4  ??DataTable14
       4  ??DataTable22
       4  ??DataTable22_1
       4  ??DataTable22_2
       4  ??DataTable22_3
       4  ??DataTable22_4
       4  ??DataTable22_5
       4  ??DataTable22_6
       4  ??DataTable22_7
       4  ??DataTable23
       4  ??DataTable23_1
       4  ??DataTable23_2
       4  ??DataTable23_3
       4  ??DataTable23_4
       4  ??DataTable24
       4  ??DataTable24_1
       4  ??DataTable24_10
       4  ??DataTable24_11
       4  ??DataTable24_12
       4  ??DataTable24_13
       4  ??DataTable24_14
       4  ??DataTable24_15
       4  ??DataTable24_16
       4  ??DataTable24_17
       4  ??DataTable24_18
       4  ??DataTable24_19
       4  ??DataTable24_2
       4  ??DataTable24_20
       4  ??DataTable24_21
       4  ??DataTable24_22
       4  ??DataTable24_23
       4  ??DataTable24_24
       4  ??DataTable24_25
       4  ??DataTable24_26
       4  ??DataTable24_27
       4  ??DataTable24_28
       4  ??DataTable24_29
       4  ??DataTable24_3
       4  ??DataTable24_30
       4  ??DataTable24_31
       4  ??DataTable24_32
       4  ??DataTable24_33
       4  ??DataTable24_34
       4  ??DataTable24_35
       4  ??DataTable24_36
       4  ??DataTable24_37
       4  ??DataTable24_38
       4  ??DataTable24_39
       4  ??DataTable24_4
       4  ??DataTable24_40
       4  ??DataTable24_41
       4  ??DataTable24_42
       4  ??DataTable24_43
       4  ??DataTable24_44
       4  ??DataTable24_45
       4  ??DataTable24_46
       4  ??DataTable24_47
       4  ??DataTable24_48
       4  ??DataTable24_49
       4  ??DataTable24_5
       4  ??DataTable24_50
       4  ??DataTable24_51
       4  ??DataTable24_52
       4  ??DataTable24_53
       4  ??DataTable24_54
       4  ??DataTable24_55
       4  ??DataTable24_56
       4  ??DataTable24_57
       4  ??DataTable24_58
       4  ??DataTable24_59
       4  ??DataTable24_6
       4  ??DataTable24_60
       4  ??DataTable24_61
       4  ??DataTable24_62
       4  ??DataTable24_63
       4  ??DataTable24_64
       4  ??DataTable24_65
       4  ??DataTable24_66
       4  ??DataTable24_67
       4  ??DataTable24_68
       4  ??DataTable24_69
       4  ??DataTable24_7
       4  ??DataTable24_70
       4  ??DataTable24_71
       4  ??DataTable24_72
       4  ??DataTable24_8
       4  ??DataTable24_9
       2  BINARY_RESPONSE
      16  __sti__routine()
   15288  configWorkingCopy
       2  currentPageId
       1  firstByte
      16  getTunerStudioPageSize(int)
      16  getWorkingPageAddr(int)
     112  handleBurnCommand(ts_channel_s *, ts_response_format_e, uint16_t)
     196  handleCrc32Check(ts_channel_s *, ts_response_format_e, uint16_t, uint16_t, uint16_t)
      44  handleExecuteCommand(ts_channel_s *, char *, int)
      28  handleGetText(ts_channel_s *)
      38  handleOutputChannelsCommand(ts_channel_s *, ts_response_format_e)
     194  handlePageReadCommand(ts_channel_s *, ts_response_format_e, uint16_t, uint16_t, uint16_t)
      64  handlePageSelectCommand(ts_channel_s *, ts_response_format_e, uint16_t)
     522  handlePlainCommand(ts_channel_s *, uint8_t)
      58  handleQueryCommand(ts_channel_s *, ts_response_format_e)
      38  handleTestCommand(ts_channel_s *)
     224  handleWriteChunkCommand(ts_channel_s *, ts_response_format_e, short, short, void *)
     196  handleWriteValueCommand(ts_channel_s *, ts_response_format_e, uint16_t, uint16_t, uint8_t)
      76  isKnownCommand(char)
      22  memcpy
      22  memset
       2  pageIn
       4  previousWriteReportMs
     110  printErrorCounters()
      70  printTsStats()
       8  readRequest
      12  requestBurn()
      16  resetTs()
     542  runBinaryProtocolLoop(ts_channel_s *, bool)
       1  secondByte
      18  sendErrorCode(ts_channel_s *)
      30  sendResponseCode(ts_response_format_e, ts_channel_s *, uint8_t)
      20  setTsSpeed(int)
     106  startTunerStudioConnectivity()
      20  syncTunerStudioCopy()
     308  tsChannel
     300  tsCrcWriteBuffer
     260  tsLogger
     196  tsOutputChannels
      40  tsState
      32  tsThreadEntryPoint(void *)
    1512  tsThreadStack
      26  ts_serial_ready(bool)
      18  tunerStudioDebug(char const *)
      30  tunerStudioError(char const *)
     380  tunerStudioHandleCrcCommand(ts_channel_s *, char *, int)
       8  writeChunkRequest
      54  yellowMagic(int, int, int)
       4  -- Other

 
 17 930 bytes in section .bss
      2 bytes in section .data
      4 bytes in section .init_array
  1 592 bytes in section .rodata
  3 718 bytes in section .text
 
  3 678 bytes of CODE  memory (+ 44 bytes shared)
  1 592 bytes of CONST memory
 17 932 bytes of DATA  memory

Errors: none
Warnings: 2
