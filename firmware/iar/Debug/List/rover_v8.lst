###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:25 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\config\engines\r #
#                       over_v8.cpp                                           #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\config\engines\r #
#                       over_v8.cpp -lCN F:\stuff\rusefi_sourceforge\firmware #
#                       \iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\Debug\List\ -o F:\stuff\rusefi_sourceforge\f #
#                       irmware\iar\Debug\Obj\ --no_cse --no_unroll           #
#                       --no_inline --no_code_motion --no_tbaa                #
#                       --no_clustering --no_scheduling --debug               #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\r #
#                       over_v8.lst                                           #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\ro #
#                       ver_v8.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\config\engines\rover_v8.cpp
      1          /**
      2           * @file	rover_v8.cpp
      3           *
      4           * V8, firing order 18436572
      5           *
      6           * This config overrides some values of the default configuration which is set by setDefaultConfiguration() method
      7           *
      8           * set_engine_type 10
      9           *
     10           * ROVER_V8 = 10
     11           *
     12           * @date Jun 27, 2014
     13           * @author Andrey Belomutskiy, (c) 2012-2015
     14           */
     15          
     16          #include "main.h"
     17          #include "rover_v8.h"
     18          

   \                                 In section .text, align 2, keep-with-next
     19          void setFrankenstein_01_LCD(board_configuration_s *boardConfiguration) {
     20          	boardConfiguration->HD44780_rs = GPIOE_9;
   \                     _Z22setFrankenstein_01_LCDP21board_configuration_s:
   \   00000000   0x2149             MOVS     R1,#+73
   \   00000002   0xF8C0 0x10B0      STR      R1,[R0, #+176]
     21          	boardConfiguration->HD44780_e = GPIOE_11;
   \   00000006   0x214B             MOVS     R1,#+75
   \   00000008   0xF8C0 0x10B4      STR      R1,[R0, #+180]
     22          	boardConfiguration->HD44780_db4 = GPIOE_13;
   \   0000000C   0x214D             MOVS     R1,#+77
   \   0000000E   0xF8C0 0x10B8      STR      R1,[R0, #+184]
     23          	boardConfiguration->HD44780_db5 = GPIOE_15;
   \   00000012   0x214F             MOVS     R1,#+79
   \   00000014   0xF8C0 0x10BC      STR      R1,[R0, #+188]
     24          	boardConfiguration->HD44780_db6 = GPIOB_11;
   \   00000018   0x211B             MOVS     R1,#+27
   \   0000001A   0xF8C0 0x10C0      STR      R1,[R0, #+192]
     25          	boardConfiguration->HD44780_db7 = GPIOB_13;
   \   0000001E   0x211D             MOVS     R1,#+29
   \   00000020   0xF8C0 0x10C4      STR      R1,[R0, #+196]
     26          }
   \   00000024   0x4770             BX       LR               ;; return
     27          
     28          EXTERN_ENGINE;
     29          

   \                                 In section .text, align 2, keep-with-next
     30          void setRoverv8(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z10setRoverv8v:
   \   00000000   0xB580             PUSH     {R7,LR}
     31          	setOperationMode(engineConfiguration, FOUR_STROKE_CRANK_SENSOR);
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x....             LDR.N    R0,??DataTable0
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x.... 0x....      BL       _Z16setOperationModeP22engine_configuration_s16operation_mode_e
     32          	engineConfiguration->trigger.type = TT_TOOTHED_WHEEL_36_1;
   \   0000000C   0x....             LDR.N    R0,??DataTable0
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x2109             MOVS     R1,#+9
   \   00000012   0xF8C0 0x1218      STR      R1,[R0, #+536]
     33          
     34          	engineConfiguration->specs.displacement = 3.528;
   \   00000016   0x....             LDR.N    R0,??DataTable0
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x....             LDR.N    R1,??DataTable0_1  ;; 0x4061cac1
   \   0000001C   0xF8C0 0x1190      STR      R1,[R0, #+400]
     35          	engineConfiguration->specs.cylindersCount = 8;
   \   00000020   0x....             LDR.N    R0,??DataTable0
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x2108             MOVS     R1,#+8
   \   00000026   0xF8C0 0x1194      STR      R1,[R0, #+404]
     36          	engineConfiguration->specs.firingOrder = FO_1_8_4_3_6_5_7_2;
   \   0000002A   0x....             LDR.N    R0,??DataTable0
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x2105             MOVS     R1,#+5
   \   00000030   0xF8C0 0x1198      STR      R1,[R0, #+408]
     37          
     38          	// set_rpm_hard_limit 4000
     39          	engineConfiguration->rpmHardLimit = 4000; // yes, 4k. let's play it safe for now
   \   00000034   0x....             LDR.N    R0,??DataTable0
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF44F 0x617A      MOV      R1,#+4000
   \   0000003C   0xF8C0 0x11A4      STR      R1,[R0, #+420]
     40          	// set_cranking_rpm 550
     41          	engineConfiguration->cranking.rpm = 550;
   \   00000040   0x....             LDR.N    R0,??DataTable0
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0xF240 0x2126      MOVW     R1,#+550
   \   00000048   0xF8A0 0x1060      STRH     R1,[R0, #+96]
     42          
     43          	// set_whole_fuel_map 3
     44          	setWholeFuelMap(3 PASS_ENGINE_PARAMETER);
   \   0000004C   0xEEB0 0x0A08      VMOV.F32 S0,#3.0
   \   00000050   0x.... 0x....      BL       _Z15setWholeFuelMapf
     45          
     46          	// set_cranking_injection_mode 0
     47          	engineConfiguration->crankingInjectionMode = IM_SIMULTANEOUS;
   \   00000054   0x....             LDR.N    R0,??DataTable0
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x2100             MOVS     R1,#+0
   \   0000005A   0xF8C0 0x11AC      STR      R1,[R0, #+428]
     48          	// set_injection_mode 1
     49          	engineConfiguration->injectionMode = IM_SEQUENTIAL;
   \   0000005E   0x....             LDR.N    R0,??DataTable0
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x2101             MOVS     R1,#+1
   \   00000064   0xF8C0 0x11B0      STR      R1,[R0, #+432]
     50          
     51          	// set_ignition_mode 2
     52          	engineConfiguration->ignitionMode = IM_WASTED_SPARK;
   \   00000068   0x....             LDR.N    R0,??DataTable0
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0x2102             MOVS     R1,#+2
   \   0000006E   0xF8C0 0x11BC      STR      R1,[R0, #+444]
     53          
     54          	// Frankenstein: low side - out #1: PC14
     55          	// Frankenstein: low side - out #2: PC15
     56          	// Frankenstein: low side - out #3: PE6
     57          	// Frankenstein: low side - out #4: PC13
     58          	// Frankenstein: low side - out #5: PE4
     59          	// Frankenstein: low side - out #6: PE5
     60          	// Frankenstein: low side - out #7: PE2
     61          	// Frankenstein: low side - out #8: PE3
     62          	// Frankenstein: low side - out #9: PE0
     63          	// Frankenstein: low side - out #10: PE1
     64          	// Frankenstein: low side - out #11: PB8
     65          	// Frankenstein: low side - out #12: PB9
     66          
     67          	boardConfiguration->injectionPins[0] = GPIOB_9; // Frankenstein: low side - out #12
   \   00000072   0x....             LDR.N    R0,??DataTable0_2
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x2119             MOVS     R1,#+25
   \   00000078   0x6201             STR      R1,[R0, #+32]
     68          	boardConfiguration->injectionPins[1] = GPIOB_8; // Frankenstein: low side - out #11
   \   0000007A   0x....             LDR.N    R0,??DataTable0_2
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x2118             MOVS     R1,#+24
   \   00000080   0x6241             STR      R1,[R0, #+36]
     69          	boardConfiguration->injectionPins[2] = GPIOE_3; // Frankenstein: low side - out #8
   \   00000082   0x....             LDR.N    R0,??DataTable0_2
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0x2143             MOVS     R1,#+67
   \   00000088   0x6281             STR      R1,[R0, #+40]
     70          	boardConfiguration->injectionPins[3] = GPIOE_5; // Frankenstein: low side - out #6
   \   0000008A   0x....             LDR.N    R0,??DataTable0_2
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0x2145             MOVS     R1,#+69
   \   00000090   0x62C1             STR      R1,[R0, #+44]
     71          
     72          	boardConfiguration->fuelPumpPin = GPIOC_13; // Frankenstein: low side - out #4
   \   00000092   0x....             LDR.N    R0,??DataTable0_2
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x212D             MOVS     R1,#+45
   \   00000098   0x6181             STR      R1,[R0, #+24]
     73          	boardConfiguration->fuelPumpPinMode = OM_DEFAULT;
   \   0000009A   0x....             LDR.N    R0,??DataTable0_2
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x2100             MOVS     R1,#+0
   \   000000A0   0x61C1             STR      R1,[R0, #+28]
     74          
     75          	// set_injection_pin_mode 0
     76          	boardConfiguration->injectionPinMode = OM_DEFAULT;
   \   000000A2   0x....             LDR.N    R0,??DataTable0_2
   \   000000A4   0x6800             LDR      R0,[R0, #+0]
   \   000000A6   0x2100             MOVS     R1,#+0
   \   000000A8   0x6501             STR      R1,[R0, #+80]
     77          
     78          	boardConfiguration->canTxPin = GPIOB_6;
   \   000000AA   0x....             LDR.N    R0,??DataTable0_2
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x2116             MOVS     R1,#+22
   \   000000B0   0xF8C0 0x1158      STR      R1,[R0, #+344]
     79          	boardConfiguration->canRxPin = GPIOB_12;
   \   000000B4   0x....             LDR.N    R0,??DataTable0_2
   \   000000B6   0x6800             LDR      R0,[R0, #+0]
   \   000000B8   0x211C             MOVS     R1,#+28
   \   000000BA   0xF8C0 0x115C      STR      R1,[R0, #+348]
     80          	engineConfiguration->canWriteEnabled = true;
   \   000000BE   0x....             LDR.N    R0,??DataTable0
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0xF890 0x05D9      LDRB     R0,[R0, #+1497]
   \   000000C6   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000000CA   0x....             LDR.N    R1,??DataTable0
   \   000000CC   0x6809             LDR      R1,[R1, #+0]
   \   000000CE   0xF881 0x05D9      STRB     R0,[R1, #+1497]
     81          	engineConfiguration->canReadEnabled = false;
   \   000000D2   0x....             LDR.N    R0,??DataTable0
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0xF890 0x05D9      LDRB     R0,[R0, #+1497]
   \   000000DA   0xF010 0x00FE      ANDS     R0,R0,#0xFE
   \   000000DE   0x....             LDR.N    R1,??DataTable0
   \   000000E0   0x6809             LDR      R1,[R1, #+0]
   \   000000E2   0xF881 0x05D9      STRB     R0,[R1, #+1497]
     82          	engineConfiguration->isCanEnabled = true;
   \   000000E6   0x....             LDR.N    R0,??DataTable0
   \   000000E8   0x6800             LDR      R0,[R0, #+0]
   \   000000EA   0xF890 0x05D8      LDRB     R0,[R0, #+1496]
   \   000000EE   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   000000F2   0x....             LDR.N    R1,??DataTable0
   \   000000F4   0x6809             LDR      R1,[R1, #+0]
   \   000000F6   0xF881 0x05D8      STRB     R0,[R1, #+1496]
     83          	engineConfiguration->canNbcType = CAN_BUS_MAZDA_RX8;
   \   000000FA   0x....             LDR.N    R0,??DataTable0
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x2103             MOVS     R1,#+3
   \   00000100   0xF8C0 0x11EC      STR      R1,[R0, #+492]
     84          }
   \   00000104   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     engineConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x4061CAC1         DC32     0x4061cac1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     boardConfiguration

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   setFrankenstein_01_LCD(board_configuration_s *)
       8   setRoverv8()
         8   -> setOperationMode(engine_configuration_s *, operation_mode_e)
         8   -> setWholeFuelMap(float)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
      38  setFrankenstein_01_LCD(board_configuration_s *)
     262  setRoverv8()

 
 312 bytes in section .text
 
 312 bytes of CODE memory

Errors: none
Warnings: 1
