###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:54 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\config\engines\m #
#                       itsubishi.cpp                                         #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\config\engines\m #
#                       itsubishi.cpp -lCN F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\Debug\List\ -o                             #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\   #
#                       --no_cse --no_unroll --no_inline --no_code_motion     #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\m #
#                       itsubishi.lst                                         #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\mi #
#                       tsubishi.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\config\engines\mitsubishi.cpp
      1          /**
      2           * @file	mitsubishi.cpp
      3           *
      4           * MITSU_4G93 16
      5           *
      6           * set_engine_type 16
      7           *
      8           * @date Aug 5, 2014
      9           * @author Andrey Belomutskiy, (c) 2012-2015
     10           */
     11          
     12          #include "fsio_impl.h"
     13          #include "mitsubishi.h"
     14          #include "allsensors.h"
     15          
     16          EXTERN_ENGINE;
     17          

   \                                 In section .text, align 4, keep-with-next
     18          void setMitsubishiConfiguration(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z26setMitsubishiConfigurationv:
   \   00000000   0xB580             PUSH     {R7,LR}
     19          	engineConfiguration->engineType = MITSU_4G93;
   \   00000002   0x483C             LDR.N    R0,??setMitsubishiConfiguration_0
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x6001             STR      R1,[R0, #+0]
     20          
     21          	engineConfiguration->trigger.type = TT_MITSU;
   \   0000000A   0x483A             LDR.N    R0,??setMitsubishiConfiguration_0
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x210B             MOVS     R1,#+11
   \   00000010   0xF8C0 0x1218      STR      R1,[R0, #+536]
     22          
     23          	engineConfiguration->specs.cylindersCount = 4;
   \   00000014   0x4837             LDR.N    R0,??setMitsubishiConfiguration_0
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x2104             MOVS     R1,#+4
   \   0000001A   0xF8C0 0x1194      STR      R1,[R0, #+404]
     24          	engineConfiguration->specs.displacement = 1.800;
   \   0000001E   0x4835             LDR.N    R0,??setMitsubishiConfiguration_0
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x4935             LDR.N    R1,??setMitsubishiConfiguration_0+0x4  ;; 0x3fe66666
   \   00000024   0xF8C0 0x1190      STR      R1,[R0, #+400]
     25          
     26          	// set_ignition_mode 2
     27          	engineConfiguration->ignitionMode = IM_WASTED_SPARK;
   \   00000028   0x4832             LDR.N    R0,??setMitsubishiConfiguration_0
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x2102             MOVS     R1,#+2
   \   0000002E   0xF8C0 0x11BC      STR      R1,[R0, #+444]
     28          	engineConfiguration->specs.firingOrder = FO_1_THEN_3_THEN_4_THEN2;
   \   00000032   0x4830             LDR.N    R0,??setMitsubishiConfiguration_0
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0x2101             MOVS     R1,#+1
   \   00000038   0xF8C0 0x1198      STR      R1,[R0, #+408]
     29          
     30          	// set_global_trigger_offset_angle 671
     31          	engineConfiguration->globalTriggerAngleOffset = 671;
   \   0000003C   0x482D             LDR.N    R0,??setMitsubishiConfiguration_0
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x492E             LDR.N    R1,??setMitsubishiConfiguration_0+0x8  ;; 0x4427c000
   \   00000042   0xF8C0 0x11CC      STR      R1,[R0, #+460]
     32          
     33          	// set_cranking_rpm 550
     34          	engineConfiguration->cranking.rpm = 550;
   \   00000046   0x482B             LDR.N    R0,??setMitsubishiConfiguration_0
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF240 0x2126      MOVW     R1,#+550
   \   0000004E   0xF8A0 0x1060      STRH     R1,[R0, #+96]
     35          	// set_cranking_charge_angle 70
     36          	engineConfiguration->crankingChargeAngle = 70;
   \   00000052   0x4828             LDR.N    R0,??setMitsubishiConfiguration_0
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x492A             LDR.N    R1,??setMitsubishiConfiguration_0+0xC  ;; 0x428c0000
   \   00000058   0x66C1             STR      R1,[R0, #+108]
     37          	// set_cranking_timing_angle 715
     38          	engineConfiguration->crankingTimingAngle = -715;
   \   0000005A   0x4826             LDR.N    R0,??setMitsubishiConfiguration_0
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0x4929             LDR.N    R1,??setMitsubishiConfiguration_0+0x10  ;; 0xc432c000
   \   00000060   0xF8C0 0x11B8      STR      R1,[R0, #+440]
     39          
     40          	// set_whole_fuel_map 3
     41          	setWholeFuelMap(3 PASS_ENGINE_PARAMETER);
   \   00000064   0xEEB0 0x0A08      VMOV.F32 S0,#3.0
   \   00000068   0x.... 0x....      BL       _Z15setWholeFuelMapf
     42          
     43          	// set_cranking_fuel 4
     44          	engineConfiguration->cranking.baseFuel = 4;
   \   0000006C   0x4821             LDR.N    R0,??setMitsubishiConfiguration_0
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF05F 0x4181      MOVS     R1,#+1082130432
   \   00000074   0x65C1             STR      R1,[R0, #+92]
     45          
     46          //	/**
     47          //	 * 29150 Ohm @ 40C
     48          //	 * 10160 Ohm @ 70C
     49          //	 * 1270 Ohm @ 150C
     50          //	 */
     51          //	setThermistorConfiguration(&engineConfiguration->clt, 40, 29150, 70, 10160, 150, 1270);
     52          
     53          	setCommonNTCSensor(&engineConfiguration->clt);
   \   00000076   0x481F             LDR.N    R0,??setMitsubishiConfiguration_0
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0xF510 0x7080      ADDS     R0,R0,#+256
   \   0000007E   0x.... 0x....      BL       _Z18setCommonNTCSensorP14ThermistorConf
     54          
     55          
     56          	engineConfiguration->clt.config.bias_resistor = 2700;
   \   00000082   0x481C             LDR.N    R0,??setMitsubishiConfiguration_0
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0x4920             LDR.N    R1,??setMitsubishiConfiguration_0+0x14  ;; 0x4528c000
   \   00000088   0xF8C0 0x1118      STR      R1,[R0, #+280]
     57          
     58          	// Frankenstein: low side - out #1: PC14
     59          	// Frankenstein: low side - out #2: PC15
     60          	// Frankenstein: low side - out #3: PE6
     61          	// Frankenstein: low side - out #4: PC13
     62          	// Frankenstein: low side - out #5: PE4
     63          	// Frankenstein: low side - out #6: PE5
     64          	// Frankenstein: low side - out #7: PE2
     65          	// Frankenstein: low side - out #8: PE3
     66          	// Frankenstein: low side - out #9: PE0
     67          	// Frankenstein: low side - out #10: PE1
     68          	// Frankenstein: low side - out #11: PB8
     69          	// Frankenstein: low side - out #12: PB9
     70          
     71          	boardConfiguration->injectionPins[0] = GPIOB_9; // Frankenstein: low side - out #12
   \   0000008C   0x481F             LDR.N    R0,??setMitsubishiConfiguration_0+0x18
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x2119             MOVS     R1,#+25
   \   00000092   0x6201             STR      R1,[R0, #+32]
     72          	boardConfiguration->injectionPins[1] = GPIOB_8; // Frankenstein: low side - out #11
   \   00000094   0x481D             LDR.N    R0,??setMitsubishiConfiguration_0+0x18
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x2118             MOVS     R1,#+24
   \   0000009A   0x6241             STR      R1,[R0, #+36]
     73          	boardConfiguration->injectionPins[2] = GPIOE_3; // Frankenstein: low side - out #8
   \   0000009C   0x481B             LDR.N    R0,??setMitsubishiConfiguration_0+0x18
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0x2143             MOVS     R1,#+67
   \   000000A2   0x6281             STR      R1,[R0, #+40]
     74          	boardConfiguration->injectionPins[3] = GPIOE_5; // Frankenstein: low side - out #6
   \   000000A4   0x4819             LDR.N    R0,??setMitsubishiConfiguration_0+0x18
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0x2145             MOVS     R1,#+69
   \   000000AA   0x62C1             STR      R1,[R0, #+44]
     75          
     76          
     77          	// Frankenstein: high side #1: PE8
     78          	// Frankenstein: high side #2: PE10
     79          
     80          	boardConfiguration->ignitionPins[0] = GPIOE_8; // Frankenstein: high side #1
   \   000000AC   0x4817             LDR.N    R0,??setMitsubishiConfiguration_0+0x18
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x2148             MOVS     R1,#+72
   \   000000B2   0x6541             STR      R1,[R0, #+84]
     81          	boardConfiguration->ignitionPins[1] = GPIO_UNASSIGNED;
   \   000000B4   0x4815             LDR.N    R0,??setMitsubishiConfiguration_0+0x18
   \   000000B6   0x6800             LDR      R0,[R0, #+0]
   \   000000B8   0x2150             MOVS     R1,#+80
   \   000000BA   0x6581             STR      R1,[R0, #+88]
     82          	boardConfiguration->ignitionPins[2] = GPIOE_10; // // Frankenstein: high side #2
   \   000000BC   0x4813             LDR.N    R0,??setMitsubishiConfiguration_0+0x18
   \   000000BE   0x6800             LDR      R0,[R0, #+0]
   \   000000C0   0x214A             MOVS     R1,#+74
   \   000000C2   0x65C1             STR      R1,[R0, #+92]
     83          	boardConfiguration->ignitionPins[3] = GPIO_UNASSIGNED;
   \   000000C4   0x4811             LDR.N    R0,??setMitsubishiConfiguration_0+0x18
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0x2150             MOVS     R1,#+80
   \   000000CA   0x6601             STR      R1,[R0, #+96]
     84          
     85          	engineConfiguration->HD44780width = 20;
   \   000000CC   0x4809             LDR.N    R0,??setMitsubishiConfiguration_0
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0x2114             MOVS     R1,#+20
   \   000000D2   0xF8C0 0x1204      STR      R1,[R0, #+516]
     86          	engineConfiguration->HD44780height = 4;
   \   000000D6   0x4807             LDR.N    R0,??setMitsubishiConfiguration_0
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0x2104             MOVS     R1,#+4
   \   000000DC   0xF8C0 0x1208      STR      R1,[R0, #+520]
     87          
     88          	setEgoSensor(ES_Innovate_MTX_L PASS_ENGINE_PARAMETER);
   \   000000E0   0x2001             MOVS     R0,#+1
   \   000000E2   0x.... 0x....      BL       _Z12setEgoSensor12ego_sensor_e
     89          #if EFI_FSIO || defined(__DOXYGEN__)
     90          	setFsio(0, GPIOD_11, "rpm 5500 >" PASS_ENGINE_PARAMETER);
   \   000000E6   0x4A0A             LDR.N    R2,??setMitsubishiConfiguration_0+0x1C
   \   000000E8   0x213B             MOVS     R1,#+59
   \   000000EA   0x2000             MOVS     R0,#+0
   \   000000EC   0x.... 0x....      BL       _Z7setFsioi11brain_pin_ePKc
     91          #endif
     92          }
   \   000000F0   0xBD01             POP      {R0,PC}          ;; return
   \   000000F2   0xBF00             Nop      
   \                     ??setMitsubishiConfiguration_0:
   \   000000F4   0x........         DC32     engineConfiguration
   \   000000F8   0x3FE66666         DC32     0x3fe66666
   \   000000FC   0x4427C000         DC32     0x4427c000
   \   00000100   0x428C0000         DC32     0x428c0000
   \   00000104   0xC432C000         DC32     0xc432c000
   \   00000108   0x4528C000         DC32     0x4528c000
   \   0000010C   0x........         DC32     boardConfiguration
   \   00000110   0x........         DC32     `?<Constant "rpm 5500 >">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "rpm 5500 >">`:
   \   00000000   0x72 0x70          DC8 "rpm 5500 >"
   \              0x6D 0x20    
   \              0x35 0x35    
   \              0x30 0x30    
   \              0x20 0x3E    
   \              0x00         
   \   0000000B   0x00               DC8 0
     93          
     94          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   setMitsubishiConfiguration()
         8   -> setCommonNTCSensor(ThermistorConf *)
         8   -> setEgoSensor(ego_sensor_e)
         8   -> setFsio(int, brain_pin_e, char const *)
         8   -> setWholeFuelMap(float)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "rpm 5500 >">
     276  setMitsubishiConfiguration()

 
  12 bytes in section .rodata
 276 bytes in section .text
 
 276 bytes of CODE  memory
  12 bytes of CONST memory

Errors: none
Warnings: 1
