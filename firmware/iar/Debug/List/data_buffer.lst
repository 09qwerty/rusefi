###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:08 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\util\data_buffer #
#                       .c                                                    #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\util\data_buffer #
#                       .c -lCN F:\stuff\rusefi_sourceforge\firmware\iar\Debu #
#                       g\List\ -lA F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       Debug\List\ -o F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\Debug\Obj\ --no_cse --no_unroll --no_inline        #
#                       --no_code_motion --no_tbaa --no_clustering            #
#                       --no_scheduling --debug --endian=little               #
#                       --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config       #
#                       "C:\Program Files (x86)\IAR Systems\Embedded          #
#                       Workbench 6.5\arm\INC\c\DLib_Config_Normal.h"         #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\ -On #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\d #
#                       ata_buffer.lst                                        #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\da #
#                       ta_buffer.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\util\data_buffer.c
      1          /*@
      2           * @file	data_buffer.c
      3           *
      4           * @date Dec 8, 2012
      5           * @author Andrey Belomutskiy, (c) 2012-2015
      6           */
      7          
      8          #include "data_buffer.h"
      9          #include "main.h"
     10          #if EFI_PROD_CODE
     11          //#include "eficonsole.h"
     12          #endif /* EFI_PROD_CODE */
     13          

   \                                 In section .text, align 2, keep-with-next
     14          int dbIsFull(data_buffer_s *db) {
     15          	return db->size == DB_MAX_SIZE;
   \                     dbIsFull:
   \   00000000   0xF510 0x5080      ADDS     R0,R0,#+4096
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF5B0 0x6F80      CMP      R0,#+1024
   \   0000000A   0xD101             BNE.N    ??dbIsFull_0
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0xE000             B.N      ??dbIsFull_1
   \                     ??dbIsFull_0:
   \   00000010   0x2000             MOVS     R0,#+0
   \                     ??dbIsFull_1:
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x4770             BX       LR               ;; return
     16          }
     17          

   \                                 In section .text, align 2, keep-with-next
     18          void dbClear(data_buffer_s *db) {
     19          	db->size = 0;
   \                     dbClear:
   \   00000000   0xF510 0x5180      ADDS     R1,R0,#+4096
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x600A             STR      R2,[R1, #+0]
     20          }
   \   00000008   0x4770             BX       LR               ;; return
     21          

   \                                 In section .text, align 2, keep-with-next
     22          void dbCopy(data_buffer_s *source, data_buffer_s *target) {
   \                     dbCopy:
   \   00000000   0xB410             PUSH     {R4}
     23          	int s = source->size;
   \   00000002   0xF510 0x5280      ADDS     R2,R0,#+4096
   \   00000006   0x6812             LDR      R2,[R2, #+0]
     24          	target->size = s;
   \   00000008   0xF511 0x5380      ADDS     R3,R1,#+4096
   \   0000000C   0x601A             STR      R2,[R3, #+0]
     25          	for (int i = 0; i < s; i++)
   \   0000000E   0x2300             MOVS     R3,#+0
   \                     ??dbCopy_0:
   \   00000010   0x4293             CMP      R3,R2
   \   00000012   0xDA05             BGE.N    ??dbCopy_1
     26          		target->elements[i] = source->elements[i];
   \   00000014   0xF850 0x4023      LDR      R4,[R0, R3, LSL #+2]
   \   00000018   0xF841 0x4023      STR      R4,[R1, R3, LSL #+2]
   \   0000001C   0x1C5B             ADDS     R3,R3,#+1
   \   0000001E   0xE7F7             B.N      ??dbCopy_0
     27          }
   \                     ??dbCopy_1:
   \   00000020   0xBC10             POP      {R4}
   \   00000022   0x4770             BX       LR               ;; return
     28          

   \                                 In section .text, align 2, keep-with-next
     29          void dbAdd(data_buffer_s *db, int value) {
   \                     dbAdd:
   \   00000000   0xB410             PUSH     {R4}
     30          	if (db->size == DB_MAX_SIZE)
   \   00000002   0xF510 0x5280      ADDS     R2,R0,#+4096
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF5B2 0x6F80      CMP      R2,#+1024
   \   0000000C   0xD008             BEQ.N    ??dbAdd_0
     31          		return;
     32          	int s = db->size;
   \                     ??dbAdd_1:
   \   0000000E   0xF510 0x5280      ADDS     R2,R0,#+4096
   \   00000012   0x6812             LDR      R2,[R2, #+0]
     33          	db->elements[s] = value;
   \   00000014   0xF840 0x1022      STR      R1,[R0, R2, LSL #+2]
     34          	db->size = s + 1;
   \   00000018   0xF510 0x5380      ADDS     R3,R0,#+4096
   \   0000001C   0x1C54             ADDS     R4,R2,#+1
   \   0000001E   0x601C             STR      R4,[R3, #+0]
     35          }
   \                     ??dbAdd_0:
   \   00000020   0xBC10             POP      {R4}
   \   00000022   0x4770             BX       LR               ;; return
     36          

   \                                 In section .text, align 2, keep-with-next
     37          int modp(int param) {
     38          	return param > EF_PERIOD ? param - EF_PERIOD : param;
   \                     modp:
   \   00000000   0x....             LDR.N    R1,??DataTable0  ;; 0x5f5e101
   \   00000002   0x4288             CMP      R0,R1
   \   00000004   0xDB02             BLT.N    ??modp_0
   \   00000006   0x....             LDR.N    R1,??DataTable0_1  ;; 0xfa0a1f00
   \   00000008   0x1808             ADDS     R0,R1,R0
   \   0000000A   0xE7FF             B.N      ??modp_1
   \                     ??modp_0:
   \                     ??modp_1:
   \   0000000C   0x4770             BX       LR               ;; return
     39          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x05F5E101         DC32     0x5f5e101

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0xFA0A1F00         DC32     0xfa0a1f00
     40          
     41          //void dbPrint(data_buffer_s *db, char *message, int withDiff) {
     42          //	int s = db->size;
     43          //	print("buffer [%s] size=%d\r\n", message, s);
     44          //	int range = db->elements[s - 1] - db->elements[0];
     45          //	print("range %d\r\n", range);
     46          //
     47          //	for (int i = 0; i < s; i++) {
     48          //		print("%d: %d", i, db->elements[i]);
     49          //		if (withDiff && i > 0) {
     50          //			int diff = modp(db->elements[i]) - modp(db->elements[i - 1]);
     51          //			print(" t=%d", diff);
     52          //		}
     53          //		print("\r\n");
     54          //	}
     55          //}
     56          
     57          //void dbPrintTable(data_buffer_s *table[], char *caption[], int columns) {
     58          //	for (int c = 0; c < columns; c++)
     59          //		print("%7s", caption[c]);
     60          //	print("\r\n");
     61          //
     62          //	for (int r = 0; r < DB_MAX_SIZE; r++) {
     63          //		for (int c = 0; c < columns; c++) {
     64          //			data_buffer_s *buf = table[c];
     65          //			print("%7d", buf->elements[r]);
     66          //		}
     67          //		print("\r\n");
     68          //	}
     69          //}
     70          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   dbAdd
       0   dbClear
       4   dbCopy
       0   dbIsFull
       0   modp


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
      36  dbAdd
      10  dbClear
      36  dbCopy
      22  dbIsFull
      14  modp

 
 126 bytes in section .text
 
 126 bytes of CODE memory

Errors: none
Warnings: none
