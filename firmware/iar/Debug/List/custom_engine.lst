###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:02 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\config\engines\c #
#                       ustom_engine.cpp                                      #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\config\engines\c #
#                       ustom_engine.cpp -lCN F:\stuff\rusefi_sourceforge\fir #
#                       mware\iar\Debug\List\ -lA                             #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\  #
#                       -o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj #
#                       \ --no_cse --no_unroll --no_inline --no_code_motion   #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\c #
#                       ustom_engine.lst                                      #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\cu #
#                       stom_engine.o                                         #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\config\engines\custom_engine.cpp
      1          /**
      2           * @file	custom_engine.cpp
      3           *
      4           * @date Jan 18, 2015
      5           * @author Andrey Belomutskiy, (c) 2012-2015
      6           */
      7          #ifndef CONFIG_ENGINES_CUSTOM_ENGINE_CPP_
      8          #define CONFIG_ENGINES_CUSTOM_ENGINE_CPP_
      9          
     10          #include "custom_engine.h"
     11          #include "honda_accord.h"
     12          #include "allsensors.h"
     13          
     14          EXTERN_ENGINE;
     15          

   \                                 In section .text, align 4, keep-with-next
     16          void setCustomEngineConfiguration(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z28setCustomEngineConfigurationv:
   \   00000000   0xB580             PUSH     {R7,LR}
     17          	engineConfiguration->trigger.type = TT_ONE_PLUS_ONE;
   \   00000002   0x484A             LDR.N    R0,??setCustomEngineConfiguration_0
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0xF8C0 0x1218      STR      R1,[R0, #+536]
     18          
     19          	setFrankenso_01_LCD(boardConfiguration);
   \   0000000C   0x4848             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x.... 0x....      BL       _Z19setFrankenso_01_LCDP21board_configuration_s
     20          	setFrankenso0_1_joystick(engineConfiguration);
   \   00000014   0x4845             LDR.N    R0,??setCustomEngineConfiguration_0
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x.... 0x....      BL       _Z24setFrankenso0_1_joystickP22engine_configuration_s
     21          
     22          	/**
     23          	 * Frankenso analog #1 PC2 ADC12 CLT
     24          	 * Frankenso analog #2 PC1 ADC11 IAT
     25          	 * Frankenso analog #3 PA0 ADC0 MAP
     26          	 * Frankenso analog #4 PC3 ADC13 WBO / O2
     27          	 * Frankenso analog #5 PA2 ADC2 TPS
     28          	 * Frankenso analog #6 PA1 ADC1
     29          	 * Frankenso analog #7 PA4 ADC4
     30          	 * Frankenso analog #8 PA3 ADC3
     31          	 * Frankenso analog #9 PA7 ADC7
     32          	 * Frankenso analog #10 PA6 ADC6
     33          	 * Frankenso analog #11 PC5 ADC15
     34          	 * Frankenso analog #12 PC4 ADC14 VBatt
     35          	 */
     36          	engineConfiguration->tpsAdcChannel = EFI_ADC_2;
   \   0000001C   0x4843             LDR.N    R0,??setCustomEngineConfiguration_0
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x2102             MOVS     R1,#+2
   \   00000022   0xF8C0 0x120C      STR      R1,[R0, #+524]
     37          
     38          	engineConfiguration->map.sensor.hwChannel = EFI_ADC_0;
   \   00000026   0x4841             LDR.N    R0,??setCustomEngineConfiguration_0
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0xF8C0 0x10FC      STR      R1,[R0, #+252]
     39          
     40          	engineConfiguration->clt.adcChannel = EFI_ADC_12;
   \   00000030   0x483E             LDR.N    R0,??setCustomEngineConfiguration_0
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x210C             MOVS     R1,#+12
   \   00000036   0xF8C0 0x111C      STR      R1,[R0, #+284]
     41          	engineConfiguration->iat.adcChannel = EFI_ADC_11;
   \   0000003A   0x483C             LDR.N    R0,??setCustomEngineConfiguration_0
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x210B             MOVS     R1,#+11
   \   00000040   0xF8C0 0x113C      STR      R1,[R0, #+316]
     42          	engineConfiguration->afr.hwChannel = EFI_ADC_13;
   \   00000044   0x4839             LDR.N    R0,??setCustomEngineConfiguration_0
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0x210D             MOVS     R1,#+13
   \   0000004A   0xF8C0 0x1248      STR      R1,[R0, #+584]
     43          
     44          	setCommonNTCSensor(&engineConfiguration->clt);
   \   0000004E   0x4837             LDR.N    R0,??setCustomEngineConfiguration_0
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0xF510 0x7080      ADDS     R0,R0,#+256
   \   00000056   0x.... 0x....      BL       _Z18setCommonNTCSensorP14ThermistorConf
     45          	engineConfiguration->clt.config.bias_resistor = 2700;
   \   0000005A   0x4834             LDR.N    R0,??setCustomEngineConfiguration_0
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0x4935             LDR.N    R1,??setCustomEngineConfiguration_0+0x8  ;; 0x4528c000
   \   00000060   0xF8C0 0x1118      STR      R1,[R0, #+280]
     46          	setCommonNTCSensor(&engineConfiguration->iat);
   \   00000064   0x4831             LDR.N    R0,??setCustomEngineConfiguration_0
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xF510 0x7090      ADDS     R0,R0,#+288
   \   0000006C   0x.... 0x....      BL       _Z18setCommonNTCSensorP14ThermistorConf
     47          	engineConfiguration->iat.config.bias_resistor = 2700;
   \   00000070   0x482E             LDR.N    R0,??setCustomEngineConfiguration_0
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0x492F             LDR.N    R1,??setCustomEngineConfiguration_0+0x8  ;; 0x4528c000
   \   00000076   0xF8C0 0x1138      STR      R1,[R0, #+312]
     48          
     49          
     50          	/**
     51          	 * http://rusefi.com/wiki/index.php?title=Manual:Hardware_Frankenso_board
     52          	 */
     53          	// Frankenso low out #1: PE6
     54          	// Frankenso low out #2: PE5
     55          	// Frankenso low out #3: PD7 Main Relay
     56          	// Frankenso low out #4: PC13 Idle valve solenoid
     57          	// Frankenso low out #5: PE3
     58          	// Frankenso low out #6: PE4 fuel pump relay
     59          	// Frankenso low out #7: PE1 (do not use with discovery!)
     60          	// Frankenso low out #8: PE2 injector #2
     61          	// Frankenso low out #9: PB9 injector #1
     62          	// Frankenso low out #10: PE0 (do not use with discovery!)
     63          	// Frankenso low out #11: PB8 injector #3
     64          	// Frankenso low out #12: PB7 injector #4
     65          
     66          	boardConfiguration->fuelPumpPin = GPIOE_4;
   \   0000007A   0x482D             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x2144             MOVS     R1,#+68
   \   00000080   0x6181             STR      R1,[R0, #+24]
     67          	boardConfiguration->mainRelayPin = GPIOD_7;
   \   00000082   0x482B             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0x2137             MOVS     R1,#+55
   \   00000088   0xF8C0 0x1134      STR      R1,[R0, #+308]
     68          	boardConfiguration->idle.solenoidPin = GPIOC_13;
   \   0000008C   0x4828             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x212D             MOVS     R1,#+45
   \   00000092   0x6001             STR      R1,[R0, #+0]
     69          
     70          	boardConfiguration->fanPin = GPIOE_5;
   \   00000094   0x4826             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x2145             MOVS     R1,#+69
   \   0000009A   0xF8C0 0x1090      STR      R1,[R0, #+144]
     71          
     72          	boardConfiguration->injectionPins[0] = GPIOB_9; // #1
   \   0000009E   0x4824             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0x2119             MOVS     R1,#+25
   \   000000A4   0x6201             STR      R1,[R0, #+32]
     73          	boardConfiguration->injectionPins[1] = GPIOE_2; // #2
   \   000000A6   0x4822             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x2142             MOVS     R1,#+66
   \   000000AC   0x6241             STR      R1,[R0, #+36]
     74          	boardConfiguration->injectionPins[2] = GPIOB_8; // #3
   \   000000AE   0x4820             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x2118             MOVS     R1,#+24
   \   000000B4   0x6281             STR      R1,[R0, #+40]
     75          	boardConfiguration->injectionPins[3] = GPIOB_7; // #4
   \   000000B6   0x481E             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0x2117             MOVS     R1,#+23
   \   000000BC   0x62C1             STR      R1,[R0, #+44]
     76          
     77          #if EFI_PWM_TESTER
     78          	boardConfiguration->injectionPins[4] = GPIOC_8; // #5
     79          	boardConfiguration->injectionPins[5] = GPIOD_10; // #6
     80          	boardConfiguration->injectionPins[6] = GPIOD_9;
     81          	boardConfiguration->injectionPins[7] = GPIOD_11;
     82          	boardConfiguration->injectionPins[8] = GPIOD_0;
     83          	boardConfiguration->injectionPins[9] = GPIOB_11;
     84          	boardConfiguration->injectionPins[10] = GPIOC_7;
     85          	boardConfiguration->injectionPins[11] = GPIOE_4;
     86          
     87          	/**
     88          	 * We want to initialize all outputs for test
     89          	 */
     90          	engineConfiguration->specs.cylindersCount = 12;
     91          
     92          	engineConfiguration->displayMode = DM_NONE;
     93          #else
     94          	boardConfiguration->injectionPins[4] = GPIO_UNASSIGNED;
   \   000000BE   0x481C             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0x2150             MOVS     R1,#+80
   \   000000C4   0x6301             STR      R1,[R0, #+48]
     95          	boardConfiguration->injectionPins[5] = GPIO_UNASSIGNED;
   \   000000C6   0x481A             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000C8   0x6800             LDR      R0,[R0, #+0]
   \   000000CA   0x2150             MOVS     R1,#+80
   \   000000CC   0x6341             STR      R1,[R0, #+52]
     96          	boardConfiguration->injectionPins[6] = GPIO_UNASSIGNED;
   \   000000CE   0x4818             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0x2150             MOVS     R1,#+80
   \   000000D4   0x6381             STR      R1,[R0, #+56]
     97          	boardConfiguration->injectionPins[7] = GPIO_UNASSIGNED;
   \   000000D6   0x4816             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0x2150             MOVS     R1,#+80
   \   000000DC   0x63C1             STR      R1,[R0, #+60]
     98          	boardConfiguration->injectionPins[8] = GPIO_UNASSIGNED;
   \   000000DE   0x4814             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000E0   0x6800             LDR      R0,[R0, #+0]
   \   000000E2   0x2150             MOVS     R1,#+80
   \   000000E4   0x6401             STR      R1,[R0, #+64]
     99          	boardConfiguration->injectionPins[9] = GPIO_UNASSIGNED;
   \   000000E6   0x4812             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000E8   0x6800             LDR      R0,[R0, #+0]
   \   000000EA   0x2150             MOVS     R1,#+80
   \   000000EC   0x6441             STR      R1,[R0, #+68]
    100          	boardConfiguration->injectionPins[10] = GPIO_UNASSIGNED;
   \   000000EE   0x4810             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000F0   0x6800             LDR      R0,[R0, #+0]
   \   000000F2   0x2150             MOVS     R1,#+80
   \   000000F4   0x6481             STR      R1,[R0, #+72]
    101          	boardConfiguration->injectionPins[11] = GPIO_UNASSIGNED;
   \   000000F6   0x480E             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   000000F8   0x6800             LDR      R0,[R0, #+0]
   \   000000FA   0x2150             MOVS     R1,#+80
   \   000000FC   0x64C1             STR      R1,[R0, #+76]
    102          
    103          	boardConfiguration->ignitionPins[0] = GPIOE_14;
   \   000000FE   0x480C             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x214E             MOVS     R1,#+78
   \   00000104   0x6541             STR      R1,[R0, #+84]
    104          	boardConfiguration->ignitionPins[1] = GPIO_UNASSIGNED; // todo: update this value
   \   00000106   0x480A             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   00000108   0x6800             LDR      R0,[R0, #+0]
   \   0000010A   0x2150             MOVS     R1,#+80
   \   0000010C   0x6581             STR      R1,[R0, #+88]
    105          	boardConfiguration->ignitionPins[2] = GPIOC_7;
   \   0000010E   0x4808             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0x2127             MOVS     R1,#+39
   \   00000114   0x65C1             STR      R1,[R0, #+92]
    106          	boardConfiguration->ignitionPins[3] = GPIO_UNASSIGNED; // todo: update this value
   \   00000116   0x4806             LDR.N    R0,??setCustomEngineConfiguration_0+0x4
   \   00000118   0x6800             LDR      R0,[R0, #+0]
   \   0000011A   0x2150             MOVS     R1,#+80
   \   0000011C   0x6601             STR      R1,[R0, #+96]
    107          #endif
    108          
    109          	// todo: 8.2 or 10k?
    110          	engineConfiguration->vbattDividerCoeff = ((float) (10 + 33)) / 10 * 2;
   \   0000011E   0x4803             LDR.N    R0,??setCustomEngineConfiguration_0
   \   00000120   0x6800             LDR      R0,[R0, #+0]
   \   00000122   0x4905             LDR.N    R1,??setCustomEngineConfiguration_0+0xC  ;; 0x4109999a
   \   00000124   0xF8C0 0x11D4      STR      R1,[R0, #+468]
    111          
    112          }
   \   00000128   0xBD01             POP      {R0,PC}          ;; return
   \   0000012A   0xBF00             Nop      
   \                     ??setCustomEngineConfiguration_0:
   \   0000012C   0x........         DC32     engineConfiguration
   \   00000130   0x........         DC32     boardConfiguration
   \   00000134   0x4528C000         DC32     0x4528c000
   \   00000138   0x4109999A         DC32     0x4109999a
    113          
    114          #endif /* CONFIG_ENGINES_CUSTOM_ENGINE_CPP_ */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   setCustomEngineConfiguration()
         8   -> setCommonNTCSensor(ThermistorConf *)
         8   -> setFrankenso0_1_joystick(engine_configuration_s *)
         8   -> setFrankenso_01_LCD(board_configuration_s *)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     316  setCustomEngineConfiguration()

 
 316 bytes in section .text
 
 316 bytes of CODE memory

Errors: none
Warnings: 1
