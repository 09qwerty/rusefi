###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:10:07 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\config\engines\v #
#                       w.cpp                                                 #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\config\engines\v #
#                       w.cpp -lCN F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                       ebug\List\ -lA F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\Debug\List\ -o F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\Debug\Obj\ --no_cse --no_unroll --no_inline     #
#                       --no_code_motion --no_tbaa --no_clustering            #
#                       --no_scheduling --debug --endian=little               #
#                       --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config       #
#                       "C:\Program Files (x86)\IAR Systems\Embedded          #
#                       Workbench 6.5\arm\INC\c\DLib_Config_Normal.h"         #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\v #
#                       w.lst                                                 #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\vw #
#                       .o                                                    #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\config\engines\vw.cpp
      1          /*
      2           * @file vw.cpp
      3           *
      4           * set_engine_type 32
      5           *
      6           * @date May 24, 2015
      7           * @author Andrey Belomutskiy, (c) 2012-2015
      8           */
      9          
     10          #include "main.h"
     11          #include "vw.h"
     12          #include "custom_engine.h"
     13          #include "ego.h"
     14          
     15          EXTERN_ENGINE;
     16          

   \                                 In section .text, align 4, keep-with-next
     17          void setVwAba(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z8setVwAbav:
   \   00000000   0xB580             PUSH     {R7,LR}
     18          	setCustomEngineConfiguration(PASS_ENGINE_PARAMETER_F);
   \   00000002   0x.... 0x....      BL       _Z28setCustomEngineConfigurationv
     19          
     20          	setWholeTimingTable(20 PASS_ENGINE_PARAMETER);
   \   00000006   0xEEB3 0x0A04      VMOV.F32 S0,#20.0
   \   0000000A   0x.... 0x....      BL       _Z19setWholeTimingTablef
     21          	engineConfiguration->cranking.baseFuel = 12;
   \   0000000E   0x482B             LDR.N    R0,??setVwAba_0
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x492B             LDR.N    R1,??setVwAba_0+0x4  ;; 0x41400000
   \   00000014   0x65C1             STR      R1,[R0, #+92]
     22          	// set_cranking_timing_angle 0
     23          	engineConfiguration->crankingTimingAngle = 20;
   \   00000016   0x4829             LDR.N    R0,??setVwAba_0
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x492A             LDR.N    R1,??setVwAba_0+0x8  ;; 0x41a00000
   \   0000001C   0xF8C0 0x11B8      STR      R1,[R0, #+440]
     24          
     25          	// set_whole_fuel_map 12
     26          	setWholeFuelMap(12 PASS_ENGINE_PARAMETER);
   \   00000020   0xEEB2 0x0A08      VMOV.F32 S0,#12.0
   \   00000024   0x.... 0x....      BL       _Z15setWholeFuelMapf
     27          
     28          	// set_global_trigger_offset_angle 90
     29          	engineConfiguration->globalTriggerAngleOffset = 90;
   \   00000028   0x4824             LDR.N    R0,??setVwAba_0
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x4926             LDR.N    R1,??setVwAba_0+0xC  ;; 0x42b40000
   \   0000002E   0xF8C0 0x11CC      STR      R1,[R0, #+460]
     30          
     31          
     32          	setOperationMode(engineConfiguration, FOUR_STROKE_CRANK_SENSOR);
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x4821             LDR.N    R0,??setVwAba_0
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x.... 0x....      BL       _Z16setOperationModeP22engine_configuration_s16operation_mode_e
     33          //	engineConfiguration->trigger.type = TT_TOOTHED_WHEEL_60_2;
     34          	engineConfiguration->trigger.type = TT_60_2_VW;
   \   0000003C   0x481F             LDR.N    R0,??setVwAba_0
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x2114             MOVS     R1,#+20
   \   00000042   0xF8C0 0x1218      STR      R1,[R0, #+536]
     35          
     36          	engineConfiguration->mafAdcChannel = EFI_ADC_1;
   \   00000046   0x481D             LDR.N    R0,??setVwAba_0
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0xF8C0 0x1244      STR      R1,[R0, #+580]
     37          
     38          
     39          	//Base engine setting
     40          	engineConfiguration->specs.cylindersCount = 4;
   \   00000050   0x481A             LDR.N    R0,??setVwAba_0
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x2104             MOVS     R1,#+4
   \   00000056   0xF8C0 0x1194      STR      R1,[R0, #+404]
     41          	engineConfiguration->specs.displacement = 2.5;
   \   0000005A   0x4818             LDR.N    R0,??setVwAba_0
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0x491B             LDR.N    R1,??setVwAba_0+0x10  ;; 0x40200000
   \   00000060   0xF8C0 0x1190      STR      R1,[R0, #+400]
     42          	engineConfiguration->injector.flow = 320; // 30lb/h
   \   00000064   0x4815             LDR.N    R0,??setVwAba_0
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0x4919             LDR.N    R1,??setVwAba_0+0x14  ;; 0x43a00000
   \   0000006A   0x6081             STR      R1,[R0, #+8]
     43          	// set_algorithm 3
     44          	engineConfiguration->algorithm = LM_SPEED_DENSITY;
   \   0000006C   0x4813             LDR.N    R0,??setVwAba_0
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x2103             MOVS     R1,#+3
   \   00000072   0xF8C0 0x11A8      STR      R1,[R0, #+424]
     45          	engineConfiguration->map.sensor.type = MT_GM_3_BAR;
   \   00000076   0x4811             LDR.N    R0,??setVwAba_0
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0x2106             MOVS     R1,#+6
   \   0000007C   0xF8C0 0x10F8      STR      R1,[R0, #+248]
     46          
     47          	engineConfiguration->ignitionMode = IM_ONE_COIL;
   \   00000080   0x480E             LDR.N    R0,??setVwAba_0
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0xF8C0 0x11BC      STR      R1,[R0, #+444]
     48          
     49          	boardConfiguration->ignitionPins[0] = GPIOE_14; // Frankenso high side - pin 1G
   \   0000008A   0x4812             LDR.N    R0,??setVwAba_0+0x18
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0x214E             MOVS     R1,#+78
   \   00000090   0x6541             STR      R1,[R0, #+84]
     50          	boardConfiguration->ignitionPins[1] = GPIO_UNASSIGNED;
   \   00000092   0x4810             LDR.N    R0,??setVwAba_0+0x18
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x2150             MOVS     R1,#+80
   \   00000098   0x6581             STR      R1,[R0, #+88]
     51          	boardConfiguration->ignitionPins[2] = GPIO_UNASSIGNED;
   \   0000009A   0x480E             LDR.N    R0,??setVwAba_0+0x18
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x2150             MOVS     R1,#+80
   \   000000A0   0x65C1             STR      R1,[R0, #+92]
     52          	boardConfiguration->ignitionPins[3] = GPIO_UNASSIGNED;
   \   000000A2   0x480C             LDR.N    R0,??setVwAba_0+0x18
   \   000000A4   0x6800             LDR      R0,[R0, #+0]
   \   000000A6   0x2150             MOVS     R1,#+80
   \   000000A8   0x6601             STR      R1,[R0, #+96]
     53          	boardConfiguration->ignitionPinMode = OM_DEFAULT;
   \   000000AA   0x480A             LDR.N    R0,??setVwAba_0+0x18
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x2100             MOVS     R1,#+0
   \   000000B0   0xF8C0 0x1084      STR      R1,[R0, #+132]
     54          
     55          	setEgoSensor(ES_PLX PASS_ENGINE_PARAMETER);
   \   000000B4   0x2004             MOVS     R0,#+4
   \   000000B6   0x.... 0x....      BL       _Z12setEgoSensor12ego_sensor_e
     56          }
   \   000000BA   0xBD01             POP      {R0,PC}          ;; return
   \                     ??setVwAba_0:
   \   000000BC   0x........         DC32     engineConfiguration
   \   000000C0   0x41400000         DC32     0x41400000
   \   000000C4   0x41A00000         DC32     0x41a00000
   \   000000C8   0x42B40000         DC32     0x42b40000
   \   000000CC   0x40200000         DC32     0x40200000
   \   000000D0   0x43A00000         DC32     0x43a00000
   \   000000D4   0x........         DC32     boardConfiguration
     57          
     58          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   setVwAba()
         8   -> setCustomEngineConfiguration()
         8   -> setEgoSensor(ego_sensor_e)
         8   -> setOperationMode(engine_configuration_s *, operation_mode_e)
         8   -> setWholeFuelMap(float)
         8   -> setWholeTimingTable(float)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     216  setVwAba()

 
 216 bytes in section .text
 
 216 bytes of CODE memory

Errors: none
Warnings: 1
