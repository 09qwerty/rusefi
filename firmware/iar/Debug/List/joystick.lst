###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:30 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\joystic #
#                       k.cpp                                                 #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\hw_layer\joystic #
#                       k.cpp -lCN F:\stuff\rusefi_sourceforge\firmware\iar\D #
#                       ebug\List\ -lA F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\Debug\List\ -o F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\Debug\Obj\ --no_cse --no_unroll --no_inline     #
#                       --no_code_motion --no_tbaa --no_clustering            #
#                       --no_scheduling --debug --endian=little               #
#                       --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config       #
#                       "C:\Program Files (x86)\IAR Systems\Embedded          #
#                       Workbench 6.5\arm\INC\c\DLib_Config_Normal.h"         #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\j #
#                       oystick.lst                                           #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\jo #
#                       ystick.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\hw_layer\joystick.cpp
      1          /**
      2           * @file	joystick.cpp
      3           *
      4           * @date Jan 2, 2015
      5           * @author Andrey Belomutskiy, (c) 2012-2015
      6           */
      7          
      8          #include "engine_configuration.h"
      9          #include "joystick.h"
     10          #include "engine.h"
     11          #include "pin_repository.h"
     12          
     13          #if HAL_USE_EXT || defined(__DOXYGEN__)
     14          
     15          EXTERN_ENGINE
     16          ;
     17          

   \                                 In section .bss, align 4
     18          static int joyTotal = 0;
   \                     joyTotal:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     19          static int joyCenter;
   \                     joyCenter:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     20          static int joyA = 0;
   \                     joyA:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     21          static int joyB = 0;
   \                     joyB:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     22          static int joyC = 0;
   \                     joyC:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     23          static int joyD = 0;
   \                     joyD:
   \   00000000                      DS8 4
     24          
     25          #define NT_EVENT_GAP US2NT(1000)
     26          

   \                                 In section .bss, align 4
     27          static Logging *sharedLogger;
   \                     sharedLogger:
   \   00000000                      DS8 4

   \                                 In section .bss, align 8
     28          static efitick_t lastEventTime = 0;
   \                     lastEventTime:
   \   00000000                      DS8 8
     29          

   \                                 In section .text, align 2, keep-with-next
     30          static void extCallback(EXTDriver *extp, expchannel_t channel) {
   \                     _Z11extCallbackP9EXTDriverj:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0006             MOVS     R6,R0
   \   00000006   0x000F             MOVS     R7,R1
     31                  UNUSED(extp);
     32          	efitick_t now = getTimeNowNt();
   \   00000008   0x.... 0x....      BL       getTimeNowNt
   \   0000000C   0x0004             MOVS     R4,R0
   \   0000000E   0x000D             MOVS     R5,R1
     33          	if (now - lastEventTime < NT_EVENT_GAP)
   \   00000010   0x....             LDR.N    R0,??DataTable4
   \   00000012   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000016   0x1AA0             SUBS     R0,R4,R2
   \   00000018   0xEB75 0x0103      SBCS     R1,R5,R3
   \   0000001C   0x....             LDR.N    R2,??DataTable4_1  ;; 0x29040
   \   0000001E   0x2300             MOVS     R3,#+0
   \   00000020   0x4299             CMP      R1,R3
   \   00000022   0xDC03             BGT.N    ??extCallback_0
   \   00000024   0xDB01             BLT.N    ??extCallback_1
   \   00000026   0x4290             CMP      R0,R2
   \   00000028   0xD200             BCS.N    ??extCallback_0
     34          		return; // two consecutive events are probably just jitter
   \                     ??extCallback_1:
   \   0000002A   0xE05C             B.N      ??extCallback_2
     35          	lastEventTime = now;
   \                     ??extCallback_0:
   \   0000002C   0x....             LDR.N    R0,??DataTable4
   \   0000002E   0xE9C0 0x4500      STRD     R4,R5,[R0, #+0]
     36          	joyTotal++;
   \   00000032   0x....             LDR.N    R0,??DataTable4_2
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0x1C40             ADDS     R0,R0,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable4_2
   \   0000003A   0x6008             STR      R0,[R1, #+0]
     37          	joystick_button_e button;
     38          	// todo: I guess it's time to reduce code duplication and start working with an array
     39          	if (channel == getHwPin(boardConfiguration->joystickCenterPin)) {
   \   0000003C   0x....             LDR.N    R0,??DataTable4_3
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF8D0 0x02FC      LDR      R0,[R0, #+764]
   \   00000044   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000048   0x4287             CMP      R7,R0
   \   0000004A   0xD107             BNE.N    ??extCallback_3
     40          		joyCenter++;
   \   0000004C   0x....             LDR.N    R0,??DataTable4_4
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x1C40             ADDS     R0,R0,#+1
   \   00000052   0x....             LDR.N    R1,??DataTable4_4
   \   00000054   0x6008             STR      R0,[R1, #+0]
     41          		button = JB_CENTER;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x4680             MOV      R8,R0
   \   0000005A   0xE040             B.N      ??extCallback_4
     42          	} else if (channel == getHwPin(boardConfiguration->joystickAPin)) {
   \                     ??extCallback_3:
   \   0000005C   0x....             LDR.N    R0,??DataTable4_3
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0xF8D0 0x0300      LDR      R0,[R0, #+768]
   \   00000064   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000068   0x4287             CMP      R7,R0
   \   0000006A   0xD107             BNE.N    ??extCallback_5
     43          		joyA++;
   \   0000006C   0x....             LDR.N    R0,??DataTable4_5
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x1C40             ADDS     R0,R0,#+1
   \   00000072   0x....             LDR.N    R1,??DataTable4_5
   \   00000074   0x6008             STR      R0,[R1, #+0]
     44          		button = JB_BUTTON_A;
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x4680             MOV      R8,R0
   \   0000007A   0xE030             B.N      ??extCallback_4
     45          	} else if (channel == getHwPin(boardConfiguration->joystickBPin)) {
   \                     ??extCallback_5:
   \   0000007C   0x....             LDR.N    R0,??DataTable4_3
   \   0000007E   0x6800             LDR      R0,[R0, #+0]
   \   00000080   0xF8D0 0x0304      LDR      R0,[R0, #+772]
   \   00000084   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   00000088   0x4287             CMP      R7,R0
   \   0000008A   0xD107             BNE.N    ??extCallback_6
     46          		joyB++;
   \   0000008C   0x....             LDR.N    R0,??DataTable4_6
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x1C40             ADDS     R0,R0,#+1
   \   00000092   0x....             LDR.N    R1,??DataTable4_6
   \   00000094   0x6008             STR      R0,[R1, #+0]
     47          		button = JB_BUTTON_C;
   \   00000096   0x2003             MOVS     R0,#+3
   \   00000098   0x4680             MOV      R8,R0
   \   0000009A   0xE020             B.N      ??extCallback_4
     48          	} else if (channel == getHwPin(boardConfiguration->joystickCPin)) {
   \                     ??extCallback_6:
   \   0000009C   0x....             LDR.N    R0,??DataTable4_3
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF8D0 0x0308      LDR      R0,[R0, #+776]
   \   000000A4   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000000A8   0x4287             CMP      R7,R0
   \   000000AA   0xD107             BNE.N    ??extCallback_7
     49          		joyC++;
   \   000000AC   0x....             LDR.N    R0,??DataTable4_7
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0x1C40             ADDS     R0,R0,#+1
   \   000000B2   0x....             LDR.N    R1,??DataTable4_7
   \   000000B4   0x6008             STR      R0,[R1, #+0]
     50          		button = JB_BUTTON_B;
   \   000000B6   0x2002             MOVS     R0,#+2
   \   000000B8   0x4680             MOV      R8,R0
   \   000000BA   0xE010             B.N      ??extCallback_4
     51          	} else if (channel == getHwPin(boardConfiguration->joystickDPin)) {
   \                     ??extCallback_7:
   \   000000BC   0x....             LDR.N    R0,??DataTable4_3
   \   000000BE   0x6800             LDR      R0,[R0, #+0]
   \   000000C0   0xF8D0 0x030C      LDR      R0,[R0, #+780]
   \   000000C4   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   000000C8   0x4287             CMP      R7,R0
   \   000000CA   0xD107             BNE.N    ??extCallback_8
     52          		joyD++;
   \   000000CC   0x....             LDR.N    R0,??DataTable4_8
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0x1C40             ADDS     R0,R0,#+1
   \   000000D2   0x....             LDR.N    R1,??DataTable4_8
   \   000000D4   0x6008             STR      R0,[R1, #+0]
     53          		button = JB_BUTTON_D;
   \   000000D6   0x2004             MOVS     R0,#+4
   \   000000D8   0x4680             MOV      R8,R0
   \   000000DA   0xE000             B.N      ??extCallback_4
     54          	} else {
     55          		// unexpected channel
     56          		return;
   \                     ??extCallback_8:
   \   000000DC   0xE003             B.N      ??extCallback_2
     57          	}
     58          #if EFI_HD44780_LCD || defined(__DOXYGEN__)
     59          	onJoystick(button);
   \                     ??extCallback_4:
   \   000000DE   0x4640             MOV      R0,R8
   \   000000E0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E2   0x.... 0x....      BL       _Z10onJoystick17joystick_button_e
     60          #endif
     61          }
   \                     ??extCallback_2:
   \   000000E6   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
     62          

   \                                 In section .text, align 2, keep-with-next
     63          static void joystickInfo(void) {
   \                     _Z12joystickInfov:
   \   00000000   0xB580             PUSH     {R7,LR}
     64          	scheduleMsg(sharedLogger, "total %d center=%d@%s", joyTotal, joyCenter,
     65          			hwPortname(boardConfiguration->joystickCenterPin));
   \   00000002   0x....             LDR.N    R0,??DataTable4_3
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF8D0 0x02FC      LDR      R0,[R0, #+764]
   \   0000000A   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000000E   0x9000             STR      R0,[SP, #+0]
   \   00000010   0x....             LDR.N    R0,??DataTable4_4
   \   00000012   0x6803             LDR      R3,[R0, #+0]
   \   00000014   0x....             LDR.N    R0,??DataTable4_2
   \   00000016   0x6802             LDR      R2,[R0, #+0]
   \   00000018   0x....             LDR.N    R1,??DataTable4_9
   \   0000001A   0x....             LDR.N    R0,??DataTable4_10
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x.... 0x....      BL       scheduleMsg
     66          	scheduleMsg(sharedLogger, "a=%d@%s", joyA, hwPortname(boardConfiguration->joystickAPin));
   \   00000022   0x....             LDR.N    R0,??DataTable4_3
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF8D0 0x0300      LDR      R0,[R0, #+768]
   \   0000002A   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000002E   0x0003             MOVS     R3,R0
   \   00000030   0x....             LDR.N    R0,??DataTable4_5
   \   00000032   0x6802             LDR      R2,[R0, #+0]
   \   00000034   0x....             LDR.N    R1,??DataTable4_11
   \   00000036   0x....             LDR.N    R0,??DataTable4_10
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x.... 0x....      BL       scheduleMsg
     67          	scheduleMsg(sharedLogger, "b=%d@%s", joyB, hwPortname(boardConfiguration->joystickBPin));
   \   0000003E   0x....             LDR.N    R0,??DataTable4_3
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xF8D0 0x0304      LDR      R0,[R0, #+772]
   \   00000046   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   0000004A   0x0003             MOVS     R3,R0
   \   0000004C   0x....             LDR.N    R0,??DataTable4_6
   \   0000004E   0x6802             LDR      R2,[R0, #+0]
   \   00000050   0x....             LDR.N    R1,??DataTable4_12
   \   00000052   0x....             LDR.N    R0,??DataTable4_10
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x.... 0x....      BL       scheduleMsg
     68          	scheduleMsg(sharedLogger, "c=%d@%s", joyC, hwPortname(boardConfiguration->joystickCPin));
   \   0000005A   0x....             LDR.N    R0,??DataTable4_3
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0xF8D0 0x0308      LDR      R0,[R0, #+776]
   \   00000062   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000066   0x0003             MOVS     R3,R0
   \   00000068   0x....             LDR.N    R0,??DataTable4_7
   \   0000006A   0x6802             LDR      R2,[R0, #+0]
   \   0000006C   0x....             LDR.N    R1,??DataTable4_13
   \   0000006E   0x....             LDR.N    R0,??DataTable4_10
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0x.... 0x....      BL       scheduleMsg
     69          	scheduleMsg(sharedLogger, "d=%d@%s", joyD, hwPortname(boardConfiguration->joystickDPin));
   \   00000076   0x....             LDR.N    R0,??DataTable4_3
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0xF8D0 0x030C      LDR      R0,[R0, #+780]
   \   0000007E   0x.... 0x....      BL       _Z10hwPortname11brain_pin_e
   \   00000082   0x0003             MOVS     R3,R0
   \   00000084   0x....             LDR.N    R0,??DataTable4_8
   \   00000086   0x6802             LDR      R2,[R0, #+0]
   \   00000088   0x....             LDR.N    R1,??DataTable4_14
   \   0000008A   0x....             LDR.N    R0,??DataTable4_10
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0x.... 0x....      BL       scheduleMsg
     70          }
   \   00000092   0xBD01             POP      {R0,PC}          ;; return
     71          
     72          /**
     73           * EXTI is a funny thing: you can only use same pin on one port. For example, you can use
     74           * PA0 PB5 PE2 PD7
     75           * but you cannot use
     76           * PA0 PB0 PE2 PD7
     77           * because pin '0' would be used on two different ports
     78           */
     79          

   \                                 In section .bss, align 4
     80          static EXTConfig extcfg = { {
   \                     extcfg:
   \   00000000                      DS8 184
     81          /* CH#00 */{ EXT_CH_MODE_DISABLED, NULL },
     82          /* CH#01 */{ EXT_CH_MODE_DISABLED, NULL },
     83          /* CH#02 */{ EXT_CH_MODE_DISABLED, NULL },
     84          /* CH#03 */{ EXT_CH_MODE_DISABLED, NULL },
     85          /* CH#04 */{ EXT_CH_MODE_DISABLED, NULL },
     86          /* CH#05 */{ EXT_CH_MODE_DISABLED, NULL },
     87          /* CH#06 */{ EXT_CH_MODE_DISABLED, NULL },
     88          /* CH#07 */{ EXT_CH_MODE_DISABLED, NULL },
     89          /* CH#08 */{ EXT_CH_MODE_DISABLED, NULL },
     90          /* CH#09 */{ EXT_CH_MODE_DISABLED, NULL },
     91          /* CH#10 */{ EXT_CH_MODE_DISABLED, NULL },
     92          /* CH#11 */{ EXT_CH_MODE_DISABLED, NULL },
     93          /* CH#12 */{ EXT_CH_MODE_DISABLED, NULL },
     94          /* CH#13 */{ EXT_CH_MODE_DISABLED, NULL },
     95          /* CH#14 */{ EXT_CH_MODE_DISABLED, NULL },
     96          /* CH#15 */{ EXT_CH_MODE_DISABLED, NULL },
     97          /* CH#16 */{ EXT_CH_MODE_DISABLED, NULL },
     98          /* CH#17 */{ EXT_CH_MODE_DISABLED, NULL },
     99          /* CH#18 */{ EXT_CH_MODE_DISABLED, NULL },
    100          /* CH#19 */{ EXT_CH_MODE_DISABLED, NULL },
    101          /* CH#20 */{ EXT_CH_MODE_DISABLED, NULL },
    102          /* CH#21 */{ EXT_CH_MODE_DISABLED, NULL },
    103          /* CH#22 */{ EXT_CH_MODE_DISABLED, NULL } } };
    104          

   \                                 In section .text, align 2, keep-with-next
    105          static uint32_t getExtMode(GPIO_TypeDef * port) {
   \                     _Z10getExtModeP12GPIO_TypeDef:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    106          	if (port == GPIOA) {
   \   00000004   0x....             LDR.N    R0,??DataTable4_15  ;; 0x40020000
   \   00000006   0x4284             CMP      R4,R0
   \   00000008   0xD101             BNE.N    ??getExtMode_0
    107          		return EXT_MODE_GPIOA;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE01D             B.N      ??getExtMode_1
    108          	} else if (port == GPIOB) {
   \                     ??getExtMode_0:
   \   0000000E   0x....             LDR.N    R0,??DataTable4_16  ;; 0x40020400
   \   00000010   0x4284             CMP      R4,R0
   \   00000012   0xD101             BNE.N    ??getExtMode_2
    109          		return EXT_MODE_GPIOB;
   \   00000014   0x2010             MOVS     R0,#+16
   \   00000016   0xE018             B.N      ??getExtMode_1
    110          	} else if (port == GPIOC) {
   \                     ??getExtMode_2:
   \   00000018   0x....             LDR.N    R0,??DataTable4_17  ;; 0x40020800
   \   0000001A   0x4284             CMP      R4,R0
   \   0000001C   0xD101             BNE.N    ??getExtMode_3
    111          		return EXT_MODE_GPIOC;
   \   0000001E   0x2020             MOVS     R0,#+32
   \   00000020   0xE013             B.N      ??getExtMode_1
    112          	} else if (port == GPIOD) {
   \                     ??getExtMode_3:
   \   00000022   0x....             LDR.N    R0,??DataTable4_18  ;; 0x40020c00
   \   00000024   0x4284             CMP      R4,R0
   \   00000026   0xD101             BNE.N    ??getExtMode_4
    113          		return EXT_MODE_GPIOD;
   \   00000028   0x2030             MOVS     R0,#+48
   \   0000002A   0xE00E             B.N      ??getExtMode_1
    114          	} else if (port == GPIOE) {
   \                     ??getExtMode_4:
   \   0000002C   0x....             LDR.N    R0,??DataTable4_19  ;; 0x40021000
   \   0000002E   0x4284             CMP      R4,R0
   \   00000030   0xD101             BNE.N    ??getExtMode_5
    115          		return EXT_MODE_GPIOE;
   \   00000032   0x2040             MOVS     R0,#+64
   \   00000034   0xE009             B.N      ??getExtMode_1
    116          	} else if (port == GPIOF) {
   \                     ??getExtMode_5:
   \   00000036   0x....             LDR.N    R0,??DataTable4_20  ;; 0x40021400
   \   00000038   0x4284             CMP      R4,R0
   \   0000003A   0xD101             BNE.N    ??getExtMode_6
    117          		return EXT_MODE_GPIOF;
   \   0000003C   0x2050             MOVS     R0,#+80
   \   0000003E   0xE004             B.N      ??getExtMode_1
    118          	}
    119          	firmwareError("Unsupported %d", port);
   \                     ??getExtMode_6:
   \   00000040   0x0021             MOVS     R1,R4
   \   00000042   0x....             LDR.N    R0,??DataTable4_21
   \   00000044   0x.... 0x....      BL       firmwareError
    120          	return 0;
   \   00000048   0x2000             MOVS     R0,#+0
   \                     ??getExtMode_1:
   \   0000004A   0xBD10             POP      {R4,PC}          ;; return
    121          }
    122          

   \                                 In section .text, align 2, keep-with-next
    123          static void applyPin(brain_pin_e pin) {
   \                     _Z8applyPin11brain_pin_e:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    124          	if (pin == GPIO_UNASSIGNED)
   \   00000004   0x2C50             CMP      R4,#+80
   \   00000006   0xD014             BEQ.N    ??applyPin_0
    125          		return;
    126          
    127          	int index = getHwPin(pin);
   \                     ??applyPin_1:
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       _Z8getHwPin11brain_pin_e
   \   0000000E   0x0005             MOVS     R5,R0
    128          	GPIO_TypeDef * port = getHwPort(pin);
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0x.... 0x....      BL       _Z9getHwPort11brain_pin_e
   \   00000016   0x0006             MOVS     R6,R0
    129          
    130          	extcfg.channels[index].mode = EXT_CH_MODE_RISING_EDGE | EXT_CH_MODE_AUTOSTART | getExtMode(port);
   \   00000018   0x0030             MOVS     R0,R6
   \   0000001A   0x.... 0x....      BL       _Z10getExtModeP12GPIO_TypeDef
   \   0000001E   0xF050 0x0005      ORRS     R0,R0,#0x5
   \   00000022   0x....             LDR.N    R1,??DataTable4_22
   \   00000024   0xF841 0x0035      STR      R0,[R1, R5, LSL #+3]
    131          	extcfg.channels[index].cb = extCallback;
   \   00000028   0x....             LDR.N    R0,??DataTable4_22
   \   0000002A   0xEB10 0x00C5      ADDS     R0,R0,R5, LSL #+3
   \   0000002E   0x....             LDR.N    R1,??DataTable4_23
   \   00000030   0x6041             STR      R1,[R0, #+4]
    132          }
   \                     ??applyPin_0:
   \   00000032   0xBD70             POP      {R4-R6,PC}       ;; return
    133          

   \                                 In section .text, align 2, keep-with-next
    134          void initJoystick(Logging *shared) {
   \                     _Z12initJoystickP7Logging:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    135          	if (!engineConfiguration->isJoystickEnabled)
   \   00000004   0x....             LDR.N    R0,??DataTable4_24
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF890 0x05D9      LDRB     R0,[R0, #+1497]
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x08C0             LSRS     R0,R0,#+3
   \   00000010   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD04F             BEQ.N    ??initJoystick_0
    136          		return;
    137          	sharedLogger = shared;
   \                     ??initJoystick_1:
   \   00000018   0x....             LDR.N    R0,??DataTable4_10
   \   0000001A   0x6004             STR      R4,[R0, #+0]
    138          
    139          	applyPin(boardConfiguration->joystickCenterPin);
   \   0000001C   0x....             LDR.N    R0,??DataTable4_3
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF8D0 0x02FC      LDR      R0,[R0, #+764]
   \   00000024   0x.... 0x....      BL       _Z8applyPin11brain_pin_e
    140          	applyPin(boardConfiguration->joystickAPin);
   \   00000028   0x....             LDR.N    R0,??DataTable4_3
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF8D0 0x0300      LDR      R0,[R0, #+768]
   \   00000030   0x.... 0x....      BL       _Z8applyPin11brain_pin_e
    141          	applyPin(boardConfiguration->joystickBPin);
   \   00000034   0x....             LDR.N    R0,??DataTable4_3
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF8D0 0x0304      LDR      R0,[R0, #+772]
   \   0000003C   0x.... 0x....      BL       _Z8applyPin11brain_pin_e
    142          	applyPin(boardConfiguration->joystickCPin);
   \   00000040   0x....             LDR.N    R0,??DataTable4_3
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0xF8D0 0x0308      LDR      R0,[R0, #+776]
   \   00000048   0x.... 0x....      BL       _Z8applyPin11brain_pin_e
    143          	applyPin(boardConfiguration->joystickDPin);
   \   0000004C   0x....             LDR.N    R0,??DataTable4_3
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0xF8D0 0x030C      LDR      R0,[R0, #+780]
   \   00000054   0x.... 0x....      BL       _Z8applyPin11brain_pin_e
    144          
    145          	mySetPadMode2("joy center", boardConfiguration->joystickCenterPin, PAL_MODE_INPUT_PULLUP);
   \   00000058   0x2220             MOVS     R2,#+32
   \   0000005A   0x....             LDR.N    R0,??DataTable4_3
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0xF8D0 0x12FC      LDR      R1,[R0, #+764]
   \   00000062   0x....             LDR.N    R0,??DataTable4_25
   \   00000064   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    146          	mySetPadMode2("joy A", boardConfiguration->joystickAPin, PAL_MODE_INPUT_PULLUP);
   \   00000068   0x2220             MOVS     R2,#+32
   \   0000006A   0x....             LDR.N    R0,??DataTable4_3
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0xF8D0 0x1300      LDR      R1,[R0, #+768]
   \   00000072   0x....             LDR.N    R0,??DataTable4_26
   \   00000074   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    147          	mySetPadMode2("joy B", boardConfiguration->joystickBPin, PAL_MODE_INPUT_PULLUP);
   \   00000078   0x2220             MOVS     R2,#+32
   \   0000007A   0x....             LDR.N    R0,??DataTable4_3
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0xF8D0 0x1304      LDR      R1,[R0, #+772]
   \   00000082   0x....             LDR.N    R0,??DataTable4_27
   \   00000084   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    148          	mySetPadMode2("joy C", boardConfiguration->joystickCPin, PAL_MODE_INPUT_PULLUP);
   \   00000088   0x2220             MOVS     R2,#+32
   \   0000008A   0x....             LDR.N    R0,??DataTable4_3
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0xF8D0 0x1308      LDR      R1,[R0, #+776]
   \   00000092   0x....             LDR.N    R0,??DataTable4_28
   \   00000094   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    149          	mySetPadMode2("joy D", boardConfiguration->joystickDPin, PAL_MODE_INPUT_PULLUP);
   \   00000098   0x2220             MOVS     R2,#+32
   \   0000009A   0x....             LDR.N    R0,??DataTable4_3
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0xF8D0 0x130C      LDR      R1,[R0, #+780]
   \   000000A2   0x....             LDR.N    R0,??DataTable4_29
   \   000000A4   0x.... 0x....      BL       _Z13mySetPadMode2PKc11brain_pin_ej
    150          
    151          	addConsoleAction("joystickinfo", joystickInfo);
   \   000000A8   0x....             LDR.N    R1,??DataTable4_30
   \   000000AA   0x....             LDR.N    R0,??DataTable4_31
   \   000000AC   0x.... 0x....      BL       addConsoleAction
    152          
    153          	extStart(&EXTD1, &extcfg);
   \   000000B0   0x....             LDR.N    R1,??DataTable4_22
   \   000000B2   0x....             LDR.N    R0,??DataTable4_32
   \   000000B4   0x.... 0x....      BL       extStart
    154          }
   \                     ??initJoystick_0:
   \   000000B8   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     lastEventTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x00029040         DC32     0x29040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     joyTotal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     boardConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     joyCenter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     joyA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     joyB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     joyC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     joyD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     `?<Constant "total %d center=%d@%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     sharedLogger

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     `?<Constant "a=%d@%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     `?<Constant "b=%d@%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x........         DC32     `?<Constant "c=%d@%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x........         DC32     `?<Constant "d=%d@%s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x40020800         DC32     0x40020800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x40020C00         DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x40021400         DC32     0x40021400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x........         DC32     `?<Constant "Unsupported %d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x........         DC32     extcfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x........         DC32     _Z11extCallbackP9EXTDriverj

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x........         DC32     engineConfiguration

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x........         DC32     `?<Constant "joy center">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_26:
   \   00000000   0x........         DC32     `?<Constant "joy A">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_27:
   \   00000000   0x........         DC32     `?<Constant "joy B">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_28:
   \   00000000   0x........         DC32     `?<Constant "joy C">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_29:
   \   00000000   0x........         DC32     `?<Constant "joy D">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_30:
   \   00000000   0x........         DC32     _Z12joystickInfov

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_31:
   \   00000000   0x........         DC32     `?<Constant "joystickinfo">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_32:
   \   00000000   0x........         DC32     EXTD1

   \                                 In section .rodata, align 4
   \                     `?<Constant "total %d center=%d@%s">`:
   \   00000000   0x74 0x6F          DC8 "total %d center=%d@%s"
   \              0x74 0x61    
   \              0x6C 0x20    
   \              0x25 0x64    
   \              0x20 0x63    
   \              0x65 0x6E    
   \              0x74 0x65    
   \              0x72 0x3D    
   \              0x25 0x64    
   \              0x40 0x25    
   \              0x73 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "a=%d@%s">`:
   \   00000000   0x61 0x3D          DC8 "a=%d@%s"
   \              0x25 0x64    
   \              0x40 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "b=%d@%s">`:
   \   00000000   0x62 0x3D          DC8 "b=%d@%s"
   \              0x25 0x64    
   \              0x40 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "c=%d@%s">`:
   \   00000000   0x63 0x3D          DC8 "c=%d@%s"
   \              0x25 0x64    
   \              0x40 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "d=%d@%s">`:
   \   00000000   0x64 0x3D          DC8 "d=%d@%s"
   \              0x25 0x64    
   \              0x40 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Unsupported %d">`:
   \   00000000   0x55 0x6E          DC8 "Unsupported %d"
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x25 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "joy center">`:
   \   00000000   0x6A 0x6F          DC8 "joy center"
   \              0x79 0x20    
   \              0x63 0x65    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "joy A">`:
   \   00000000   0x6A 0x6F          DC8 "joy A"
   \              0x79 0x20    
   \              0x41 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "joy B">`:
   \   00000000   0x6A 0x6F          DC8 "joy B"
   \              0x79 0x20    
   \              0x42 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "joy C">`:
   \   00000000   0x6A 0x6F          DC8 "joy C"
   \              0x79 0x20    
   \              0x43 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "joy D">`:
   \   00000000   0x6A 0x6F          DC8 "joy D"
   \              0x79 0x20    
   \              0x44 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "joystickinfo">`:
   \   00000000   0x6A 0x6F          DC8 "joystickinfo"
   \              0x79 0x73    
   \              0x74 0x69    
   \              0x63 0x6B    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    155          
    156          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   applyPin(brain_pin_e)
        16   -> getExtMode(GPIO_TypeDef *)
        16   -> getHwPin(brain_pin_e)
        16   -> getHwPort(brain_pin_e)
      24   extCallback(EXTDriver *, uint32_t)
        24   -> getHwPin(brain_pin_e)
        24   -> getTimeNowNt
        24   -> onJoystick(joystick_button_e)
       8   getExtMode(GPIO_TypeDef *)
         8   -> firmwareError
       8   initJoystick(Logging *)
         8   -> addConsoleAction
         8   -> applyPin(brain_pin_e)
         8   -> extStart
         8   -> mySetPadMode2(char const *, brain_pin_e, iomode_t)
       8   joystickInfo()
         8   -> hwPortname(brain_pin_e)
         8   -> scheduleMsg


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant "Unsupported %d">
       8  ?<Constant "a=%d@%s">
       8  ?<Constant "b=%d@%s">
       8  ?<Constant "c=%d@%s">
       8  ?<Constant "d=%d@%s">
       8  ?<Constant "joy A">
       8  ?<Constant "joy B">
       8  ?<Constant "joy C">
       8  ?<Constant "joy D">
      12  ?<Constant "joy center">
      16  ?<Constant "joystickinfo">
      24  ?<Constant "total %d center=%d@%s">
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_26
       4  ??DataTable4_27
       4  ??DataTable4_28
       4  ??DataTable4_29
       4  ??DataTable4_3
       4  ??DataTable4_30
       4  ??DataTable4_31
       4  ??DataTable4_32
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      52  applyPin(brain_pin_e)
     234  extCallback(EXTDriver *, uint32_t)
     184  extcfg
      76  getExtMode(GPIO_TypeDef *)
     186  initJoystick(Logging *)
       4  joyA
       4  joyB
       4  joyC
       4  joyCenter
       4  joyD
       4  joyTotal
     148  joystickInfo()
       8  lastEventTime
       4  sharedLogger

 
 220 bytes in section .bss
 132 bytes in section .rodata
 828 bytes in section .text
 
 828 bytes of CODE  memory
 132 bytes of CONST memory
 220 bytes of DATA  memory

Errors: none
Warnings: 1
