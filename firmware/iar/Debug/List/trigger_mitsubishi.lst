###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:08:46 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\controllers\trig #
#                       ger\trigger_mitsubishi.cpp                            #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\controllers\trig #
#                       ger\trigger_mitsubishi.cpp -lCN                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\  #
#                       -lA F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Li #
#                       st\ -o F:\stuff\rusefi_sourceforge\firmware\iar\Debug #
#                       \Obj\ --no_cse --no_unroll --no_inline                #
#                       --no_code_motion --no_tbaa --no_clustering            #
#                       --no_scheduling --debug --endian=little               #
#                       --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config       #
#                       "C:\Program Files (x86)\IAR Systems\Embedded          #
#                       Workbench 6.5\arm\INC\c\DLib_Config_Normal.h"         #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\t #
#                       rigger_mitsubishi.lst                                 #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\tr #
#                       igger_mitsubishi.o                                    #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\controllers\trigger\trigger_mitsubishi.cpp
      1          /**
      2           * @file	trigger_mitsubishi.cpp
      3           *
      4           * @date Aug 5, 2014
      5           * @author Andrey Belomutskiy, (c) 2012-2015
      6           */
      7          
      8          #include "trigger_mitsubishi.h"
      9          

   \                                 In section .text, align 4, keep-with-next
     10          void configureFordAspireTriggerShape(TriggerShape * s) {
   \                     _Z31configureFordAspireTriggerShapeP12TriggerShape:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0x0004             MOVS     R4,R0
     11          	s->isSynchronizationNeeded = false;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x7020             STRB     R0,[R4, #+0]
     12          	s->reset(FOUR_STROKE_CAM_SENSOR, true);
   \   0000000C   0x2201             MOVS     R2,#+1
   \   0000000E   0x2102             MOVS     R1,#+2
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0x.... 0x....      BL       _ZN12TriggerShape5resetE16operation_mode_eb
     13          
     14          
     15          	float x = 121.90;
   \   00000016   0xED9F 0x....      VLDR.W   S16,??DataTable1  ;; 0x42f3cccd
     16          	float y = 110.86;
   \   0000001A   0xEDDF 0x....      VLDR.W   S17,??DataTable1_1  ;; 0x42ddb852
     17          
     18          	s->addEvent(x + y - 180, T_SECONDARY, TV_HIGH);
   \   0000001E   0x2201             MOVS     R2,#+1
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0xEE38 0x0A28      VADD.F32 S0,S16,S17
   \   00000026   0xEDDF 0x....      VLDR.W   S1,??DataTable1_2  ;; 0xc3340000
   \   0000002A   0xEE30 0x0A20      VADD.F32 S0,S0,S1
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     19          	s->addEvent(x, T_SECONDARY, TV_LOW);
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x2101             MOVS     R1,#+1
   \   00000038   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     20          	s->addEvent(x + y, T_SECONDARY, TV_HIGH);
   \   00000042   0x2201             MOVS     R2,#+1
   \   00000044   0x2101             MOVS     R1,#+1
   \   00000046   0xEE38 0x0A28      VADD.F32 S0,S16,S17
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     21          	s->addEvent(x + 180, T_SECONDARY, TV_LOW);
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x2101             MOVS     R1,#+1
   \   00000054   0xED9F 0x....      VLDR.W   S0,??DataTable1_3  ;; 0x43340000
   \   00000058   0xEE38 0x0A00      VADD.F32 S0,S16,S0
   \   0000005C   0x0020             MOVS     R0,R4
   \   0000005E   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     22          	s->addEvent(360, T_PRIMARY, TV_HIGH);
   \   00000062   0x2201             MOVS     R2,#+1
   \   00000064   0x2100             MOVS     R1,#+0
   \   00000066   0xED9F 0x....      VLDR.W   S0,??DataTable1_4  ;; 0x43b40000
   \   0000006A   0x0020             MOVS     R0,R4
   \   0000006C   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     23          
     24          	s->addEvent(x + 180 + y, T_SECONDARY, TV_HIGH);
   \   00000070   0x2201             MOVS     R2,#+1
   \   00000072   0x2101             MOVS     R1,#+1
   \   00000074   0xED9F 0x....      VLDR.W   S0,??DataTable1_3  ;; 0x43340000
   \   00000078   0xEE38 0x0A00      VADD.F32 S0,S16,S0
   \   0000007C   0xEE30 0x0A28      VADD.F32 S0,S0,S17
   \   00000080   0x0020             MOVS     R0,R4
   \   00000082   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     25          	s->addEvent(x + 360, T_SECONDARY, TV_LOW);
   \   00000086   0x2200             MOVS     R2,#+0
   \   00000088   0x2101             MOVS     R1,#+1
   \   0000008A   0xED9F 0x....      VLDR.W   S0,??DataTable1_4  ;; 0x43b40000
   \   0000008E   0xEE38 0x0A00      VADD.F32 S0,S16,S0
   \   00000092   0x0020             MOVS     R0,R4
   \   00000094   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     26          	s->addEvent(x + 360 + y, T_SECONDARY, TV_HIGH);
   \   00000098   0x2201             MOVS     R2,#+1
   \   0000009A   0x2101             MOVS     R1,#+1
   \   0000009C   0xED9F 0x....      VLDR.W   S0,??DataTable1_4  ;; 0x43b40000
   \   000000A0   0xEE38 0x0A00      VADD.F32 S0,S16,S0
   \   000000A4   0xEE30 0x0A28      VADD.F32 S0,S0,S17
   \   000000A8   0x0020             MOVS     R0,R4
   \   000000AA   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     27          	s->addEvent(x + 540, T_SECONDARY, TV_LOW);
   \   000000AE   0x2200             MOVS     R2,#+0
   \   000000B0   0x2101             MOVS     R1,#+1
   \   000000B2   0xED9F 0x....      VLDR.W   S0,??DataTable1_5  ;; 0x44070000
   \   000000B6   0xEE38 0x0A00      VADD.F32 S0,S16,S0
   \   000000BA   0x0020             MOVS     R0,R4
   \   000000BC   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     28          	s->addEvent(720, T_PRIMARY, TV_LOW);
   \   000000C0   0x2200             MOVS     R2,#+0
   \   000000C2   0x2100             MOVS     R1,#+0
   \   000000C4   0xED9F 0x....      VLDR.W   S0,??DataTable1_6  ;; 0x44340000
   \   000000C8   0x0020             MOVS     R0,R4
   \   000000CA   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     29          }
   \   000000CE   0xECBD 0x8B02      VPOP     {D8}
   \   000000D2   0xBD10             POP      {R4,PC}          ;; return
     30          

   \                                 In section .text, align 4, keep-with-next
     31          void initializeMitsubishi4g18(TriggerShape *s) {
   \                     _Z24initializeMitsubishi4g18P12TriggerShape:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0005             MOVS     R5,R0
     32          	s->reset(FOUR_STROKE_CAM_SENSOR, true);
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2102             MOVS     R1,#+2
   \   00000008   0x0028             MOVS     R0,R5
   \   0000000A   0x.... 0x....      BL       _ZN12TriggerShape5resetE16operation_mode_eb
     33          	s->useRiseEdge = false;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF885 0x0B64      STRB     R0,[R5, #+2916]
     34          
     35          	s->setTriggerSynchronizationGap(1.6666);
   \   00000014   0xED9F 0x....      VLDR.W   S0,??DataTable1_7  ;; 0x3fd55326
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       _ZN12TriggerShape28setTriggerSynchronizationGapEf
     36          
     37          	int secondaryWidth = 70;
   \   0000001E   0x2646             MOVS     R6,#+70
     38          
     39          	s->addEvent(180.0 - 131 + 5, T_PRIMARY, TV_HIGH);
   \   00000020   0x2201             MOVS     R2,#+1
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0xED9F 0x....      VLDR.W   S0,??DataTable1_8  ;; 0x42580000
   \   00000028   0x0028             MOVS     R0,R5
   \   0000002A   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     40          	s->addEvent(180.0 - secondaryWidth, T_SECONDARY, TV_HIGH);
   \   0000002E   0x2201             MOVS     R2,#+1
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x000C             MOVS     R4,R1
   \   00000034   0x0017             MOVS     R7,R2
   \   00000036   0x0030             MOVS     R0,R6
   \   00000038   0x.... 0x....      BL       __aeabi_i2d
   \   0000003C   0x0002             MOVS     R2,R0
   \   0000003E   0x000B             MOVS     R3,R1
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x....             LDR.N    R1,??DataTable1_12  ;; 0x40668000
   \   00000044   0x.... 0x....      BL       __aeabi_dsub
   \   00000048   0x.... 0x....      BL       __aeabi_d2f
   \   0000004C   0xEE00 0x0A10      VMOV     S0,R0
   \   00000050   0x003A             MOVS     R2,R7
   \   00000052   0x0021             MOVS     R1,R4
   \   00000054   0x0028             MOVS     R0,R5
   \   00000056   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     41          	s->addEvent(180.0, T_SECONDARY, TV_LOW);
   \   0000005A   0x2200             MOVS     R2,#+0
   \   0000005C   0x2101             MOVS     R1,#+1
   \   0000005E   0xED9F 0x....      VLDR.W   S0,??DataTable1_3  ;; 0x43340000
   \   00000062   0x0028             MOVS     R0,R5
   \   00000064   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     42          	s->addEvent(180.0 + 49 + 5, T_PRIMARY, TV_LOW);
   \   00000068   0x2200             MOVS     R2,#+0
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0xED9F 0x....      VLDR.W   S0,??DataTable1_9  ;; 0x436a0000
   \   00000070   0x0028             MOVS     R0,R5
   \   00000072   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     43          
     44          	s->addEvent(360.0 - secondaryWidth, T_SECONDARY, TV_HIGH);
   \   00000076   0x2201             MOVS     R2,#+1
   \   00000078   0x2101             MOVS     R1,#+1
   \   0000007A   0x000C             MOVS     R4,R1
   \   0000007C   0x0017             MOVS     R7,R2
   \   0000007E   0x0030             MOVS     R0,R6
   \   00000080   0x.... 0x....      BL       __aeabi_i2d
   \   00000084   0x0002             MOVS     R2,R0
   \   00000086   0x000B             MOVS     R3,R1
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x....             LDR.N    R1,??DataTable1_13  ;; 0x40768000
   \   0000008C   0x.... 0x....      BL       __aeabi_dsub
   \   00000090   0x.... 0x....      BL       __aeabi_d2f
   \   00000094   0xEE00 0x0A10      VMOV     S0,R0
   \   00000098   0x003A             MOVS     R2,R7
   \   0000009A   0x0021             MOVS     R1,R4
   \   0000009C   0x0028             MOVS     R0,R5
   \   0000009E   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     45          	s->addEvent(360.0, T_SECONDARY, TV_LOW);
   \   000000A2   0x2200             MOVS     R2,#+0
   \   000000A4   0x2101             MOVS     R1,#+1
   \   000000A6   0xED9F 0x....      VLDR.W   S0,??DataTable1_4  ;; 0x43b40000
   \   000000AA   0x0028             MOVS     R0,R5
   \   000000AC   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     46          
     47          	s->addEvent(540.0 - 131 + 5, T_PRIMARY, TV_HIGH);
   \   000000B0   0x2201             MOVS     R2,#+1
   \   000000B2   0x2100             MOVS     R1,#+0
   \   000000B4   0xED9F 0x....      VLDR.W   S0,??DataTable1_10  ;; 0x43cf0000
   \   000000B8   0x0028             MOVS     R0,R5
   \   000000BA   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     48          	s->addEvent(540.0 - secondaryWidth, T_SECONDARY, TV_HIGH);
   \   000000BE   0x2201             MOVS     R2,#+1
   \   000000C0   0x2101             MOVS     R1,#+1
   \   000000C2   0x000C             MOVS     R4,R1
   \   000000C4   0x0017             MOVS     R7,R2
   \   000000C6   0x0030             MOVS     R0,R6
   \   000000C8   0x.... 0x....      BL       __aeabi_i2d
   \   000000CC   0x0002             MOVS     R2,R0
   \   000000CE   0x000B             MOVS     R3,R1
   \   000000D0   0x2000             MOVS     R0,#+0
   \   000000D2   0x....             LDR.N    R1,??DataTable1_14  ;; 0x4080e000
   \   000000D4   0x.... 0x....      BL       __aeabi_dsub
   \   000000D8   0x.... 0x....      BL       __aeabi_d2f
   \   000000DC   0xEE00 0x0A10      VMOV     S0,R0
   \   000000E0   0x003A             MOVS     R2,R7
   \   000000E2   0x0021             MOVS     R1,R4
   \   000000E4   0x0028             MOVS     R0,R5
   \   000000E6   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     49          	s->addEvent(540.0 - 131 + 5 + 90, T_PRIMARY, TV_LOW);
   \   000000EA   0x2200             MOVS     R2,#+0
   \   000000EC   0x2100             MOVS     R1,#+0
   \   000000EE   0xED9F 0x....      VLDR.W   S0,??DataTable1_11  ;; 0x43fc0000
   \   000000F2   0x0028             MOVS     R0,R5
   \   000000F4   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     50          	s->addEvent(540.0, T_SECONDARY, TV_LOW);
   \   000000F8   0x2200             MOVS     R2,#+0
   \   000000FA   0x2101             MOVS     R1,#+1
   \   000000FC   0xED9F 0x....      VLDR.W   S0,??DataTable1_5  ;; 0x44070000
   \   00000100   0x0028             MOVS     R0,R5
   \   00000102   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     51          
     52          	s->addEvent(720.0 - secondaryWidth, T_SECONDARY, TV_HIGH);
   \   00000106   0x2201             MOVS     R2,#+1
   \   00000108   0x2101             MOVS     R1,#+1
   \   0000010A   0x000C             MOVS     R4,R1
   \   0000010C   0x0017             MOVS     R7,R2
   \   0000010E   0x0030             MOVS     R0,R6
   \   00000110   0x.... 0x....      BL       __aeabi_i2d
   \   00000114   0x0002             MOVS     R2,R0
   \   00000116   0x000B             MOVS     R3,R1
   \   00000118   0x2000             MOVS     R0,#+0
   \   0000011A   0x....             LDR.N    R1,??DataTable1_15  ;; 0x40868000
   \   0000011C   0x.... 0x....      BL       __aeabi_dsub
   \   00000120   0x.... 0x....      BL       __aeabi_d2f
   \   00000124   0xEE00 0x0A10      VMOV     S0,R0
   \   00000128   0x003A             MOVS     R2,R7
   \   0000012A   0x0021             MOVS     R1,R4
   \   0000012C   0x0028             MOVS     R0,R5
   \   0000012E   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     53          	s->addEvent(720.0, T_SECONDARY, TV_LOW);
   \   00000132   0x2200             MOVS     R2,#+0
   \   00000134   0x2101             MOVS     R1,#+1
   \   00000136   0xED9F 0x....      VLDR.W   S0,??DataTable1_6  ;; 0x44340000
   \   0000013A   0x0028             MOVS     R0,R5
   \   0000013C   0x.... 0x....      BL       _ZN12TriggerShape8addEventEf15trigger_wheel_e15trigger_value_e
     54          }
   \   00000140   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x42F3CCCD         DC32     0x42f3cccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x42DDB852         DC32     0x42ddb852

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0xC3340000         DC32     0xc3340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x43340000         DC32     0x43340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x43B40000         DC32     0x43b40000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x44070000         DC32     0x44070000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x44340000         DC32     0x44340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x3FD55326         DC32     0x3fd55326

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x42580000         DC32     0x42580000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x436A0000         DC32     0x436a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x43CF0000         DC32     0x43cf0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x43FC0000         DC32     0x43fc0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x40668000         DC32     0x40668000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x40768000         DC32     0x40768000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x4080E000         DC32     0x4080e000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x40868000         DC32     0x40868000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   configureFordAspireTriggerShape(TriggerShape *)
        16   -> TriggerShape::addEvent(float, trigger_wheel_e, trigger_value_e)
        16   -> TriggerShape::reset(operation_mode_e, bool)
      24   initializeMitsubishi4g18(TriggerShape *)
        24   -> TriggerShape::addEvent(float, trigger_wheel_e, trigger_value_e)
        24   -> TriggerShape::reset(operation_mode_e, bool)
        24   -> TriggerShape::setTriggerSynchronizationGap(float)
        24   -> __aeabi_d2f
        24   -> __aeabi_dsub
        24   -> __aeabi_i2d


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
     212  configureFordAspireTriggerShape(TriggerShape *)
     322  initializeMitsubishi4g18(TriggerShape *)

 
 598 bytes in section .text
 
 598 bytes of CODE memory

Errors: none
Warnings: 1
