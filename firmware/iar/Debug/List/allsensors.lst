###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:15 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\controllers\sens #
#                       ors\allsensors.cpp                                    #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\controllers\sens #
#                       ors\allsensors.cpp -lCN F:\stuff\rusefi_sourceforge\f #
#                       irmware\iar\Debug\List\ -lA                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\  #
#                       -o F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj #
#                       \ --no_cse --no_unroll --no_inline --no_code_motion   #
#                       --no_tbaa --no_clustering --no_scheduling --debug     #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\a #
#                       llsensors.lst                                         #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\al #
#                       lsensors.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\controllers\sensors\allsensors.cpp
      1          /**
      2           * @file    allsensors.cpp
      3           * @brief
      4           *
      5           *
      6           * @date Nov 15, 2013
      7           * @author Andrey Belomutskiy, (c) 2012-2015
      8           */
      9          
     10          #include "engine.h"
     11          #include "allsensors.h"
     12          
     13          EXTERN_ENGINE;
     14          

   \                                 In section .text, align 2, keep-with-next
     15          void initSensors(Logging *sharedLogger DECLARE_ENGINE_PARAMETER_S) {
   \                     _Z11initSensorsP7Logging:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     16          	initThermistors(sharedLogger PASS_ENGINE_PARAMETER);
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _Z15initThermistorsP7Logging
     17          	initMapDecoder(sharedLogger PASS_ENGINE_PARAMETER);
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x.... 0x....      BL       _Z14initMapDecoderP7Logging
     18          }
   \   00000010   0xBD10             POP      {R4,PC}          ;; return
     19          
     20          // todo: move this somewhere else? maybe.

   \                                 In section .text, align 4, keep-with-next
     21          bool getAcToggle(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z11getAcTogglev:
   \   00000000   0xB580             PUSH     {R7,LR}
     22          	/**
     23          	 * todo: make this flexible
     24          	 *
     25          	 * for now we are looking for a pull-up. High level means input switch is floating (which is OFF position)
     26          	 * low value means input is ground - which means ON.
     27          	 */
     28          	return getVoltageDivided("A/C", engine->engineConfiguration->acSwitchAdc) < 2.5;
   \   00000002   0x....             LDR.N    R0,??DataTable0_2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x6A40             LDR      R0,[R0, #+36]
   \   00000008   0xF8D0 0x15F0      LDR      R1,[R0, #+1520]
   \   0000000C   0x....             ADR.N    R0,??DataTable0  ;; "A/C"
   \   0000000E   0x.... 0x....      BL       _Z19getInternalAdcValuePKc13adc_channel_e
   \   00000012   0xEE00 0x0A10      VMOV     S0,R0
   \   00000016   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000001A   0xEDDF 0x....      VLDR.W   S1,??DataTable0_1  ;; 0x3a400c01
   \   0000001E   0xEE20 0x0A20      VMUL.F32 S0,S0,S1
   \   00000022   0x....             LDR.N    R0,??DataTable0_3
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xEDD0 0x0A74      VLDR     S1,[R0, #+464]
   \   0000002A   0xEE20 0x0A20      VMUL.F32 S0,S0,S1
   \   0000002E   0xEEF0 0x0A04      VMOV.F32 S1,#2.5
   \   00000032   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000036   0xEEF1 0xFA10      FMSTAT   
   \   0000003A   0xD501             BPL.N    ??getAcToggle_0
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0xE000             B.N      ??getAcToggle_1
   \                     ??getAcToggle_0:
   \   00000040   0x2000             MOVS     R0,#+0
   \                     ??getAcToggle_1:
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0xBD02             POP      {R1,PC}          ;; return
     29          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x41 0x2F          DC8      "A/C"
   \              0x43 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x3A400C01         DC32     0x3a400c01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     engine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     engineConfiguration

   \                                 In section .rodata, align 4
   \   00000000   0x41 0x2F          DC8 "A/C"
   \              0x43 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   getAcToggle()
         8   -> getInternalAdcValue(char const *, adc_channel_e)
       8   initSensors(Logging *)
         8   -> initMapDecoder(Logging *)
         8   -> initThermistors(Logging *)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "A/C">
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
       4  ??DataTable0_3
      70  getAcToggle()
      18  initSensors(Logging *)

 
   4 bytes in section .rodata
 104 bytes in section .text
 
 104 bytes of CODE  memory
   4 bytes of CONST memory

Errors: none
Warnings: 1
