###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      30/Jun/2015  23:09:39 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode        =  thumb                                                 #
#    Endian          =  little                                                #
#    Source file     =  F:\stuff\rusefi_sourceforge\firmware\controllers\algo #
#                       \algo.cpp                                             #
#    Command line    =  F:\stuff\rusefi_sourceforge\firmware\controllers\algo #
#                       \algo.cpp -lCN F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\Debug\List\ -lA F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\Debug\List\ -o F:\stuff\rusefi_sourceforge\fir #
#                       mware\iar\Debug\Obj\ --no_cse --no_unroll             #
#                       --no_inline --no_code_motion --no_tbaa                #
#                       --no_clustering --no_scheduling --debug               #
#                       --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp     #
#                       --dlib_config "C:\Program Files (x86)\IAR             #
#                       Systems\Embedded Workbench                            #
#                       6.5\arm\INC\c\DLib_Config_Normal.h"                   #
#                       --misrac2004=1.2-1.4,2.3,3.4,4.2,6.5-7,8.2-8.3,9.3,   #
#                       12.3,13.6-13,15.5,17.3,19.17,20.7-20.9,20.11 -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\ -I       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\kernel\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\ports\common\ARMCMx\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\common\ARMCMx\CMSIS\include\ -I               #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\ports\IAR\ARMCMx\ -I F:\stuff\rusefi_sourceforge\fi #
#                       rmware\iar\..\chibios\os\ports\IAR\ARMCMx\STM32F4xx\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\chibio #
#                       s\os\hal\include\ -I F:\stuff\rusefi_sourceforge\firm #
#                       ware\iar\..\chibios\os\hal\platforms\STM32\ -I        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\DMAv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\GPIOv2\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\I2Cv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\SPIv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\TIMv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\RTCv2\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\USARTv1\ -I                     #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32\OTGv1\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\hal\platforms\STM32F4xx\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\o #
#                       s\various\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\chibios\os\various\devices_lib\accel\ -I         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\chibios\b #
#                       oards\ST_STM32F4_DISCOVERY\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\co #
#                       ntrollers\algo\ -I F:\stuff\rusefi_sourceforge\firmwa #
#                       re\iar\..\controllers\core\ -I                        #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\system\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\controllers\sensors\ -I                          #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\controlle #
#                       rs\math\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\controllers\trigger\ -I                            #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\config #
#                       \ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\conf #
#                       ig\engines\ -I F:\stuff\rusefi_sourceforge\firmware\i #
#                       ar\..\config\stm32f4ems\ -I                           #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\console\b #
#                       inary\ -I F:\stuff\rusefi_sourceforge\firmware\iar\.. #
#                       \console_util\ -I F:\stuff\rusefi_sourceforge\firmwar #
#                       e\iar\..\development\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\development\test\ -I                  #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\developme #
#                       nt\hw_layer\ -I F:\stuff\rusefi_sourceforge\firmware\ #
#                       iar\..\hw_layer\algo\ -I F:\stuff\rusefi_sourceforge\ #
#                       firmware\iar\..\hw_layer\lcd\ -I                      #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                       stm32f4\ -I F:\stuff\rusefi_sourceforge\firmware\iar\ #
#                       ..\hw_layer\serial_over_usb\ -I                       #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\hw_layer\ #
#                        -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext\  #
#                       -I F:\stuff\rusefi_sourceforge\firmware\iar\..\ext_al #
#                       go\ -I F:\stuff\rusefi_sourceforge\firmware\iar\..\de #
#                       velopment\ -I F:\stuff\rusefi_sourceforge\firmware\ia #
#                       r\..\development\hw_layer\ -I                         #
#                       F:\stuff\rusefi_sourceforge\firmware\iar\..\util\     #
#                       -On --eec++                                           #
#    MISRA C version =  2004                                                  #
#      Enabled       =  1.2-1.4 2.3 3.4 4.2 6.5 7 8.2 8.3 9.3 12.3 13.6 13.7  #
#                       15.5 17.3 19.17 20.7-20.9 20.11                       #
#      Checked       =  1.4 2.3 4.2 6.5 7 8.2 8.3 9.3 12.3 13.7 15.5          #
#                       20.7-20.9 20.11                                       #
#      Not checked   =  1.1-1.3 1.5-2.2 2.4-4.1 5-6.4 8.1 8.4-9.2 10-12.2     #
#                       12.4-13.6 14-15.4 16-20.6 20.10 20.12 21              #
#    List file       =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\List\a #
#                       lgo.lst                                               #
#    Object file     =  F:\stuff\rusefi_sourceforge\firmware\iar\Debug\Obj\al #
#                       go.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

F:\stuff\rusefi_sourceforge\firmware\controllers\algo\algo.cpp
      1          /*
      2           * @file	algo.cpp
      3           *
      4           * @date Mar 2, 2014
      5           * @author Andrey Belomutskiy, (c) 2012-2015
      6           *
      7           *
      8           * This file is part of rusEfi - see http://rusefi.com
      9           *
     10           * rusEfi is free software; you can redistribute it and/or modify it under the terms of
     11           * the GNU General Public License as published by the Free Software Foundation; either
     12           * version 3 of the License, or (at your option) any later version.
     13           *
     14           * rusEfi is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
     15           * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     16           * GNU General Public License for more details.
     17           *
     18           * You should have received a copy of the GNU General Public License along with this program.
     19           * If not, see <http://www.gnu.org/licenses/>.
     20           */
     21          
     22          #include "global.h"
     23          #include "algo.h"
     24          #include "advance_map.h"
     25          #include "fuel_math.h"
     26          #include "settings.h"
     27          #include "signal_executor.h"
     28          #include "speed_density.h"
     29          
     30          EXTERN_ENGINE;
     31          

   \                                 In section .text, align 2, keep-with-next
     32          void initDataStructures(DECLARE_ENGINE_PARAMETER_F) {
   \                     _Z18initDataStructuresv:
   \   00000000   0xB580             PUSH     {R7,LR}
     33          	prepareFuelMap(PASS_ENGINE_PARAMETER_F);
   \   00000002   0x.... 0x....      BL       _Z14prepareFuelMapv
     34          	prepareTimingMap(PASS_ENGINE_PARAMETER_F);
   \   00000006   0x.... 0x....      BL       _Z16prepareTimingMapv
     35          	initSpeedDensity(PASS_ENGINE_PARAMETER_F);
   \   0000000A   0x.... 0x....      BL       _Z16initSpeedDensityv
     36          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
     37          

   \                                 In section .text, align 2, keep-with-next
     38          void initAlgo(Logging *sharedLogger, engine_configuration_s *engineConfiguration) {
   \                     _Z8initAlgoP7LoggingP22engine_configuration_s:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     39          	initInterpolation(sharedLogger);
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       _Z17initInterpolationP7Logging
     40          #if EFI_SIMULATOR
     41          	// todo: this is a mess, remove code duplication with PROD
     42          	initSettings(engineConfiguration);
     43          #endif
     44          
     45          #if EFI_PROD_CODE || EFI_SIMULATOR
     46          	initSignalExecutor();
   \   0000000C   0x.... 0x....      BL       _Z18initSignalExecutorv
     47          #endif
     48          }
   \   00000010   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   initAlgo(Logging *, engine_configuration_s *)
        16   -> initInterpolation(Logging *)
        16   -> initSignalExecutor()
       8   initDataStructures()
         8   -> initSpeedDensity()
         8   -> prepareFuelMap()
         8   -> prepareTimingMap()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      18  initAlgo(Logging *, engine_configuration_s *)
      16  initDataStructures()

 
 34 bytes in section .text
 
 34 bytes of CODE memory

Errors: none
Warnings: 1
