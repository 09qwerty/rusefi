-- scriptname man-in-the-middle-nissan-tcu.txt

-- sometimes we want to cut a CAN bus and install rusEFI into that cut
-- https://en.wikipedia.org/wiki/Man-in-the-middle_attack

-- this controls onCanRx rate as well!
setTickRate(300)

ECU_BUS = 1
-- really 'not ECU'
TCU_BUS = 2


TCU_251_593 = 593
TCU_253_595 = 595

hexstr = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, "A", "B", "C", "D", "E", "F" }

function toHexString(num)
	if num == 0 then
		return '0'
	end

	local result = ""
	while num > 0 do
		local n = num % 16
		result = hexstr[n + 1] ..result
		num = math.floor(num / 16)
	end
	return result
end

function arrayToString(arr)
	local str = ""
	local index = 1
	while arr[index] ~= nil do
		str = str.." "..toHexString(arr[index])
		index = index + 1
	end
	return str
end

totalEcuMessages = 0
totalTcuMessages = 0
totalDropped = 0
totalReplaced = 0

function printAndDrop(bus, id, dlc, data)
	print('Dropping ' ..arrayToString(data))
	totalDropped = totalDropped + 1
end

function onAnythingFromECU(bus, id, dlc, data)
--	totalEcuMessages = totalEcuMessages + 1
--	print('from ECU ' ..id .." " ..arrayToString(data) .." dropped=" ..totalDropped .." replaced " ..totalReplaced)
--	txCan(TCU_BUS, id, 0, data) -- relay non-TCU message to TCU
end

function relayFromECU(bus, id, dlc, data)
	totalEcuMessages = totalEcuMessages + 1
--	print('from ECU ' ..id .." " ..arrayToString(data) .." dropped=" ..totalDropped .." replaced " ..totalReplaced)
	txCan(TCU_BUS, id, 0, data) -- relay non-TCU message to TCU
end

function onAnythingFromTCU(bus, id, dlc, data)
	totalTcuMessages = totalTcuMessages + 1
	if id ~= TCU_251_593 and id ~= TCU_253_595 then
	--	print('from TCU ' ..id .." " ..arrayToString(data) .." dropped=" ..totalDropped .." replaced " ..totalReplaced)
	end
--	txCan(ECU_BUS, id, 0, data) -- relay non-ECU message to ECU
end

ENGINE_1_505 = 505
ENGINE_2_561 = 561
ENGINE_7_563 = 563
ENGINE_3_573 = 573
ENGINE_4_574 = 574

payloadENGINE_1_505 = {0x20, 0x00, 0x1a, 0x5e, 0x00, 0x00, 0x00, 0x00}
function onENGINE_1_505(bus, id, dlc, data)
--	payloadENGINE_1_505[x] = counter505_1f9
--	txCan(TCU_BUS, ENGINE_1_505, 0, payloadENGINE_1_505)
	txCan(TCU_BUS, ENGINE_1_505, 0, data)
end

payloadENGINE_2_561 = {0xe0, 0x80, 0x09, 0xe0, 0xd4, 0xc3, 0x4c, 0x9e}
function onENGINE_2_561(bus, id, dlc, data)
--	txCan(TCU_BUS, ENGINE_2_561, 0, payloadENGINE_2_561)
	txCan(TCU_BUS, ENGINE_2_561, 0, data)
end

payloadENGINE_7_563 = {0x79, 0xa2, 0x00, 0x18, 0x0e, 0x00, 0x00, 0x01}
function onENGINE_7_563(bus, id, dlc, data)
--	txCan(TCU_BUS, ENGINE_7_563, 0, payloadENGINE_7_563)
	txCan(TCU_BUS, ENGINE_7_563, 0, data)
end

payloadENGINE_3_573 = {0x00, 0x0e, 0x0b, 0x0e, 0x01, 0x38, 0x00, 0x79}
function onENGINE_3_573(bus, id, dlc, data)
--	txCan(TCU_BUS, ENGINE_3_573, 0, payloadENGINE_3_573)
	txCan(TCU_BUS, ENGINE_3_573, 0, data)
end

canRxAdd(ECU_BUS, ENGINE_1_505, onENGINE_1_505)
canRxAdd(ECU_BUS, ENGINE_2_561, onENGINE_2_561)
canRxAdd(ECU_BUS, ENGINE_7_563, onENGINE_7_563)
canRxAdd(ECU_BUS, ENGINE_3_573, onENGINE_3_573)
--canRxAdd(ECU_BUS, ENGINE_4_574, relayFromECU)

-- last option: unconditional forward of all remaining messages
canRxAddMask(ECU_BUS, 0, 0, onAnythingFromECU)
canRxAddMask(TCU_BUS, 0, 0, onAnythingFromTCU)

everySecondTimer = Timer.new()

function onTick()
	if everySecondTimer : getElapsedSeconds() > 1 then
		everySecondTimer : reset()
		print("Total from ECU " ..totalEcuMessages .." from TCU " ..totalTcuMessages .." dropped=" ..totalDropped .." replaced " ..totalReplaced)
	end
end

